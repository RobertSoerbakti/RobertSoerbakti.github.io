{"version":3,"sources":["webpack:///src/components/Loader/lottie/Lottie.vue","webpack:///./src/components/Loader/lottie/Lottie.vue?35ab","webpack:///./src/components/Loader/lottie/Lottie.vue","webpack:///src/components/Loader/lottie/GreenLoader.vue","webpack:///./src/components/Loader/lottie/GreenLoader.vue?d296","webpack:///./src/components/Loader/lottie/GreenLoader.vue","webpack:///./node_modules/lottie-web/build/player/lottie.js","webpack:///./src/components/Loader/json/circular-spin-loader.json"],"names":["Lottie","props","options","type","Object","required","height","String","width","data","style","overflow","margin","mounted","this","anim","lottie_default","a","loadAnimation","container","$refs","lavContainer","renderer","loop","autoplay","animationData","rendererSettings","$emit","lottie_Lottie","render","_h","$createElement","_self","_c","ref","staticRenderFns","Loader_lottie_Lottie","__webpack_require__","normalizeComponent","GreenLoader","name","components","lottie","defaultOptions","circular_spin_loader","animationSpeed","methods","handleAnimation","stop","play","pause","onSpeedChange","setSpeed","lottie_GreenLoader","_vm","staticClass","attrs","on","animCreated","_v","staticStyle","visibility","directives","rawName","value","expression","min","max","step","domProps","change","__r","$event","target","GreenLoader_Component","GreenLoader_normalizeComponent","__webpack_exports__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","navigator","window","svgNS","locationHref","initialDefaultFrame","subframeEnabled","expressionsPlugin","isSafari","test","userAgent","cachedColors","bm_rounder","Math","round","bm_rnd","bm_pow","pow","bm_sqrt","sqrt","bm_abs","abs","bm_floor","floor","bm_max","bm_min","blitter","BMMath","ProjectInterface","i","propertyNames","len","length","random","val","absArr","createSizedArray","defaultCurveSegments","degToRads","PI","roundCorner","roundValues","flag","styleDiv","element","position","top","left","display","transformOrigin","webkitTransformOrigin","backfaceVisibility","webkitBackfaceVisibility","transformStyle","webkitTransformStyle","mozTransformStyle","BMEnterFrameEvent","currentTime","totalTime","frameMultiplier","direction","BMCompleteEvent","BMCompleteLoopEvent","totalLoops","currentLoop","BMSegmentStartEvent","firstFrame","totalFrames","BMDestroyEvent","BMRenderFrameErrorEvent","nativeError","BMConfigErrorEvent","BMAnimationConfigErrorEvent","createElementID","_count","HSVtoRGB","h","s","v","r","g","b","f","p","q","t","RGBtoHSV","d","addSaturationToRGB","color","offset","hsv","addBrightnessToRGB","addHueToRGB","rgbToHex","hex","colorMap","toString","BaseEvent","prototype","triggerEvent","eventName","args","_cbs","addEventListener","callback","push","removeEventListener","bind","splice","createTypedArray","Uint8ClampedArray","Float32Array","Int16Array","arr","Array","apply","createNS","document","createElementNS","createTag","createElement","DynamicPropertyContainer","addDynamicProperty","prop","dynamicProperties","indexOf","_isAnimated","iterateDynamicProperties","_mdf","getValue","initDynamicPropertyContainer","getBlendMode","blendModeEnums","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","mode","Matrix","_cos","cos","_sin","sin","_tan","tan","_rnd","reset","rotate","angle","mCos","mSin","_t","rotateX","rotateY","rotateZ","shear","sx","sy","skew","ax","ay","skewFromAxis","scale","sz","setTransform","c","e","j","k","l","m","n","o","translate","tx","ty","tz","transform","a2","b2","c2","d2","e2","f2","g2","h2","i2","j2","k2","l2","m2","n2","o2","p2","_p","_identityCalculated","a1","b1","c1","d1","e1","f1","g1","h1","i1","j1","k1","l1","m1","n1","o1","p1","isIdentity","_identity","equals","matr","clone","cloneFromProps","applyToPoint","x","y","z","applyToX","applyToY","applyToZ","getInverseMatrix","determinant","inverseMatrix","inversePoint","pt","applyToPointArray","inversePoints","pts","retPts","applyToTriplePoints","pt1","pt2","pt3","p0","p4","p5","p12","p13","applyToPointStringified","toCSS","cssValue","roundMatrixProperty","to2dCSS","pool","math","nodecrypto","global","chunks","rngname","startdenom","significance","mask","copy","S","slice","mixkey","seed","key","smear","stringseed","charCodeAt","tostring","fromCharCode","shortseed","flatten","obj","depth","result","typ","entropy","randomBytes","out","Uint8Array","crypto","msCrypto","getRandomValues","browser","plugins","Date","screen","autoseed","arc4","keylen","me","count","prng","int32","quick","double","pass","is_math_call","state","BezierFactory","ob","getBezierEasing","nm","str","replace","beziers","bezEasing","BezierEasing","NEWTON_ITERATIONS","SUBDIVISION_PRECISION","SUBDIVISION_MAX_ITERATIONS","kSplineTableSize","kSampleStepSize","float32ArraySupported","A","aA1","aA2","B","C","calcBezier","aT","getSlope","points","_mSampleValues","_precomputed","get","mX1","mY1","mX2","mY2","_precompute","_getTForX","_calcSampleValues","aX","mSampleValues","intervalStart","currentSample","lastSample","guessForT","initialSlope","aGuessT","currentSlope","newtonRaphsonIterate","aA","aB","currentX","currentT","binarySubdivide","extendPrototype","sources","destination","sourcePrototype","attr","hasOwnProperty","getDescriptor","object","getOwnPropertyDescriptor","createProxyFunction","ProxyFunction","bezFunction","pointOnLine2D","x1","y1","x2","y2","x3","y3","det1","getBezierLength","pt4","ptCoord","perc","ptDistance","curveSegments","addedLength","point","lastPoint","lengthData","bezier_length_pool","newElement","percents","lengths","PointData","partial","partialLength","storedData","buildBezierData","bezierName","bezierData","segmentLength","getDistancePerc","initPos","lengthPos","lPerc","dir","bezier_segment_points","getSegmentsLength","shapeData","segmentsLength","segments_length_pool","closed","pathV","pathO","pathI","_length","totalLength","getNewSegment","startPerc","endPerc","t0","t1","u0","u1","u0u0u0","t0u0u0_3","t0t0u0_3","t0t0t0","u0u0u1","t0u0u1_3","t0t0u1_3","t0t0t1","u0u1u1","t0u1u1_3","t0t1u1_3","t0t1t1","u1u1u1","t1u1u1_3","t1t1u1_3","t1t1t1","getPointInSegment","percent","pointOnLine3D","z1","z2","z3","diffDist","dist1","dist2","dist3","lastTime","vendors","requestAnimationFrame","cancelAnimationFrame","currTime","getTime","timeToCall","id","setTimeout","clearTimeout","bez","dataFunctionManager","completeLayers","layers","comps","fontManager","layerData","jLen","kLen","completed","tt","td","hasMask","maskProps","masksProperties","convertPathsToAbsoluteValues","findCompLayers","refId","completeShapes","shapes","completeText","__used","JSON","parse","stringify","ks","it","path","checkVersion","minimum","animVersionString","animVersion","split","minimumVersion","checkText","iterateLayers","textLayer","documentData","assets","checkChars","chars","pathData","paths","__converted","checkColors","iterateShapes","checkShapes","cl","singleShape","moduleOb","completeData","__complete","dataManager","FontManager","maxWaitingTime","emptyChar","w","size","combinedCharacters","setUpNode","font","family","parentNode","fontFamily","node","innerHTML","fontSize","fontVariant","fontStyle","fontWeight","letterSpacing","appendChild","body","offsetWidth","parent","createHelper","def","fontData","tHelper","setAttribute","fFamily","fStyle","fWeight","textContent","fClass","getContext","concat","Font","fonts","typekitLoaded","isLoaded","initTime","now","getCombinedCharacterCodes","addChars","found","ch","addFonts","defs","list","fontArr","_pendingFonts","loadedSelector","shouldLoadFont","loaded","monoCase","sansCase","fPath","fOrigin","origin","querySelectorAll","href","rel","src","sc","helper","cache","checkLoadedFonts","getCharData","char","console","warn","getFontByName","fName","measureText","fontName","index","doubleSize","getComputedTextLength","singleSize","loadedCount","removeChild","PropertyFactory","initFrame","math_abs","interpolateValue","frameNum","caching","newValue","offsetTime","propType","pv","keyData","nextKeyData","fnc","iterationIndex","lastIndex","keyframes","endValue","quat","qx","qy","qz","qw","heading","attitude","bank","nextKeyTime","keyTime","to","ti","ind","__fnct","segmentPerc","distanceInLine","lastFrame","_lastKeyframeIndex","_lastAddedLength","_lastPoint","outX","outY","inX","inY","keyValue","sh","quatStart","createQuaternion","quatEnd","omega","cosom","sinom","scale0","scale1","az","aw","bx","by","bz","bw","acos","slerp","atan2","asin","constructor","values","c3","s1","s2","s3","getValueAtCurrentTime","comp","renderedFrame","endTime","_caching","renderResult","setVValue","multipliedValue","mult","processEffectsSequence","elem","globalData","frameId","effectsSequence","lock","_isFirstFrame","finalValue","kf","addEffect","effectFunction","getProp","vel","st","arrLen","TransformPropertyFactory","defaultVector","TransformProperty","pre","appliedTransformations","px","py","pz","rx","ry","rz","or","sk","sa","_isDirty","applyToMatrix","mat","forceRender","precalculateMatrix","autoOriented","v1","v2","frameRate","getValueAtTime","autoOrient","_addDynamicProperty","getTransformProperty","ShapePath","_maxLength","setPathData","setLength","point_pool","doubleArrayLength","setXYAt","pos","setTripleAt","vX","vY","oX","oY","iX","iY","reverse","newPath","vertices","outPoints","inPoints","init","cnt","ShapePropertyFactory","interpolateShape","previousValue","keyPropS","keyPropE","isHold","vertexValue","resetShape","localShapeCollection","shape1","shape2","shapesEqual","shape_pool","releaseShapes","addShape","ShapeProperty","shapeCollection_pool","newShapeCollection","KeyframedShapeProperty","EllShapeProperty","cPoint","convertEllToPath","s0","_cw","StarShapeProperty","ir","is","convertToPath","convertStarToPath","convertPolygonToPath","os","rad","roundness","perimSegment","numPts","longFlag","longRad","shortRad","longRound","shortRound","longPerimSegment","shortPerimSegment","currentAng","ox","oy","RectShapeProperty","convertRectToPath","v0","getShapeProp","getConstructorFunction","getKeyframedConstructorFunction","ShapeModifiers","modifiers","registerModifier","getModifier","ShapeModifier","TrimModifier","RoundCornersModifier","RepeaterModifier","ShapeCollection","DashProperty","dataProps","dashStr","dashArray","dashoffset","GradientProperty","cLength","_cmdf","_omdf","_collapsable","checkCollapsable","_hasOpacity","initModifierProperties","addShapeToModifier","shape","setAsAnimated","processKeys","sValue","eValue","pathsData","calculateShapeEdges","shapeLength","totalModifierLength","segments","segmentOb","shapeSegments","shapeS","shapeE","releasePathsData","release","processShapes","shapePaths","_s","totalShapeLength","edges","newShapesData","addShapes","lastShape","pop","addPaths","newPaths","addSegment","shapePath","newShape","addSegmentFromArray","shapeSegment","currentLengthData","segmentCount","segment","rd","processPath","cloned_path","currentV","currentI","currentO","closerV","distance","newPosPerc","tr","so","eo","pMatrix","rMatrix","sMatrix","tMatrix","matrix","applyTransforms","inv","scaleX","scaleY","elemsData","_currentCopies","_elements","_groups","unshift","resetElements","elements","_processed","cloneElements","newElements","changeGroupRender","renderFlag","_render","items","itemsTransform","cont","copies","ceil","group","ix","reloadShapes","offsetModulo","roundOffset","pProps","rProps","sProps","iteration","mProps","op","comparePoints","buildShapeString","pathNodes","_o","_i","shapeString","ImagePreloader","proxyImage","canvas","ctx","fillStyle","fillRect","imageLoaded","loadedAssets","totalImages","imagesLoadedCb","createImageData","assetData","assetsPath","original_path","imagePath","u","getAssetsPath","img","crossOrigin","_imageLoaded","loadAssets","cb","images","_createImageData","setPath","setAssetsPath","getImage","destroy","featureSupport","maskType","filtersFactory","createFilter","filId","fil","createAlphaToLuminanceFilter","feColorMatrix","assetLoader","formatResponse","xhr","response","responseText","load","errorCallback","XMLHttpRequest","open","responseType","err","send","onreadystatechange","readyState","status","TextAnimatorProperty","textData","renderType","_hasMaskedPath","_frameId","_textData","_renderType","_elem","_animatorsData","_pathData","_moreOptions","alignment","renderedLetters","lettersChangedFlag","TextAnimatorDataProperty","animatorProps","defaultData","textAnimator_animatables","sw","fc","fh","fs","fb","TextSelectorProp","getTextSelectorProp","LetterProps","TextProperty","keysIndex","canResize","minimumFontSize","currentData","ascent","boxWidth","defaultBoxWidth","justifyOffset","lh","lineWidths","ls","of","ps","fillColorAnim","strokeColorAnim","strokeWidthAnim","yOffset","finalSize","finalText","finalLineHeight","copyData","searchProperty","completeTextData","searchProperties","maskManager","getMaskProperty","getMeasures","xPos","yPos","pathInfo","currentLength","currentPoint","pointInd","segmentInd","prevPoint","tanAngle","animators","matrixHelper","mHelper","renderedLettersCount","letters","tLength","pi","letterValue","yOff","firstLine","offf","xPathPos","yPathPos","elemOpacity","letterSw","letterSc","letterFc","letterO","initPathPos","initSegmentInd","initPointInd","currentLine","letterM","letterP","defaultPropsArray","animatorJustifyOffset","animatorFirstCharOffset","justifyOffsetMult","isNewLine","getMult","anIndexes","totalChars","line","extra","an","animatorOffset","add","rot","atan","update","updated","setCurrentData","searchKeyframes","getKeyframeValue","_finalValue","currentValue","currentIndex","textKeys","buildFinalText","text","charCode","charactersArray","charAt","substr","newLineFlag","charData","anchorGrouping","currentSize","currentPos","lineWidth","maxLineWidth","styles","toLowerCase","trackingOffset","currentHeight","boxHeight","lastSpaceIndex","currentChar","uncollapsedSpaces","animatorData","letterData","based","indexes","rn","newInd","currentInd","updateDocumentData","newData","undefined","dData","recalculate","canResizeFont","_canResize","setMinimumFontSize","_fontValue","_currentTextLength","finalS","finalE","xe","ne","textProperty","easer","tot","newCharsFlag","divisor","pool_factory","initialLength","_create","_release","_clone","pooling","cloned","shapeCollection","BaseRenderer","SVGRenderer","animationItem","config","svgElement","ariaLabel","title","titleElement","titleId","description","descElement","descId","maskElement","layerElement","renderConfig","preserveAspectRatio","imagePreserveAspectRatio","progressiveLoad","hideOnTransparent","viewBoxOnly","viewBoxSize","className","focusable","pendingElements","destroyed","rendererType","CanvasRenderer","clearCanvas","context","dpr","wrapper","devicePixelRatio","currentGlobalAlpha","contextData","CVContextData","transformMat","HybridRenderer","threeDElements","camera","supports3d","MaskElement","viewData","solidPath","rect","expansor","feMorph","properties","currentMasks","layerId","maskRef","filterID","expan","lastPath","lastOperator","filterId","lastRadius","createLayerSolidPath","invRect","drawPath","maskedElement","addRenderableComponent","HierarchyElement","FrameElement","TransformElement","RenderableElement","RenderableDOMElement","ProcessedElement","SVGStyleData","level","lvl","hd","pElem","msElem","SVGShapeData","transformers","caches","lStr","SVGTransformData","SVGStrokeStyleData","styleOb","SVGFillStyleData","SVGGradientFillStyleData","initGradientData","SVGGradientStrokeStyleData","ShapeGroupData","prevViewData","gr","checkLayers","num","ip","buildItem","checkPendingElements","createItem","layer","createImage","createComp","createSolid","createNull","createShape","createText","createCamera","Error","buildAllItems","includeLayers","newLayers","setProjectInterface","pInterface","projectInterface","initItems","buildElementParenting","parentName","hierarchy","setAsParent","setHierarchy","addPendingElement","searchExtraCompositions","xt","initExpressions","registerComposition","setupGlobalData","animData","fontsContainer","getAssetData","imageLoader","imagePreloader","fr","compSize","NullElement","SVGShapeElement","SVGTextElement","IImageElement","SVGCompElement","ISolidElement","configAnimation","maskId","updateContainerSize","appendElementInPos","setMatte","checkParenting","renderFrame","currentFrame","prepareFrame","getBaseElement","nextElement","insertBefore","hide","show","CVShapeElement","CVTextElement","CVImageElement","CVCompElement","CVSolidElement","ctxTransform","cProps","cTr","trProps","canvasContext","ctxOpacity","globalAlpha","cO","restore","save","actionFlag","cArrPos","duplicate","saved","savedOp","blendMode","popped","mozTransformOrigin","transformCanvas","isDashed","elementWidth","elementHeight","elementRel","animationRel","offsetHeight","par","fillType","beginPath","closePath","clip","clearRect","newDOMElement","ddd","addTo3dContainer","nextDOMElement","nextLayer","getThreeDContainerByPos","HShapeElement","HTextElement","HCameraElement","HImageElement","HCompElement","HSolidElement","startPos","endPos","perspectiveElem","createThreeDContainer","webkitTransform","threeDContainerData","build3dContainers","lastThreeDContainerData","currentContainer","resizerElem","svg","setup","cWidth","cHeight","perspective","webkitPerspective","floatingContainer","isFirstFrame","finalMat","finalTransform","mProp","getMaskelement","pathString","pathShapeValue","initHierarchy","_isParent","prepareProperties","isVisible","initTransform","_matMdf","_opMdf","ao","renderTransform","globalToLocal","transforms","ptNew","initRenderable","isInRange","hidden","isTransparent","renderableComponents","component","removeRenderableComponent","prepareRenderableFrame","checkLayerLimits","checkTransparency","renderRenderable","sourceRectAtTime","getLayerSize","initElement","initBaseData","initRendererElement","createContainerElements","createRenderableComponents","createContent","baseElement","renderElement","renderInnerContent","innerElem","destroyBaseElement","stops","setGradientData","setGradientOpacity","pathElement","gradientId","gfill","gf","cst","opacityId","opFill","ms","ost","SVGElementsRenderer","_identityMatrix","_matrixHelper","renderContentTransform","styleData","itemData","renderPath","pathStringTransformed","redraw","iterations","lLen","renderFill","styleElem","renderGradientStroke","renderGradient","renderStroke","hasOpacity","attr1","attr2","cValues","oValues","ang","dist","createRenderFunction","ShapeTransformManager","sequences","sequenceList","transform_key_count","CVShapeData","transformsManager","styledShapes","styledShape","addTransformSequence","trNodes","BaseElement","SVGBaseElement","IShapeElement","ITextElement","ICompElement","sourceRect","tm","_placeholder","textSpans","shapesData","stylesList","shapeModifiers","itemsData","processedElements","animatedContents","SVGTintFilter","filter","filterManager","matrixFilter","effectElements","feMergeNode","feMerge","SVGFillFilter","SVGGaussianBlurEffect","feGaussianBlur","SVGStrokeEffect","initialized","SVGTritoneFilter","feComponentTransfer","feFuncR","feFuncG","feFuncB","SVGProLevelsFilter","createFeFunc","feFuncA","feFuncRComposed","feFuncGComposed","feFuncBComposed","SVGDropShadowEffect","feOffset","feFlood","feComposite","originalNodeAdded","sequence","processSequence","processSequences","getNewKey","checkMasks","layerInterface","LayerExpressionInterface","registerMaskInterface","effectsInterface","EffectsExpressionInterface","createEffectsInterface","registerEffectsInterface","compInterface","CompExpressionInterface","shapeInterface","ShapeExpressionInterface","content","textInterface","TextExpressionInterface","setBlendMode","blendModeValue","bm","sr","effectsManager","EffectsManager","getType","matteElement","transformedElement","_sizeChanged","gg","layerElementParent","masker","maskGroup","maskGrouper","feCTr","feFunc","alphaRect","ln","cp","clipId","cpGroup","renderableEffectsManager","SVGEffects","addShapeToModifiers","isShapeInAnimatedModifiers","isAnimatedWithShape","renderModifiers","lcEnum","ljEnum","searchProcessedElement","addProcessedElement","textAnimator","buildNewText","createPathShape","shapeStr","_fontSize","applyTextPropertiesToMatrix","lineNumber","buildColor","colorData","emptyProp","timeRemapped","setElements","elems","getElements","destroyElements","assetPath","pr","setAttributeNS","textContainer","buildTextContents","textArray","textContents","currentTextContent","tSpan","usesGlyphs","cachedSpansLength","tElement","justify","time","textBox","getBBox","bbox","renderedLetter","textSpan","initSecondaryElement","identityMatrix","buildExpressionInterface","searchShapes","filterUniqueShapes","tempShapes","areAnimated","setShapesAsAnimated","createStyleElement","elementData","lc","lj","ml","addToAnimatedContents","createGroupElement","createTransformElement","transformProperty","createShapeElement","ownTransformers","fn","setElementStyles","currentTransform","modifier","processedPos","ownStyles","ownModifiers","renderShape","animatedContent","colorBlack","colorWhite","opacity","sigma","dimensions","sigmaX","sigmaY","edgeMode","initialize","groupPath","elemChildren","children","childNodes","removeAttribute","pathMasker","dasharrayValue","getTotalLength","lineLength","units","color1","color2","color3","tableR","tableG","tableB","getTableValue","inputBlack","inputWhite","gamma","outputBlack","outputWhite","colorValue","table","call","outputDelta","inputDelta","join","col","_svgMatteSymbols","SVGMatte3Effect","filterElem","ef","filters","CVBaseElement","CVMaskElement","hasMasks","stroke","fill","currentRender","sWidth","fValue","CVEffects","HBaseElement","shapesContainer","currentBBox","textPaths","isMasked","pe","_prevMat","HEffects","findSymbol","replaceInParent","symbolId","nextChild","useElem","setElementAsMask","symbol","newLength","currentSavedOp","set","createElements","globalCompositeOperation","hideElement","showElement","forceRealStack","widthCrop","heightCrop","imgW","imgH","imgRel","canvasRel","drawImage","parentMatrix","moveTo","lineTo","bezierCurveTo","transformHelper","dashResetter","preTransforms","co","wi","da","do","addTransformToStyleList","removeTransformFromStyleList","closeStyles","shouldRender","ownTransforms","_shouldRender","renderShapeTransform","parentTransform","groupTransform","drawLayer","nodes","currentStyle","coOp","strokeStyle","grd","lineCap","lineJoin","miterLimit","setLineDash","lineDashOffset","isMain","renderGradientFill","renderStyledShape","shapeNodes","groupTransformMat","createLinearGradient","createRadialGradient","addColorStop","hasFill","hasStroke","commands","pathArr","lastFill","lastStroke","lastStrokeW","checkBlendMode","tg","addEffects","backgroundColor","_createBaseContainerElements","_renderShapeFrame","shapeCont","getTransformedPoint","calculateShapeBoundingBox","item","boundingBox","vPoint","oPoint","nextIPoint","nextVPoint","checkBounds","getBoundsOfCurve","bounds","shapeBoundingBox","xMax","right","yMax","bottom","tempBoundingBox","p3","b2ac","t2","calculateF","calculateBoundingBox","currentBoxContains","box","changed","compW","compH","innerElemStyle","strokeWidth","lineHeight","tParent","tCont","textPath","Image","imageElem","mTransf","diffVector","mag","lookDir","lookLengthOnXZ","m_rotationX","m_rotationY","hasMatrixChanged","animationManager","registeredAnimations","playingAnimationsNum","_stopped","_isFrozen","removeElement","ev","animItem","animation","isPaused","subtractPlayingCount","registerAnimation","AnimationItem","setupAnimation","setData","addPlayingCount","activate","resume","nowTime","elapsedTime","advanceTime","first","params","setParams","setDirection","togglePause","searchAnimations","standalone","animElements","getElementsByClassName","getElementsByTagName","div","resize","goToAndStop","isFrame","freeze","unfreeze","getRegisteredAnimations","animations","currentRawFrame","frameMult","playSpeed","playDirection","playCount","animationID","timeCompleted","segmentPos","_idle","_completedLoop","animType","parseInt","autoloadSegments","lastIndexOf","fileName","trigger","wrapperAttributes","attributes","getNamedItem","prerender","loadNextSegment","shift","segmentPath","loadSegments","imagesLoaded","checkLoaded","preloadImages","updaFrameModifier","waitForFontsLoaded","error","triggerConfigError","gotoFrame","setSubframe","triggerRenderFrameError","setCurrentRawFrameValue","frameModifier","goToAndPlay","nextValue","_isComplete","checkSegments","adjustSegment","setSegment","end","pendingFrame","playSegments","forceFlag","resetSegments","onEnterFrame","onLoopComplete","onComplete","onSegmentStart","onDestroy","getPath","getDuration","onError","Expressions","stackCount","registers","pushExpression","popExpression","releaseInstances","registerExpressionProperty","ExpressionManager","$bm_isInstanceOfArray","isNumerable","tOfV","Number","$bm_neg","tOfA","lenA","retArr","easeInBez","easeOutBez","easeInOutBez","sum","tOfB","lenB","sub","mul","mod","$bm_sum","$bm_sub","$bm_mul","$bm_div","$bm_mod","clamp","mm","radiansToDegrees","radians_to_degrees","degreesToRadians","degrees_to_radians","helperLengthArray","arr1","arr2","normalize","vec","rgbToHsl","hue2rgb","hslToRgb","linear","tMin","tMax","value1","value2","_tMin","rnd","createPath","inTangents","outTangents","inVertexPoint","outVertexPoint","arrPlaceholder","initiateExpression","property","needsVelocity","_needsRandom","elemType","$bm_transform","effect","thisProperty","valueAtTime","defineProperty","frameDuration","displayStartTime","inPoint","outPoint","loopIn","loop_in","loopOut","loop_out","smooth","toWorld","fromWorld","fromComp","toComp","fromCompToSurface","rotation","anchorPoint","thisLayer","thisComp","velocityAtTime","__expression_functions","scoped_bm_rt","xf","eval","expression_function","numKeys","active","wiggle","freq","amp","addedAmps","periods","loopInDuration","duration","loopOutDuration","getVelocityAtTime","velocity","textIndex","textTotal","selectorValue","lookAt","elem1","elem2","fVec","pitch","easeOut","val1","val2","applyEase","easeIn","ease","nearestKey","framesToTime","frames","fps","timeToFrames","seedRandom","seedrandom","randSeed","substring","posterizeTime","framesPerSecond","hasParent","executeExpression","_value","frameExpressionId","expressionHelpers","searchExpressions","getSpeedAtTime","speed","_cachingAtTime","getStaticValueAtTime","setGroupProperty","propertyGroup","durationFlag","cycleDuration","firstKeyFrame","ret","lastKeyFrame","initV","endV","current","repeats","lastValue","nextLastValue","firstValue","nextFirstValue","samples","sampleValue","sampleFrequency","propertyGetProp","propertyIndex","ShapePropertyConstructorFunction","KeyframedShapePropertyConstructorFunction","ShapeExpressions","isClosed","pointOnPath","_segmentsLength","accumulatedLength","initIndex","endIndex","vectorOnPath","vectorType","xLength","yLength","magnitude","tangentOnPath","normalOnPath","shapeValue","propertyGetShapeProp","trims","getExpressionValue","calculateExpression","isKeyframed","hasExpressions","iterateElements","view","groupInterfaceFactory","fillInterfaceFactory","strokeInterfaceFactory","trimInterfaceFactory","ellipseInterfaceFactory","starInterfaceFactory","pathInterfaceFactory","rectInterfaceFactory","roundedInterfaceFactory","repeaterInterfaceFactory","interfaceFunction","interfaces","_name","mn","numProperties","cix","contentsInterfaceFactory","transformInterface","_propertyGroup","skewAxis","defineProperties","ExpressionPropertyInterface","transformInterfaceFactory","np","_dashPropertyGroup","dashOb","addPropertyToDashOb","dash","start","outerRadius","outerRoundness","innerRoundness","innerRadius","radius","_interfaceFunction","_sourceText","_thisLayerFunction","stringValue","_prevValue","toWorldMat","sampleImage","anchorPointDescriptor","TransformExpressionInterface","anchor_point","startTime","source","MaskManagerInterface","effects","pixelAspect","numLayers","_thisFunction","xRotation","yRotation","xPosition","yPosition","zPosition","_transformFactory","compositions","_thisProjectFunction","createGroupInterface","createValueInterface","groupInterface","enabled","en","expressionProperty","effectsData","MaskInterface","_mask","_data","_masksInterfaces","defaultUnidimensionalValue","defaultMultidimensionalValue","completeProperty","expressionValue","valueProp","assign","speedAtTime","defaultGetter","UnidimensionalPropertyInterface","arrValue","MultidimensionalPropertyInterface","TextExpressionSelectorProp","propertyGetTextProp","SliderEffect","AngleEffect","ColorEffect","PointEffect","LayerIndexEffect","MaskIndexEffect","CheckboxEffect","NoValueEffect","effectItem","GroupEffect","getValueProxy","total","eff","setLocationHref","setSubframeRendering","setQuality","isNaN","inBrowser","installPlugin","plugin","getFactory","checkReady","clearInterval","readyStateCheckInterval","getQueryVariable","variable","vars","queryString","pair","decodeURIComponent","__getFactory","version","scripts","myScript","setInterval","exports","module","markers"],"mappings":"8HAMAA,GACAC,OACAC,SACAC,KAAAC,OACAC,UAAA,GAGAC,OAAAC,OACAC,MAAAD,QAEAE,KAVA,WAWA,OACAC,OAEAC,SAAA,SACAC,OAAA,YAIAC,QAnBA,WAoBAC,KAAAC,KAAAC,EAAAC,EAAAC,eACAC,UAAAL,KAAAM,MAAAC,aACAC,SAAA,MACAC,MAAA,IAAAT,KAAAZ,QAAAqB,KACAC,UAAA,IAAAV,KAAAZ,QAAAsB,SACAC,cAAAX,KAAAZ,QAAAuB,cACAC,iBAAAZ,KAAAZ,QAAAwB,mBAGAZ,KAAAa,MAAA,cAAAb,KAAAC,QChCea,GADEC,OAFjB,WAA0B,IAAaC,EAAbhB,KAAaiB,eAAkD,OAA/DjB,KAAuCkB,MAAAC,IAAAH,GAAwB,OAAiBI,IAAA,eAAAxB,MAAhFI,KAAgF,SAEzFqB,oBCqBFC,EAvBUC,EAAQ,OAcjCC,CACEtC,EACA4B,GATF,EAEA,KAEA,KAEA,MAUgC,oBCLhCW,GACAC,KAAA,MACAC,YACAC,OAAAN,GAEA3B,KALA,WAMA,OACAkC,gBAAAlB,cAAAmB,GACAC,eAAA,MAIAC,SACAC,gBAAA,SAAAhC,GACAD,KAAAC,QAGAiC,KAAA,WACAlC,KAAAC,KAAAiC,QAGAC,KAAA,WACAnC,KAAAC,KAAAkC,QAGAC,MAAA,WACApC,KAAAC,KAAAmC,SAGAC,cAAA,WACArC,KAAAC,KAAAqC,SAAAtC,KAAA+B,kBAKAhC,QAnCA,WAoCAC,KAAAqC,kBCnDeE,GADExB,OAFP,WAAgB,IAAAyB,EAAAxC,KAAagB,EAAAwB,EAAAvB,eAA0BE,EAAAqB,EAAAtB,MAAAC,IAAAH,EAAwB,OAAAG,EAAA,OAAAA,EAAA,OAA2BsB,YAAA,cAAwBtB,EAAA,UAAesB,YAAA,wBAAAC,OAA2CtD,QAAAoD,EAAAX,gBAA6Bc,IAAKC,YAAAJ,EAAAP,oBAAmC,GAAAO,EAAAK,GAAA,KAAA1B,EAAA,OAA4B2B,aAAaC,WAAA,YAAuB5B,EAAA,SAAc6B,aAAatB,KAAA,QAAAuB,QAAA,UAAAC,MAAAV,EAAA,eAAAW,WAAA,mBAAsFT,OAASrD,KAAA,QAAA6D,MAAA,MAAAE,IAAA,IAAAC,IAAA,IAAAC,KAAA,OAA8DC,UAAWL,MAAAV,EAAA,gBAA6BG,IAAKa,OAAAhB,EAAAH,cAAAoB,IAAA,SAAAC,GAAkDlB,EAAAT,eAAA2B,EAAAC,OAAAT,eAElkB7B,oBCY5BuC,EAdqBrC,EAAQ,OAcjBsC,CACdpC,EACAc,GAT6B,EAEb,KAEC,KAEU,MAUduB,EAAA,QAAAF,EAAiB,2DCvBhC,IAAAG,8BAAAC,KAAAC,QAAA,oBAAAC,YAAAF,KAWCG,WAXDF,QAWe,SAAAE,QACf,aACA,IAAAC,MAAA,6BAEAC,aAAA,GAEAC,qBAAA,OAEAC,iBAAA,EACAC,kBACAC,SAAA,iCAAAC,KAAAR,UAAAS,WACAC,gBACAC,WAAAC,KAAAC,MACAC,OACAC,OAAAH,KAAAI,IACAC,QAAAL,KAAAM,KACAC,OAAAP,KAAAQ,IACAC,SAAAT,KAAAU,MACAC,OAAAX,KAAAzB,IACAqC,OAAAZ,KAAA1B,IACAuC,QAAA,GAEAC,UASA,SAAAC,mBAA4B,UAR5B,WACA,IACAC,EADAC,GAAA,sTACAC,EAAAD,EAAAE,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClBF,OAAAG,EAAAD,IAAAhB,KAAAiB,EAAAD,IAJA,GAUAF,OAAAM,OAAApB,KAAAoB,OACAN,OAAAN,IAAA,SAAAa,GAEA,qBADAA,GACAA,EAAAF,OAAA,CACA,IACAH,EADAM,EAAAC,iBAAAF,EAAAF,QACAD,EAAAG,EAAAF,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtBM,EAAAN,GAAAhB,KAAAQ,IAAAa,EAAAL,IAEA,OAAAM,EAEA,OAAAtB,KAAAQ,IAAAa,IAGA,IAAAG,qBAAA,IACAC,UAAAzB,KAAA0B,GAAA,IACAC,YAAA,MAEA,SAAAC,YAAAC,GAEA3B,OADA2B,EACA7B,KAAAC,MAEA,SAAAoB,GACA,OAAAA,GAMA,SAAAS,SAAAC,GACAA,EAAAjH,MAAAkH,SAAA,WACAD,EAAAjH,MAAAmH,IAAA,EACAF,EAAAjH,MAAAoH,KAAA,EACAH,EAAAjH,MAAAqH,QAAA,QACAJ,EAAAjH,MAAAsH,gBAAAL,EAAAjH,MAAAuH,sBAAA,MACAN,EAAAjH,MAAAwH,mBAAAP,EAAAjH,MAAAyH,yBAAA,UACAR,EAAAjH,MAAA0H,eAAAT,EAAAjH,MAAA2H,qBAAAV,EAAAjH,MAAA4H,kBAAA,cAGA,SAAAC,kBAAApI,EAAAqI,EAAAC,EAAAC,GACA5H,KAAAX,OACAW,KAAA0H,cACA1H,KAAA2H,YACA3H,KAAA6H,UAAAD,EAAA,OAGA,SAAAE,gBAAAzI,EAAAuI,GACA5H,KAAAX,OACAW,KAAA6H,UAAAD,EAAA,OAGA,SAAAG,oBAAA1I,EAAA2I,EAAAC,EAAAL,GACA5H,KAAAX,OACAW,KAAAiI,cACAjI,KAAAgI,aACAhI,KAAA6H,UAAAD,EAAA,OAGA,SAAAM,oBAAA7I,EAAA8I,EAAAC,GACApI,KAAAX,OACAW,KAAAmI,aACAnI,KAAAoI,cAGA,SAAAC,eAAAhJ,EAAAsE,GACA3D,KAAAX,OACAW,KAAA2D,SAGA,SAAA2E,wBAAAC,EAAAb,GACA1H,KAAAX,KAAA,mBACAW,KAAAuI,cACAvI,KAAA0H,cAGA,SAAAc,mBAAAD,GACAvI,KAAAX,KAAA,cACAW,KAAAuI,cAGA,SAAAE,4BAAApJ,EAAAkJ,GACAvI,KAAAX,OACAW,KAAAuI,cACAvI,KAAA0H,wBAxDAhB,aAAA,GA2DA,IAAAgC,iBACAC,OAAA,EACA,WACA,6BAAAA,SAFAA,OAMA,SAAAC,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAC,EAAApD,EAAAqD,EAAAC,EAAAC,EAAAC,EAMA,OAHAF,EAAAL,GAAA,EAAAD,GACAO,EAAAN,GAAA,GAFAI,EAAA,EAAAN,GADA/C,EAAAhB,KAAAU,MAAA,EAAAqD,KAGAC,GACAQ,EAAAP,GAAA,KAAAI,GAAAL,GACAhD,EAAA,GACA,OAAAkD,EAAAD,EAAsBE,EAAAK,EAAOJ,EAAAE,EAAO,MACpC,OAAAJ,EAAAK,EAAsBJ,EAAAF,EAAOG,EAAAE,EAAO,MACpC,OAAAJ,EAAAI,EAAsBH,EAAAF,EAAOG,EAAAI,EAAO,MACpC,OAAAN,EAAAI,EAAsBH,EAAAI,EAAOH,EAAAH,EAAO,MACpC,OAAAC,EAAAM,EAAsBL,EAAAG,EAAOF,EAAAH,EAAO,MACpC,OAAAC,EAAAD,EAAsBE,EAAAG,EAAOF,EAAAG,EAE7B,OAAAL,EACAC,EACAC,GAGA,SAAAK,SAAAP,EAAAC,EAAAC,GACA,IAEAL,EAFAxF,EAAAyB,KAAAzB,IAAA2F,EAAAC,EAAAC,GAAA9F,EAAA0B,KAAA1B,IAAA4F,EAAAC,EAAAC,GACAM,EAAAnG,EAAAD,EAEA0F,EAAA,IAAAzF,EAAA,EAAAmG,EAAAnG,EACA0F,EAAA1F,EAAA,IAEA,OAAAA,GACA,KAAAD,EAAAyF,EAAA,EAAwB,MACxB,KAAAG,EAAAH,EAAAI,EAAAC,EAAAM,GAAAP,EAAAC,EAAA,KAAiDL,GAAA,EAAAW,EAAY,MAC7D,KAAAP,EAAAJ,EAAAK,EAAAF,EAAA,EAAAQ,EAAoCX,GAAA,EAAAW,EAAY,MAChD,KAAAN,EAAAL,EAAAG,EAAAC,EAAA,EAAAO,EAAoCX,GAAA,EAAAW,EAGpC,OACAX,EACAC,EACAC,GAIA,SAAAU,mBAAAC,EAAAC,GACA,IAAAC,EAAAL,SAAA,IAAAG,EAAA,OAAAA,EAAA,OAAAA,EAAA,IAQA,OAPAE,EAAA,IAAAD,EACAC,EAAA,KACAA,EAAA,KAEAA,EAAA,QACAA,EAAA,MAEAhB,SAAAgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,SAAAC,mBAAAH,EAAAC,GACA,IAAAC,EAAAL,SAAA,IAAAG,EAAA,OAAAA,EAAA,OAAAA,EAAA,IAQA,OAPAE,EAAA,IAAAD,EACAC,EAAA,KACAA,EAAA,KAEAA,EAAA,OACAA,EAAA,MAEAhB,SAAAgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,SAAAE,YAAAJ,EAAAC,GACA,IAAAC,EAAAL,SAAA,IAAAG,EAAA,OAAAA,EAAA,OAAAA,EAAA,IAQA,OAPAE,EAAA,IAAAD,EAAA,IACAC,EAAA,KACAA,EAAA,MAEAA,EAAA,OACAA,EAAA,OAEAhB,SAAAgB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGA,IAAAG,SAAA,WACA,IACAjE,EACAkE,EAFAC,KAGA,IAAAnE,EAAA,EAAYA,EAAA,IAAMA,GAAA,EAClBkE,EAAAlE,EAAAoE,SAAA,IACAD,EAAAnE,GAAA,GAAAkE,EAAA/D,OAAA,IAAA+D,IAGA,gBAAAhB,EAAAC,EAAAC,GAUA,OATAF,EAAA,IACAA,EAAA,GAEAC,EAAA,IACAA,EAAA,GAEAC,EAAA,IACAA,EAAA,GAEA,IAAAe,EAAAjB,GAAAiB,EAAAhB,GAAAgB,EAAAf,IAnBA,GAsBA,SAAAiB,aACAA,UAAAC,WACAC,aAAA,SAAAC,EAAAC,GACA,GAAAvK,KAAAwK,KAAAF,GAEA,IADA,IAAAtE,EAAAhG,KAAAwK,KAAAF,GAAArE,OACAH,EAAA,EAAwBA,EAAAE,EAASF,IACjC9F,KAAAwK,KAAAF,GAAAxE,GAAAyE,IAIAE,iBAAA,SAAAH,EAAAI,GAMA,OALA1K,KAAAwK,KAAAF,KACAtK,KAAAwK,KAAAF,OAEAtK,KAAAwK,KAAAF,GAAAK,KAAAD,GAEA,WACA1K,KAAA4K,oBAAAN,EAAAI,IACGG,KAAA7K,OAEH4K,oBAAA,SAAAN,EAAAI,GACA,GAAAA,GAEM,GAAA1K,KAAAwK,KAAAF,GAAA,CAEN,IADA,IAAAxE,EAAA,EAAAE,EAAAhG,KAAAwK,KAAAF,GAAArE,OACAH,EAAAE,GACAhG,KAAAwK,KAAAF,GAAAxE,KAAA4E,IACA1K,KAAAwK,KAAAF,GAAAQ,OAAAhF,EAAA,GACAA,GAAA,EACAE,GAAA,GAEAF,GAAA,EAEA9F,KAAAwK,KAAAF,GAAArE,SACAjG,KAAAwK,KAAAF,GAAA,YAZAtK,KAAAwK,KAAAF,GAAA,OAiBA,IAAAS,iBAAA,WA0BA,yBAAAC,mBAAA,mBAAAC,aATA,SAAA5L,EAAA2G,GACA,kBAAA3G,EACA,IAAA4L,aAAAjF,GACG,UAAA3G,EACH,IAAA6L,WAAAlF,GACG,WAAA3G,EACH,IAAA2L,kBAAAhF,QADG,GArBH,SAAA3G,EAAA2G,GACA,IAAA9C,EAAA4C,EAAA,EAAAqF,KACA,OAAA9L,GACA,YACA,aACA6D,EAAA,EACA,MACA,QACAA,EAAA,IAGA,IAAA4C,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrBqF,EAAAR,KAAAzH,GAEA,OAAAiI,GAfA,GAiCA,SAAA9E,iBAAAL,GACA,OAAAoF,MAAAC,MAAA,MAA0BpF,OAAAD,IAE1B,SAAAsF,SAAAjM,GAEA,OAAAkM,SAAAC,gBAAApH,MAAA/E,GAEA,SAAAoM,UAAApM,GAEA,OAAAkM,SAAAG,cAAArM,GAEA,SAAAsM,4BACAA,yBAAAvB,WACAwB,mBAAA,SAAAC,IACA,IAAA7L,KAAA8L,kBAAAC,QAAAF,KACA7L,KAAA8L,kBAAAnB,KAAAkB,GACA7L,KAAAK,UAAAuL,mBAAA5L,MACAA,KAAAgM,aAAA,IAGAC,yBAAA,WACAjM,KAAAkM,MAAA,EACA,IAAApG,EAAAE,EAAAhG,KAAA8L,kBAAA7F,OACA,IAAAH,EAAA,EAAaA,EAAAE,EAAMF,GAAA,EACnB9F,KAAA8L,kBAAAhG,GAAAqG,WACAnM,KAAA8L,kBAAAhG,GAAAoG,OACAlM,KAAAkM,MAAA,IAIAE,6BAAA,SAAA/L,GACAL,KAAAK,YACAL,KAAA8L,qBACA9L,KAAAkM,MAAA,EACAlM,KAAAgM,aAAA,IAGA,IAAAK,cAEAC,gBACAC,EAAA,cACAC,EAAA,WACAC,EAAA,SACAC,EAAA,UACAC,EAAA,SACAC,EAAA,UACAC,EAAA,cACAC,EAAA,aACAC,EAAA,aACAC,EAAA,aACAC,GAAA,aACAC,GAAA,YACAC,GAAA,MACAC,GAAA,aACAC,GAAA,QACAC,GAAA;;;;;;;;IAGA,SAAAC,GACA,OAAAjB,eAAAiB,IAAA,KApBAjB,eAoDAkB,OAAA,WAEA,IAAAC,EAAA3I,KAAA4I,IACAC,EAAA7I,KAAA8I,IACAC,EAAA/I,KAAAgJ,IACAC,EAAAjJ,KAAAC,MAEA,SAAAiJ,IAiBA,OAhBAhO,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,KACAa,KAAAb,MAAA,MACAa,KAAAb,MAAA,MACAa,KAAAb,MAAA,MACAa,KAAAb,MAAA,MACAa,KAAAb,MAAA,MACAa,KAAAb,MAAA,MACAa,KAGA,SAAAiO,EAAAC,GACA,OAAAA,EACA,OAAAlO,KAEA,IAAAmO,EAAAV,EAAAS,GACAE,EAAAT,EAAAO,GACA,OAAAlO,KAAAqO,GAAAF,GAAAC,EAAA,IAAAA,EAAAD,EAAA,qBAGA,SAAAG,EAAAJ,GACA,OAAAA,EACA,OAAAlO,KAEA,IAAAmO,EAAAV,EAAAS,GACAE,EAAAT,EAAAO,GACA,OAAAlO,KAAAqO,GAAA,UAAAF,GAAAC,EAAA,IAAAA,EAAAD,EAAA,WAGA,SAAAI,EAAAL,GACA,OAAAA,EACA,OAAAlO,KAEA,IAAAmO,EAAAV,EAAAS,GACAE,EAAAT,EAAAO,GACA,OAAAlO,KAAAqO,GAAAF,EAAA,EAAAC,EAAA,WAAAA,EAAA,EAAAD,EAAA,WAGA,SAAAK,EAAAN,GACA,OAAAA,EACA,OAAAlO,KAEA,IAAAmO,EAAAV,EAAAS,GACAE,EAAAT,EAAAO,GACA,OAAAlO,KAAAqO,GAAAF,GAAAC,EAAA,IAAAA,EAAAD,EAAA,qBAGA,SAAAM,EAAAC,EAAAC,GACA,OAAA3O,KAAAqO,GAAA,EAAAM,EAAAD,EAAA,OAGA,SAAAE,EAAAC,EAAAC,GACA,OAAA9O,KAAAyO,MAAAZ,EAAAgB,GAAAhB,EAAAiB,IAGA,SAAAC,EAAAF,EAAAX,GACA,IAAAC,EAAAV,EAAAS,GACAE,EAAAT,EAAAO,GACA,OAAAlO,KAAAqO,GAAAF,EAAAC,EAAA,KAAAA,EAAAD,EAAA,qBACAE,GAAA,QAAAR,EAAAgB,GAAA,uBACAR,GAAAF,GAAAC,EAAA,IAAAA,EAAAD,EAAA,qBAIA,SAAAa,EAAAN,EAAAC,EAAAM,GAIA,OAHAA,GAAA,IAAAA,IACAA,EAAA,GAEA,IAAAP,GAAA,IAAAC,GAAA,IAAAM,EACAjP,KAEAA,KAAAqO,GAAAK,EAAA,QAAAC,EAAA,QAAAM,EAAA,WAGA,SAAAC,EAAA/O,EAAA+I,EAAAiG,EAAA3F,EAAA4F,EAAAjG,EAAAF,EAAAJ,EAAA/C,EAAAuJ,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAtG,GAiBA,OAhBApJ,KAAAb,MAAA,GAAAgB,EACAH,KAAAb,MAAA,GAAA+J,EACAlJ,KAAAb,MAAA,GAAAgQ,EACAnP,KAAAb,MAAA,GAAAqK,EACAxJ,KAAAb,MAAA,GAAAiQ,EACApP,KAAAb,MAAA,GAAAgK,EACAnJ,KAAAb,MAAA,GAAA8J,EACAjJ,KAAAb,MAAA,GAAA0J,EACA7I,KAAAb,MAAA,GAAA2G,EACA9F,KAAAb,MAAA,GAAAkQ,EACArP,KAAAb,MAAA,IAAAmQ,EACAtP,KAAAb,MAAA,IAAAoQ,EACAvP,KAAAb,MAAA,IAAAqQ,EACAxP,KAAAb,MAAA,IAAAsQ,EACAzP,KAAAb,MAAA,IAAAuQ,EACA1P,KAAAb,MAAA,IAAAiK,EACApJ,KAGA,SAAA2P,EAAAC,EAAAC,EAAAC,GAEA,OADAA,KAAA,EACA,IAAAF,GAAA,IAAAC,GAAA,IAAAC,EACA9P,KAAAqO,GAAA,wBAAAuB,EAAAC,EAAAC,EAAA,GAEA9P,KAGA,SAAA+P,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAC,EAAAhR,KAAAb,MAEA,OAAA6Q,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EASA,OANAK,EAAA,IAAAA,EAAA,IAAAhB,EAAAgB,EAAA,IAAAJ,EACAI,EAAA,IAAAA,EAAA,IAAAX,EAAAW,EAAA,IAAAH,EACAG,EAAA,IAAAA,EAAA,IAAAN,EAAAM,EAAA,IAAAF,EACAE,EAAA,IAAAA,EAAA,IAAAD,EAEA/Q,KAAAiR,qBAAA,EACAjR,KAGA,IAAAkR,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAL,EAAA,GACAM,EAAAN,EAAA,GACAO,EAAAP,EAAA,GACAQ,EAAAR,EAAA,GACAS,EAAAT,EAAA,GACAU,EAAAV,EAAA,GACAW,EAAAX,EAAA,GACAY,EAAAZ,EAAA,IACAa,EAAAb,EAAA,IACAc,EAAAd,EAAA,IACAe,EAAAf,EAAA,IACAgB,EAAAhB,EAAA,IACAiB,EAAAjB,EAAA,IA4BA,OArBAA,EAAA,GAAAE,EAAAlB,EAAAmB,EAAAf,EAAAgB,EAAAZ,EAAAa,EAAAT,EACAI,EAAA,GAAAE,EAAAjB,EAAAkB,EAAAd,EAAAe,EAAAX,EAAAY,EAAAR,EACAG,EAAA,GAAAE,EAAAhB,EAAAiB,EAAAb,EAAAc,EAAAV,EAAAW,EAAAP,EACAE,EAAA,GAAAE,EAAAf,EAAAgB,EAAAZ,EAAAa,EAAAT,EAAAU,EAAAN,EAEAC,EAAA,GAAAM,EAAAtB,EAAAuB,EAAAnB,EAAAoB,EAAAhB,EAAAiB,EAAAb,EACAI,EAAA,GAAAM,EAAArB,EAAAsB,EAAAlB,EAAAmB,EAAAf,EAAAgB,EAAAZ,EACAG,EAAA,GAAAM,EAAApB,EAAAqB,EAAAjB,EAAAkB,EAAAd,EAAAe,EAAAX,EACAE,EAAA,GAAAM,EAAAnB,EAAAoB,EAAAhB,EAAAiB,EAAAb,EAAAc,EAAAV,EAEAC,EAAA,GAAAU,EAAA1B,EAAA2B,EAAAvB,EAAAwB,EAAApB,EAAAqB,EAAAjB,EACAI,EAAA,GAAAU,EAAAzB,EAAA0B,EAAAtB,EAAAuB,EAAAnB,EAAAoB,EAAAhB,EACAG,EAAA,IAAAU,EAAAxB,EAAAyB,EAAArB,EAAAsB,EAAAlB,EAAAmB,EAAAf,EACAE,EAAA,IAAAU,EAAAvB,EAAAwB,EAAApB,EAAAqB,EAAAjB,EAAAkB,EAAAd,EAEAC,EAAA,IAAAc,EAAA9B,EAAA+B,EAAA3B,EAAA4B,EAAAxB,EAAAyB,EAAArB,EACAI,EAAA,IAAAc,EAAA7B,EAAA8B,EAAA1B,EAAA2B,EAAAvB,EAAAwB,EAAApB,EACAG,EAAA,IAAAc,EAAA5B,EAAA6B,EAAAzB,EAAA0B,EAAAtB,EAAAuB,EAAAnB,EACAE,EAAA,IAAAc,EAAA3B,EAAA4B,EAAAxB,EAAAyB,EAAArB,EAAAsB,EAAAlB,EAEA/Q,KAAAiR,qBAAA,EACAjR,KAGA,SAAAkS,IAKA,OAJAlS,KAAAiR,sBACAjR,KAAAmS,YAAA,IAAAnS,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,QAAAa,KAAAb,MAAA,SAAAa,KAAAb,MAAA,SAAAa,KAAAb,MAAA,SAAAa,KAAAb,MAAA,SAAAa,KAAAb,MAAA,SAAAa,KAAAb,MAAA,KACAa,KAAAiR,qBAAA,GAEAjR,KAAAmS,UAGA,SAAAC,EAAAC,GAEA,IADA,IAAAvM,EAAA,EACAA,EAAA,KACA,GAAAuM,EAAAlT,MAAA2G,KAAA9F,KAAAb,MAAA2G,GACA,SAEAA,GAAA,EAEA,SAGA,SAAAwM,EAAAD,GACA,IAAAvM,EACA,IAAAA,EAAA,EAAgBA,EAAA,GAAKA,GAAA,EACrBuM,EAAAlT,MAAA2G,GAAA9F,KAAAb,MAAA2G,GAIA,SAAAyM,EAAApT,GACA,IAAA2G,EACA,IAAAA,EAAA,EAAgBA,EAAA,GAAKA,GAAA,EACrB9F,KAAAb,MAAA2G,GAAA3G,EAAA2G,GAIA,SAAA0M,EAAAC,EAAAC,EAAAC,GAEA,OACAF,IAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IACAuT,EAAAD,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IACAwT,EAAAF,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,IAAAa,KAAAb,MAAA,KAOA,SAAAyT,EAAAH,EAAAC,EAAAC,GACA,OAAAF,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAEA,SAAA0T,EAAAJ,EAAAC,EAAAC,GACA,OAAAF,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAEA,SAAA2T,EAAAL,EAAAC,EAAAC,GACA,OAAAF,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,IAAAa,KAAAb,MAAA,IAGA,SAAA4T,IACA,IAAAC,EAAAhT,KAAAb,MAAA,GAAAa,KAAAb,MAAA,GAAAa,KAAAb,MAAA,GAAAa,KAAAb,MAAA,GACAgB,EAAAH,KAAAb,MAAA,GAAA6T,EACA9J,GAAAlJ,KAAAb,MAAA,GAAA6T,EACA7D,GAAAnP,KAAAb,MAAA,GAAA6T,EACAxJ,EAAAxJ,KAAAb,MAAA,GAAA6T,EACA5D,GAAApP,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAAAa,KAAAb,MAAA,GAAAa,KAAAb,MAAA,KAAA6T,EACA7J,IAAAnJ,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAAAa,KAAAb,MAAA,GAAAa,KAAAb,MAAA,KAAA6T,EACAC,EAAA,IAAAzF,OAOA,OANAyF,EAAA9T,MAAA,GAAAgB,EACA8S,EAAA9T,MAAA,GAAA+J,EACA+J,EAAA9T,MAAA,GAAAgQ,EACA8D,EAAA9T,MAAA,GAAAqK,EACAyJ,EAAA9T,MAAA,IAAAiQ,EACA6D,EAAA9T,MAAA,IAAAgK,EACA8J,EAGA,SAAAC,EAAAC,GAEA,OADAnT,KAAA+S,mBACAK,kBAAAD,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAGA,SAAAE,EAAAC,GACA,IAAAxN,EAAAE,EAAAsN,EAAArN,OAAAsN,KACA,IAAAzN,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByN,EAAAzN,GAAAoN,EAAAI,EAAAxN,IAEA,OAAAyN,EAGA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAxI,EAAAJ,iBAAA,aACA,GAAA/K,KAAAkS,aACA/G,EAAA,GAAAsI,EAAA,GACAtI,EAAA,GAAAsI,EAAA,GACAtI,EAAA,GAAAuI,EAAA,GACAvI,EAAA,GAAAuI,EAAA,GACAvI,EAAA,GAAAwI,EAAA,GACAxI,EAAA,GAAAwI,EAAA,OACS,CACT,IAAAC,EAAA5T,KAAAb,MAAA,GAAA8S,EAAAjS,KAAAb,MAAA,GAAA0U,EAAA7T,KAAAb,MAAA,GAAA2U,EAAA9T,KAAAb,MAAA,GAAA4U,EAAA/T,KAAAb,MAAA,IAAA6U,EAAAhU,KAAAb,MAAA,IACAgM,EAAA,GAAAsI,EAAA,GAAAG,EAAAH,EAAA,GAAAI,EAAAE,EACA5I,EAAA,GAAAsI,EAAA,GAAAxB,EAAAwB,EAAA,GAAAK,EAAAE,EACA7I,EAAA,GAAAuI,EAAA,GAAAE,EAAAF,EAAA,GAAAG,EAAAE,EACA5I,EAAA,GAAAuI,EAAA,GAAAzB,EAAAyB,EAAA,GAAAI,EAAAE,EACA7I,EAAA,GAAAwI,EAAA,GAAAC,EAAAD,EAAA,GAAAE,EAAAE,EACA5I,EAAA,GAAAwI,EAAA,GAAA1B,EAAA0B,EAAA,GAAAG,EAAAE,EAEA,OAAA7I,EAGA,SAAAiI,EAAAX,EAAAC,EAAAC,GAOA,OALA3S,KAAAkS,cACAO,EAAAC,EAAAC,IAEAF,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAAAsT,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,GAAAa,KAAAb,MAAA,IAAAsT,EAAAzS,KAAAb,MAAA,GAAAuT,EAAA1S,KAAAb,MAAA,GAAAwT,EAAA3S,KAAAb,MAAA,IAAAa,KAAAb,MAAA,KAKA,SAAA8U,EAAAxB,EAAAC,GACA,GAAA1S,KAAAkS,aACA,OAAAO,EAAA,IAAAC,EAEA,IAAA1B,EAAAhR,KAAAb,MACA,OAAA2F,KAAAC,MAAA,KAAA0N,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,GAAAA,EAAA,cAAAlM,KAAAC,MAAA,KAAA0N,EAAAzB,EAAA,GAAA0B,EAAA1B,EAAA,GAAAA,EAAA,UAGA,SAAAkD,IASA,IAJA,IAAApO,EAAA,EACA3G,EAAAa,KAAAb,MACAgV,EAAA,YAEArO,EAAA,IACAqO,GAAApG,EAFA,IAEA5O,EAAA2G,IAFA,IAGAqO,GAAA,KAAArO,EAAA,QACAA,GAAA,EAEA,OAAAqO,EAGA,SAAAC,EAAAjO,GAEA,OAAAA,EAAA,MAAAA,EAAA,GAAAA,GAAA,MAAAA,EAAA,EACA4H,EAFA,IAEA5H,GAFA,IAIAA,EAGA,SAAAkO,IAKA,IAAAlV,EAAAa,KAAAb,MAOA,gBANAiV,EAAAjV,EAAA,IAMA,IALAiV,EAAAjV,EAAA,IAKA,IAJAiV,EAAAjV,EAAA,IAIA,IAHAiV,EAAAjV,EAAA,IAGA,IAFAiV,EAAAjV,EAAA,KAEA,IADAiV,EAAAjV,EAAA,KACA,IAGA,kBACAa,KAAAgO,QACAhO,KAAAiO,SACAjO,KAAAsO,UACAtO,KAAAuO,UACAvO,KAAAwO,UACAxO,KAAA4O,OACA5O,KAAA+O,eACA/O,KAAAyO,QACAzO,KAAAgP,QACAhP,KAAAkP,eACAlP,KAAA2P,YACA3P,KAAA+P,YACA/P,KAAAwS,eACAxS,KAAA4S,WACA5S,KAAA6S,WACA7S,KAAA8S,WACA9S,KAAAoT,oBACApT,KAAAwT,sBACAxT,KAAAiU,0BACAjU,KAAAkU,QACAlU,KAAAqU,UACArU,KAAAsS,QACAtS,KAAAuS,iBACAvS,KAAAoS,SACApS,KAAAqT,gBACArT,KAAAkT,eACAlT,KAAA+S,mBACA/S,KAAAqO,GAAArO,KAAA+P,UACA/P,KAAAkS,aACAlS,KAAAmS,WAAA,EACAnS,KAAAiR,qBAAA,EAEAjR,KAAAb,MAAA4L,iBAAA,cACA/K,KAAAgO,SA3XA,IAuZA,SAAAsG,EAAAC,GAIA,IASAC,EATAC,EAAAzU,KACAN,EAAA,IACAgV,EAAA,EAEAC,EAAA,SACAC,EAAAL,EAAArP,IAAAxF,EAAAgV,GACAG,EAAAN,EAAArP,IAAA,EAHA,IAIArF,EAAA,EAAAgV,EACAC,EAAApV,EAAA,EAqHA,SAAAqV,EAAA5L,EAAAG,GAIA,OAHAA,EAAAxD,EAAAqD,EAAArD,EACAwD,EAAA+F,EAAAlG,EAAAkG,EACA/F,EAAA0L,EAAA7L,EAAA6L,EAAAC,QACA3L,EAsBA,SAAA4L,EAAAC,EAAAC,GAEA,IADA,IAAAC,EAAAC,EAAAH,EAAA,GAAA9F,EAAA,EACAA,EAAAiG,EAAArP,QACAmP,EAAAN,EAAAzF,GACAyF,GAAAO,GAAA,GAAAD,EAAAN,EAAAzF,IAAAiG,EAAAC,WAAAlG,KAEA,OAAAmG,EAAAJ,GAyBA,SAAAI,EAAArV,GACA,OAAAV,OAAAgW,aAAApK,MAAA,EAAAlL,GA3GAoU,EAAA,OAAAI,GA7DA,SAAAQ,EAAA/V,EAAAsL,GACA,IAAA0K,KAIAM,EAAAR,EAoHA,SAAAS,EAAAC,EAAAC,GACA,IAAAhK,EAAAiK,KAAAC,SAAAH,EACA,GAAAC,GAAA,UAAAE,EACA,IAAAlK,KAAA+J,EACA,IAAqBE,EAAAnL,KAAAgL,EAAAC,EAAA/J,GAAAgK,EAAA,IAA8C,MAAAzG,IAGnE,OAAA0G,EAAA7P,OAAA6P,EAAA,UAAAC,EAAAH,IAAA,KA3HAD,EAHAvW,GAAA,IAAAA,GAAwC4W,SAAA,GAAgB5W,OAIxD4W,SAAAb,EAAAK,EAAAlB,IACA,OAAAa,EA+IA,WACA,IACA,GAAAX,EAA6B,OAAAgB,EAAAhB,EAAAyB,YAAAvW,IAC7B,IAAAwW,EAAA,IAAAC,WAAAzW,GAEA,OADA+U,EAAA2B,QAAA3B,EAAA4B,UAAAC,gBAAAJ,GACAV,EAAAU,GACS,MAAA9G,GACT,IAAAmH,EAAA9B,EAAAvQ,UACAsS,EAAAD,KAAAC,QACA,YAAAC,KAAAhC,EAAA+B,EAAA/B,EAAAiC,OAAAlB,EAAAlB,KAxJAqC,GAAAxB,EAAA,GAAAC,GAGAwB,EAAA,IA+DA,SAAAxB,GACA,IAAA9L,EAAAuN,EAAAzB,EAAAnP,OACA6Q,EAAA9W,KAAA8F,EAAA,EAAAuJ,EAAAyH,EAAAhR,EAAAgR,EAAAzH,EAAA,EAAAvG,EAAAgO,EAAA9B,KAMA,IAHA6B,IAAsBzB,GAAAyB,MAGtB/Q,EAAApG,GACAoJ,EAAAhD,OAEA,IAAAA,EAAA,EAAmBA,EAAApG,EAAWoG,IAC9BgD,EAAAhD,GAAAgD,EAAAuG,EAAAyF,EAAAzF,EAAA+F,EAAAtP,EAAA+Q,IAAAvN,EAAAR,EAAAhD,KACAgD,EAAAuG,GAAA/F,EAIAwN,EAAA7N,EAAA,SAAA8N,GAIA,IAFA,IAAAzN,EAAAN,EAAA,EACAlD,EAAAgR,EAAAhR,EAAAuJ,EAAAyH,EAAAzH,EAAAvG,EAAAgO,EAAA9B,EACA+B,KACAzN,EAAAR,EAAAhD,EAAAgP,EAAAhP,EAAA,GACAkD,IAAAtJ,EAAAoJ,EAAAgM,GAAAhM,EAAAhD,GAAAgD,EAAAuG,EAAAyF,EAAAzF,EAAA/F,KAAAR,EAAAuG,GAAA/F,IAGA,OADAwN,EAAAhR,IAAqBgR,EAAAzH,IACrBrG,GAzFA,CAAAoM,GAIA4B,EAAA,WAIA,IAHA,IAAAvH,EAAAmH,EAAA3N,EAAAyL,GACAlL,EAAAoL,EACAnC,EAAA,EACAhD,EAAAoF,GACApF,KAAAgD,GAAA/S,EACA8J,GAAA9J,EACA+S,EAAAmE,EAAA3N,EAAA,GAEA,KAAAwG,GAAA5P,GACA4P,GAAA,EACAjG,GAAA,EACAiJ,KAAA,EAEA,OAAAhD,EAAAgD,GAAAjJ,GAWA,OARAwN,EAAAC,MAAA,WAAiC,SAAAL,EAAA3N,EAAA,IACjC+N,EAAAE,MAAA,WAAiC,OAAAN,EAAA3N,EAAA,eACjC+N,EAAAG,OAAAH,EAGA9B,EAAAM,EAAAoB,EAAA5B,GAAAV,IAGAlV,EAAAgY,MAAA1M,GACA,SAAAsM,EAAA7B,EAAAkC,EAAAC,GAUA,OATAA,IAEAA,EAAAtC,GAA8BD,EAAAuC,EAAAV,GAE9BI,EAAAM,MAAA,WAAyC,OAAAvC,EAAA6B,QAKzCS,GAA+B9C,EAAAI,GAAAqC,EAAsB7B,GAIrD6B,IAEAA,EACAtB,EACA,WAAAtW,IAAAqV,OAAAzU,MAAAuU,EACAnV,EAAAkY,QAuHApC,EAAAX,EAAArO,SAAAoO,GArMA,IA+MA1O,QAEA,IAAA2R,cAAA,WAYA,IAAAC,GACAC,gBAGA,SAAAtX,EAAA+I,EAAAiG,EAAA3F,EAAAkO,GACA,IAAAC,EAAAD,IAAA,OAAAvX,EAAA,IAAA+I,EAAA,IAAAiG,EAAA,IAAA3F,GAAAoO,QAAA,WACA,GAAAC,EAAAF,GACA,OAAAE,EAAAF,GAEA,IAAAG,EAAA,IAAAC,GAAA5X,EAAA+I,EAAAiG,EAAA3F,IAEA,OADAqO,EAAAF,GAAAG,EACAA,IATAD,KAaA,IAAAG,EAAA,EAEAC,EAAA,KACAC,EAAA,GAEAC,EAAA,GACAC,EAAA,GAAAD,EAAA,GAEAE,EAAA,mBAAApN,aAEA,SAAAqN,EAAAC,EAAAC,GAA2B,WAAAA,EAAA,EAAAD,EAC3B,SAAAE,EAAAF,EAAAC,GAA2B,SAAAA,EAAA,EAAAD,EAC3B,SAAAG,EAAAH,GAA2B,SAAAA,EAG3B,SAAAI,EAAAC,EAAAL,EAAAC,GACA,QAAAF,EAAAC,EAAAC,GAAAI,EAAAH,EAAAF,EAAAC,IAAAI,EAAAF,EAAAH,IAAAK,EAIA,SAAAC,EAAAD,EAAAL,EAAAC,GACA,SAAAF,EAAAC,EAAAC,GAAAI,IAAA,EAAAH,EAAAF,EAAAC,GAAAI,EAAAF,EAAAH,GA8BA,SAAAR,EAAAe,GACA9Y,KAAAgR,GAAA8H,EACA9Y,KAAA+Y,eAAAV,EAAA,IAAApN,aAAAkN,GAAA,IAAA/M,MAAA+M,GACAnY,KAAAgZ,cAAA,EAEAhZ,KAAAiZ,IAAAjZ,KAAAiZ,IAAApO,KAAA7K,MAsEA,OAnEA+X,EAAA3N,WAEA6O,IAAA,SAAAxG,GACA,IAAAyG,EAAAlZ,KAAAgR,GAAA,GACAmI,EAAAnZ,KAAAgR,GAAA,GACAoI,EAAApZ,KAAAgR,GAAA,GACAqI,EAAArZ,KAAAgR,GAAA,GAEA,OADAhR,KAAAgZ,cAAAhZ,KAAAsZ,cACAJ,IAAAC,GAAAC,IAAAC,EAAA5G,EAEA,IAAAA,EAAA,EACA,IAAAA,EAAA,EACAkG,EAAA3Y,KAAAuZ,UAAA9G,GAAA0G,EAAAE,IAKAC,YAAA,WACA,IAAAJ,EAAAlZ,KAAAgR,GAAA,GACAmI,EAAAnZ,KAAAgR,GAAA,GACAoI,EAAApZ,KAAAgR,GAAA,GACAqI,EAAArZ,KAAAgR,GAAA,GACAhR,KAAAgZ,cAAA,EACAE,IAAAC,GAAAC,IAAAC,GACArZ,KAAAwZ,qBAGAA,kBAAA,WAGA,IAFA,IAAAN,EAAAlZ,KAAAgR,GAAA,GACAoI,EAAApZ,KAAAgR,GAAA,GACAlL,EAAA,EAA2BA,EAAAqS,IAAsBrS,EACjD9F,KAAA+Y,eAAAjT,GAAA6S,EAAA7S,EAAAsS,EAAAc,EAAAE,IAOAG,UAAA,SAAAE,GASA,IARA,IAAAP,EAAAlZ,KAAAgR,GAAA,GACAoI,EAAApZ,KAAAgR,GAAA,GACA0I,EAAA1Z,KAAA+Y,eAEAY,EAAA,EACAC,EAAA,EACAC,EAAA1B,EAAA,EAEkByB,IAAAC,GAAAH,EAAAE,IAAAH,IAAoEG,EACtFD,GAAAvB,EAKA,IACA0B,EAAAH,GADAF,EAAAC,IAHAE,KAGAF,EAAAE,EAAA,GAAAF,EAAAE,IACAxB,EAEA2B,EAAAlB,EAAAiB,EAAAZ,EAAAE,GACA,OAAAW,GAnHA,KAqCA,SAAAN,EAAAO,EAAAd,EAAAE,GACA,QAAAtT,EAAA,EAAuBA,EAAAkS,IAAuBlS,EAAA,CAC9C,IAAAmU,EAAApB,EAAAmB,EAAAd,EAAAE,GACA,OAAAa,EAAA,OAAAD,EAEAA,IADArB,EAAAqB,EAAAd,EAAAE,GAAAK,GACAQ,EAEA,OAAAD,EAwEAE,CAAAT,EAAAK,EAAAZ,EAAAE,GACa,IAAAW,EACbD,EA/FA,SAAAL,EAAAU,EAAAC,EAAAlB,EAAAE,GACA,IAAAiB,EAAAC,EAAAxU,EAAA,EACA,IAEAuU,EAAA1B,EADA2B,EAAAH,GAAAC,EAAAD,GAAA,EACAjB,EAAAE,GAAAK,GACA,EACAW,EAAAE,EAEAH,EAAAG,QAESxV,KAAAQ,IAAA+U,GAAApC,KAAAnS,EAAAoS,GACT,OAAAoC,EAsFAC,CAAAd,EAAAE,IAAAvB,EAAAc,EAAAE,KAKA5B,EAzJA,GAoLA,SAAAgD,gBAAAC,EAAAC,GACA,IAAA5U,EAAA6U,EAAA3U,EAAAyU,EAAAxU,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAAQF,GAAA,EAEvB,QAAA8U,KADAD,EAAAF,EAAA3U,GAAAsE,UAEAuQ,EAAAE,eAAAD,KAAAF,EAAAtQ,UAAAwQ,GAAAD,EAAAC,IAKA,SAAAE,cAAAC,EAAAlP,GACA,OAAAvM,OAAA0b,yBAAAD,EAAAlP,GAGA,SAAAoP,oBAAA7Q,GACA,SAAA8Q,KAEA,OADAA,EAAA9Q,YACA8Q,EAEA,SAAAC,cAGArW,KAEA,SAAAsW,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAN,EAAAG,EAAAF,EAAAG,EAAAF,EAAAG,EAAAD,EAAAD,EAAAE,EAAAL,EAAAE,EAAAD,EACA,OAAAK,GAAA,MAAAA,EAAA,KAyBA,IAAAC,EAEA,SAAAnI,EAAAC,EAAAC,EAAAkI,GACA,IACAvM,EACAxJ,EAAAE,EACA8V,EAAAC,EACAC,EAJAC,EAAA3V,qBAGA4V,EAAA,EAEAC,KAAAC,KACAC,EAAAC,mBAAAC,aAEA,IADAvW,EAAA2N,EAAA1N,OACAqJ,EAAA,EAAoBA,EAAA2M,EAAgB3M,GAAA,GAGpC,IAFAyM,EAAAzM,GAAA2M,EAAA,GACAD,EAAA,EACAlW,EAAA,EAAwBA,EAAAE,EAAMF,GAAA,EAC9BgW,EAAA7W,OAAA,EAAA8W,EAAA,GAAAtI,EAAA3N,GAAA,EAAAb,OAAA,EAAA8W,EAAA,GAAAA,EAAApI,EAAA7N,GAAA,KAAAiW,GAAA9W,OAAA8W,EAAA,GAAAF,EAAA/V,GAAAb,OAAA8W,EAAA,GAAArI,EAAA5N,GACAqW,EAAArW,GAAAgW,EACA,OAAAM,EAAAtW,KACAkW,GAAA/W,OAAAkX,EAAArW,GAAAsW,EAAAtW,GAAA,IAEAsW,EAAAtW,GAAAqW,EAAArW,GAEAkW,IAEAE,GADAF,EAAA7W,QAAA6W,IAGAK,EAAAG,SAAAlN,GAAAyM,EACAM,EAAAI,QAAAnN,GAAA4M,EAGA,OADAG,EAAAH,cACAG,GA8BA,SAAAK,EAAAC,EAAAR,GACAnc,KAAA4c,cAAAD,EACA3c,KAAAmc,QAGA,IAEAU,EAFAC,GAEAD,KAEA,SAAApJ,EAAAC,EAAAC,EAAAkI,GACA,IAAAkB,GAAAtJ,EAAA,OAAAA,EAAA,OAAAC,EAAA,OAAAA,EAAA,OAAAC,EAAA,OAAAA,EAAA,OAAAkI,EAAA,OAAAA,EAAA,IAAAjE,QAAA,WACA,IAAAiF,EAAAE,GAAA,CACA,IACAzN,EAAAxJ,EAAAE,EACA8V,EAAAC,EACAC,EACAG,EAJAF,EAAA3V,qBAEA4V,EAAA,EAEAE,EAAA,KACA,IAAA3I,EAAAxN,SAAAwN,EAAA,IAAAC,EAAA,IAAAD,EAAA,IAAAC,EAAA,KAAA0H,EAAA3H,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAAAE,EAAA,GAAAF,EAAA,GAAAE,EAAA,KAAAyH,EAAA3H,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAmI,EAAA,GAAAnI,EAAA,GAAAmI,EAAA,MACAI,EAAA,GAEA,IAAAe,EAAA,IAzBA,SAAA/W,GACAjG,KAAAid,cAAA,EACAjd,KAAA8Y,OAAA,IAAA1N,MAAAnF,GAuBA,CAAAgW,GAEA,IADAjW,EAAA2N,EAAA1N,OACAqJ,EAAA,EAA2BA,EAAA2M,EAAmB3M,GAAA,GAI9C,IAHA6M,EAAA9V,iBAAAL,GACA+V,EAAAzM,GAAA2M,EAAA,GACAD,EAAA,EACAlW,EAAA,EAA+BA,EAAAE,EAASF,GAAA,EACxCgW,EAAA7W,OAAA,EAAA8W,EAAA,GAAAtI,EAAA3N,GAAA,EAAAb,OAAA,EAAA8W,EAAA,GAAAA,GAAAtI,EAAA3N,GAAA6N,EAAA7N,IAAA,KAAAiW,GAAA9W,OAAA8W,EAAA,IAAArI,EAAA5N,GAAA+V,EAAA/V,IAAAb,OAAA8W,EAAA,GAAArI,EAAA5N,GACAqW,EAAArW,GAAAgW,EACA,OAAAM,IACAJ,GAAA/W,OAAAkX,EAAArW,GAAAsW,EAAAtW,GAAA,IAIAoW,GADAF,EAAA7W,QAAA6W,GAEAgB,EAAAlE,OAAAxJ,GAAA,IAAAoN,EAAAV,EAAAG,GACAC,EAAAD,EAEAa,EAAAC,cAAAf,EACAW,EAAAE,GAAAC,EAEA,OAAAH,EAAAE,KAIA,SAAAG,EAAAnB,EAAAiB,GACA,IAAAR,EAAAQ,EAAAR,SACAC,EAAAO,EAAAP,QACAzW,EAAAwW,EAAAvW,OACAkX,EAAA5X,UAAAS,EAAA,GAAA+V,GACAqB,EAAArB,EAAAiB,EAAAd,YACAmB,EAAA,EACA,GAAAF,IAAAnX,EAAA,OAAAmX,GAAAC,IAAAX,EAAAU,GACA,OAAAX,EAAAW,GAIA,IAFA,IAAAG,EAAAb,EAAAU,GAAAC,GAAA,IACAzW,GAAA,EACAA,GAOA,GANA8V,EAAAU,IAAAC,GAAAX,EAAAU,EAAA,GAAAC,GACAC,GAAAD,EAAAX,EAAAU,KAAAV,EAAAU,EAAA,GAAAV,EAAAU,IACAxW,GAAA,GAEAwW,GAAAG,EAEAH,EAAA,GAAAA,GAAAnX,EAAA,GAEA,GAAAmX,IAAAnX,EAAA,EACA,OAAAwW,EAAAW,GAEAxW,GAAA,EAGA,OAAA6V,EAAAW,IAAAX,EAAAW,EAAA,GAAAX,EAAAW,IAAAE,EAiBA,IAAAE,EAAAxS,iBAAA,aAwCA,OACAyS,kBA5JA,SAAAC,GACA,IAKA3X,EALA4X,EAAAC,qBAAApB,aACAqB,EAAAH,EAAAtO,EACA0O,EAAAJ,EAAA1U,EACA+U,EAAAL,EAAA/N,EACAqO,EAAAN,EAAA3X,EACAE,EAAAyX,EAAAO,QACAvB,EAAAiB,EAAAjB,QACAwB,EAAA,EACA,IAAAnY,EAAA,EAAgBA,EAAAE,EAAA,EAAQF,GAAA,EACxB2W,EAAA3W,GAAA8V,EAAAiC,EAAA/X,GAAA+X,EAAA/X,EAAA,GAAAgY,EAAAhY,GAAAiY,EAAAjY,EAAA,IACAmY,GAAAxB,EAAA3W,GAAAoW,YAOA,OALA0B,GAAA5X,IACAyW,EAAA3W,GAAA8V,EAAAiC,EAAA/X,GAAA+X,EAAA,GAAAC,EAAAhY,GAAAiY,EAAA,IACAE,GAAAxB,EAAA3W,GAAAoW,aAEAwB,EAAAO,cACAP,GA2IAQ,cAxCA,SAAAzK,EAAAC,EAAAC,EAAAkI,EAAAsC,EAAAC,EAAApB,GAGA,IAGAlX,EAHAuY,EAAAnB,EADAiB,IAAA,IAAAA,EAAA,IAAAA,EACAnB,GAEAsB,EAAApB,EADAkB,IAAA,IAAAA,EACApB,GACAhX,EAAAyN,EAAAxN,OACAsY,EAAA,EAAAF,EACAG,EAAA,EAAAF,EACAG,EAAAF,MACAG,EAAAL,EAAAE,IAAA,EACAI,EAAAN,IAAAE,EAAA,EACAK,EAAAP,MAEAQ,EAAAN,IAAAC,EACAM,EAAAT,EAAAE,EAAAC,EAAAD,EAAAF,EAAAG,EAAAD,IAAAD,EACAS,EAAAV,IAAAG,EAAAD,EAAAF,EAAAC,EAAAD,EAAAE,EAAAD,EACAU,EAAAX,IAAAC,EAEAW,EAAAV,EAAAC,IACAU,EAAAb,EAAAG,IAAAD,EAAAD,EAAAE,EAAAD,EAAAC,EAAAF,EACAa,EAAAd,EAAAC,EAAAE,EAAAD,EAAAD,IAAAD,EAAAG,EAAAF,EACAc,EAAAf,EAAAC,IAEAe,EAAAb,MACAc,EAAAhB,EAAAE,MAAAF,EAAAE,MAAAF,EACAiB,EAAAjB,IAAAE,IAAAF,MAAAE,EAAAF,EACAkB,EAAAlB,MACA,IAAAxY,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByX,EAAA,EAAAzX,GAAAhB,KAAAC,MAAA,KAAA0Z,EAAAhL,EAAA3N,GAAA4Y,EAAA/K,EAAA7N,GAAA6Y,EAAA9C,EAAA/V,GAAA8Y,EAAAlL,EAAA5N,KAAA,IACAyX,EAAA,EAAAzX,EAAA,GAAAhB,KAAAC,MAAA,KAAA8Z,EAAApL,EAAA3N,GAAAgZ,EAAAnL,EAAA7N,GAAAiZ,EAAAlD,EAAA/V,GAAAkZ,EAAAtL,EAAA5N,KAAA,IACAyX,EAAA,EAAAzX,EAAA,GAAAhB,KAAAC,MAAA,KAAAka,EAAAxL,EAAA3N,GAAAoZ,EAAAvL,EAAA7N,GAAAqZ,EAAAtD,EAAA/V,GAAAsZ,EAAA1L,EAAA5N,KAAA,IACAyX,EAAA,EAAAzX,EAAA,GAAAhB,KAAAC,MAAA,KAAAsa,EAAA5L,EAAA3N,GAAAwZ,EAAA3L,EAAA7N,GAAAyZ,EAAA1D,EAAA/V,GAAA0Z,EAAA9L,EAAA5N,KAAA,IAGA,OAAAyX,GAMAkC,kBAxDA,SAAAhM,EAAAC,EAAAC,EAAAkI,EAAA6D,EAAA1C,GACA,IAAAsB,EAAApB,EAAAwC,EAAA1C,GAEAwB,EAAA,EAAAF,EAGA,OAFAxZ,KAAAC,MAAA,KAAAyZ,MAAA/K,EAAA,IAAA6K,EAAAE,MAAAF,EAAAE,MAAAF,GAAA3K,EAAA,IAAA2K,IAAAE,IAAAF,MAAAE,EAAAF,GAAAzC,EAAA,GAAAyC,MAAA5K,EAAA,SACA5O,KAAAC,MAAA,KAAAyZ,MAAA/K,EAAA,IAAA6K,EAAAE,MAAAF,EAAAE,MAAAF,GAAA3K,EAAA,IAAA2K,IAAAE,IAAAF,MAAAE,EAAAF,GAAAzC,EAAA,GAAAyC,MAAA5K,EAAA,WAoDAoJ,kBACA1B,gBACAuE,cAzNA,SAAAtE,EAAAC,EAAAsE,EAAArE,EAAAC,EAAAqE,EAAApE,EAAAC,EAAAoE,GACA,OAAAF,GAAA,IAAAC,GAAA,IAAAC,EACA,OAAA1E,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAGAqE,EAHAC,EAAAlb,KAAAM,KAAAN,KAAAI,IAAAqW,EAAAF,EAAA,GAAAvW,KAAAI,IAAAsW,EAAAF,EAAA,GAAAxW,KAAAI,IAAA2a,EAAAD,EAAA,IACAK,EAAAnb,KAAAM,KAAAN,KAAAI,IAAAuW,EAAAJ,EAAA,GAAAvW,KAAAI,IAAAwW,EAAAJ,EAAA,GAAAxW,KAAAI,IAAA4a,EAAAF,EAAA,IACAM,EAAApb,KAAAM,KAAAN,KAAAI,IAAAuW,EAAAF,EAAA,GAAAzW,KAAAI,IAAAwW,EAAAF,EAAA,GAAA1W,KAAAI,IAAA4a,EAAAD,EAAA,IAaA,OATAE,EAFAC,EAAAC,EACAD,EAAAE,EACAF,EAAAC,EAAAC,EAEAA,EAAAD,EAAAD,EAESE,EAAAD,EACTC,EAAAD,EAAAD,EAEAC,EAAAD,EAAAE,IAEA,MAAAH,EAAA,QAxEA,WAGA,IAFA,IAAAI,EAAA,EACAC,GAAA,yBACA3N,EAAA,EAAkBA,EAAA2N,EAAAna,SAAA9B,OAAAkc,wBAAqD5N,EACvEtO,OAAAkc,sBAAAlc,OAAAic,EAAA3N,GAAA,yBACAtO,OAAAmc,qBAAAnc,OAAAic,EAAA3N,GAAA,yBAAAtO,OAAAic,EAAA3N,GAAA,+BAEAtO,OAAAkc,wBACAlc,OAAAkc,sBAAA,SAAA3V,EAAA7D,GACA,IAAA0Z,GAAA,IAAA9J,MAAA+J,UACAC,EAAA3b,KAAAzB,IAAA,MAAAkd,EAAAJ,IACAO,EAAAC,WAAA,WACAjW,EAAA6V,EAAAE,IAEAA,GAEA,OADAN,EAAAI,EAAAE,EACAC,IAEAvc,OAAAmc,uBACAnc,OAAAmc,qBAAA,SAAAI,GACAE,aAAAF,KApBA,GAkRA,IAAAG,IAAA1F,cACA,SAAA2F,sBAIA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAEArb,EACAuJ,EAAA+R,EAAA9R,EAAA+R,EADArb,EAAAgb,EAAA/a,OAEA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EAEtB,UADAqb,EAAAH,EAAAlb,MACAqb,EAAAG,UAAA,CASA,GANAH,EAAAG,WAAA,EACAH,EAAAI,KACAP,EAAAlb,EAAA,GAAA0b,GAAAL,EAAAI,QAGA,EACAJ,EAAAM,QAAA,CACA,IAAAC,EAAAP,EAAAQ,gBAEA,IADAP,EAAAM,EAAAzb,OACAoJ,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/B,GAAAqS,EAAArS,GAAA8D,GAAA7D,EAAAxJ,EACA8b,EAAAF,EAAArS,GAAA8D,GAAA7D,QAGA,IADA+R,EAAAK,EAAArS,GAAA8D,GAAA7D,EAAArJ,OACAqJ,EAAA,EAAgCA,EAAA+R,EAAO/R,GAAA,EACvCoS,EAAArS,GAAA8D,GAAA7D,KAAAxG,GACA8Y,EAAAF,EAAArS,GAAA8D,GAAA7D,KAAAxG,EAAA,IAEA4Y,EAAArS,GAAA8D,GAAA7D,KAAAF,GACAwS,EAAAF,EAAArS,GAAA8D,GAAA7D,KAAAF,EAAA,IAMA,IAAA+R,EAAAtR,IACAsR,EAAAH,OAAAa,EAAAV,EAAAW,MAAAb,GACAF,EAAAI,EAAAH,OAAAC,EAAAC,IACa,IAAAC,EAAAtR,GACbkS,EAAAZ,EAAAa,QACa,GAAAb,EAAAtR,IACboS,EAAAd,EAAAD,IAKA,SAAAW,EAAAnB,EAAAO,GAEA,IADA,IAAAnb,EAAA,EAAAE,EAAAib,EAAAhb,OACAH,EAAAE,GAAA,CACA,GAAAib,EAAAnb,GAAA4a,OACA,OAAAO,EAAAnb,GAAAkb,OAAAkB,OAIAC,KAAAC,MAAAD,KAAAE,UAAApB,EAAAnb,GAAAkb,UAHAC,EAAAnb,GAAAkb,OAAAkB,QAAA,EACAjB,EAAAnb,GAAAkb,QAIAlb,GAAA,GAIA,SAAAic,EAAA5W,GACA,IAAArF,EACAuJ,EAAA+R,EAEA,IAAAtb,EAHAqF,EAAAlF,OAGA,EAAoBH,GAAA,EAAKA,GAAA,EACzB,SAAAqF,EAAArF,GAAA+J,GAAA,CACA,GAAA1E,EAAArF,GAAAwc,GAAAhT,EAAAxJ,EACA8b,EAAAzW,EAAArF,GAAAwc,GAAAhT,QAGA,IADA8R,EAAAjW,EAAArF,GAAAwc,GAAAhT,EAAArJ,OACAoJ,EAAA,EAA4BA,EAAA+R,EAAO/R,GAAA,EACnClE,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAvG,GACA8Y,EAAAzW,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAvG,EAAA,IAEAqC,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAD,GACAwS,EAAAzW,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAD,EAAA,KAIA,MACa,MAAAjE,EAAArF,GAAA+J,IACbkS,EAAA5W,EAAArF,GAAAyc,IAiBA,SAAAX,EAAAY,GACA,IAAA1c,EAAAE,EAAAwc,EAAA1c,EAAAG,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB0c,EAAA1c,KAAA,IAAA0c,EAAAzZ,EAAAjD,GAAA,GACA0c,EAAA1c,KAAA,IAAA0c,EAAAzZ,EAAAjD,GAAA,GACA0c,EAAA9S,EAAA5J,GAAA,IAAA0c,EAAAzZ,EAAAjD,GAAA,GACA0c,EAAA9S,EAAA5J,GAAA,IAAA0c,EAAAzZ,EAAAjD,GAAA,GAIA,SAAA2c,EAAAC,EAAAC,GACA,IAAAC,EAAAD,IAAAE,MAAA,mBACA,OAAAH,EAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,MAGTA,EAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,MAGTA,EAAA,GAAAE,EAAA,MAESA,EAAA,GAAAF,EAAA,cAKT,IAyCAI,EAzCAC,EAAA,WACA,IAAAD,GAAA,QAcA,SAAAE,EAAAhC,GACA,IAAAlb,EAbAmd,EACAC,EAYAld,EAAAgb,EAAA/a,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B,IAAAkb,EAAAlb,GAAA+J,KAfAoT,EAgBAjC,EAAAlb,QAfAod,IAAAD,EAAA3Z,EAAAE,EACAyZ,EAAA3Z,EAAAE,GACA8F,IAEAxG,EAAAoa,EACA5Z,EAAA,MAeA,gBAAA3I,GACA,GAAA8hB,EAAAK,EAAAniB,EAAAoI,KACAia,EAAAriB,EAAAqgB,QACArgB,EAAAwiB,QAAA,CACA,IAAArd,EAAAE,EAAArF,EAAAwiB,OAAAld,OACA,IAAAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCnF,EAAAwiB,OAAArd,GAAAkb,QACAgC,EAAAriB,EAAAwiB,OAAArd,GAAAkb,UA/BA,GAwCAoC,GACAN,GAAA,QACA,SAAAniB,GACA,GAAAA,EAAA0iB,QAAAZ,EAAAK,EAAAniB,EAAAoI,GAAA,CACA,IAAAjD,EAAAuJ,EAAA+R,EACAkC,EAAAC,EADAvd,EAAArF,EAAA0iB,MAAApd,OAEA,IAAAH,EAAA,EAA0BA,EAAAE,EAASF,GAAA,EACnC,GAAAnF,EAAA0iB,MAAAvd,GAAAnG,MAAAgB,EAAA0iB,MAAAvd,GAAAnG,KAAAqiB,OAIA,IAFAZ,GADAmC,EAAA5iB,EAAA0iB,MAAAvd,GAAAnG,KAAAqiB,OAAA,GAAAO,IACAtc,OAEAoJ,EAAA,EAAkCA,EAAA+R,EAAU/R,GAAA,GAC5CiU,EAAAC,EAAAlU,GAAAiT,GAAAhT,GACAkU,cACA5B,EAAA2B,EAAAlU,GAAAiT,GAAAhT,GACAgU,EAAAE,aAAA,MASAC,EAAA,WACA,IAAAX,GAAA,OAEA,SAAAY,EAAA1B,GACA,IAAAlc,EACAuJ,EAAA+R,EADApb,EAAAgc,EAAA/b,OAEA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B,UAAAkc,EAAAlc,GAAA+J,GACA6T,EAAA1B,EAAAlc,GAAAyc,SACiB,UAAAP,EAAAlc,GAAA+J,IAAA,OAAAmS,EAAAlc,GAAA+J,GACjB,GAAAmS,EAAAlc,GAAAqJ,EAAAG,GAAA0S,EAAAlc,GAAAqJ,EAAAG,EAAA,GAAAxJ,EAEA,IADAsb,EAAAY,EAAAlc,GAAAqJ,EAAAG,EAAArJ,OACAoJ,EAAA,EAAgCA,EAAA+R,EAAO/R,GAAA,EACvC2S,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAvG,IACAkZ,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAvG,EAAA,QACAkZ,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAvG,EAAA,QACAkZ,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAvG,EAAA,QACAkZ,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAvG,EAAA,SAEAkZ,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAD,IACA4S,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAD,EAAA,QACA4S,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAD,EAAA,QACA4S,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAD,EAAA,QACA4S,EAAAlc,GAAAqJ,EAAAG,EAAAD,GAAAD,EAAA,cAIA4S,EAAAlc,GAAAqJ,EAAAG,EAAA,QACA0S,EAAAlc,GAAAqJ,EAAAG,EAAA,QACA0S,EAAAlc,GAAAqJ,EAAAG,EAAA,QACA0S,EAAAlc,GAAAqJ,EAAAG,EAAA,QAMA,SAAA0T,EAAAhC,GACA,IAAAlb,EAAAE,EAAAgb,EAAA/a,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B,IAAAkb,EAAAlb,GAAA+J,IACA6T,EAAA1C,EAAAlb,GAAAkc,QAKA,gBAAArhB,GACA,GAAA8hB,EAAAK,EAAAniB,EAAAoI,KACAia,EAAAriB,EAAAqgB,QACArgB,EAAAwiB,QAAA,CACA,IAAArd,EAAAE,EAAArF,EAAAwiB,OAAAld,OACA,IAAAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCnF,EAAAwiB,OAAArd,GAAAkb,QACAgC,EAAAriB,EAAAwiB,OAAArd,GAAAkb,UApDA,GA6DA2C,EAAA,WACA,IAAAb,GAAA,QAIA,SAAAf,EAAA5W,GACA,IAAArF,EACAuJ,EAAA+R,EAEA,IAAAtb,EAHAqF,EAAAlF,OAGA,EAAwBH,GAAA,EAAKA,GAAA,EAC7B,SAAAqF,EAAArF,GAAA+J,GAAA,CACA,GAAA1E,EAAArF,GAAAwc,GAAAhT,EAAAxJ,EACAqF,EAAArF,GAAAwc,GAAAhT,EAAAH,EAAAhE,EAAArF,GAAA8X,YAGA,IADAwD,EAAAjW,EAAArF,GAAAwc,GAAAhT,EAAArJ,OACAoJ,EAAA,EAAgCA,EAAA+R,EAAO/R,GAAA,EACvClE,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAvG,IACAqC,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAvG,EAAA,GAAAqG,EAAAhE,EAAArF,GAAA8X,QAEAzS,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAD,IACAjE,EAAArF,GAAAwc,GAAAhT,EAAAD,GAAAD,EAAA,GAAAD,EAAAhE,EAAArF,GAAA8X,SAIA,MACiB,MAAAzS,EAAArF,GAAA+J,IACjBkS,EAAA5W,EAAArF,GAAAyc,IAKA,SAAAS,EAAAhC,GACA,IAAAG,EACArb,EACAuJ,EAAA+R,EAAA9R,EAAA+R,EADArb,EAAAgb,EAAA/a,OAEA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,GAE1B,IADAqb,EAAAH,EAAAlb,IACA2b,QAAA,CACA,IAAAC,EAAAP,EAAAQ,gBAEA,IADAP,EAAAM,EAAAzb,OACAoJ,EAAA,EAA4BA,EAAA+R,EAAO/R,GAAA,EACnC,GAAAqS,EAAArS,GAAA8D,GAAA7D,EAAAxJ,EACA4b,EAAArS,GAAA8D,GAAA7D,EAAAH,EAAAuS,EAAArS,GAAAuU,QAGA,IADAvC,EAAAK,EAAArS,GAAA8D,GAAA7D,EAAArJ,OACAqJ,EAAA,EAAoCA,EAAA+R,EAAO/R,GAAA,EAC3CoS,EAAArS,GAAA8D,GAAA7D,KAAAxG,IACA4Y,EAAArS,GAAA8D,GAAA7D,KAAAxG,EAAA,GAAAqG,EAAAuS,EAAArS,GAAAuU,IAEAlC,EAAArS,GAAA8D,GAAA7D,KAAAF,IACAsS,EAAArS,GAAA8D,GAAA7D,KAAAF,EAAA,GAAAD,EAAAuS,EAAArS,GAAAuU,IAMA,IAAAzC,EAAAtR,IACAkS,EAAAZ,EAAAa,SAKA,gBAAArhB,GACA,GAAA8hB,EAAAK,EAAAniB,EAAAoI,KACAia,EAAAriB,EAAAqgB,QACArgB,EAAAwiB,QAAA,CACA,IAAArd,EAAAE,EAAArF,EAAAwiB,OAAAld,OACA,IAAAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCnF,EAAAwiB,OAAArd,GAAAkb,QACAgC,EAAAriB,EAAAwiB,OAAArd,GAAAkb,UArEA,GA2FA,SAAAiB,EAAAtiB,EAAAuhB,GACA,IAAAvhB,EAAA2J,EAAAnJ,EAAA8F,QAAA,MAAAtG,EAAA2J,EAAAF,IACAzJ,EAAAkkB,aAAA,GAIA,IAAAC,GACAC,aApBA,SAAApjB,EAAAugB,GACAvgB,EAAAqjB,aAGAP,EAAA9iB,GACAoiB,EAAApiB,GACAyiB,EAAAziB,GACAgjB,EAAAhjB,GACAogB,EAAApgB,EAAAqgB,OAAArgB,EAAAwiB,OAAAjC,GACAvgB,EAAAqjB,YAAA,KAiBA,OALAF,EAAAL,cACAK,EAAAV,aACAU,EAAAH,cACAG,EAAA/C,iBAEA+C,EAGA,IAAAG,YAAAnD,sBAEAoD,YAAA,WAEA,IAAAC,EAAA,IACAC,GACAC,EAAA,EACAC,KAAA,EACAtC,WAEAuC,KAMA,SAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAlZ,UAAA,QACAkZ,EAAA/kB,MAAAglB,WAAAF,EACA,IAAAG,EAAApZ,UAAA,QAEAoZ,EAAAC,UAAA,iBAEAH,EAAA/kB,MAAAkH,SAAA,WACA6d,EAAA/kB,MAAAoH,KAAA,WACA2d,EAAA/kB,MAAAmH,IAAA,WAEA4d,EAAA/kB,MAAAmlB,SAAA,QAEAJ,EAAA/kB,MAAAolB,YAAA,SACAL,EAAA/kB,MAAAqlB,UAAA,SACAN,EAAA/kB,MAAAslB,WAAA,SACAP,EAAA/kB,MAAAulB,cAAA,IACAR,EAAAS,YAAAP,GACAtZ,SAAA8Z,KAAAD,YAAAT,GAGA,IAAAjlB,EAAAmlB,EAAAS,YAEA,OADAT,EAAAjlB,MAAAglB,WAAAH,EAAA,KAAAC,GACgBG,OAAAR,EAAA3kB,EAAA6lB,OAAAZ,GA2ChB,SAAAa,EAAAC,EAAAC,GACA,IAAAC,EAAAra,SAAA,QAiBA,OAhBAqa,EAAA/lB,MAAAmlB,SAAA,QAEAY,EAAAC,aAAA,cAAAF,EAAAG,SACAF,EAAAC,aAAA,aAAAF,EAAAI,QACAH,EAAAC,aAAA,cAAAF,EAAAK,SACAJ,EAAAK,YAAA,IACAN,EAAAO,QACAN,EAAA/lB,MAAAglB,WAAA,UACAe,EAAAC,aAAA,QAAAF,EAAAO,SAEAN,EAAA/lB,MAAAglB,WAAAc,EAAAG,QAEAJ,EAAAL,YAAAO,GACAla,UAAA,UAAAya,WAAA,MACAzB,KAAAiB,EAAAK,QAAA,IAAAL,EAAAI,OAAA,UAAAJ,EAAAG,QAEAF,EAxFApB,IAAA4B,QAAA,6CACA,iEACA,yDAuQA,IAAAC,EAAA,WACApmB,KAAAqmB,SACArmB,KAAAqjB,MAAA,KACArjB,KAAAsmB,cAAA,EACAtmB,KAAAumB,UAAA,EACAvmB,KAAAwmB,SAAA/P,KAAAgQ,OAaA,OAVAL,EAAAM,0BAhBA,WACA,OAAAnC,GAiBA6B,EAAAhc,UAAAuc,SA5FA,SAAAtD,GACA,GAAAA,EAAA,CAGArjB,KAAAqjB,QACArjB,KAAAqjB,UAEA,IAAAvd,EACAuJ,EAAAuX,EADA5gB,EAAAqd,EAAApd,OACAmb,EAAAphB,KAAAqjB,MAAApd,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,GAGtB,IAFAuJ,EAAA,EACAuX,GAAA,EACAvX,EAAA+R,GACAphB,KAAAqjB,MAAAhU,GAAAzP,QAAAyjB,EAAAvd,GAAAlG,OAAAI,KAAAqjB,MAAAhU,GAAAwW,UAAAxC,EAAAvd,GAAA+f,SAAA7lB,KAAAqjB,MAAAhU,GAAAwX,KAAAxD,EAAAvd,GAAA+gB,KACAD,GAAA,GAEAvX,GAAA,EAEAuX,IACA5mB,KAAAqjB,MAAA1Y,KAAA0Y,EAAAvd,IACAsb,GAAA,MAyEAgF,EAAAhc,UAAA0c,SAzLA,SAAApB,EAAAqB,GACA,GAAArB,EAAA,CAIA,GAAA1lB,KAAAqjB,MAGA,OAFArjB,KAAAumB,UAAA,OACAvmB,KAAAqmB,MAAAX,EAAAsB,MAKA,IACAlhB,EADAmhB,EAAAvB,EAAAsB,KACAhhB,EAAAihB,EAAAhhB,OACAihB,EAAAlhB,EACA,IAAAF,EAAA,EAAgBA,EAAAE,EAAOF,GAAA,GACvB,IACAqhB,EACA9X,EAFA+X,GAAA,EAMA,GAHAH,EAAAnhB,GAAAuhB,QAAA,EACAJ,EAAAnhB,GAAAwhB,SAAA9C,EAAAyC,EAAAnhB,GAAA+f,QAAA,aACAoB,EAAAnhB,GAAAyhB,SAAA/C,EAAAyC,EAAAnhB,GAAA+f,QAAA,cACAoB,EAAAnhB,GAAA0hB,OAGa,SAAAP,EAAAnhB,GAAA2hB,SAAA,IAAAR,EAAAnhB,GAAA4hB,QAOb,IANAP,EAAA5b,SAAAoc,iBAAA,kCAAAV,EAAAnhB,GAAA+f,QAAA,qCAAAoB,EAAAnhB,GAAA+f,QAAA,OAEA5f,OAAA,IACAmhB,GAAA,GAGAA,EAAA,CACA,IAAAte,EAAA2C,UAAA,SACA3C,EAAA8c,aAAA,YAAAqB,EAAAnhB,GAAA2hB,SACA3e,EAAA8c,aAAA,WAAAqB,EAAAnhB,GAAA4hB,QACA5e,EAAA8c,aAAA,WAAAqB,EAAAnhB,GAAA+f,SACA/c,EAAAzJ,KAAA,WACAyJ,EAAAgc,UAAA,4BAA+CmC,EAAAnhB,GAAA+f,QAAA,mCAA6DoB,EAAAnhB,GAAA0hB,MAAA,OAC5GT,EAAA3B,YAAAtc,SAEa,SAAAme,EAAAnhB,GAAA2hB,SAAA,IAAAR,EAAAnhB,GAAA4hB,OAAA,CAGb,IAFAP,EAAA5b,SAAAoc,iBAAA,2CAEAtY,EAAA,EAA2BA,EAAA8X,EAAAlhB,OAA2BoJ,KACtD,IAAA8X,EAAA9X,GAAAuY,KAAA7b,QAAAkb,EAAAnhB,GAAA0hB,SAEAJ,GAAA,GAIA,GAAAA,EAAA,CACA,IAAA7X,EAAA9D,UAAA,QACA8D,EAAAqW,aAAA,YAAAqB,EAAAnhB,GAAA2hB,SACAlY,EAAAqW,aAAA,WAAAqB,EAAAnhB,GAAA4hB,QACAnY,EAAAlQ,KAAA,WACAkQ,EAAAsY,IAAA,aACAtY,EAAAqY,KAAAX,EAAAnhB,GAAA0hB,MACAjc,SAAA8Z,KAAAD,YAAA7V,SAEa,SAAA0X,EAAAnhB,GAAA2hB,SAAA,IAAAR,EAAAnhB,GAAA4hB,OAAA,CAGb,IAFAP,EAAA5b,SAAAoc,iBAAA,+CAEAtY,EAAA,EAA2BA,EAAA8X,EAAAlhB,OAA2BoJ,IACtD4X,EAAAnhB,GAAA0hB,QAAAL,EAAA9X,GAAAyY,MAEAV,GAAA,GAIA,GAAAA,EAAA,CACA,IAAAW,EAAAtc,UAAA,QACAsc,EAAAnC,aAAA,YAAAqB,EAAAnhB,GAAA2hB,SACAM,EAAAnC,aAAA,WAAAqB,EAAAnhB,GAAA4hB,QACAK,EAAAnC,aAAA,oBACAmC,EAAAnC,aAAA,OAAAqB,EAAAnhB,GAAA0hB,OACAT,EAAA3B,YAAA2C,UArDAd,EAAAnhB,GAAAuhB,QAAA,EACAH,GAAA,EAuDAD,EAAAnhB,GAAAkiB,OAAAxC,EAAAuB,EAAAE,EAAAnhB,IACAmhB,EAAAnhB,GAAAmiB,SACAjoB,KAAAqmB,MAAA1b,KAAAsc,EAAAnhB,IAEA,IAAAohB,EACAlnB,KAAAumB,UAAA,EAIA5F,WAAA3gB,KAAAkoB,iBAAArd,KAAA7K,MAAA,UAtFAA,KAAAumB,UAAA,GAwLAH,EAAAhc,UAAA+d,YArEA,SAAAC,EAAAxoB,EAAA6kB,GAEA,IADA,IAAA3e,EAAA,EAAAE,EAAAhG,KAAAqjB,MAAApd,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAqjB,MAAAvd,GAAA+gB,KAAAuB,GAAApoB,KAAAqjB,MAAAvd,GAAAlG,WAAAI,KAAAqjB,MAAAvd,GAAA+f,UAAApB,EAEA,OAAAzkB,KAAAqjB,MAAAvd,GAEAA,GAAA,EAKA,OAHA,iBAAAsiB,GAAA,KAAAA,EAAA7S,WAAA,KAAA6S,IAAAC,iBAAAC,MACAD,QAAAC,KAAA,oDAAAF,EAAAxoB,EAAA6kB,GAEAL,GA0DAgC,EAAAhc,UAAAme,cAhCA,SAAA7mB,GAEA,IADA,IAAAoE,EAAA,EAAAE,EAAAhG,KAAAqmB,MAAApgB,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAqmB,MAAAvgB,GAAA0iB,QAAA9mB,EACA,OAAA1B,KAAAqmB,MAAAvgB,GAEAA,GAAA,EAEA,OAAA9F,KAAAqmB,MAAA,IAyBAD,EAAAhc,UAAAqe,YAxDA,SAAAL,EAAAM,EAAApE,GACA,IAAAoB,EAAA1lB,KAAAuoB,cAAAG,GACAC,EAAAP,EAAA7S,WAAA,GACA,IAAAmQ,EAAAuC,MAAAU,EAAA,IACA,IAAAhD,EAAAD,EAAAsC,OAKA,SAAAI,EAAA,CACAzC,EAAAK,YAAA,IAAAoC,EAAA,IACA,IAAAQ,EAAAjD,EAAAkD,wBACAlD,EAAAK,YAAA,KACA,IAAA8C,EAAAnD,EAAAkD,wBACAnD,EAAAuC,MAAAU,EAAA,IAAAC,EAAAE,GAAA,SAEAnD,EAAAK,YAAAoC,EACA1C,EAAAuC,MAAAU,EAAA,GAAAhD,EAAAkD,wBAAA,IAGA,OAAAnD,EAAAuC,MAAAU,EAAA,GAAArE,GAqCA8B,EAAAhc,UAAA8d,iBA1PA,WACA,IAAApiB,EACA+e,EAAAR,EADAre,EAAAhG,KAAAqmB,MAAApgB,OAEA8iB,EAAA/iB,EACA,IAAAF,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB9F,KAAAqmB,MAAAvgB,GAAAuhB,OACA0B,GAAA,EAGA,MAAA/oB,KAAAqmB,MAAAvgB,GAAA2hB,SAAA,IAAAznB,KAAAqmB,MAAAvgB,GAAA4hB,OACA1nB,KAAAqmB,MAAAvgB,GAAAuhB,QAAA,GAEAxC,EAAA7kB,KAAAqmB,MAAAvgB,GAAAwhB,SAAAzC,KACAR,EAAArkB,KAAAqmB,MAAAvgB,GAAAwhB,SAAAjD,EACAQ,EAAAS,cAAAjB,GACA0E,GAAA,EACA/oB,KAAAqmB,MAAAvgB,GAAAuhB,QAAA,IAEAxC,EAAA7kB,KAAAqmB,MAAAvgB,GAAAyhB,SAAA1C,KACAR,EAAArkB,KAAAqmB,MAAAvgB,GAAAyhB,SAAAlD,EACAQ,EAAAS,cAAAjB,IACA0E,GAAA,EACA/oB,KAAAqmB,MAAAvgB,GAAAuhB,QAAA,IAGArnB,KAAAqmB,MAAAvgB,GAAAuhB,SACArnB,KAAAqmB,MAAAvgB,GAAAyhB,SAAAhC,OAAAZ,WAAAqE,YAAAhpB,KAAAqmB,MAAAvgB,GAAAyhB,SAAAhC,QACAvlB,KAAAqmB,MAAAvgB,GAAAwhB,SAAA/B,OAAAZ,WAAAqE,YAAAhpB,KAAAqmB,MAAAvgB,GAAAwhB,SAAA/B,UAKA,IAAAwD,GAAAtS,KAAAgQ,MAAAzmB,KAAAwmB,SAAArC,EACAxD,WAAA3gB,KAAAkoB,iBAAArd,KAAA7K,MAAA,IAEA2gB,WAAA,WAAkC3gB,KAAAumB,UAAA,GAAsB1b,KAAA7K,MAAA,IAwNxDomB,EAAAhc,UAAAid,OApBA,WACA,OAAArnB,KAAAumB,UAqBAH,EArSA,GAwSA6C,gBAAA,WAEA,IAAAC,EAAA5kB,oBACA6kB,EAAArkB,KAAAQ,IAEA,SAAA8jB,EAAAC,EAAAC,GACA,IACAC,EADAC,EAAAxpB,KAAAwpB,WAEA,qBAAAxpB,KAAAypB,WACAF,EAAAxe,iBAAA,UAAA/K,KAAA0pB,GAAAzjB,SAOA,IALA,IAGA0jB,EAAAC,EAwBAta,EAAA+R,EAAAtF,EAAAqF,EAAA/R,EAAAwa,EA3BAC,EAAAR,EAAAS,UACAjkB,EAAAgkB,EACA9jB,EAAAhG,KAAAgqB,UAAA/jB,OAAA,EAAAU,GAAA,EAGAA,GAAA,CAGA,GAFAgjB,EAAA3pB,KAAAgqB,UAAAlkB,GACA8jB,EAAA5pB,KAAAgqB,UAAAlkB,EAAA,GACAA,IAAAE,EAAA,GAAAqjB,GAAAO,EAAAtgB,EAAAkgB,EAAA,CACAG,EAAA9gB,IACA8gB,EAAAC,GAEAE,EAAA,EACA,MAEA,GAAAF,EAAAtgB,EAAAkgB,EAAAH,EAAA,CACAS,EAAAhkB,EACA,MAEAA,EAAAE,EAAA,EACAF,GAAA,GAEAgkB,EAAA,EACAnjB,GAAA,GAKA,IAEAsjB,EAgKA/T,EAAAgU,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAzKAC,EAAAd,EAAAtgB,EAAAkgB,EACAmB,EAAAhB,EAAArgB,EAAAkgB,EAEA,GAAAG,EAAAiB,GAAA,CACAjB,EAAA3M,aACA2M,EAAA3M,WAAA6D,IAAA/D,gBAAA6M,EAAA7gB,EAAA8gB,EAAA9gB,GAAA6gB,EAAAva,EAAAua,EAAAiB,GAAAjB,EAAAkB,KAEA,IAAA7N,EAAA2M,EAAA3M,WACA,GAAAqM,GAAAqB,GAAArB,EAAAsB,EAAA,CACA,IAAAG,EAAAzB,GAAAqB,EAAA1N,EAAAlE,OAAA7S,OAAA,IAEA,IADAob,EAAArE,EAAAlE,OAAAgS,GAAA3O,MAAAlW,OACAqJ,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,EACrCia,EAAAja,GAAA0N,EAAAlE,OAAAgS,GAAA3O,MAAA7M,OAGa,CACbqa,EAAAoB,OACAlB,EAAAF,EAAAoB,QAEAlB,EAAAtS,cAAAE,gBAAAkS,EAAAja,EAAA+C,EAAAkX,EAAAja,EAAAgD,EAAAiX,EAAA7jB,EAAA2M,EAAAkX,EAAA7jB,EAAA4M,EAAAiX,EAAAla,GAAAwJ,IACA0Q,EAAAoB,OAAAlB,GAEA9N,EAAA8N,GAAAR,EAAAsB,IAAAD,EAAAC,IACA,IAEAK,EAFAC,EAAAjO,EAAAC,cAAAlB,EAGAG,EAAAoN,EAAA4B,UAAA7B,GAAAC,EAAA6B,qBAAArlB,EAAAwjB,EAAA8B,iBAAA,EAIA,IAHA/b,EAAAia,EAAA4B,UAAA7B,GAAAC,EAAA6B,qBAAArlB,EAAAwjB,EAAA+B,WAAA,EACA1kB,GAAA,EACAya,EAAApE,EAAAlE,OAAA7S,OACAU,GAAA,CAEA,GADAuV,GAAAc,EAAAlE,OAAAzJ,GAAAuN,cACA,IAAAqO,GAAA,IAAAlP,GAAA1M,IAAA2N,EAAAlE,OAAA7S,OAAA,GAEA,IADAob,EAAArE,EAAAlE,OAAAzJ,GAAA8M,MAAAlW,OACAqJ,EAAA,EAAmCA,EAAA+R,EAAU/R,GAAA,EAC7Cia,EAAAja,GAAA0N,EAAAlE,OAAAzJ,GAAA8M,MAAA7M,GAEA,MACqB,GAAA2b,GAAA/O,GAAA+O,EAAA/O,EAAAc,EAAAlE,OAAAzJ,EAAA,GAAAuN,cAAA,CAGrB,IAFAoO,GAAAC,EAAA/O,GAAAc,EAAAlE,OAAAzJ,EAAA,GAAAuN,cACAyE,EAAArE,EAAAlE,OAAAzJ,GAAA8M,MAAAlW,OACAqJ,EAAA,EAAmCA,EAAA+R,EAAU/R,GAAA,EAC7Cia,EAAAja,GAAA0N,EAAAlE,OAAAzJ,GAAA8M,MAAA7M,IAAA0N,EAAAlE,OAAAzJ,EAAA,GAAA8M,MAAA7M,GAAA0N,EAAAlE,OAAAzJ,GAAA8M,MAAA7M,IAAA0b,EAEA,MAEA3b,EAAA+R,EAAA,EACA/R,GAAA,EAEA1I,GAAA,EAGA2iB,EAAA+B,WAAAhc,EACAia,EAAA8B,iBAAAlP,EAAAc,EAAAlE,OAAAzJ,GAAAuN,cACA0M,EAAA6B,mBAAArlB,OAES,CACT,IAAAwlB,EAAAC,EAAAC,EAAAC,EAAAC,EAGA,GAFA1lB,EAAA2jB,EAAA7gB,EAAA7C,OACAgkB,EAAAL,EAAA9gB,GAAA6gB,EAAAva,EACApP,KAAA2rB,IAAA,IAAAhC,EAAA9gB,EACA,GAAAwgB,GAAAqB,EACAnB,EAAA,GAAAU,EAAA,GACAV,EAAA,GAAAU,EAAA,GACAV,EAAA,GAAAU,EAAA,QACiB,GAAAZ,GAAAsB,EACjBpB,EAAA,GAAAI,EAAA7gB,EAAA,GACAygB,EAAA,GAAAI,EAAA7gB,EAAA,GACAygB,EAAA,GAAAI,EAAA7gB,EAAA,OACiB,CACjB,IAAA8iB,EAAAC,EAAAlC,EAAA7gB,GACAgjB,EAAAD,EAAA5B,GA2FA/T,EAzFAqT,EAyFAW,EAhCA,SAAA/pB,EAAA+I,EAAAI,GACA,IAIAyiB,EAAAC,EAAAC,EAAAC,EAAAC,EAJAjW,KACArH,EAAA1O,EAAA,GAAA2O,EAAA3O,EAAA,GAAAisB,EAAAjsB,EAAA,GAAAksB,EAAAlsB,EAAA,GACAmsB,EAAApjB,EAAA,GAAAqjB,EAAArjB,EAAA,GAAAsjB,EAAAtjB,EAAA,GAAAujB,EAAAvjB,EAAA,IAIA8iB,EAAAnd,EAAAyd,EAAAxd,EAAAyd,EAAAH,EAAAI,EAAAH,EAAAI,GACA,IACAT,KACAM,KACAC,KACAC,KACAC,MAEA,EAAAT,EAAA,MACAD,EAAAjnB,KAAA4nB,KAAAV,GACAC,EAAAnnB,KAAA8I,IAAAme,GACAG,EAAApnB,KAAA8I,KAAA,EAAAtE,GAAAyiB,GAAAE,EACAE,EAAArnB,KAAA8I,IAAAtE,EAAAyiB,GAAAE,IAEAC,EAAA,EAAA5iB,EACA6iB,EAAA7iB,GAOA,OALA4M,EAAA,GAAAgW,EAAArd,EAAAsd,EAAAG,EACApW,EAAA,GAAAgW,EAAApd,EAAAqd,EAAAI,EACArW,EAAA,GAAAgW,EAAAE,EAAAD,EAAAK,EACAtW,EAAA,GAAAgW,EAAAG,EAAAF,EAAAM,EAEAvW,EAtFAyW,CAAAf,EAAAE,GADAzC,EAAAsB,IAAAD,EAAAC,IA2FAR,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAJ,EAAA,GACAK,EAAAzlB,KAAA8nB,MAAA,EAAAxC,EAAAE,EAAA,EAAAH,EAAAE,EAAA,IAAAD,IAAA,EAAAC,KACAG,EAAA1lB,KAAA+nB,KAAA,EAAA1C,EAAAC,EAAA,EAAAC,EAAAC,GACAG,EAAA3lB,KAAA8nB,MAAA,EAAAzC,EAAAG,EAAA,EAAAF,EAAAC,EAAA,IAAAF,IAAA,EAAAE,KACAnU,EAAA,GAAAqU,EAAAhkB,UACA2P,EAAA,GAAAsU,EAAAjkB,UACA2P,EAAA,GAAAuU,EAAAlkB,eA/FA,IAAAT,EAAA,EAA0BA,EAAAE,EAASF,GAAA,EACnC,IAAA6jB,EAAA9gB,IACAwgB,GAAAqB,EACA3O,EAAA,EACyBsN,EAAAsB,EACzB5O,EAAA,GAEA4N,EAAAja,EAAA+C,EAAAqa,cAAA1hB,OACAue,EAAAoB,SACApB,EAAAoB,WAEApB,EAAAoB,OAAAjlB,GAQA+jB,EAAAF,EAAAoB,OAAAjlB,IAPAwlB,OAAA,IAAA3B,EAAAja,EAAA+C,EAAA3M,GAAA6jB,EAAAja,EAAA+C,EAAA,GAAAkX,EAAAja,EAAA+C,EAAA3M,GACAylB,OAAA,IAAA5B,EAAAja,EAAAgD,EAAA5M,GAAA6jB,EAAAja,EAAAgD,EAAA,GAAAiX,EAAAja,EAAAgD,EAAA5M,GACA0lB,OAAA,IAAA7B,EAAA7jB,EAAA2M,EAAA3M,GAAA6jB,EAAA7jB,EAAA2M,EAAA,GAAAkX,EAAA7jB,EAAA2M,EAAA3M,GACA2lB,OAAA,IAAA9B,EAAA7jB,EAAA4M,EAAA5M,GAAA6jB,EAAA7jB,EAAA4M,EAAA,GAAAiX,EAAA7jB,EAAA4M,EAAA5M,GACA+jB,EAAAtS,cAAAE,gBAAA6T,EAAAC,EAAAC,EAAAC,GAAAxS,IACA0Q,EAAAoB,OAAAjlB,GAAA+jB,IAKAF,EAAAoB,OAQAlB,EAAAF,EAAAoB,QAPAO,EAAA3B,EAAAja,EAAA+C,EACA8Y,EAAA5B,EAAAja,EAAAgD,EACA8Y,EAAA7B,EAAA7jB,EAAA2M,EACAgZ,EAAA9B,EAAA7jB,EAAA4M,EACAmX,EAAAtS,cAAAE,gBAAA6T,EAAAC,EAAAC,EAAAC,GAAAxS,IACA0Q,EAAAoB,OAAAlB,GAKA9N,EAAA8N,GAAAR,EAAAsB,IAAAD,EAAAC,MAIAV,EAAAL,EAAA9gB,GAAA6gB,EAAAva,EACAsc,EAAA,IAAA/B,EAAA9gB,EAAA8gB,EAAA7gB,EAAAhD,GAAA6jB,EAAA7gB,EAAAhD,IAAAmkB,EAAAnkB,GAAA6jB,EAAA7gB,EAAAhD,IAAAiW,EAEA,qBAAA/b,KAAAypB,SACAF,EAAAzjB,GAAA4lB,EAEAnC,EAAAmC,EAMA,OADApC,EAAAS,UAAAD,EACAP,EAiDA,SAAAsC,EAAAkB,GACA,IAAAxC,EAAAwC,EAAA,GAAAxmB,UACAikB,EAAAuC,EAAA,GAAAxmB,UACAkkB,EAAAsC,EAAA,GAAAxmB,UACA6K,EAAAtM,KAAA4I,IAAA6c,EAAA,GACAra,EAAApL,KAAA4I,IAAA8c,EAAA,GACAwC,EAAAloB,KAAA4I,IAAA+c,EAAA,GACAwC,EAAAnoB,KAAA8I,IAAA2c,EAAA,GACA2C,EAAApoB,KAAA8I,IAAA4c,EAAA,GACA2C,EAAAroB,KAAA8I,IAAA6c,EAAA,GAMA,OAJAwC,EAAAC,EAAAF,EAAA5b,EAAAlB,EAAAid,EACAF,EAAA/c,EAAA8c,EAAA5b,EAAA8b,EAAAC,EACA/b,EAAA8b,EAAAF,EAAAC,EAAA/c,EAAAid,EAHA/b,EAAAlB,EAAA8c,EAAAC,EAAAC,EAAAC,GAQA,SAAAC,IACA,IAAA/D,EAAArpB,KAAAqtB,KAAAC,cAAAttB,KAAAwpB,WACAhD,EAAAxmB,KAAAgqB,UAAA,GAAA1gB,EAAAtJ,KAAAwpB,WACA+D,EAAAvtB,KAAAgqB,UAAAhqB,KAAAgqB,UAAA/jB,OAAA,GAAAqD,EAAAtJ,KAAAwpB,WACA,KAAAH,IAAArpB,KAAAwtB,SAAAtC,WAAAlrB,KAAAwtB,SAAAtC,YAAAhC,IAAAlpB,KAAAwtB,SAAAtC,WAAAqC,GAAAlE,GAAAkE,GAAAvtB,KAAAwtB,SAAAtC,UAAA1E,GAAA6C,EAAA7C,IAAA,CACAxmB,KAAAwtB,SAAAtC,WAAA7B,IACArpB,KAAAwtB,SAAArC,oBAAA,EACAnrB,KAAAwtB,SAAAzD,UAAA,GAGA,IAAA0D,EAAAztB,KAAAopB,iBAAAC,EAAArpB,KAAAwtB,UACAxtB,KAAA0pB,GAAA+D,EAGA,OADAztB,KAAAwtB,SAAAtC,UAAA7B,EACArpB,KAAA0pB,GAGA,SAAAgE,EAAAvnB,GACA,IAAAwnB,EACA,sBAAA3tB,KAAAypB,SACAkE,EAAAxnB,EAAAnG,KAAA4tB,KACAzE,EAAAnpB,KAAA+I,EAAA4kB,GAAA,OACA3tB,KAAA+I,EAAA4kB,EACA3tB,KAAAkM,MAAA,QAIA,IADA,IAAApG,EAAA,EAAAE,EAAAhG,KAAA+I,EAAA9C,OACAH,EAAAE,GACA2nB,EAAAxnB,EAAAL,GAAA9F,KAAA4tB,KACAzE,EAAAnpB,KAAA+I,EAAAjD,GAAA6nB,GAAA,OACA3tB,KAAA+I,EAAAjD,GAAA6nB,EACA3tB,KAAAkM,MAAA,GAEApG,GAAA,EAKA,SAAA+nB,IACA,GAAA7tB,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,SAAAhuB,KAAAiuB,gBAAAhoB,OAGA,GAAAjG,KAAAkuB,KACAluB,KAAA0tB,UAAA1tB,KAAA0pB,QADA,CAIA1pB,KAAAkuB,MAAA,EACAluB,KAAAkM,KAAAlM,KAAAmuB,cAEA,IAAAroB,EAAAE,EAAAhG,KAAAiuB,gBAAAhoB,OACAmoB,EAAApuB,KAAAquB,GAAAruB,KAAA0pB,GAAA1pB,KAAAL,KAAA2P,EACA,IAAAxJ,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3BsoB,EAAApuB,KAAAiuB,gBAAAnoB,GAAAsoB,GAEApuB,KAAA0tB,UAAAU,GACApuB,KAAAmuB,eAAA,EACAnuB,KAAAkuB,MAAA,EACAluB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,SAGA,SAAAM,EAAAC,GACAvuB,KAAAiuB,gBAAAtjB,KAAA4jB,GACAvuB,KAAAK,UAAAuL,mBAAA5L,MAiJA,OAFAwuB,QAvBA,SAAAV,EAAAnuB,EAAAN,EAAAuuB,EAAAvtB,GACA,IAAA+I,EACA,GAAAzJ,EAAA2P,EAAArJ,OAES,oBAAAtG,EAAA2P,EAAA,GACTlG,EAAA,IAtGA,SAAA0kB,EAAAnuB,EAAAiuB,EAAAvtB,GACAL,KAAAypB,SAAA,mBACAzpB,KAAA4tB,QAAA,EACA5tB,KAAAL,OACAK,KAAAkM,MAAA,EACAlM,KAAA8tB,OACA9tB,KAAAK,YACAL,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACAruB,KAAAguB,SAAA,EACA,IAAAloB,EAAAE,EAAArG,EAAA2P,EAAArJ,OAKA,IAJAjG,KAAA+I,EAAAgC,iBAAA,UAAA/E,GACAhG,KAAA0pB,GAAA3e,iBAAA,UAAA/E,GACA+E,iBAAA,UAAA/E,GACAhG,KAAAyuB,IAAA1jB,iBAAA,UAAA/E,GACAF,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B9F,KAAA+I,EAAAjD,GAAAnG,EAAA2P,EAAAxJ,GAAA9F,KAAA4tB,KACA5tB,KAAA0pB,GAAA5jB,GAAAnG,EAAA2P,EAAAxJ,GAEA9F,KAAAmuB,eAAA,EACAnuB,KAAAiuB,mBACAjuB,KAAAmM,SAAA0hB,EACA7tB,KAAA0tB,YACA1tB,KAAAsuB,YA8EA,CAAAR,EAAAnuB,EAAAiuB,EAAAvtB,QAEA,OAAAhB,GACA,OACA+J,EAAA,IA/EA,SAAA0kB,EAAAnuB,EAAAiuB,EAAAvtB,GACAL,KAAAypB,SAAA,iBACAzpB,KAAAgqB,UAAArqB,EAAA2P,EACAtP,KAAAwpB,WAAAsE,EAAAnuB,KAAA+uB,GACA1uB,KAAAguB,SAAA,EACAhuB,KAAAwtB,UAAyBtC,UAAAhC,EAAAa,UAAA,EAAA7mB,MAAA,EAAAioB,oBAAA,GACzBnrB,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACAruB,KAAAL,OACAK,KAAA4tB,QAAA,EACA5tB,KAAA8tB,OACA9tB,KAAAK,YACAL,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAA+I,EAAAmgB,EACAlpB,KAAA0pB,GAAAR,EACAlpB,KAAAmuB,eAAA,EACAnuB,KAAAmM,SAAA0hB,EACA7tB,KAAA0tB,YACA1tB,KAAAopB,mBACAppB,KAAAiuB,iBAAAb,EAAAviB,KAAA7K,OACAA,KAAAsuB,YA2DA,CAAAR,EAAAnuB,EAAAiuB,EAAAvtB,GACA,MACA,OACA+I,EAAA,IA3DA,SAAA0kB,EAAAnuB,EAAAiuB,EAAAvtB,GACAL,KAAAypB,SAAA,mBACA,IAAA3jB,EACAgD,EAAAsG,EAAAwb,EAAAC,EADA7kB,EAAArG,EAAA2P,EAAArJ,OAEA,IAAAH,EAAA,EAAmBA,EAAAE,EAAA,EAAaF,GAAA,EAChCnG,EAAA2P,EAAAxJ,GAAA8kB,IAAAjrB,EAAA2P,EAAAxJ,GAAAgD,GAAAnJ,EAAA2P,EAAAxJ,EAAA,IAAAnG,EAAA2P,EAAAxJ,EAAA,GAAAgD,IACAA,EAAAnJ,EAAA2P,EAAAxJ,GAAAgD,EACAsG,EAAAzP,EAAA2P,EAAAxJ,EAAA,GAAAgD,EACA8hB,EAAAjrB,EAAA2P,EAAAxJ,GAAA8kB,GACAC,EAAAlrB,EAAA2P,EAAAxJ,GAAA+kB,IACA,IAAA/hB,EAAA7C,SAAA6C,EAAA,KAAAsG,EAAA,IAAAtG,EAAA,KAAAsG,EAAA,KAAAyR,IAAAzF,cAAAtS,EAAA,GAAAA,EAAA,GAAAsG,EAAA,GAAAA,EAAA,GAAAtG,EAAA,GAAA8hB,EAAA,GAAA9hB,EAAA,GAAA8hB,EAAA,KAAA/J,IAAAzF,cAAAtS,EAAA,GAAAA,EAAA,GAAAsG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAyb,EAAA,GAAAzb,EAAA,GAAAyb,EAAA,SAAA/hB,EAAA7C,SAAA6C,EAAA,KAAAsG,EAAA,IAAAtG,EAAA,KAAAsG,EAAA,IAAAtG,EAAA,KAAAsG,EAAA,KAAAyR,IAAAlB,cAAA7W,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAsG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAtG,EAAA,GAAA8hB,EAAA,GAAA9hB,EAAA,GAAA8hB,EAAA,GAAA9hB,EAAA,GAAA8hB,EAAA,KAAA/J,IAAAlB,cAAA7W,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAsG,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAyb,EAAA,GAAAzb,EAAA,GAAAyb,EAAA,GAAAzb,EAAA,GAAAyb,EAAA,OACAlrB,EAAA2P,EAAAxJ,GAAA8kB,GAAA,KACAjrB,EAAA2P,EAAAxJ,GAAA+kB,GAAA,MAEA/hB,EAAA,KAAAsG,EAAA,IAAAtG,EAAA,KAAAsG,EAAA,QAAAwb,EAAA,QAAAA,EAAA,QAAAC,EAAA,QAAAA,EAAA,KACA,IAAA/hB,EAAA7C,QAAA6C,EAAA,KAAAsG,EAAA,QAAAwb,EAAA,QAAAC,EAAA,MACAlrB,EAAA2P,EAAAxJ,GAAA8kB,GAAA,KACAjrB,EAAA2P,EAAAxJ,GAAA+kB,GAAA,OAKA7qB,KAAAiuB,iBAAAb,EAAAviB,KAAA7K,OACAA,KAAAgqB,UAAArqB,EAAA2P,EACAtP,KAAAwpB,WAAAsE,EAAAnuB,KAAA+uB,GACA1uB,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACAruB,KAAAmuB,eAAA,EACAnuB,KAAA4tB,QAAA,EACA5tB,KAAA8tB,OACA9tB,KAAAK,YACAL,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAmM,SAAA0hB,EACA7tB,KAAA0tB,YACA1tB,KAAAopB,mBACAppB,KAAAguB,SAAA,EACA,IAAAW,EAAAhvB,EAAA2P,EAAA,GAAAxG,EAAA7C,OAGA,IAFAjG,KAAA+I,EAAAgC,iBAAA,UAAA4jB,GACA3uB,KAAA0pB,GAAA3e,iBAAA,UAAA4jB,GACA7oB,EAAA,EAAmBA,EAAA6oB,EAAY7oB,GAAA,EAC/B9F,KAAA+I,EAAAjD,GAAAojB,EACAlpB,KAAA0pB,GAAA5jB,GAAAojB,EAEAlpB,KAAAwtB,UAAuBtC,UAAAhC,EAAAa,UAAA,EAAA7mB,MAAA6H,iBAAA,UAAA4jB,IACvB3uB,KAAAsuB,YAeA,CAAAR,EAAAnuB,EAAAiuB,EAAAvtB,QATA+I,EAAA,IAxHA,SAAA0kB,EAAAnuB,EAAAiuB,EAAAvtB,GACAL,KAAAypB,SAAA,iBACAzpB,KAAA4tB,QAAA,EACA5tB,KAAAL,OACAK,KAAA+I,EAAA6kB,EAAAjuB,EAAA2P,EAAAse,EAAAjuB,EAAA2P,EACAtP,KAAA0pB,GAAA/pB,EAAA2P,EACAtP,KAAAkM,MAAA,EACAlM,KAAA8tB,OACA9tB,KAAAK,YACAL,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACAruB,KAAAyuB,IAAA,EACAzuB,KAAAiuB,mBACAjuB,KAAAmuB,eAAA,EACAnuB,KAAAmM,SAAA0hB,EACA7tB,KAAA0tB,YACA1tB,KAAAsuB,YAuGA,CAAAR,EAAAnuB,EAAAiuB,EAAAvtB,GAgBA,OAHA+I,EAAA6kB,gBAAAhoB,QACA5F,EAAAuL,mBAAAxC,GAEAA,IAjbA,GAybAwlB,yBAAA,WAEA,IAAAC,GAAA,KAwJA,SAAAC,EAAAhB,EAAAnuB,EAAAU,GAmBA,GAlBAL,KAAA8tB,OACA9tB,KAAAguB,SAAA,EACAhuB,KAAAypB,SAAA,YACAzpB,KAAAL,OACAK,KAAA+I,EAAA,IAAAyE,OAEAxN,KAAA+uB,IAAA,IAAAvhB,OACAxN,KAAAgvB,uBAAA,EACAhvB,KAAAoM,6BAAA/L,GAAAytB,GACAnuB,EAAAyJ,GAAAzJ,EAAAyJ,EAAAN,GACA9I,KAAAivB,GAAAhG,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAAqJ,EAAA,IAAAzS,MACAA,KAAAkvB,GAAAjG,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAAsJ,EAAA,IAAA1S,MACAL,EAAAyJ,EAAAuJ,IACA3S,KAAAmvB,GAAAlG,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAAuJ,EAAA,IAAA3S,QAGAA,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,IAA6DkG,GAAA,QAAU,IAAAtP,MAEvEL,EAAAyvB,GAAA,CAIA,GAHApvB,KAAAovB,GAAAnG,gBAAAuF,QAAAV,EAAAnuB,EAAAyvB,GAAA,EAAA7oB,UAAAvG,MACAA,KAAAqvB,GAAApG,gBAAAuF,QAAAV,EAAAnuB,EAAA0vB,GAAA,EAAA9oB,UAAAvG,MACAA,KAAAsvB,GAAArG,gBAAAuF,QAAAV,EAAAnuB,EAAA2vB,GAAA,EAAA/oB,UAAAvG,MACAL,EAAA4vB,GAAAjgB,EAAA,GAAAub,GAAA,CACA,IAAA/kB,EAAAE,EAAArG,EAAA4vB,GAAAjgB,EAAArJ,OACA,IAAAH,EAAA,EAAwBA,EAAAE,EAAMF,GAAA,EAC9BnG,EAAA4vB,GAAAjgB,EAAAxJ,GAAA8kB,GAAAjrB,EAAA4vB,GAAAjgB,EAAAxJ,GAAA+kB,GAAA,KAGA7qB,KAAAuvB,GAAAtG,gBAAAuF,QAAAV,EAAAnuB,EAAA4vB,GAAA,EAAAhpB,UAAAvG,MAEAA,KAAAuvB,GAAA5D,IAAA,OAEA3rB,KAAAgJ,EAAAigB,gBAAAuF,QAAAV,EAAAnuB,EAAAqJ,IAA8DsG,EAAA,GAAK,EAAA/I,UAAAvG,MAEnEL,EAAA6vB,KACAxvB,KAAAwvB,GAAAvG,gBAAAuF,QAAAV,EAAAnuB,EAAA6vB,GAAA,EAAAjpB,UAAAvG,MACAA,KAAAyvB,GAAAxG,gBAAAuF,QAAAV,EAAAnuB,EAAA8vB,GAAA,EAAAlpB,UAAAvG,OAEAA,KAAAG,EAAA8oB,gBAAAuF,QAAAV,EAAAnuB,EAAAQ,IAAyDmP,GAAA,QAAU,IAAAtP,MACnEA,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,IAAyDwG,GAAA,cAAgB,MAAAtP,MAEzEL,EAAA+P,EACA1P,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,MAAAoe,GAEA9tB,KAAA0P,GAAsBxD,MAAA,EAAAnD,EAAA,GAEtB/I,KAAA0vB,UAAA,EACA1vB,KAAA8L,kBAAA7F,QACAjG,KAAAmM,UAAA,GAmBA,OAfA2iB,EAAA1kB,WACAulB,cA5MA,SAAAC,GACA,IAAA1jB,EAAAlM,KAAAkM,KACAlM,KAAAiM,2BACAjM,KAAAkM,KAAAlM,KAAAkM,QACAlM,KAAAG,GACAyvB,EAAAjgB,WAAA3P,KAAAG,EAAA4I,EAAA,IAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,IAEA/I,KAAA8I,GACA8mB,EAAA5gB,MAAAhP,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,IAEA/I,KAAAwvB,IACAI,EAAA7gB,cAAA/O,KAAAwvB,GAAAzmB,EAAA/I,KAAAyvB,GAAA1mB,GAEA/I,KAAAgJ,EACA4mB,EAAA3hB,QAAAjO,KAAAgJ,EAAAD,GAEA6mB,EAAAphB,SAAAxO,KAAAsvB,GAAAvmB,GAAAwF,QAAAvO,KAAAqvB,GAAAtmB,GAAAuF,QAAAtO,KAAAovB,GAAArmB,GAAAyF,SAAAxO,KAAAuvB,GAAAxmB,EAAA,IAAAwF,QAAAvO,KAAAuvB,GAAAxmB,EAAA,IAAAuF,QAAAtO,KAAAuvB,GAAAxmB,EAAA,IAEA/I,KAAAL,KAAAyJ,EAAAN,EACA9I,KAAAL,KAAAyJ,EAAAuJ,EACAid,EAAAjgB,UAAA3P,KAAAivB,GAAAlmB,EAAA/I,KAAAkvB,GAAAnmB,GAAA/I,KAAAmvB,GAAApmB,GAEA6mB,EAAAjgB,UAAA3P,KAAAivB,GAAAlmB,EAAA/I,KAAAkvB,GAAAnmB,EAAA,GAGA6mB,EAAAjgB,UAAA3P,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAoJ,EAAAL,EAAA,IAAA/I,KAAAoJ,EAAAL,EAAA,KAoLAoD,SAjLA,SAAA0jB,GACA,GAAA7vB,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,QAAA,CAUA,GAPAhuB,KAAA0vB,WACA1vB,KAAA8vB,qBACA9vB,KAAA0vB,UAAA,GAGA1vB,KAAAiM,2BAEAjM,KAAAkM,MAAA2jB,EAAA,CAgBA,GAfA7vB,KAAA+I,EAAAwJ,eAAAvS,KAAA+uB,IAAA5vB,OACAa,KAAAgvB,uBAAA,GACAhvB,KAAA+I,EAAA4G,WAAA3P,KAAAG,EAAA4I,EAAA,IAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,IAEA/I,KAAAgvB,uBAAA,GACAhvB,KAAA+I,EAAAiG,MAAAhP,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,IAEA/I,KAAAwvB,IAAAxvB,KAAAgvB,uBAAA,GACAhvB,KAAA+I,EAAAgG,cAAA/O,KAAAwvB,GAAAzmB,EAAA/I,KAAAyvB,GAAA1mB,GAEA/I,KAAAgJ,GAAAhJ,KAAAgvB,uBAAA,EACAhvB,KAAA+I,EAAAkF,QAAAjO,KAAAgJ,EAAAD,IACa/I,KAAAgJ,GAAAhJ,KAAAgvB,uBAAA,GACbhvB,KAAA+I,EAAAyF,SAAAxO,KAAAsvB,GAAAvmB,GAAAwF,QAAAvO,KAAAqvB,GAAAtmB,GAAAuF,QAAAtO,KAAAovB,GAAArmB,GAAAyF,SAAAxO,KAAAuvB,GAAAxmB,EAAA,IAAAwF,QAAAvO,KAAAuvB,GAAAxmB,EAAA,IAAAuF,QAAAtO,KAAAuvB,GAAAxmB,EAAA,IAEA/I,KAAA+vB,aAAA,CACA,IAAAC,EAAAC,EAAAC,EAAAlwB,KAAA8tB,KAAAC,WAAAmC,UACA,GAAAlwB,KAAAoJ,GAAApJ,KAAAoJ,EAAA4gB,WAAAhqB,KAAAoJ,EAAA+mB,eACAnwB,KAAAoJ,EAAAokB,SAAAtC,UAAAlrB,KAAAoJ,EAAAogB,YAAAxpB,KAAAoJ,EAAA4gB,UAAA,GAAA1gB,GACA0mB,EAAAhwB,KAAAoJ,EAAA+mB,gBAAAnwB,KAAAoJ,EAAA4gB,UAAA,GAAA1gB,EAAA,KAAA4mB,EAAA,GACAD,EAAAjwB,KAAAoJ,EAAA+mB,eAAAnwB,KAAAoJ,EAAA4gB,UAAA,GAAA1gB,EAAA4mB,EAAA,IACqBlwB,KAAAoJ,EAAAokB,SAAAtC,UAAAlrB,KAAAoJ,EAAAogB,YAAAxpB,KAAAoJ,EAAA4gB,UAAAhqB,KAAAoJ,EAAA4gB,UAAA/jB,OAAA,GAAAqD,GACrB0mB,EAAAhwB,KAAAoJ,EAAA+mB,eAAAnwB,KAAAoJ,EAAA4gB,UAAAhqB,KAAAoJ,EAAA4gB,UAAA/jB,OAAA,GAAAqD,EAAA4mB,EAAA,GACAD,EAAAjwB,KAAAoJ,EAAA+mB,gBAAAnwB,KAAAoJ,EAAA4gB,UAAAhqB,KAAAoJ,EAAA4gB,UAAA/jB,OAAA,GAAAqD,EAAA,KAAA4mB,EAAA,KAEAF,EAAAhwB,KAAAoJ,EAAAsgB,GACAuG,EAAAjwB,KAAAoJ,EAAA+mB,gBAAAnwB,KAAAoJ,EAAAokB,SAAAtC,UAAAlrB,KAAAoJ,EAAAogB,WAAA,KAAA0G,EAAAlwB,KAAAoJ,EAAAogB,kBAEiB,GAAAxpB,KAAAivB,IAAAjvB,KAAAivB,GAAAjF,WAAAhqB,KAAAkvB,GAAAlF,WAAAhqB,KAAAivB,GAAAkB,gBAAAnwB,KAAAkvB,GAAAiB,eAAA,CACjBH,KACAC,KACA,IAAAhB,EAAAjvB,KAAAivB,GAAAC,EAAAlvB,KAAAkvB,GACAD,EAAAzB,SAAAtC,UAAA+D,EAAAzF,YAAAyF,EAAAjF,UAAA,GAAA1gB,GACA0mB,EAAA,GAAAf,EAAAkB,gBAAAlB,EAAAjF,UAAA,GAAA1gB,EAAA,KAAA4mB,EAAA,GACAF,EAAA,GAAAd,EAAAiB,gBAAAjB,EAAAlF,UAAA,GAAA1gB,EAAA,KAAA4mB,EAAA,GACAD,EAAA,GAAAhB,EAAAkB,eAAAlB,EAAAjF,UAAA,KAAAkG,EAAA,GACAD,EAAA,GAAAf,EAAAiB,eAAAjB,EAAAlF,UAAA,KAAAkG,EAAA,IACqBjB,EAAAzB,SAAAtC,UAAA+D,EAAAzF,YAAAyF,EAAAjF,UAAAiF,EAAAjF,UAAA/jB,OAAA,GAAAqD,GACrB0mB,EAAA,GAAAf,EAAAkB,eAAAlB,EAAAjF,UAAAiF,EAAAjF,UAAA/jB,OAAA,GAAAqD,EAAA4mB,EAAA,GACAF,EAAA,GAAAd,EAAAiB,eAAAjB,EAAAlF,UAAAkF,EAAAlF,UAAA/jB,OAAA,GAAAqD,EAAA4mB,EAAA,GACAD,EAAA,GAAAhB,EAAAkB,gBAAAlB,EAAAjF,UAAAiF,EAAAjF,UAAA/jB,OAAA,GAAAqD,EAAA,KAAA4mB,EAAA,GACAD,EAAA,GAAAf,EAAAiB,gBAAAjB,EAAAlF,UAAAkF,EAAAlF,UAAA/jB,OAAA,GAAAqD,EAAA,KAAA4mB,EAAA,KAEAF,GAAAf,EAAAvF,GAAAwF,EAAAxF,IACAuG,EAAA,GAAAhB,EAAAkB,gBAAAlB,EAAAzB,SAAAtC,UAAA+D,EAAAzF,WAAA,KAAA0G,EAAAjB,EAAAzF,YACAyG,EAAA,GAAAf,EAAAiB,gBAAAjB,EAAA1B,SAAAtC,UAAAgE,EAAA1F,WAAA,KAAA0G,EAAAhB,EAAA1F,kBAGAwG,EAAAC,EAAApB,EAEA7uB,KAAA+I,EAAAkF,QAAAnJ,KAAA8nB,MAAAoD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,KAEAjwB,KAAAL,KAAAyJ,GAAApJ,KAAAL,KAAAyJ,EAAAN,EACA9I,KAAAL,KAAAyJ,EAAAuJ,EACA3S,KAAA+I,EAAA4G,UAAA3P,KAAAivB,GAAAlmB,EAAA/I,KAAAkvB,GAAAnmB,GAAA/I,KAAAmvB,GAAApmB,GAEA/I,KAAA+I,EAAA4G,UAAA3P,KAAAivB,GAAAlmB,EAAA/I,KAAAkvB,GAAAnmB,EAAA,GAGA/I,KAAA+I,EAAA4G,UAAA3P,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAoJ,EAAAL,EAAA,IAAA/I,KAAAoJ,EAAAL,EAAA,IAGA/I,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,UAwGA8B,mBArGA,WACA,IAAA9vB,KAAAG,EAAAmP,IACAtP,KAAA+uB,IAAApf,WAAA3P,KAAAG,EAAA4I,EAAA,IAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,IACA/I,KAAAgvB,uBAAA,GAIAhvB,KAAA8I,EAAAmlB,gBAAAhoB,QAAA,CAMA,GALAjG,KAAA+uB,IAAA/f,MAAAhP,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,GAAA/I,KAAA8I,EAAAC,EAAA,IACA/I,KAAAgvB,uBAAA,EAIAhvB,KAAAwvB,GAAA,CACA,GAAAxvB,KAAAwvB,GAAAvB,gBAAAhoB,QAAAjG,KAAAyvB,GAAAxB,gBAAAhoB,OAIA,OAHAjG,KAAA+uB,IAAAhgB,cAAA/O,KAAAwvB,GAAAzmB,EAAA/I,KAAAyvB,GAAA1mB,GACA/I,KAAAgvB,uBAAA,EAKA,GAAAhvB,KAAAgJ,EAAA,CACA,GAAAhJ,KAAAgJ,EAAAilB,gBAAAhoB,OAIA,OAHAjG,KAAA+uB,IAAA9gB,QAAAjO,KAAAgJ,EAAAD,GACA/I,KAAAgvB,uBAAA,OAIShvB,KAAAsvB,GAAArB,gBAAAhoB,QAAAjG,KAAAqvB,GAAApB,gBAAAhoB,QAAAjG,KAAAovB,GAAAnB,gBAAAhoB,QAAAjG,KAAAuvB,GAAAtB,gBAAAhoB,SACTjG,KAAA+uB,IAAAvgB,SAAAxO,KAAAsvB,GAAAvmB,GAAAwF,QAAAvO,KAAAqvB,GAAAtmB,GAAAuF,QAAAtO,KAAAovB,GAAArmB,GAAAyF,SAAAxO,KAAAuvB,GAAAxmB,EAAA,IAAAwF,QAAAvO,KAAAuvB,GAAAxmB,EAAA,IAAAuF,QAAAtO,KAAAuvB,GAAAxmB,EAAA,IACA/I,KAAAgvB,uBAAA,KAwEAoB,WApEA,cAuEA5V,iBAAA7O,0BAAAmjB,GACAA,EAAA1kB,UAAAwB,mBAnEA,SAAAC,GACA7L,KAAAqwB,oBAAAxkB,GACA7L,KAAA8tB,KAAAliB,mBAAAC,GACA7L,KAAA0vB,UAAA,GAiEAZ,EAAA1kB,UAAAimB,oBAAA1kB,yBAAAvB,UAAAwB,oBAOA0kB,qBALA,SAAAxC,EAAAnuB,EAAAU,GACA,WAAAyuB,EAAAhB,EAAAnuB,EAAAU,KA3NA,GAmOA,SAAAkwB,YACAvwB,KAAAmP,GAAA,EACAnP,KAAAge,QAAA,EACAhe,KAAAwwB,WAAA,EACAxwB,KAAA+I,EAAA1C,iBAAArG,KAAAwwB,YACAxwB,KAAA0P,EAAArJ,iBAAArG,KAAAwwB,YACAxwB,KAAA8F,EAAAO,iBAAArG,KAAAwwB,YAGAD,UAAAnmB,UAAAqmB,YAAA,SAAA7S,EAAA5X,GACAhG,KAAAmP,EAAAyO,EACA5d,KAAA0wB,UAAA1qB,GAEA,IADA,IAAAF,EAAA,EACAA,EAAAE,GACAhG,KAAA+I,EAAAjD,GAAA6qB,WAAApU,aACAvc,KAAA0P,EAAA5J,GAAA6qB,WAAApU,aACAvc,KAAA8F,KAAA6qB,WAAApU,aACAzW,GAAA,GAIAyqB,UAAAnmB,UAAAsmB,UAAA,SAAA1qB,GACA,KAAAhG,KAAAwwB,WAAAxqB,GACAhG,KAAA4wB,oBAEA5wB,KAAAge,QAAAhY,GAGAuqB,UAAAnmB,UAAAwmB,kBAAA,WACA5wB,KAAA+I,EAAA/I,KAAA+I,EAAAod,OAAA9f,iBAAArG,KAAAwwB,aACAxwB,KAAA8F,EAAA9F,KAAA8F,EAAAqgB,OAAA9f,iBAAArG,KAAAwwB,aACAxwB,KAAA0P,EAAA1P,KAAA0P,EAAAyW,OAAA9f,iBAAArG,KAAAwwB,aACAxwB,KAAAwwB,YAAA,GAGAD,UAAAnmB,UAAAymB,QAAA,SAAApe,EAAAC,EAAArT,EAAAyxB,EAAAlZ,GACA,IAAAzM,EAKA,OAJAnL,KAAAge,QAAAlZ,KAAAzB,IAAArD,KAAAge,QAAA8S,EAAA,GACA9wB,KAAAge,SAAAhe,KAAAwwB,YACAxwB,KAAA4wB,oBAEAvxB,GACA,QACA8L,EAAAnL,KAAA+I,EACA,MACA,QACAoC,EAAAnL,KAAA8F,EACA,MACA,QACAqF,EAAAnL,KAAA0P,IAGAvE,EAAA2lB,IAAA3lB,EAAA2lB,KAAAlZ,KACAzM,EAAA2lB,GAAAH,WAAApU,cAEApR,EAAA2lB,GAAA,GAAAre,EACAtH,EAAA2lB,GAAA,GAAApe,GAGA6d,UAAAnmB,UAAA2mB,YAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAP,EAAAlZ,GACA5X,KAAA6wB,QAAAG,EAAAC,EAAA,IAAAH,EAAAlZ,GACA5X,KAAA6wB,QAAAK,EAAAC,EAAA,IAAAL,EAAAlZ,GACA5X,KAAA6wB,QAAAO,EAAAC,EAAA,IAAAP,EAAAlZ,IAGA2Y,UAAAnmB,UAAAknB,QAAA,WACA,IAAAC,EAAA,IAAAhB,UACAgB,EAAAd,YAAAzwB,KAAAmP,EAAAnP,KAAAge,SACA,IAAAwT,EAAAxxB,KAAA+I,EAAA0oB,EAAAzxB,KAAA0P,EAAAgiB,EAAA1xB,KAAA8F,EACA6rB,EAAA,EACA3xB,KAAAmP,IACAoiB,EAAAR,YAAAS,EAAA,MAAAA,EAAA,MAAAE,EAAA,MAAAA,EAAA,MAAAD,EAAA,MAAAA,EAAA,YACAE,EAAA,GAEA,IAGA7rB,EAHA8rB,EAAA5xB,KAAAge,QAAA,EACAhY,EAAAhG,KAAAge,QAGA,IAAAlY,EAAA6rB,EAAkB7rB,EAAAE,EAASF,GAAA,EAC3ByrB,EAAAR,YAAAS,EAAAI,GAAA,GAAAJ,EAAAI,GAAA,GAAAF,EAAAE,GAAA,GAAAF,EAAAE,GAAA,GAAAH,EAAAG,GAAA,GAAAH,EAAAG,GAAA,GAAA9rB,GAAA,GACA8rB,GAAA,EAEA,OAAAL,GAEA,IAAAM,qBAAA,WAEA,IAAA3I,GAAA,OAEA,SAAA4I,EAAAzI,EAAA0I,EAAAzI,GACA,IACA0I,EAAAC,EAAAC,EAAA7iB,EAAAC,EAAA8R,EAAAC,EAAAtF,EAAAoW,EADArI,EAAAR,EAAAS,UAEAsE,EAAAruB,KAAAgqB,UACA,GAAAX,EAAAgF,EAAA,GAAA/kB,EAAAtJ,KAAAwpB,WACAwI,EAAA3D,EAAA,GAAAvlB,EAAA,GACAopB,GAAA,EACApI,EAAA,OACS,GAAAT,GAAAgF,IAAApoB,OAAA,GAAAqD,EAAAtJ,KAAAwpB,WACTwI,EAAA3D,IAAApoB,OAAA,GAAA6C,EAAAulB,IAAApoB,OAAA,GAAA6C,EAAA,GAAAulB,IAAApoB,OAAA,GAAAmJ,EAAA,GAMA8iB,GAAA,MACS,CAGT,IAFA,IACAvI,EAAAC,EADA9jB,EAAAgkB,EACA9jB,EAAAqoB,EAAApoB,OAAA,EAAAU,GAAA,EACAA,IACAgjB,EAAA0E,EAAAvoB,MACA8jB,EAAAyE,EAAAvoB,EAAA,IACAwD,EAAAtJ,KAAAwpB,WAAAH,KAGAvjB,EAAAE,EAAA,EACAF,GAAA,EAEAa,GAAA,EAKA,GADAmjB,EAAAhkB,IADAosB,EAAA,IAAAvI,EAAA9gB,GAEA,CACA,GAAAwgB,GAAAO,EAAAtgB,EAAAtJ,KAAAwpB,WACAzN,EAAA,OACiB,GAAAsN,EAAAM,EAAArgB,EAAAtJ,KAAAwpB,WACjBzN,EAAA,MACiB,CACjB,IAAA8N,EACAF,EAAAoB,OACAlB,EAAAF,EAAAoB,QAEAlB,EAAAtS,cAAAE,gBAAAkS,EAAAja,EAAA+C,EAAAkX,EAAAja,EAAAgD,EAAAiX,EAAA7jB,EAAA2M,EAAAkX,EAAA7jB,EAAA4M,GAAAuG,IACA0Q,EAAAoB,OAAAlB,GAEA9N,EAAA8N,GAAAR,GAAAM,EAAArgB,EAAAtJ,KAAAwpB,cAAAI,EAAAtgB,EAAAtJ,KAAAwpB,YAAAG,EAAArgB,EAAAtJ,KAAAwpB,cAEAyI,EAAArI,EAAA9gB,EAAA8gB,EAAA9gB,EAAA,GAAA6gB,EAAAva,EAAA,GAEA4iB,EAAArI,EAAA7gB,EAAA,GAMA,IAJAsY,EAAA2Q,EAAA/T,QACAqD,EAAA2Q,EAAAlsB,EAAA,GAAAG,OACAqjB,EAAAS,UAAAD,EAEAza,EAAA,EAAgBA,EAAA+R,EAAO/R,GAAA,EACvB,IAAAC,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAC3B6iB,EAAAD,EAAAF,EAAAlsB,EAAAuJ,GAAAC,GAAA0iB,EAAAlsB,EAAAuJ,GAAAC,IAAA2iB,EAAAnsB,EAAAuJ,GAAAC,GAAA0iB,EAAAlsB,EAAAuJ,GAAAC,IAAAyM,EACAgW,EAAAjsB,EAAAuJ,GAAAC,GAAA6iB,EACAA,EAAAD,EAAAF,EAAAtiB,EAAAL,GAAAC,GAAA0iB,EAAAtiB,EAAAL,GAAAC,IAAA2iB,EAAAviB,EAAAL,GAAAC,GAAA0iB,EAAAtiB,EAAAL,GAAAC,IAAAyM,EACAgW,EAAAriB,EAAAL,GAAAC,GAAA6iB,EACAA,EAAAD,EAAAF,EAAAjpB,EAAAsG,GAAAC,GAAA0iB,EAAAjpB,EAAAsG,GAAAC,IAAA2iB,EAAAlpB,EAAAsG,GAAAC,GAAA0iB,EAAAjpB,EAAAsG,GAAAC,IAAAyM,EACAgW,EAAAhpB,EAAAsG,GAAAC,GAAA6iB,EAoBA,SAAAC,IACApyB,KAAAujB,MAAAvjB,KAAAqyB,qBAqBA,SAAA3E,EAAA6D,IAlBA,SAAAe,EAAAC,GACA,GAAAD,EAAAtU,UAAAuU,EAAAvU,SAAAsU,EAAAnjB,IAAAojB,EAAApjB,EACA,SAEA,IAAArJ,EAAAE,EAAAssB,EAAAtU,QACA,IAAAlY,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3B,GAAAwsB,EAAAvpB,EAAAjD,GAAA,KAAAysB,EAAAxpB,EAAAjD,GAAA,IACAwsB,EAAAvpB,EAAAjD,GAAA,KAAAysB,EAAAxpB,EAAAjD,GAAA,IACAwsB,EAAA5iB,EAAA5J,GAAA,KAAAysB,EAAA7iB,EAAA5J,GAAA,IACAwsB,EAAA5iB,EAAA5J,GAAA,KAAAysB,EAAA7iB,EAAA5J,GAAA,IACAwsB,EAAAxsB,KAAA,KAAAysB,EAAAzsB,KAAA,IACAwsB,EAAAxsB,KAAA,KAAAysB,EAAAzsB,KAAA,GACA,SAGA,UAIA0sB,CAAAxyB,KAAA+I,EAAAwoB,KACAvxB,KAAA+I,EAAA0pB,WAAAngB,MAAAif,GACAvxB,KAAAqyB,qBAAAK,gBACA1yB,KAAAqyB,qBAAAM,SAAA3yB,KAAA+I,GACA/I,KAAAkM,MAAA,EACAlM,KAAAujB,MAAAvjB,KAAAqyB,sBAIA,SAAAxE,IACA,GAAA7tB,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,QAES,GAAAhuB,KAAAiuB,gBAAAhoB,OAIT,GAAAjG,KAAAkuB,KACAluB,KAAA0tB,UAAA1tB,KAAA0pB,QADA,CAIA1pB,KAAAkuB,MAAA,EACAluB,KAAAkM,MAAA,EACA,IACApG,EADAsoB,EAAApuB,KAAAquB,GAAAruB,KAAA0pB,GAAA1pB,KAAAL,KAAA2iB,GAAAtiB,KAAAL,KAAA2iB,GAAAhT,EAAAtP,KAAAL,KAAAwT,GAAA7D,EACAtJ,EAAAhG,KAAAiuB,gBAAAhoB,OACA,IAAAH,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3BsoB,EAAApuB,KAAAiuB,gBAAAnoB,GAAAsoB,GAEApuB,KAAA0tB,UAAAU,GACApuB,KAAAkuB,MAAA,EACAluB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,aAhBAhuB,KAAAkM,MAAA,EAmBA,SAAA0mB,EAAA9E,EAAAnuB,EAAAN,GACAW,KAAAypB,SAAA,QACAzpB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAK,UAAAytB,EACA9tB,KAAA8tB,OACA9tB,KAAAL,OACAK,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACAruB,KAAAkM,MAAA,EACA,IAAAoX,EAAA,IAAAjkB,EAAAM,EAAAwT,GAAA7D,EAAA3P,EAAA2iB,GAAAhT,EACAtP,KAAA+I,EAAA0pB,WAAAngB,MAAAgR,GACAtjB,KAAA0pB,GAAA+I,WAAAngB,MAAAtS,KAAA+I,GACA/I,KAAAqyB,qBAAAQ,qBAAAC,qBACA9yB,KAAAujB,MAAAvjB,KAAAqyB,qBACAryB,KAAAujB,MAAAoP,SAAA3yB,KAAA+I,GACA/I,KAAAgO,MAAAokB,EACApyB,KAAAiuB,mBAGA,SAAAK,EAAAC,GACAvuB,KAAAiuB,gBAAAtjB,KAAA4jB,GACAvuB,KAAAK,UAAAuL,mBAAA5L,MAQA,SAAA+yB,EAAAjF,EAAAnuB,EAAAN,GACAW,KAAAypB,SAAA,QACAzpB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAA8tB,OACA9tB,KAAAK,UAAAytB,EACA9tB,KAAAwpB,WAAAsE,EAAAnuB,KAAA+uB,GACA1uB,KAAAgqB,UAAA,IAAA3qB,EAAAM,EAAAwT,GAAA7D,EAAA3P,EAAA2iB,GAAAhT,EACAtP,KAAAsP,GAAA,EACAtP,KAAAquB,IAAA,EACA,IAAAroB,EAAAhG,KAAAgqB,UAAA,GAAAlhB,EAAA,GAAAhD,EAAAG,OACAjG,KAAAgqB,UAAA,GAAAlhB,EAAA,GAAAhD,EAAA,GAAAG,OACAjG,KAAA+I,EAAA0pB,WAAAlW,aACAvc,KAAA+I,EAAA0nB,YAAAzwB,KAAAgqB,UAAA,GAAAlhB,EAAA,GAAAqG,EAAAnJ,GACAhG,KAAA0pB,GAAA+I,WAAAngB,MAAAtS,KAAA+I,GACA/I,KAAAqyB,qBAAAQ,qBAAAC,qBACA9yB,KAAAujB,MAAAvjB,KAAAqyB,qBACAryB,KAAAujB,MAAAoP,SAAA3yB,KAAA+I,GACA/I,KAAAkrB,UAAAhC,EACAlpB,KAAAgO,MAAAokB,EACApyB,KAAAwtB,UAAyBtC,UAAAhC,EAAAa,UAAA,GACzB/pB,KAAAiuB,iBAvHA,WACA,IAAA5E,EAAArpB,KAAAqtB,KAAAC,cAAAttB,KAAAwpB,WACAhD,EAAAxmB,KAAAgqB,UAAA,GAAA1gB,EAAAtJ,KAAAwpB,WACA+D,EAAAvtB,KAAAgqB,UAAAhqB,KAAAgqB,UAAA/jB,OAAA,GAAAqD,EAAAtJ,KAAAwpB,WACA0B,EAAAlrB,KAAAwtB,SAAAtC,UAQA,OAPAA,IAAAhC,IAAAgC,EAAA1E,GAAA6C,EAAA7C,GAAA0E,EAAAqC,GAAAlE,EAAAkE,KAEAvtB,KAAAwtB,SAAAzD,UAAAmB,EAAA7B,EAAArpB,KAAAwtB,SAAAzD,UAAA,EACA/pB,KAAA8xB,iBAAAzI,EAAArpB,KAAA0pB,GAAA1pB,KAAAwtB,WAGAxtB,KAAAwtB,SAAAtC,UAAA7B,EACArpB,KAAA0pB,IA2GA7e,KAAA7K,OAzBA4yB,EAAAxoB,UAAA0nB,mBACAc,EAAAxoB,UAAA+B,SAAA0hB,EACA+E,EAAAxoB,UAAAsjB,YACAkF,EAAAxoB,UAAAkkB,YAwBAyE,EAAA3oB,UAAA+B,SAAA0hB,EACAkF,EAAA3oB,UAAA0nB,mBACAiB,EAAA3oB,UAAAsjB,YACAqF,EAAA3oB,UAAAkkB,YAEA,IAAA0E,EAAA,WAEA,IAAAC,EAAAxsB,YAEA,SAAAusB,EAAAlF,EAAAnuB,GAOAK,KAAA+I,EAAA0pB,WAAAlW,aACAvc,KAAA+I,EAAA0nB,aAAA,KACAzwB,KAAAqyB,qBAAAQ,qBAAAC,qBACA9yB,KAAAujB,MAAAvjB,KAAAqyB,qBACAryB,KAAAqyB,qBAAAM,SAAA3yB,KAAA+I,GACA/I,KAAAwJ,EAAA7J,EAAA6J,EACAxJ,KAAA8tB,OACA9tB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAguB,SAAA,EACAhuB,KAAAoM,6BAAA0hB,GACA9tB,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAA,IAAApJ,MACAA,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,EAAA,IAAA9I,MACAA,KAAA8L,kBAAA7F,OACAjG,KAAAsP,GAAA,GAEAtP,KAAAsP,GAAA,EACAtP,KAAAkzB,oBAkDA,OA9CAF,EAAA5oB,WACA4D,MAAAokB,EACAjmB,SAAA,WACAnM,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,UAGAhuB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,QACAhuB,KAAAiM,2BAEAjM,KAAAkM,MACAlM,KAAAkzB,qBAGAA,iBAAA,WACA,IAAAtf,EAAA5T,KAAAoJ,EAAAL,EAAA,GAAAkJ,EAAAjS,KAAAoJ,EAAAL,EAAA,GAAAoqB,EAAAnzB,KAAA8I,EAAAC,EAAA,KAAAkkB,EAAAjtB,KAAA8I,EAAAC,EAAA,KACAqqB,EAAA,IAAApzB,KAAAwJ,EACA3G,EAAA7C,KAAA+I,EACAlG,EAAAkG,EAAA,MAAA6K,EACA/Q,EAAAkG,EAAA,MAAAkJ,EAAAgb,EACApqB,EAAAkG,EAAA,MAAAqqB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAAkG,EAAA,MAAAkJ,EACApP,EAAAkG,EAAA,MAAA6K,EACA/Q,EAAAkG,EAAA,MAAAkJ,EAAAgb,EACApqB,EAAAkG,EAAA,MAAAqqB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAAkG,EAAA,MAAAkJ,EACApP,EAAAiD,EAAA,MAAAstB,EAAAxf,EAAAuf,EAAAF,EAAArf,EAAAuf,EAAAF,EACApwB,EAAAiD,EAAA,MAAAmM,EAAAgb,EACApqB,EAAAiD,EAAA,MAAAstB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAAiD,EAAA,MAAAmM,EAAAgb,EAAAgG,EACApwB,EAAAiD,EAAA,MAAAstB,EAAAxf,EAAAuf,EAAAF,EAAArf,EAAAuf,EAAAF,EACApwB,EAAAiD,EAAA,MAAAmM,EAAAgb,EACApqB,EAAAiD,EAAA,MAAAstB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAAiD,EAAA,MAAAmM,EAAAgb,EAAAgG,EACApwB,EAAA6M,EAAA,MAAA0jB,EAAAxf,EAAAuf,EAAAF,EAAArf,EAAAuf,EAAAF,EACApwB,EAAA6M,EAAA,MAAAuC,EAAAgb,EACApqB,EAAA6M,EAAA,MAAA0jB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAA6M,EAAA,MAAAuC,EAAAgb,EAAAgG,EACApwB,EAAA6M,EAAA,MAAA0jB,EAAAxf,EAAAuf,EAAAF,EAAArf,EAAAuf,EAAAF,EACApwB,EAAA6M,EAAA,MAAAuC,EAAAgb,EACApqB,EAAA6M,EAAA,MAAA0jB,EAAAxf,EAAAuf,EAAAvf,EAAAuf,EACAtwB,EAAA6M,EAAA,MAAAuC,EAAAgb,EAAAgG,IAIAzY,iBAAA7O,0BAAAqnB,GAEAA,EA7EA,GAgFAK,EAAA,WAEA,SAAAA,EAAAvF,EAAAnuB,GACAK,KAAA+I,EAAA0pB,WAAAlW,aACAvc,KAAA+I,EAAA0nB,aAAA,KACAzwB,KAAA8tB,OACA9tB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAL,OACAK,KAAAguB,SAAA,EACAhuB,KAAAwJ,EAAA7J,EAAA6J,EACAxJ,KAAAoM,6BAAA0hB,GACA,IAAAnuB,EAAAgP,IACA3O,KAAAszB,GAAArK,gBAAAuF,QAAAV,EAAAnuB,EAAA2zB,GAAA,IAAAtzB,MACAA,KAAAuzB,GAAAtK,gBAAAuF,QAAAV,EAAAnuB,EAAA4zB,GAAA,MAAAvzB,MACAA,KAAAwzB,cAAAxzB,KAAAyzB,mBAEAzzB,KAAAwzB,cAAAxzB,KAAA0zB,qBAEA1zB,KAAAmT,GAAA8V,gBAAAuF,QAAAV,EAAAnuB,EAAAwT,GAAA,IAAAnT,MACAA,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAA,IAAApJ,MACAA,KAAAgJ,EAAAigB,gBAAAuF,QAAAV,EAAAnuB,EAAAqJ,EAAA,EAAAzC,UAAAvG,MACAA,KAAAuvB,GAAAtG,gBAAAuF,QAAAV,EAAAnuB,EAAA4vB,GAAA,IAAAvvB,MACAA,KAAA2zB,GAAA1K,gBAAAuF,QAAAV,EAAAnuB,EAAAg0B,GAAA,MAAA3zB,MACAA,KAAAqyB,qBAAAQ,qBAAAC,qBACA9yB,KAAAqyB,qBAAAM,SAAA3yB,KAAA+I,GACA/I,KAAAujB,MAAAvjB,KAAAqyB,qBACAryB,KAAA8L,kBAAA7F,OACAjG,KAAAsP,GAAA,GAEAtP,KAAAsP,GAAA,EACAtP,KAAAwzB,iBAgFA,OA5EAH,EAAAjpB,WACA4D,MAAAokB,EACAjmB,SAAA,WACAnM,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,UAGAhuB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,QACAhuB,KAAAiM,2BACAjM,KAAAkM,MACAlM,KAAAwzB,kBAGAC,kBAAA,WACA,IAYA3tB,EAAA8tB,EAAAC,EAAAC,EAZAC,EAAA,EAAAjvB,KAAAU,MAAAxF,KAAAmT,GAAApK,GACAmF,EAAA,EAAApJ,KAAA0B,GAAAutB,EAIAC,GAAA,EACAC,EAAAj0B,KAAAuvB,GAAAxmB,EACAmrB,EAAAl0B,KAAAszB,GAAAvqB,EACAorB,EAAAn0B,KAAA2zB,GAAA5qB,EACAqrB,EAAAp0B,KAAAuzB,GAAAxqB,EACAsrB,EAAA,EAAAvvB,KAAA0B,GAAAytB,GAAA,EAAAF,GACAO,EAAA,EAAAxvB,KAAA0B,GAAA0tB,GAAA,EAAAH,GACAQ,GAAAzvB,KAAA0B,GAAA,EACA+tB,GAAAv0B,KAAAgJ,EAAAD,EACA,IAAAuU,EAAA,IAAAtd,KAAAL,KAAA6J,GAAA,IAEA,IADAxJ,KAAA+I,EAAAiV,QAAA,EACAlY,EAAA,EAAwBA,EAAAiuB,EAASjuB,GAAA,GACjC8tB,EAAAI,EAAAC,EAAAC,EACAL,EAAAG,EAAAG,EAAAC,EACAN,EAAAE,EAAAK,EAAAC,EACA,IAAA7hB,EAAAmhB,EAAA9uB,KAAA4I,IAAA6mB,GACA7hB,EAAAkhB,EAAA9uB,KAAA8I,IAAA2mB,GACAC,EAAA,IAAA/hB,GAAA,IAAAC,EAAA,EAAAA,EAAA5N,KAAAM,KAAAqN,IAAAC,KACA+hB,EAAA,IAAAhiB,GAAA,IAAAC,EAAA,GAAAD,EAAA3N,KAAAM,KAAAqN,IAAAC,KACAD,IAAAzS,KAAAoJ,EAAAL,EAAA,GACA2J,IAAA1S,KAAAoJ,EAAAL,EAAA,GACA/I,KAAA+I,EAAAgoB,YAAAte,EAAAC,EAAAD,EAAA+hB,EAAAV,EAAAD,EAAAvW,EAAA5K,EAAA+hB,EAAAX,EAAAD,EAAAvW,EAAA7K,EAAA+hB,EAAAV,EAAAD,EAAAvW,EAAA5K,EAAA+hB,EAAAX,EAAAD,EAAAvW,EAAAxX,GAAA,GAMAkuB,KACAO,GAAArmB,EAAAoP,IAGAoW,qBAAA,WACA,IAKA5tB,EALAiuB,EAAAjvB,KAAAU,MAAAxF,KAAAmT,GAAApK,GACAmF,EAAA,EAAApJ,KAAA0B,GAAAutB,EACAH,EAAA5zB,KAAAuvB,GAAAxmB,EACA8qB,EAAA7zB,KAAA2zB,GAAA5qB,EACA+qB,EAAA,EAAAhvB,KAAA0B,GAAAotB,GAAA,EAAAG,GACAQ,GAAAzvB,KAAA0B,GAAA,EACA8W,EAAA,IAAAtd,KAAAL,KAAA6J,GAAA,IAGA,IAFA+qB,GAAAv0B,KAAAgJ,EAAAD,EACA/I,KAAA+I,EAAAiV,QAAA,EACAlY,EAAA,EAAwBA,EAAAiuB,EAASjuB,GAAA,GACjC,IAAA2M,EAAAmhB,EAAA9uB,KAAA4I,IAAA6mB,GACA7hB,EAAAkhB,EAAA9uB,KAAA8I,IAAA2mB,GACAC,EAAA,IAAA/hB,GAAA,IAAAC,EAAA,EAAAA,EAAA5N,KAAAM,KAAAqN,IAAAC,KACA+hB,EAAA,IAAAhiB,GAAA,IAAAC,EAAA,GAAAD,EAAA3N,KAAAM,KAAAqN,IAAAC,KACAD,IAAAzS,KAAAoJ,EAAAL,EAAA,GACA2J,IAAA1S,KAAAoJ,EAAAL,EAAA,GACA/I,KAAA+I,EAAAgoB,YAAAte,EAAAC,EAAAD,EAAA+hB,EAAAV,EAAAD,EAAAvW,EAAA5K,EAAA+hB,EAAAX,EAAAD,EAAAvW,EAAA7K,EAAA+hB,EAAAV,EAAAD,EAAAvW,EAAA5K,EAAA+hB,EAAAX,EAAAD,EAAAvW,EAAAxX,GAAA,GACAyuB,GAAArmB,EAAAoP,EAEAtd,KAAAujB,MAAAtd,OAAA,EACAjG,KAAAujB,MAAA,GAAAvjB,KAAA+I,IAIAyR,iBAAA7O,0BAAA0nB,GAEAA,EA9GA,GAiHAqB,EAAA,WAEA,SAAAA,EAAA5G,EAAAnuB,GACAK,KAAA+I,EAAA0pB,WAAAlW,aACAvc,KAAA+I,EAAAoG,GAAA,EACAnP,KAAAqyB,qBAAAQ,qBAAAC,qBACA9yB,KAAAqyB,qBAAAM,SAAA3yB,KAAA+I,GACA/I,KAAAujB,MAAAvjB,KAAAqyB,qBACAryB,KAAA8tB,OACA9tB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAAguB,SAAA,EACAhuB,KAAAwJ,EAAA7J,EAAA6J,EACAxJ,KAAAoM,6BAAA0hB,GACA9tB,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAyJ,EAAA,IAAApJ,MACAA,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,EAAA,IAAA9I,MACAA,KAAAgJ,EAAAigB,gBAAAuF,QAAAV,EAAAnuB,EAAAqJ,EAAA,IAAAhJ,MACAA,KAAA8L,kBAAA7F,OACAjG,KAAAsP,GAAA,GAEAtP,KAAAsP,GAAA,EACAtP,KAAA20B,qBA0DA,OAtDAD,EAAAtqB,WACAuqB,kBAAA,WACA,IAAA/gB,EAAA5T,KAAAoJ,EAAAL,EAAA,GAAAkJ,EAAAjS,KAAAoJ,EAAAL,EAAA,GAAA6rB,EAAA50B,KAAA8I,EAAAC,EAAA,KAAAinB,EAAAhwB,KAAA8I,EAAAC,EAAA,KACAhE,EAAAW,OAAAkvB,EAAA5E,EAAAhwB,KAAAgJ,EAAAD,GACAkqB,EAAAluB,GAAA,EAAA0B,aACAzG,KAAA+I,EAAAiV,QAAA,EAEA,IAAAhe,KAAAwJ,GAAA,IAAAxJ,KAAAwJ,GACAxJ,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAA,MACAjzB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA,MACA,IAAAA,GACA/E,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAA,MACAjzB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA,MACA/E,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAA,QAEAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA3iB,EAAA+d,EAAA,GACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAApc,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAA,MAGAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA,MACA,IAAAA,GACA/E,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAA,MACAjzB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA,MACA/E,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA7vB,EAAAkN,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAjrB,EAAA6O,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAA,QAEAjzB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA3iB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAApc,EAAAghB,EAAA3iB,EAAA+d,EAAAiD,EAAArf,EAAAghB,EAAA3iB,EAAA+d,EAAA,MACAhwB,KAAA+I,EAAAgoB,YAAAnd,EAAAghB,EAAA3iB,EAAA+d,EAAApc,EAAAghB,EAAA3B,EAAAhhB,EAAA+d,EAAApc,EAAAghB,EAAA3iB,EAAA+d,EAAA,SAKA7jB,SAAA,SAAAkd,GACArpB,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,UAGAhuB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,QACAhuB,KAAAiM,2BACAjM,KAAAkM,MACAlM,KAAA20B,sBAIA3mB,MAAAokB,GAEA5X,iBAAA7O,0BAAA+oB,GAEAA,EA9EA,GAgHA,IAAAld,GACAqd,aAhCA,SAAA/G,EAAAnuB,EAAAN,GACA,IAAAwM,EAmBA,OAlBA,IAAAxM,GAAA,IAAAA,EAIAwM,GAHA,IAAAxM,EAAAM,EAAAwT,GAAAxT,EAAA2iB,IACAhT,EACArJ,OACA,IAAA8sB,EAAAjF,EAAAnuB,EAAAN,GAEA,IAAAuzB,EAAA9E,EAAAnuB,EAAAN,GAES,IAAAA,EACTwM,EAAA,IAAA6oB,EAAA5G,EAAAnuB,GACS,IAAAN,EACTwM,EAAA,IAAAmnB,EAAAlF,EAAAnuB,GACS,IAAAN,IACTwM,EAAA,IAAAwnB,EAAAvF,EAAAnuB,IAEAkM,EAAAyD,GACAwe,EAAAliB,mBAAAC,GAEAA,GAaAipB,uBAVA,WACA,OAAAlC,GAUAmC,gCAPA,WACA,OAAAhC,IAOA,OAAAvb,EA3fA,GA6fAwd,eAAA,WACA,IAAAxd,KACAyd,KAcA,OAbAzd,EAAA0d,iBAGA,SAAAxd,EAAAzT,GACAgxB,EAAAvd,KACAud,EAAAvd,GAAAzT,IAJAuT,EAAA2d,YAQA,SAAAzd,EAAAoW,EAAAnuB,GACA,WAAAs1B,EAAAvd,GAAAoW,EAAAnuB,IAGA6X,EAhBA,GAmBA,SAAA4d,iBAsCA,SAAAC,gBA8TA,SAAAC,wBA6FA,SAAAC,oBA0MA,SAAAC,kBACAx1B,KAAAge,QAAA,EACAhe,KAAAwwB,WAAA,EACAxwB,KAAAgiB,OAAA3b,iBAAArG,KAAAwwB,YAmBA,SAAAiF,aAAA3H,EAAAnuB,EAAAa,EAAAH,GACAL,KAAA8tB,OACA9tB,KAAAguB,SAAA,EACAhuB,KAAA01B,UAAArvB,iBAAA1G,EAAAsG,QACAjG,KAAAQ,WACAR,KAAAsP,GAAA,EACAtP,KAAA21B,QAAA,GACA31B,KAAA41B,UAAA7qB,iBAAA,UAAApL,EAAAsG,OAAAtG,EAAAsG,OAAA,KACAjG,KAAA61B,WAAA9qB,iBAAA,aACA/K,KAAAoM,6BAAA/L,GACA,IAAAyF,EAAA+F,EAAA7F,EAAArG,EAAAsG,QAAA,EACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvB+F,EAAAod,gBAAAuF,QAAAV,EAAAnuB,EAAAmG,GAAAiD,EAAA,IAAA/I,MACAA,KAAAsP,EAAAzD,EAAAyD,GAAAtP,KAAAsP,EACAtP,KAAA01B,UAAA5vB,IAA6B2J,EAAA9P,EAAAmG,GAAA2J,EAAArG,EAAAyC,GAE7B7L,KAAAsP,GACAtP,KAAAmM,UAAA,GAEAnM,KAAAgM,YAAAhM,KAAAsP,EA6BA,SAAAwmB,iBAAAhI,EAAAnuB,EAAAU,GACAL,KAAAL,OACAK,KAAAmP,EAAApE,iBAAA,WAAApL,EAAAyJ,GACA,IAAA2sB,EAAAp2B,EAAA2P,IAAA,GAAAxG,EAAAnJ,EAAA2P,IAAA,GAAAxG,EAAA7C,OAAA,EAAAtG,EAAAyJ,EAAAzJ,EAAA2P,IAAArJ,OAAA,EAAAtG,EAAAyJ,EACApJ,KAAA0P,EAAA3E,iBAAA,UAAAgrB,GACA/1B,KAAAg2B,OAAA,EACAh2B,KAAAi2B,OAAA,EACAj2B,KAAAk2B,aAAAl2B,KAAAm2B,mBACAn2B,KAAAo2B,YAAAL,EACA/1B,KAAAoM,6BAAA/L,GACAL,KAAA6L,KAAAod,gBAAAuF,QAAAV,EAAAnuB,EAAA2P,EAAA,OAAAtP,MACAA,KAAAsP,EAAAtP,KAAA6L,KAAAyD,EACAtP,KAAAmM,UAAA,GA5tBAipB,cAAAhrB,UAAAisB,uBAAA,aACAjB,cAAAhrB,UAAAksB,mBAAA,aACAlB,cAAAhrB,UAAAuoB,SAAA,SAAAhzB,GACA,IAAAK,KAAA4d,OAAA,CAEAje,EAAAgsB,GAAAtrB,UAAAuL,mBAAAjM,EAAAgsB,IACA,IAAAlO,GAAyB8Y,MAAA52B,EAAAgsB,GAAAhsB,OAAA0yB,qBAAAQ,qBAAAC,sBACzB9yB,KAAAgiB,OAAArX,KAAA8S,GACAzd,KAAAs2B,mBAAA7Y,GACAzd,KAAAgM,aACArM,EAAA62B,kBAIApB,cAAAhrB,UAAAunB,KAAA,SAAA7D,EAAAnuB,GACAK,KAAAgiB,UACAhiB,KAAA8tB,OACA9tB,KAAAoM,6BAAA0hB,GACA9tB,KAAAq2B,uBAAAvI,EAAAnuB,GACAK,KAAAguB,QAAA1pB,oBACAtE,KAAA4d,QAAA,EACA5d,KAAAsP,GAAA,EACAtP,KAAA8L,kBAAA7F,OACAjG,KAAAsP,GAAA,EAEAtP,KAAAmM,UAAA,IAGAipB,cAAAhrB,UAAAqsB,YAAA,WACAz2B,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,UAGAhuB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,QACAhuB,KAAAiM,6BAGAuO,iBAAA7O,0BAAAypB,eAGA5a,iBAAA4a,eAAAC,cACAA,aAAAjrB,UAAAisB,uBAAA,SAAAvI,EAAAnuB,GACAK,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,EAAA,MAAA9I,MACAA,KAAAoP,EAAA6Z,gBAAAuF,QAAAV,EAAAnuB,EAAAyP,EAAA,MAAApP,MACAA,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,IAAA1P,MACAA,KAAA02B,OAAA,EACA12B,KAAA22B,OAAA,EACA32B,KAAAmM,SAAAnM,KAAAy2B,YACAz2B,KAAAwP,EAAA7P,EAAA6P,EACAxP,KAAAgM,cAAAhM,KAAA8I,EAAAmlB,gBAAAhoB,UAAAjG,KAAAoP,EAAA6e,gBAAAhoB,UAAAjG,KAAA0P,EAAAue,gBAAAhoB,QAGAovB,aAAAjrB,UAAAksB,mBAAA,SAAA7Y,GACAA,EAAAmZ,cAGAvB,aAAAjrB,UAAAysB,oBAAA,SAAA/tB,EAAAsG,EAAA0nB,EAAA5a,EAAA6a,GACA,IAAAC,KACA5nB,GAAA,EACA4nB,EAAArsB,MACA7B,IACAsG,MAEKtG,GAAA,EACLkuB,EAAArsB,MACA7B,IAAA,EACAsG,IAAA,KAGA4nB,EAAArsB,MACA7B,IACAsG,EAAA,IAEA4nB,EAAArsB,MACA7B,EAAA,EACAsG,IAAA,KAGA,IACAtJ,EAAAmxB,EADAC,KACAlxB,EAAAgxB,EAAA/wB,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,GAKxB,IAAAqxB,EAAAC,EAHA,IADAH,EAAAD,EAAAlxB,IACAsJ,EAAA2nB,EAAA7a,GAAA+a,EAAAnuB,EAAAiuB,EAAA7a,EAAA4a,QAKAK,EADAF,EAAAnuB,EAAAiuB,GAAA7a,EACA,GAEA+a,EAAAnuB,EAAAiuB,EAAA7a,GAAA4a,EAGAM,EADAH,EAAA7nB,EAAA2nB,GAAA7a,EAAA4a,EACA,GAEAG,EAAA7nB,EAAA2nB,EAAA7a,GAAA4a,EAEAI,EAAAvsB,MAAAwsB,EAAAC,IAMA,OAHAF,EAAAjxB,QACAixB,EAAAvsB,MAAA,MAEAusB,GAGA7B,aAAAjrB,UAAAitB,iBAAA,SAAAT,GACA,IAAA9wB,EAAAE,EAAA4wB,EAAA3wB,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB6X,qBAAA2Z,QAAAV,EAAA9wB,IAGA,OADA8wB,EAAA3wB,OAAA,EACA2wB,GAGAvB,aAAAjrB,UAAAmtB,cAAA,SAAApJ,GACA,IAAArlB,EAAAsG,EAwBAooB,EAvBA,GAAAx3B,KAAAkM,MAAAiiB,EAAA,CACA,IAAAze,EAAA1P,KAAA0P,EAAA3G,EAAA,QASA,GARA2G,EAAA,IACAA,GAAA,IAEA5G,GAAA9I,KAAA8I,EAAAC,EAAA,IAAA/I,KAAA8I,EAAAC,EAAA,IAAA/I,KAAA8I,EAAAC,GAAA2G,IACAN,GAAApP,KAAAoP,EAAArG,EAAA,IAAA/I,KAAAoP,EAAArG,EAAA,IAAA/I,KAAAoP,EAAArG,GAAA2G,GAIA,CACA,IAAA+nB,EAAA3uB,EACAA,EAAAsG,EACAA,EAAAqoB,EAEA3uB,EAAA,KAAAhE,KAAAC,MAAA,IAAA+D,GACAsG,EAAA,KAAAtK,KAAAC,MAAA,IAAAqK,GACApP,KAAA02B,OAAA5tB,EACA9I,KAAA22B,OAAAvnB,OAEAtG,EAAA9I,KAAA02B,OACAtnB,EAAApP,KAAA22B,OAGA,IAAA7wB,EAAAuJ,EAAA+R,EACAwV,EAAAtT,EAAAoU,EADA1xB,EAAAhG,KAAAgiB,OAAA/b,OACA8wB,EAAA,EAEA,GAAA3nB,IAAAtG,EACA,IAAAhD,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B9F,KAAAgiB,OAAAlc,GAAAusB,qBAAAK,gBACA1yB,KAAAgiB,OAAAlc,GAAAywB,MAAArqB,MAAA,EACAlM,KAAAgiB,OAAAlc,GAAAywB,MAAAhT,MAAAvjB,KAAAgiB,OAAAlc,GAAAusB,0BAEK,OAAAjjB,GAAA,IAAAtG,GAAA,IAAAsG,GAAA,IAAAtG,GAsFA,GAAA9I,KAAAkM,KACL,IAAApG,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAG5B9F,KAAAgiB,OAAAlc,GAAA8wB,UAAA3wB,OAAA,EACAjG,KAAAgiB,OAAAlc,GAAAywB,MAAArqB,MAAA,MA3FK,CACL,IAAAuR,EAAA4U,EAAA2E,KACA,IAAAlxB,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAG5B,IAFA2X,EAAAzd,KAAAgiB,OAAAlc,IAEAywB,MAAArqB,MAAAlM,KAAAkM,MAAAiiB,GAAA,IAAAnuB,KAAAwP,EAEa,CAIb,GAFA4R,GADAoW,EAAA/Z,EAAA8Y,MAAAhT,OACAvF,QACA0Z,EAAA,GACAja,EAAA8Y,MAAArqB,MAAAuR,EAAAmZ,UAAA3wB,OACAyxB,EAAAja,EAAAia,qBACiB,CAEjB,IADAd,EAAA52B,KAAAq3B,iBAAA5Z,EAAAmZ,WACAvnB,EAAA,EAA+BA,EAAA+R,EAAU/R,GAAA,EACzCiU,EAAAzC,IAAArD,kBAAAga,EAAAxV,OAAA3S,IACAunB,EAAAjsB,KAAA2Y,GACAoU,GAAApU,EAAArF,YAEAR,EAAAia,mBACAja,EAAAmZ,YAGAG,GAAAW,EACAja,EAAA8Y,MAAArqB,MAAA,OAnBAuR,EAAA8Y,MAAAhT,MAAA9F,EAAA4U,qBAsBA,IAAAsF,EAAAR,EAAAruB,EAAAsuB,EAAAhoB,EAAA8M,EAAA,EACA,IAAApW,EAAAE,EAAA,EAAyBF,GAAA,EAAQA,GAAA,EAEjC,IADA2X,EAAAzd,KAAAgiB,OAAAlc,IACAywB,MAAArqB,KAAA,CAWA,KAVAmmB,EAAA5U,EAAA4U,sBACAK,gBAEA,IAAA1yB,KAAAwP,GAAAxJ,EAAA,GACA2xB,EAAA33B,KAAA62B,oBAAA/tB,EAAAsG,EAAAqO,EAAAia,iBAAAxb,EAAA6a,GACA7a,GAAAuB,EAAAia,kBAEAC,IAAAR,EAAAC,IAEAhW,EAAAuW,EAAA1xB,OACAoJ,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,GACrC8nB,EAAAQ,EAAAtoB,GAAA,GACA+nB,EAAAO,EAAAtoB,GAAA,GACA2nB,EAAA/wB,OAAA,EACAmxB,GAAA,EACAJ,EAAArsB,MACA7B,EAAA2U,EAAAia,iBAAAP,EACA/nB,EAAAqO,EAAAia,iBAAAN,IAEqBD,GAAA,EACrBH,EAAArsB,MACA7B,EAAA2U,EAAAia,kBAAAP,EAAA,GACA/nB,EAAAqO,EAAAia,kBAAAN,EAAA,MAGAJ,EAAArsB,MACA7B,EAAA2U,EAAAia,iBAAAP,EACA/nB,EAAAqO,EAAAia,mBAEAV,EAAArsB,MACA7B,EAAA,EACAsG,EAAAqO,EAAAia,kBAAAN,EAAA,MAGA,IAAAQ,EAAA53B,KAAA63B,UAAApa,EAAAuZ,EAAA,IACA,GAAAA,EAAA,GAAAluB,IAAAkuB,EAAA,GAAA5nB,EAAA,CACA,GAAA4nB,EAAA/wB,OAAA,EAEA,GADAwX,EAAA8Y,MAAAhT,MAAAvB,OAAAvE,EAAA8Y,MAAAhT,MAAAvF,QAAA,GACA7O,EAAA,CACA,IAAA2oB,EAAAF,EAAAG,MACA/3B,KAAAg4B,SAAAJ,EAAAvF,GACAuF,EAAA53B,KAAA63B,UAAApa,EAAAuZ,EAAA,GAAAc,QAEA93B,KAAAg4B,SAAAJ,EAAAvF,GACAuF,EAAA53B,KAAA63B,UAAApa,EAAAuZ,EAAA,IAGAh3B,KAAAg4B,SAAAJ,EAAAvF,IAIA5U,EAAA8Y,MAAAhT,MAAA8O,KAaAgD,aAAAjrB,UAAA4tB,SAAA,SAAAC,EAAA5F,GACA,IAAAvsB,EAAAE,EAAAiyB,EAAAhyB,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxBusB,EAAAM,SAAAsF,EAAAnyB,KAIAuvB,aAAAjrB,UAAA8tB,WAAA,SAAAzkB,EAAAC,EAAAC,EAAAkI,EAAAsc,EAAArH,EAAAsH,GACAD,EAAAtH,QAAAnd,EAAA,GAAAA,EAAA,OAAAod,GACAqH,EAAAtH,QAAAld,EAAA,GAAAA,EAAA,OAAAmd,EAAA,GACAsH,GACAD,EAAAtH,QAAApd,EAAA,GAAAA,EAAA,OAAAqd,GAEAqH,EAAAtH,QAAAhV,EAAA,GAAAA,EAAA,OAAAiV,EAAA,IAGAuE,aAAAjrB,UAAAiuB,oBAAA,SAAAvf,EAAAqf,EAAArH,EAAAsH,GACAD,EAAAtH,QAAA/X,EAAA,GAAAA,EAAA,OAAAgY,GACAqH,EAAAtH,QAAA/X,EAAA,GAAAA,EAAA,OAAAgY,EAAA,GACAsH,GACAD,EAAAtH,QAAA/X,EAAA,GAAAA,EAAA,OAAAgY,GAEAqH,EAAAtH,QAAA/X,EAAA,GAAAA,EAAA,OAAAgY,EAAA,IAGAuE,aAAAjrB,UAAAytB,UAAA,SAAApa,EAAA6a,EAAAH,GACA,IAEAryB,EAAAuJ,EAAA+R,EAEAmX,EAAAC,EACA/b,EACAgc,EAEAtb,EARAyZ,EAAAnZ,EAAAmZ,UACAY,EAAA/Z,EAAA8Y,MAAAhT,MAAAvB,OACAhc,EAAAyX,EAAA8Y,MAAAhT,MAAAvF,QACA9B,EAAA,EAIA8F,KAEAoW,GAAA,EAUA,IATAD,GAKAK,EAAAL,EAAAna,QACAb,EAAAgb,EAAAna,UALAma,EAAA1F,WAAAlW,aACAic,EAAA,EACArb,EAAA,GAKA6E,EAAArX,KAAAwtB,GACAryB,EAAA,EAAeA,EAAAE,EAASF,GAAA,GAIxB,IAHA2W,EAAAma,EAAA9wB,GAAA2W,QACA0b,EAAAhpB,EAAAqoB,EAAA1xB,GAAAqJ,EACAiS,EAAAoW,EAAA1xB,GAAAqJ,EAAAsN,EAAAxW,OAAAwW,EAAAxW,OAAA,EACAoJ,EAAA,EAAmBA,EAAA+R,EAAU/R,GAAA,EAE7B,GAAA6M,GADAqc,EAAA9b,EAAApN,EAAA,IACA6M,YAAAoc,EAAAxvB,EACAoT,GAAAqc,EAAArc,YACAic,EAAAhpB,GAAA,MACa,IAAA+M,EAAAoc,EAAAlpB,EAAA,CACb+oB,EAAAhpB,GAAA,EACA,MAEAmpB,EAAAxvB,GAAAoT,GAAAoc,EAAAlpB,GAAA8M,EAAAqc,EAAArc,aACAlc,KAAAk4B,WAAAV,EAAA1xB,GAAAiD,EAAAsG,EAAA,GAAAmoB,EAAA1xB,GAAA4J,EAAAL,EAAA,GAAAmoB,EAAA1xB,KAAAuJ,GAAAmoB,EAAA1xB,GAAAiD,EAAAsG,GAAA8oB,EAAAK,EAAAJ,GACAA,GAAA,IAEAK,EAAA5X,IAAA3C,cAAAsZ,EAAA1xB,GAAAiD,EAAAsG,EAAA,GAAAmoB,EAAA1xB,GAAAiD,EAAAsG,GAAAmoB,EAAA1xB,GAAA4J,EAAAL,EAAA,GAAAmoB,EAAA1xB,KAAAuJ,IAAAipB,EAAAxvB,EAAAoT,GAAAqc,EAAArc,aAAAoc,EAAAlpB,EAAA8M,GAAAqc,EAAArc,YAAAO,EAAApN,EAAA,IACArP,KAAAq4B,oBAAAI,EAAAN,EAAAK,EAAAJ,GAEAA,GAAA,EACAD,EAAAhpB,GAAA,GAEA+M,GAAAqc,EAAArc,YACAsc,GAAA,EAGA,GAAAhB,EAAA1xB,GAAAqJ,GAAAsN,EAAAxW,OAAA,CAEA,GADAsyB,EAAA9b,EAAApN,EAAA,GACA6M,GAAAoc,EAAAlpB,EAAA,CACA,IAAA6N,EAAAR,EAAApN,EAAA,GAAA6M,YACAoc,EAAAxvB,GAAAoT,GAAAoc,EAAAlpB,GAAA8M,EAAAe,GACAjd,KAAAk4B,WAAAV,EAAA1xB,GAAAiD,EAAAsG,EAAA,GAAAmoB,EAAA1xB,GAAA4J,EAAAL,EAAA,GAAAmoB,EAAA1xB,KAAA,GAAA0xB,EAAA1xB,GAAAiD,EAAA,GAAAovB,EAAAK,EAAAJ,GACAA,GAAA,IAEAK,EAAA5X,IAAA3C,cAAAsZ,EAAA1xB,GAAAiD,EAAAsG,EAAA,GAAAmoB,EAAA1xB,GAAAiD,EAAA,GAAAyuB,EAAA1xB,GAAA4J,EAAAL,EAAA,GAAAmoB,EAAA1xB,KAAA,IAAAwyB,EAAAxvB,EAAAoT,GAAAe,GAAAqb,EAAAlpB,EAAA8M,GAAAe,EAAAR,EAAApN,EAAA,IACArP,KAAAq4B,oBAAAI,EAAAN,EAAAK,EAAAJ,GAEAA,GAAA,EACAD,EAAAhpB,GAAA,QAGAgpB,EAAAhpB,GAAA,EAEA+M,GAAAqc,EAAArc,YACAsc,GAAA,EAMA,GAJAL,EAAAna,UACAma,EAAAtH,QAAAsH,EAAApvB,EAAAoU,GAAA,GAAAgb,EAAApvB,EAAAoU,GAAA,OAAAA,GACAgb,EAAAtH,QAAAsH,EAAApvB,EAAAovB,EAAAna,QAAA,MAAAma,EAAApvB,EAAAovB,EAAAna,QAAA,UAAAma,EAAAna,QAAA,IAEA9B,EAAAoc,EAAAlpB,EACA,MAEAtJ,EAAAE,EAAA,IACAmyB,EAAA1F,WAAAlW,aACA6b,GAAA,EACApW,EAAArX,KAAAwtB,GACAK,EAAA,GAGA,OAAAxW,GAIAgT,eAAAE,iBAAA,KAAAG,cAEA7a,iBAAA4a,eAAAE,sBACAA,qBAAAlrB,UAAAisB,uBAAA,SAAAvI,EAAAnuB,GACAK,KAAAmM,SAAAnM,KAAAy2B,YACAz2B,KAAA04B,GAAAzP,gBAAAuF,QAAAV,EAAAnuB,EAAAqJ,EAAA,OAAAhJ,MACAA,KAAAgM,cAAAhM,KAAA04B,GAAAzK,gBAAAhoB,QAGAqvB,qBAAAlrB,UAAAuuB,YAAA,SAAAnW,EAAAzd,GACA,IAAA6zB,EAAAnG,WAAAlW,aACAqc,EAAAzpB,EAAAqT,EAAArT,EACA,IAAArJ,EACA+yB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAlI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAFArrB,EAAAwc,EAAAxE,QACA2K,EAAA,EAEA,IAAA7iB,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB+yB,EAAArW,EAAAzZ,EAAAjD,GACAizB,EAAAvW,EAAA9S,EAAA5J,GACAgzB,EAAAtW,EAAA1c,KACA+yB,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAE,EAAA,IAAAF,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,IAAAhzB,OAAAE,EAAA,GAAAwc,EAAArT,GAQA6pB,EADA,IAAAlzB,EACA0c,EAAAzZ,EAAA/C,EAAA,GAEAwc,EAAAzZ,EAAAjD,EAAA,GAGAozB,GADAD,EAAAn0B,KAAAM,KAAAN,KAAAI,IAAA2zB,EAAA,GAAAG,EAAA,MAAAl0B,KAAAI,IAAA2zB,EAAA,GAAAG,EAAA,QACAl0B,KAAA1B,IAAA61B,EAAA,EAAAl0B,GAAAk0B,EAAA,EACAjI,EAAAI,EAAAyH,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACAjI,EAAAI,EAAAwH,EAAA,IAAAA,EAAA,GAAAG,EAAA,IAAAE,EACAhI,EAAAF,KAAA6H,EAAA,IAAApyB,YACA0qB,EAAAF,KAAA4H,EAAA,IAAApyB,YACAmyB,EAAA7H,YAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1I,GACAA,GAAA,EAGAqQ,EADAlzB,IAAAE,EAAA,EACAwc,EAAAzZ,EAAA,GAEAyZ,EAAAzZ,EAAAjD,EAAA,GAGAozB,GADAD,EAAAn0B,KAAAM,KAAAN,KAAAI,IAAA2zB,EAAA,GAAAG,EAAA,MAAAl0B,KAAAI,IAAA2zB,EAAA,GAAAG,EAAA,QACAl0B,KAAA1B,IAAA61B,EAAA,EAAAl0B,GAAAk0B,EAAA,EACAjI,EAAAE,EAAA2H,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACAjI,EAAAE,EAAA0H,EAAA,IAAAG,EAAA,GAAAH,EAAA,IAAAK,EACA9H,EAAAJ,KAAA6H,EAAA,IAAApyB,YACA4qB,EAAAJ,KAAA4H,EAAA,IAAApyB,YACAmyB,EAAA7H,YAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1I,GACAA,GAAA,IAhCAiQ,EAAA7H,YAAA8H,EAAA,GAAAA,EAAA,GAAAE,EAAA,GAAAA,EAAA,GAAAD,EAAA,GAAAA,EAAA,GAAAnQ,GAIAA,GAAA,IA+BAiQ,EAAA7H,YAAAvO,EAAAzZ,EAAAjD,GAAA,GAAA0c,EAAAzZ,EAAAjD,GAAA,GAAA0c,EAAA9S,EAAA5J,GAAA,GAAA0c,EAAA9S,EAAA5J,GAAA,GAAA0c,EAAA1c,KAAA,GAAA0c,EAAA1c,KAAA,GAAA6iB,GACAA,GAAA,GAGA,OAAAiQ,GAGAtD,qBAAAlrB,UAAAmtB,cAAA,SAAApJ,GACA,IAAAqJ,EACA1xB,EACAuJ,EAAA+R,EAIA3D,EAAA4U,EALArsB,EAAAhG,KAAAgiB,OAAA/b,OAEAyyB,EAAA14B,KAAA04B,GAAA3vB,EAEA,OAAA2vB,EAEA,IAAA5yB,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,GAItB,IAHA2X,EAAAzd,KAAAgiB,OAAAlc,IACAywB,MAAAhT,MACA8O,EAAA5U,EAAA4U,qBACA5U,EAAA8Y,MAAArqB,MAAAlM,KAAAkM,MAAAiiB,EAKA,IAJAkE,EAAAK,gBACAjV,EAAA8Y,MAAArqB,MAAA,EACAsrB,EAAA/Z,EAAA8Y,MAAAhT,MAAAvB,OACAZ,EAAA3D,EAAA8Y,MAAAhT,MAAAvF,QACA3O,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/BgjB,EAAAM,SAAA3yB,KAAA24B,YAAAnB,EAAAnoB,GAAAqpB,IAGAjb,EAAA8Y,MAAAhT,MAAA9F,EAAA4U,qBAIAryB,KAAA8L,kBAAA7F,SACAjG,KAAAkM,MAAA,IAIA8oB,eAAAE,iBAAA,KAAAI,sBAEA9a,iBAAA4a,eAAAG,kBAEAA,iBAAAnrB,UAAAisB,uBAAA,SAAAvI,EAAAnuB,GACAK,KAAAmM,SAAAnM,KAAAy2B,YACAz2B,KAAAmP,EAAA8Z,gBAAAuF,QAAAV,EAAAnuB,EAAAwP,EAAA,OAAAnP,MACAA,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,OAAA1P,MACAA,KAAAm5B,GAAAvK,yBAAA0B,qBAAAxC,EAAAnuB,EAAAw5B,GAAAn5B,MACAA,KAAAo5B,GAAAnQ,gBAAAuF,QAAAV,EAAAnuB,EAAAw5B,GAAAC,GAAA,MAAAp5B,MACAA,KAAAq5B,GAAApQ,gBAAAuF,QAAAV,EAAAnuB,EAAAw5B,GAAAE,GAAA,MAAAr5B,MACAA,KAAAL,OACAK,KAAA8L,kBAAA7F,QACAjG,KAAAmM,UAAA,GAEAnM,KAAAgM,cAAAhM,KAAA8L,kBAAA7F,OACAjG,KAAAs5B,QAAA,IAAA9rB,OACAxN,KAAAu5B,QAAA,IAAA/rB,OACAxN,KAAAw5B,QAAA,IAAAhsB,OACAxN,KAAAy5B,QAAA,IAAAjsB,OACAxN,KAAA05B,OAAA,IAAAlsB,QAGA+nB,iBAAAnrB,UAAAuvB,gBAAA,SAAAL,EAAAC,EAAAC,EAAAzpB,EAAAgM,EAAA6d,GACA,IAAAtc,EAAAsc,GAAA,IACAC,EAAA9pB,EAAAjH,EAAAC,EAAA,MAAAgH,EAAAjH,EAAAC,EAAA,OAAAgT,GACA+d,EAAA/pB,EAAAjH,EAAAC,EAAA,MAAAgH,EAAAjH,EAAAC,EAAA,OAAAgT,GACAud,EAAA3pB,UAAAI,EAAA3G,EAAAL,EAAA,GAAAuU,EAAAvB,EAAAhM,EAAA3G,EAAAL,EAAA,GAAAuU,EAAAvB,EAAAhM,EAAA3G,EAAAL,EAAA,IACAwwB,EAAA5pB,WAAAI,EAAA5P,EAAA4I,EAAA,IAAAgH,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,IACAwwB,EAAAtrB,QAAA8B,EAAA/G,EAAAD,EAAAuU,EAAAvB,GACAwd,EAAA5pB,UAAAI,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,IACAywB,EAAA7pB,WAAAI,EAAA5P,EAAA4I,EAAA,IAAAgH,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,IACAywB,EAAAxqB,MAAA4qB,EAAA,EAAAC,IAAAD,EAAA,EAAAE,KACAN,EAAA7pB,UAAAI,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,GAAAgH,EAAA5P,EAAA4I,EAAA,KAGAwsB,iBAAAnrB,UAAAunB,KAAA,SAAA7D,EAAA3iB,EAAA2lB,EAAAiJ,GACA/5B,KAAA8tB,OACA9tB,KAAAmL,MACAnL,KAAA8wB,MACA9wB,KAAA+5B,YACA/5B,KAAAg6B,eAAA,EACAh6B,KAAAi6B,aACAj6B,KAAAk6B,WACAl6B,KAAAguB,SAAA,EACAhuB,KAAAoM,6BAAA0hB,GACA9tB,KAAAq2B,uBAAAvI,EAAA3iB,EAAA2lB,IAEA,KAAAA,EAAA,GACAA,GAAA,EAEA9wB,KAAAi6B,UAAAE,QAAAhvB,EAAA2lB,IACA,EAEA9wB,KAAA8L,kBAAA7F,OACAjG,KAAAsP,GAAA,EAEAtP,KAAAmM,UAAA,IAIAopB,iBAAAnrB,UAAAgwB,cAAA,SAAAC,GACA,IAAAv0B,EAAAE,EAAAq0B,EAAAp0B,OACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBu0B,EAAAv0B,GAAAw0B,YAAA,EACA,OAAAD,EAAAv0B,GAAA+J,IACA7P,KAAAo6B,cAAAC,EAAAv0B,GAAAyc,KAKAgT,iBAAAnrB,UAAAmwB,cAAA,SAAAF,GACAA,EAAAp0B,OAAA,IACAu0B,EAAArY,KAAAC,MAAAD,KAAAE,UAAAgY,IAEA,OADAr6B,KAAAo6B,cAAAI,GACAA,GAGAjF,iBAAAnrB,UAAAqwB,kBAAA,SAAAJ,EAAAK,GACA,IAAA50B,EAAAE,EAAAq0B,EAAAp0B,OACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBu0B,EAAAv0B,GAAA60B,QAAAD,EACA,OAAAL,EAAAv0B,GAAA+J,IACA7P,KAAAy6B,kBAAAJ,EAAAv0B,GAAAyc,GAAAmY,IAKAnF,iBAAAnrB,UAAAmtB,cAAA,SAAApJ,GACA,IAAAyM,EAAAC,EAAA/0B,EAAAwX,EAAAwd,EACA,GAAA96B,KAAAkM,MAAAiiB,EAAA,CACA,IAgBAuM,EAhBAK,EAAAj2B,KAAAk2B,KAAAh7B,KAAAmP,EAAApG,GACA,GAAA/I,KAAAk6B,QAAAj0B,OAAA80B,EAAA,CACA,KAAA/6B,KAAAk6B,QAAAj0B,OAAA80B,GAAA,CACA,IAAAE,GACA1Y,GAAAviB,KAAAu6B,cAAAv6B,KAAAi6B,WACApqB,GAAA,MAEAorB,EAAA1Y,GAAA5X,MAA+BxK,GAAKA,EAAA,EAAA+6B,GAAA,EAAA5rB,GAAA,MAAuBoI,GAAA,YAAAhI,GAAuBvP,EAAA,EAAA+6B,GAAA,EAAA5rB,EAAA,KAAqBlG,GAAMjJ,EAAA,EAAA+6B,GAAA,EAAA5rB,GAAA,MAAuBtG,GAAM7I,EAAA,EAAA+6B,GAAA,EAAA5rB,IAAmBxG,EAAA,EAAAsG,EAAA,EAAA9F,EAAA,IAAcR,EAAA,EAAAsG,EAAA,EAAA9F,EAAA,KAAcR,GAAM3I,EAAA,EAAA+6B,GAAA,EAAA5rB,GAAA,UAA2BmgB,IAAOtvB,EAAA,EAAA+6B,GAAA,EAAA5rB,EAAA,GAAmBkgB,IAAOrvB,EAAA,EAAA+6B,GAAA,EAAA5rB,EAAA,GAAmBO,GAAA,OAE9Q7P,KAAAmL,IAAAL,OAAA,IAAAmwB,GACAj7B,KAAAk6B,QAAApvB,OAAA,IAAAmwB,GACAj7B,KAAAg6B,gBAAA,EAEAh6B,KAAA8tB,KAAAqN,eAIA,IAFAL,EAAA,EAEAh1B,EAAA,EAAkBA,GAAA9F,KAAAk6B,QAAAj0B,OAAA,EAA+BH,GAAA,EACjD40B,EAAAI,EAAAC,EACA/6B,KAAAk6B,QAAAp0B,GAAA60B,QAAAD,EACA16B,KAAAy6B,kBAAAz6B,KAAAk6B,QAAAp0B,GAAAyc,GAAAmY,GACAI,GAAA,EAGA96B,KAAAg6B,eAAAe,EAGA,IAAApxB,EAAA3J,KAAA0P,EAAA3G,EACAqyB,EAAAzxB,EAAA,EACA0xB,EAAA1xB,EAAA,EAAA7E,KAAAU,MAAAmE,GAAA7E,KAAAk2B,KAAArxB,GAGA2xB,GADAt7B,KAAAm5B,GAAApwB,EAAA5J,MACAa,KAAAs5B,QAAAn6B,OACAo8B,EAAAv7B,KAAAu5B,QAAAp6B,MACAq8B,EAAAx7B,KAAAw5B,QAAAr6B,MACAa,KAAAs5B,QAAAtrB,QACAhO,KAAAu5B,QAAAvrB,QACAhO,KAAAw5B,QAAAxrB,QACAhO,KAAAy5B,QAAAzrB,QACAhO,KAAA05B,OAAA1rB,QACA,IAwBAqB,EAAA+R,EAxBAqa,EAAA,EAEA,GAAA9xB,EAAA,GACA,KAAA8xB,EAAAJ,GACAr7B,KAAA25B,gBAAA35B,KAAAs5B,QAAAt5B,KAAAu5B,QAAAv5B,KAAAw5B,QAAAx5B,KAAAm5B,GAAA,MACAsC,GAAA,EAEAL,IACAp7B,KAAA25B,gBAAA35B,KAAAs5B,QAAAt5B,KAAAu5B,QAAAv5B,KAAAw5B,QAAAx5B,KAAAm5B,GAAAiC,GAAA,GACAK,GAAAL,QAES,GAAAzxB,EAAA,GACT,KAAA8xB,EAAAJ,GACAr7B,KAAA25B,gBAAA35B,KAAAs5B,QAAAt5B,KAAAu5B,QAAAv5B,KAAAw5B,QAAAx5B,KAAAm5B,GAAA,MACAsC,GAAA,EAEAL,IACAp7B,KAAA25B,gBAAA35B,KAAAs5B,QAAAt5B,KAAAu5B,QAAAv5B,KAAAw5B,QAAAx5B,KAAAm5B,IAAAiC,GAAA,GACAK,GAAAL,GAOA,IAJAt1B,EAAA,IAAA9F,KAAAL,KAAA6P,EAAA,EAAAxP,KAAAg6B,eAAA,EACA1c,EAAA,IAAAtd,KAAAL,KAAA6P,EAAA,KACAsrB,EAAA96B,KAAAg6B,eAEAc,GAAA,CAOA,GAJA1Z,GADAyZ,GADAD,EAAA56B,KAAA+5B,UAAAj0B,GAAAyc,IACAqY,EAAA30B,OAAA,GAAA8J,UAAA2rB,OAAA3yB,EAAA5J,OACA8G,OACA20B,IAAA30B,OAAA,GAAA8J,UAAA2rB,OAAAxvB,MAAA,EACA0uB,IAAA30B,OAAA,GAAA8J,UAAA4rB,GAAAzvB,MAAA,EACA0uB,IAAA30B,OAAA,GAAA8J,UAAA4rB,GAAA5yB,EAAA/I,KAAAo5B,GAAArwB,GAAA/I,KAAAq5B,GAAAtwB,EAAA/I,KAAAo5B,GAAArwB,IAAAjD,GAAA9F,KAAAg6B,eAAA,IACA,IAAAyB,EAAA,CAQA,KAPA,IAAA31B,GAAA,IAAAwX,GAAAxX,IAAA9F,KAAAg6B,eAAA,QAAA1c,IACAtd,KAAA25B,gBAAA35B,KAAAs5B,QAAAt5B,KAAAu5B,QAAAv5B,KAAAw5B,QAAAx5B,KAAAm5B,GAAA,MAEAn5B,KAAA05B,OAAA3pB,UAAAwrB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAv7B,KAAA05B,OAAA3pB,UAAAyrB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAx7B,KAAA05B,OAAA3pB,UAAAurB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAEAjsB,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/BwrB,EAAAxrB,GAAArP,KAAA05B,OAAAv6B,MAAAkQ,GAEArP,KAAA05B,OAAA1rB,aAGA,IADAhO,KAAA05B,OAAA1rB,QACAqB,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/BwrB,EAAAxrB,GAAArP,KAAA05B,OAAAv6B,MAAAkQ,GAGAosB,GAAA,EACAX,GAAA,EACAh1B,GAAAwX,QAMA,IAHAwd,EAAA96B,KAAAg6B,eACAl0B,EAAA,EACAwX,EAAA,EACAwd,GAEAD,GADAD,EAAA56B,KAAA+5B,UAAAj0B,GAAAyc,IACAqY,EAAA30B,OAAA,GAAA8J,UAAA2rB,OAAA3yB,EAAA5J,MACAy7B,IAAA30B,OAAA,GAAA8J,UAAA2rB,OAAAxvB,MAAA,EACA0uB,IAAA30B,OAAA,GAAA8J,UAAA4rB,GAAAzvB,MAAA,EACA4uB,GAAA,EACAh1B,GAAAwX,GAKAiY,iBAAAnrB,UAAAuoB,SAAA,aAEAqC,eAAAE,iBAAA,KAAAK,kBAOAC,gBAAAprB,UAAAuoB,SAAA,SAAAlV,GACAzd,KAAAge,UAAAhe,KAAAwwB,aACAxwB,KAAAgiB,OAAAhiB,KAAAgiB,OAAAmE,OAAA9f,iBAAArG,KAAAwwB,aACAxwB,KAAAwwB,YAAA,GAEAxwB,KAAAgiB,OAAAhiB,KAAAge,SAAAP,EACAzd,KAAAge,SAAA,GAGAwX,gBAAAprB,UAAAsoB,cAAA,WACA,IAAA5sB,EACA,IAAAA,EAAA,EAAWA,EAAA9F,KAAAge,QAAkBlY,GAAA,EAC7B2sB,WAAA6E,QAAAt3B,KAAAgiB,OAAAlc,IAEA9F,KAAAge,QAAA,GAwBAyX,aAAArrB,UAAA+B,SAAA,SAAA0jB,GACA,IAAA7vB,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,SAAA6B,KAGA7vB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,QACAhuB,KAAAiM,2BACAjM,KAAAkM,KAAAlM,KAAAkM,MAAA2jB,EACA7vB,KAAAkM,MAAA,CACA,IAAApG,EAAA,EAAAE,EAAAhG,KAAA01B,UAAAzvB,OAIA,IAHA,QAAAjG,KAAAQ,WACAR,KAAA21B,QAAA,IAEA7vB,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB,KAAA9F,KAAA01B,UAAA5vB,GAAA2J,EACA,QAAAzP,KAAAQ,SACAR,KAAA21B,SAAA,IAAA31B,KAAA01B,UAAA5vB,GAAAsD,EAAAL,EAEA/I,KAAA41B,UAAA9vB,GAAA9F,KAAA01B,UAAA5vB,GAAAsD,EAAAL,EAGA/I,KAAA61B,WAAA,GAAA71B,KAAA01B,UAAA5vB,GAAAsD,EAAAL,IAKAyR,iBAAA7O,0BAAA8pB,cAgBAK,iBAAA1rB,UAAAwxB,cAAA,SAAA7O,EAAAjU,GAEA,IADA,IAAAhT,EAAA,EAAAE,EAAAhG,KAAA0P,EAAAzJ,OAAA,EACAH,EAAAE,GAAA,CAEA,GADAlB,KAAAQ,IAAAynB,EAAA,EAAAjnB,GAAAinB,EAAA,EAAAjU,EAAA,EAAAhT,IACA,IACA,SAEAA,GAAA,EAEA,UAGAgwB,iBAAA1rB,UAAA+rB,iBAAA,WACA,GAAAn2B,KAAA0P,EAAAzJ,OAAA,GAAAjG,KAAAmP,EAAAlJ,OAAA,EACA,SAEA,GAAAjG,KAAAL,KAAA2P,IAAA,GAAAxG,EAEA,IADA,IAAAhD,EAAA,EAAAE,EAAAhG,KAAAL,KAAA2P,IAAArJ,OACAH,EAAAE,GAAA,CACA,IAAAhG,KAAA47B,cAAA57B,KAAAL,KAAA2P,IAAAxJ,GAAAgD,EAAA9I,KAAAL,KAAAyJ,GACA,SAEAtD,GAAA,OAEK,IAAA9F,KAAA47B,cAAA57B,KAAAL,KAAA2P,IAAAtP,KAAAL,KAAAyJ,GACL,SAEA,UAGA0sB,iBAAA1rB,UAAA+B,SAAA,SAAA0jB,GAKA,GAJA7vB,KAAA6L,KAAAM,WACAnM,KAAAkM,MAAA,EACAlM,KAAAg2B,OAAA,EACAh2B,KAAAi2B,OAAA,EACAj2B,KAAA6L,KAAAK,MAAA2jB,EAAA,CACA,IAAA/pB,EACA8nB,EAAAznB,EADAH,EAAA,EAAAhG,KAAAL,KAAAyJ,EAEA,IAAAtD,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB8nB,EAAA9nB,EAAA,aACAK,EAAArB,KAAAC,MAAA/E,KAAA6L,KAAA9C,EAAAjD,GAAA8nB,GACA5tB,KAAAmP,EAAArJ,KAAAK,IACAnG,KAAAmP,EAAArJ,GAAAK,EACAnG,KAAAg2B,OAAAnG,GAGA,GAAA7vB,KAAA0P,EAAAzJ,OAEA,IADAD,EAAAhG,KAAA6L,KAAA9C,EAAA9C,OACAH,EAAA,EAAA9F,KAAAL,KAAAyJ,EAAgCtD,EAAAE,EAAMF,GAAA,EACtC8nB,EAAA9nB,EAAA,WACAK,EAAAL,EAAA,KAAAhB,KAAAC,MAAA,IAAA/E,KAAA6L,KAAA9C,EAAAjD,IAAA9F,KAAA6L,KAAA9C,EAAAjD,GACA9F,KAAA0P,EAAA5J,EAAA,EAAA9F,KAAAL,KAAAyJ,KAAAjD,IACAnG,KAAA0P,EAAA5J,EAAA,EAAA9F,KAAAL,KAAAyJ,GAAAjD,EACAnG,KAAAi2B,OAAApG,GAIA7vB,KAAAkM,MAAA2jB,IAIArV,iBAAA7O,0BAAAmqB,kBACA,IAAA+F,iBAAA,SAAAC,EAAA71B,EAAA2X,EAAAgS,GACA,OAAA3pB,EACA,SAEA,IAGAH,EAHAi2B,EAAAD,EAAApsB,EACAssB,EAAAF,EAAAh2B,EACAjD,EAAAi5B,EAAA/yB,EACAkzB,EAAA,KAAArM,EAAA3b,wBAAApR,EAAA,MAAAA,EAAA,OACA,IAAAiD,EAAA,EAAkBA,EAAAG,EAAYH,GAAA,EAC9Bm2B,GAAA,KAAArM,EAAA3b,wBAAA8nB,EAAAj2B,EAAA,MAAAi2B,EAAAj2B,EAAA,WAAA8pB,EAAA3b,wBAAA+nB,EAAAl2B,GAAA,GAAAk2B,EAAAl2B,GAAA,QAAA8pB,EAAA3b,wBAAApR,EAAAiD,GAAA,GAAAjD,EAAAiD,GAAA,IAMA,OAJA8X,GAAA3X,IACAg2B,GAAA,KAAArM,EAAA3b,wBAAA8nB,EAAAj2B,EAAA,MAAAi2B,EAAAj2B,EAAA,WAAA8pB,EAAA3b,wBAAA+nB,EAAA,MAAAA,EAAA,WAAApM,EAAA3b,wBAAApR,EAAA,MAAAA,EAAA,OACAo5B,GAAA,KAEAA,GAEAC,eAAA,WAEA,IAAAC,EAAA,WACA,IAAAC,EAAA3wB,UAAA,UACA2wB,EAAA18B,MAAA,EACA08B,EAAA58B,OAAA,EACA,IAAA68B,EAAAD,EAAAlW,WAAA,MAGA,OAFAmW,EAAAC,UAAA,gBACAD,EAAAE,SAAA,SACAH,EAPA,GAUA,SAAAI,IACAx8B,KAAAy8B,cAAA,EACAz8B,KAAAy8B,eAAAz8B,KAAA08B,aACA18B,KAAA28B,gBACA38B,KAAA28B,eAAA,MAuBA,SAAAC,EAAAC,GACA,IAAAra,EAnBA,SAAAqa,EAAAC,EAAAC,GACA,IAAAva,EAAA,GACA,GAAAqa,EAAAztB,EACAoT,EAAAqa,EAAAzzB,OACS,GAAA0zB,EAAA,CACT,IAAAE,EAAAH,EAAAzzB,GACA,IAAA4zB,EAAAjxB,QAAA,aACAixB,IAAAna,MAAA,SAEAL,EAAAsa,EAAAE,OAEAxa,EAAAua,EACAva,GAAAqa,EAAAI,EAAAJ,EAAAI,EAAA,GACAza,GAAAqa,EAAAzzB,EAEA,OAAAoZ,EAIA0a,CAAAL,EAAA78B,KAAA88B,WAAA98B,KAAAwiB,MACA2a,EAAA1xB,UAAA,OACA0xB,EAAAC,YAAA,YACAD,EAAA1yB,iBAAA,OAAAzK,KAAAq9B,aAAAxyB,KAAA7K,OAAA,GACAm9B,EAAA1yB,iBAAA,mBACA+M,EAAA2lB,IAAAhB,EACAn8B,KAAAq9B,gBACSxyB,KAAA7K,OAAA,GACTm9B,EAAArV,IAAAtF,EACA,IAAAhL,GACA2lB,MACAN,aAEA,OAAArlB,EAGA,SAAA8lB,EAAAna,EAAAoa,GACAv9B,KAAA28B,eAAAY,EACA,IAAAz3B,EAAAE,EAAAmd,EAAAld,OACA,IAAAH,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5Bqd,EAAArd,GAAAkb,SACAhhB,KAAA08B,aAAA,EACA18B,KAAAw9B,OAAA7yB,KAAA3K,KAAAy9B,iBAAAta,EAAArd,MAKA,SAAA43B,EAAAlb,GACAxiB,KAAAwiB,QAAA,GAGA,SAAAmb,EAAAnb,GACAxiB,KAAA88B,WAAAta,GAAA,GAGA,SAAAob,EAAAf,GAEA,IADA,IAAA/2B,EAAA,EAAAE,EAAAhG,KAAAw9B,OAAAv3B,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAw9B,OAAA13B,GAAA+2B,cACA,OAAA78B,KAAAw9B,OAAA13B,GAAAq3B,IAEAr3B,GAAA,GAIA,SAAA+3B,IACA79B,KAAA28B,eAAA,KACA38B,KAAAw9B,OAAAv3B,OAAA,EAGA,SAAAohB,IACA,OAAArnB,KAAA08B,cAAA18B,KAAAy8B,aAGA,kBACAz8B,KAAAs9B,aACAt9B,KAAA29B,gBACA39B,KAAA09B,UACA19B,KAAAqnB,SACArnB,KAAA69B,UACA79B,KAAA49B,WACA59B,KAAAy9B,iBAAAb,EACA58B,KAAAq9B,aAAAb,EACAx8B,KAAA88B,WAAA,GACA98B,KAAAwiB,KAAA,GACAxiB,KAAA08B,YAAA,EACA18B,KAAAy8B,aAAA,EACAz8B,KAAA28B,eAAA,KACA38B,KAAAw9B,WA5GA,GA+GAM,eAAA,WACA,IAAAtmB,GACAumB,UAAA,GAKA,OAHA,WAAAr5B,KAAAR,UAAAS,YAAA,UAAAD,KAAAR,UAAAS,YAAA,WAAAD,KAAAR,UAAAS,YAAA,aAAAD,KAAAR,UAAAS,cACA6S,EAAAumB,UAAA,GAEAvmB,EAPA,GASAwmB,eAAA,WACA,IAAAxmB,KAuBA,OAtBAA,EAAAymB,aAGA,SAAAC,GACA,IAAAC,EAAA7yB,SAAA,UAOA,OANA6yB,EAAAvY,aAAA,KAAAsY,GACAC,EAAAvY,aAAA,mCACAuY,EAAAvY,aAAA,UACAuY,EAAAvY,aAAA,UACAuY,EAAAvY,aAAA,gBACAuY,EAAAvY,aAAA,iBACAuY,GAVA3mB,EAAA4mB,6BAaA,WACA,IAAAC,EAAA/yB,SAAA,iBAIA,OAHA+yB,EAAAzY,aAAA,iBACAyY,EAAAzY,aAAA,sCACAyY,EAAAzY,aAAA,uDACAyY,GAGA7mB,EAxBA,GA0BA8mB,YAAA,WAEA,SAAAC,EAAAC,GACA,OAAAA,EAAAC,UAAA,iBAAAD,EAAAC,SACAD,EAAAC,SACGD,EAAAC,UAAA,iBAAAD,EAAAC,SACHtc,KAAAC,MAAAoc,EAAAC,UACGD,EAAAE,aACHvc,KAAAC,MAAAoc,EAAAE,mBADG,EAiCH,OACAC,KA7BA,SAAAnc,EAAA9X,EAAAk0B,GACA,IAAAH,EACAD,EAAA,IAAAK,eACAL,EAAAM,KAAA,MAAAtc,GAAA,GAEA,IAEAgc,EAAAO,aAAA,OACG,MAAAC,IACHR,EAAAS,OACAT,EAAAU,mBAAA,WACA,MAAAV,EAAAW,WACA,QAAAX,EAAAY,OACAX,EAAAF,EAAAC,GACA9zB,EAAA+zB,QAEA,IACAA,EAAAF,EAAAC,GACA9zB,EAAA+zB,GACkB,MAAAO,GAClBJ,GACAA,EAAAI,OAjCA,GA6CA,SAAAK,qBAAAC,EAAAC,EAAAzR,GACA9tB,KAAAmuB,eAAA,EACAnuB,KAAAw/B,gBAAA,EACAx/B,KAAAy/B,UAAA,EACAz/B,KAAA0/B,UAAAJ,EACAt/B,KAAA2/B,YAAAJ,EACAv/B,KAAA4/B,MAAA9R,EACA9tB,KAAA6/B,eAAAx5B,iBAAArG,KAAA0/B,UAAAv/B,EAAA8F,QACAjG,KAAA8/B,aACA9/B,KAAA+/B,cACAC,cAEAhgC,KAAAigC,mBACAjgC,KAAAkgC,oBAAA,EACAlgC,KAAAoM,6BAAA0hB,GAiiBA,SAAAqS,yBAAArS,EAAAsS,EAAA//B,GACA,IAAAggC,GAAoB5W,UAAA,GACpB+E,EAAAvF,gBAAAuF,QACA8R,EAAAF,EAAAjgC,EACAH,KAAAG,GACA6I,EAAAs3B,EAAAt3B,EAAAwlB,EAAAV,EAAAwS,EAAAt3B,EAAA,EAAAzC,UAAAlG,GAAAggC,EACAjR,GAAAkR,EAAAlR,GAAAZ,EAAAV,EAAAwS,EAAAlR,GAAA,EAAA7oB,UAAAlG,GAAAggC,EACAhR,GAAAiR,EAAAjR,GAAAb,EAAAV,EAAAwS,EAAAjR,GAAA,EAAA9oB,UAAAlG,GAAAggC,EACA7Q,GAAA8Q,EAAA9Q,GAAAhB,EAAAV,EAAAwS,EAAA9Q,GAAA,EAAAjpB,UAAAlG,GAAAggC,EACA5Q,GAAA6Q,EAAA7Q,GAAAjB,EAAAV,EAAAwS,EAAA7Q,GAAA,EAAAlpB,UAAAlG,GAAAggC,EACAv3B,EAAAw3B,EAAAx3B,EAAA0lB,EAAAV,EAAAwS,EAAAx3B,EAAA,MAAAzI,GAAAggC,EACAlgC,EAAAmgC,EAAAngC,EAAAquB,EAAAV,EAAAwS,EAAAngC,EAAA,IAAAE,GAAAggC,EACA3wB,EAAA4wB,EAAA5wB,EAAA8e,EAAAV,EAAAwS,EAAA5wB,EAAA,MAAArP,GAAAggC,EACAj3B,EAAAk3B,EAAAl3B,EAAAolB,EAAAV,EAAAwS,EAAAl3B,EAAA,IAAA/I,GAAAggC,EACAE,GAAAD,EAAAC,GAAA/R,EAAAV,EAAAwS,EAAAC,GAAA,IAAAlgC,GAAAggC,EACAtY,GAAAuY,EAAAvY,GAAAyG,EAAAV,EAAAwS,EAAAvY,GAAA,IAAA1nB,GAAAggC,EACAG,GAAAF,EAAAE,GAAAhS,EAAAV,EAAAwS,EAAAE,GAAA,IAAAngC,GAAAggC,EACAI,GAAAH,EAAAG,GAAAjS,EAAAV,EAAAwS,EAAAG,GAAA,IAAApgC,GAAAggC,EACAK,GAAAJ,EAAAI,GAAAlS,EAAAV,EAAAwS,EAAAI,GAAA,MAAArgC,GAAAggC,EACAM,GAAAL,EAAAK,GAAAnS,EAAAV,EAAAwS,EAAAK,GAAA,MAAAtgC,GAAAggC,EACA/2B,EAAAg3B,EAAAh3B,EAAAklB,EAAAV,EAAAwS,EAAAh3B,EAAA,IAAAjJ,GAAAggC,GAGArgC,KAAA8I,EAAA83B,iBAAAC,oBAAA/S,EAAAsS,EAAAt3B,EAAAzI,GACAL,KAAA8I,EAAAQ,EAAA82B,EAAAt3B,EAAAQ,EAEA,SAAAw3B,YAAApxB,EAAA6wB,EAAAxY,EAAAyY,EAAAhxB,EAAApG,GACApJ,KAAA0P,IACA1P,KAAAugC,KACAvgC,KAAA+nB,KACA/nB,KAAAwgC,KACAxgC,KAAAwP,IACAxP,KAAAoJ,IACApJ,KAAAkM,MACAwD,GAAA,EACA6wB,OACAxY,OACAyY,OACAhxB,GAAA,EACApG,GAAA,GA6CA,SAAA23B,aAAAjT,EAAAnuB,GACAK,KAAAy/B,SAAAn7B,oBACAtE,KAAA0pB,GAAA,GACA1pB,KAAA+I,EAAA,GACA/I,KAAAquB,IAAA,EACAruB,KAAAmuB,eAAA,EACAnuB,KAAAkM,MAAA,EACAlM,KAAAL,OACAK,KAAA8tB,OACA9tB,KAAAqtB,KAAArtB,KAAA8tB,KAAAT,KACArtB,KAAAghC,UAAA,EACAhhC,KAAAihC,WAAA,EACAjhC,KAAAkhC,gBAAA,EACAlhC,KAAAiuB,mBACAjuB,KAAAmhC,aACAC,OAAA,EACAC,SAAArhC,KAAAshC,gBACAn4B,EAAA,GACA2c,OAAA,GACAC,QAAA,GACAya,GAAA,GACAnxB,EAAA,GACAkyB,cAAA,GACAhyB,KACAiyB,GAAA,EACAC,cACAC,GAAA,GACAC,GAAA,GACA74B,EAAA,GACAif,GAAA,GACAwY,GAAA,EACAj3B,EAAA,EACA6vB,GAAA,EACAlqB,GAAA,EACA2yB,GAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,iBAAA,EACAC,QAAA,EACAC,UAAA,EACAC,aACAC,gBAAA,EACAne,YAAA,GAGAhkB,KAAAoiC,SAAApiC,KAAAmhC,YAAAnhC,KAAAL,KAAA6J,EAAA8F,EAAA,GAAAxG,GAEA9I,KAAAqiC,kBACAriC,KAAAsiC,iBAAAtiC,KAAAmhC,aAjqBA9B,qBAAAj1B,UAAAm4B,iBAAA,WACA,IAAAz8B,EAAAs6B,EAAAp6B,EAAAhG,KAAA0/B,UAAAv/B,EAAA8F,OACAuoB,EAAAvF,gBAAAuF,QACA,IAAA1oB,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClBs6B,EAAApgC,KAAA0/B,UAAAv/B,EAAA2F,GACA9F,KAAA6/B,eAAA/5B,GAAA,IAAAq6B,yBAAAngC,KAAA4/B,MAAAQ,EAAApgC,MAEAA,KAAA0/B,UAAAt2B,GAAA,MAAApJ,KAAA0/B,UAAAt2B,GACApJ,KAAA8/B,WACA32B,EAAAqlB,EAAAxuB,KAAA4/B,MAAA5/B,KAAA0/B,UAAAt2B,EAAAD,EAAA,IAAAnJ,MACAuP,EAAAif,EAAAxuB,KAAA4/B,MAAA5/B,KAAA0/B,UAAAt2B,EAAAmG,EAAA,IAAAvP,MACAgJ,EAAAhJ,KAAA0/B,UAAAt2B,EAAAJ,EACAwG,EAAAxP,KAAA4/B,MAAA4C,YAAAC,gBAAAziC,KAAA0/B,UAAAt2B,EAAAoG,IAEAxP,KAAAw/B,gBAAA,GAEAx/B,KAAAw/B,gBAAA,EAEAx/B,KAAA+/B,aAAAC,UAAAxR,EAAAxuB,KAAA4/B,MAAA5/B,KAAA0/B,UAAAlwB,EAAArP,EAAA,IAAAH,OAGAq/B,qBAAAj1B,UAAAs4B,YAAA,SAAAxf,EAAAgd,GAEA,GADAlgC,KAAAkgC,qBACAlgC,KAAAkM,MAAAlM,KAAAmuB,eAAA+R,GAAAlgC,KAAAw/B,gBAAAx/B,KAAA8/B,UAAAtwB,EAAAtD,KAAA,CAGAlM,KAAAmuB,eAAA,EACA,IAOAwU,EAAAC,EACA98B,EAAAE,EACA68B,EAAAC,EAAAC,EAAA9lB,EAAAtW,EAAAq8B,EAAAC,EAAAC,EAAApqB,EAAAke,EAAApa,EAAAqB,EAAAlC,EAAAonB,EAAAruB,EATAkrB,EAAAhgC,KAAA+/B,aAAAC,UAAAj3B,EACAq6B,EAAApjC,KAAA6/B,eACAP,EAAAt/B,KAAA0/B,UACA2D,EAAArjC,KAAAsjC,QACA/D,EAAAv/B,KAAA2/B,YACA4D,EAAAvjC,KAAAigC,gBAAAh6B,OAIAu9B,GAHAxjC,KAAAL,KAGAujB,EAAA3T,GACA,GAAAvP,KAAAw/B,eAAA,CAEA,GADA1qB,EAAA9U,KAAA8/B,UAAAtwB,GACAxP,KAAA8/B,UAAArwB,GAAAzP,KAAA8/B,UAAA5zB,KAAA,CACA,IAUA8Q,EAVAuG,EAAAzO,EAAA/L,EAYA,IAXA/I,KAAA8/B,UAAA92B,IACAua,IAAA+N,WAGAuR,GACAY,QAAA,EACAzM,aAEAhxB,EAAAud,EAAAvF,QAAA,EAEAC,EAAA,EACAnY,EAAA,EAAuBA,EAAAE,EAASF,GAAA,EAChCkX,EAAA6D,IAAA/D,gBAAAyG,EAAAxa,EAAAjD,GACAyd,EAAAxa,EAAAjD,EAAA,IACAyd,EAAA7T,EAAA5J,GAAA,GAAAyd,EAAAxa,EAAAjD,GAAA,GAAAyd,EAAA7T,EAAA5J,GAAA,GAAAyd,EAAAxa,EAAAjD,GAAA,KACAyd,EAAAzd,IAAA,MAAAyd,EAAAxa,EAAAjD,EAAA,MAAAyd,EAAAzd,IAAA,MAAAyd,EAAAxa,EAAAjD,EAAA,QACA+8B,EAAAY,SAAAzmB,EAAAC,cACA4lB,EAAA7L,SAAArsB,KAAAqS,GACAiB,GAAAjB,EAAAC,cAEAnX,EAAAE,EACA8O,EAAA/L,EAAAoG,IACA6N,EAAA6D,IAAA/D,gBAAAyG,EAAAxa,EAAAjD,GACAyd,EAAAxa,EAAA,IACAwa,EAAA7T,EAAA5J,GAAA,GAAAyd,EAAAxa,EAAAjD,GAAA,GAAAyd,EAAA7T,EAAA5J,GAAA,GAAAyd,EAAAxa,EAAAjD,GAAA,KACAyd,EAAAzd,EAAA,MAAAyd,EAAAxa,EAAA,MAAAwa,EAAAzd,EAAA,MAAAyd,EAAAxa,EAAA,QACA85B,EAAAY,SAAAzmB,EAAAC,cACA4lB,EAAA7L,SAAArsB,KAAAqS,GACAiB,GAAAjB,EAAAC,eAEAjd,KAAA8/B,UAAA4D,GAAAb,EAUA,GARAA,EAAA7iC,KAAA8/B,UAAA4D,GAEAZ,EAAA9iC,KAAA8/B,UAAA32B,EAAAJ,EACAk6B,EAAA,EACAD,EAAA,EACA/lB,EAAA,EACAtW,GAAA,EACAqwB,EAAA6L,EAAA7L,SACA8L,EAAA,GAAAhuB,EAAA/L,EAAAoG,EAOA,IANA0zB,EAAAY,QAAA3+B,KAAAQ,IAAAw9B,KACAA,GAAAh+B,KAAAQ,IAAAw9B,GAAAD,EAAAY,SAIAT,GADAlqB,EAAAke,EADAiM,EAAAjM,EAAA/wB,OAAA,GACA6S,QACA7S,OAAA,EACA68B,EAAA,GACAA,GAAAhqB,EAAAkqB,GAAApmB,eACAomB,GAAA,GACA,IAGAA,GADAlqB,EAAAke,EADAiM,GAAA,GACAnqB,QACA7S,OAAA,GAMAi9B,GADApqB,EAAAke,EAAAiM,GAAAnqB,QACAkqB,EAAA,GAEApmB,GADAmmB,EAAAjqB,EAAAkqB,IACApmB,cAIA5W,EAAAw9B,EAAAv9B,OACA08B,EAAA,EACAC,EAAA,EACA,IAEAxC,EACA/wB,EAAA+R,EACAuiB,EAJAC,EAAA,IAAA1gB,EAAA+e,UAAA,KACA4B,GAAA,EAKAziB,EAAAgiB,EAAAn9B,OAGA,IAAA2nB,EAAAkW,EAAAC,EAAAC,EAEAC,EACAlc,EAAAwY,EAAAC,EAAAlxB,EAEA40B,EAAAC,EAAAC,EAAAC,EALAvZ,GAAA,EACAwZ,EAAAxB,EAAAyB,EAAAtB,EAAAuB,EAAAxB,EAAAyB,GAAA,EAIAC,GAAA,GAAAC,GAAA3kC,KAAA4kC,kBAGA,OAAA1hB,EAAA7T,GAAA,IAAA6T,EAAA7T,EAAA,CACA,IAAAw1B,GAAA,EACAC,GAAA,EACAC,GAAA,IAAA7hB,EAAA7T,GAAA,MACA0a,GAAA,EACAib,IAAA,EAEA,IAAAl/B,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B,GAAA09B,EAAA19B,GAAA2J,EAAA,CAIA,IAHAo1B,KACAA,IAAAC,IAEA/a,GAAAjkB,GACA09B,EAAAzZ,IAAA8a,yBACA9a,IAAA,EAEA8a,GAAA,EACAG,IAAA,MACa,CACb,IAAA31B,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,GACrC+wB,EAAAgD,EAAA/zB,GAAAlP,GACAmJ,EAAAmgB,WACAub,IAAA,IAAA9hB,EAAA7T,IACAy1B,IAAA1E,EAAA92B,EAAAP,EAAAg8B,KAGAnX,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,aACAl/B,OACA4+B,IAAAzE,EAAA92B,EAAAP,EAAA6kB,EAAA,GAAAmX,GAEAF,IAAAzE,EAAA92B,EAAAP,EAAA6kB,EAAAmX,IAIAC,IAAA,EAMA,IAHAH,KACAA,IAAAC,IAEA/a,GAAAjkB,GACA09B,EAAAzZ,IAAA8a,yBACA9a,IAAA,EAKA,IAAAjkB,EAAA,EAAeA,EAAAE,EAASF,GAAA,GAIxB,GAFAu9B,EAAAr1B,QACAi2B,EAAA,EACAT,EAAA19B,GAAA2J,EACAkzB,EAAA,EACAC,GAAA1f,EAAA8e,QACAY,GAAAiB,EAAA,IACAf,EAAAwB,EACAT,GAAA,EACA,EACA7jC,KAAAw/B,iBAEAwD,EAAAwB,EAEAtB,GADApqB,EAAAke,EAFAiM,EAAAsB,GAEAzrB,QACAkqB,EAAA,GAEApmB,GADAmmB,EAAAjqB,EAAAkqB,IACApmB,cACAK,EAAA,GAEAonB,EAAAH,EAAAE,EAAAM,GAAA,GACAC,GAAA3kC,KAAA4kC,sBACS,CACT,GAAA5kC,KAAAw/B,eAAA,CACA,GAAAiF,IAAAjB,EAAA19B,GAAAs/B,KAAA,CACA,OAAAliB,EAAA7T,GACA,OACAyzB,GAAA7kB,EAAAiF,EAAAue,WAAA+B,EAAA19B,GAAAs/B,MACA,MACA,OACAtC,IAAA7kB,EAAAiF,EAAAue,WAAA+B,EAAA19B,GAAAs/B,OAAA,EAGAX,EAAAjB,EAAA19B,GAAAs/B,KAEAta,IAAA0Y,EAAA19B,GAAAglB,MACA0Y,EAAA1Y,KACAgY,GAAAU,EAAA1Y,GAAAua,OAEAvC,GAAAU,EAAA19B,GAAAw/B,GAAA,EACAxa,EAAA0Y,EAAA19B,GAAAglB,KAEAgY,GAAA9C,EAAA,GAAAwD,EAAA19B,GAAAw/B,GAAA,IACA,IAAAC,GAAA,EACA,IAAAl2B,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,GACrC+wB,EAAAgD,EAAA/zB,GAAAlP,GACAiJ,EAAAqgB,YAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,aACAl/B,OACAs/B,IAAAnF,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,GAEA2X,IAAAnF,EAAAh3B,EAAAL,EAAA,GAAA6kB,GAIAwS,EAAAjgC,EAAAspB,YAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,aACAl/B,OACAs/B,IAAAnF,EAAAjgC,EAAA4I,EAAA,GAAA6kB,EAAA,GAEA2X,IAAAnF,EAAAjgC,EAAA4I,EAAA,GAAA6kB,GAMA,IADAjnB,GAAA,EACAA,GACAsW,EAAAL,GAAAkmB,EAAAyC,KAAAzsB,GACAiD,GAAA+mB,EAAAyC,GAAAtoB,GAAA8lB,EAAAnmB,cACAmnB,EAAAb,EAAA/mB,MAAA,IAAA4mB,EAAA5mB,MAAA,GAAA+mB,EAAA/mB,MAAA,IAAAJ,EACAioB,EAAAd,EAAA/mB,MAAA,IAAA4mB,EAAA5mB,MAAA,GAAA+mB,EAAA/mB,MAAA,IAAAJ,EACAsnB,EAAA1zB,WAAAqwB,EAAA,GAAAwD,EAAA19B,GAAAw/B,GAAA,KAAAtF,EAAA,GAAA4D,EAAA,KACAj9B,GAAA,GACqBmS,IACrBmE,GAAA8lB,EAAAnmB,eACAomB,GAAA,IACAlqB,EAAA7S,SACA+8B,EAAA,EAEAhM,EADAiM,GAAA,GAWAnqB,EAAAke,EAAAiM,GAAAnqB,OATAhE,EAAA/L,EAAAoG,GACA6zB,EAAA,EAEAlqB,EAAAke,EADAiM,EAAA,GACAnqB,SAEAmE,GAAA8lB,EAAAnmB,cACA9D,EAAA,OAMAA,IACAoqB,EAAAH,EAEAnmB,GADAmmB,EAAAjqB,EAAAkqB,IACApmB,gBAIAknB,EAAAN,EAAA19B,GAAAw/B,GAAA,EAAA9B,EAAA19B,GAAA0/B,IACAnC,EAAA1zB,WAAAm0B,EAAA,UAEAA,EAAAN,EAAA19B,GAAAw/B,GAAA,EAAA9B,EAAA19B,GAAA0/B,IACAnC,EAAA1zB,WAAAm0B,EAAA,KAGAT,EAAA1zB,WAAAqwB,EAAA,GAAAwD,EAAA19B,GAAAw/B,GAAA,KAAAtF,EAAA,GAAA4D,EAAA,OAIA,IADAJ,EAAA19B,GAAAyJ,EAAA,EACAF,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,GAC3B+wB,EAAAgD,EAAA/zB,GAAAlP,GACAmJ,EAAAmgB,WAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,YAEA,IAAAxC,GAAA,IAAAzf,EAAA7T,IACArP,KAAAw/B,eACA5R,EAAA3nB,OACA68B,GAAA1C,EAAA92B,EAAAP,EAAA6kB,EAAA,GAEAkV,GAAA1C,EAAA92B,EAAAP,EAAA6kB,EAGAA,EAAA3nB,OACA08B,GAAAvC,EAAA92B,EAAAP,EAAA6kB,EAAA,GAEA+U,GAAAvC,EAAA92B,EAAAP,EAAA6kB,IAoBA,IAdA4V,EAAA19B,GAAAyJ,EAAA,EACA2T,EAAA6e,kBACAxB,EAAArd,EAAAqd,IAAA,GAEArd,EAAA4e,kBAEA/Z,EADA7E,EAAA6E,IACA7E,EAAA6E,GAAA,GAAA7E,EAAA6E,GAAA,GAAA7E,EAAA6E,GAAA,KAEA,QAGA7E,EAAA2e,eAAA3e,EAAAsd,KACAA,GAAAtd,EAAAsd,GAAA,GAAAtd,EAAAsd,GAAA,GAAAtd,EAAAsd,GAAA,KAEAnxB,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,GAC3B+wB,EAAAgD,EAAA/zB,GAAAlP,GACAA,EAAAspB,YAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,aAEAl/B,OACAo9B,EAAA1zB,WAAAywB,EAAAjgC,EAAA4I,EAAA,GAAA6kB,EAAA,IAAAwS,EAAAjgC,EAAA4I,EAAA,GAAA6kB,EAAA,GAAAwS,EAAAjgC,EAAA4I,EAAA,GAAA6kB,EAAA,IAEAyV,EAAA1zB,WAAAywB,EAAAjgC,EAAA4I,EAAA,GAAA6kB,GAAAwS,EAAAjgC,EAAA4I,EAAA,GAAA6kB,EAAAwS,EAAAjgC,EAAA4I,EAAA,GAAA6kB,IAIA,IAAAve,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,GAC3B+wB,EAAAgD,EAAA/zB,GAAAlP,GACA2I,EAAA2gB,YAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,aACAl/B,OACAo9B,EAAAr0B,MAAA,GAAAoxB,EAAAt3B,EAAAC,EAAA,MAAA6kB,EAAA,MAAAwS,EAAAt3B,EAAAC,EAAA,MAAA6kB,EAAA,MAEAyV,EAAAr0B,MAAA,GAAAoxB,EAAAt3B,EAAAC,EAAA,MAAA6kB,EAAA,GAAAwS,EAAAt3B,EAAAC,EAAA,MAAA6kB,EAAA,IAIA,IAAAve,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,GA+C3B,GA9CA+wB,EAAAgD,EAAA/zB,GAAAlP,EAEAytB,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,YACA/E,EAAA5Q,GAAA/F,WACAmE,EAAA3nB,OACAo9B,EAAAt0B,cAAAqxB,EAAA5Q,GAAAzmB,EAAA6kB,EAAA,GAAAwS,EAAA3Q,GAAA1mB,EAAA6kB,EAAA,IAEAyV,EAAAt0B,cAAAqxB,EAAA5Q,GAAAzmB,EAAA6kB,EAAAwS,EAAA3Q,GAAA1mB,EAAA6kB,IAGAwS,EAAAp3B,EAAAygB,WACAmE,EAAA3nB,OACAo9B,EAAA70B,SAAA4xB,EAAAp3B,EAAAD,EAAA6kB,EAAA,IAEAyV,EAAA70B,SAAA4xB,EAAAp3B,EAAAD,EAAA6kB,IAGAwS,EAAA/Q,GAAA5F,WAEAmE,EAAA3nB,OACAo9B,EAAA90B,QAAA6xB,EAAA/Q,GAAAtmB,EAAA6kB,EAAA,IAEAyV,EAAA90B,QAAA6xB,EAAA/Q,GAAAtmB,EAAA6kB,IAGAwS,EAAAhR,GAAA3F,WACAmE,EAAA3nB,OACAo9B,EAAA/0B,QAAA8xB,EAAAhR,GAAArmB,EAAA6kB,EAAA,IAEAyV,EAAA/0B,QAAA8xB,EAAAhR,GAAArmB,EAAA6kB,IAGAwS,EAAA1wB,EAAA+Z,WACAmE,EAAA3nB,OACAg+B,IAAA7D,EAAA1wB,EAAA,EAAAke,EAAA,GAAAqW,GAAArW,EAAA,GAEAqW,IAAA7D,EAAA1wB,EAAA,EAAAke,EAAAqW,GAAArW,GAGA1K,EAAA6e,iBAAA3B,EAAAG,GAAA9W,WACAmE,EAAA3nB,OACAs6B,GAAAH,EAAAG,GAAAx3B,EAAA6kB,EAAA,GAEA2S,GAAAH,EAAAG,GAAAx3B,EAAA6kB,GAGA1K,EAAA4e,iBAAA1B,EAAArY,GAAA0B,SACA,IAAAna,EAAA,EAA4BA,EAAA,EAAIA,GAAA,EAChCse,EAAA3nB,OACA8hB,EAAAzY,GAAAyY,EAAAzY,IAAA8wB,EAAArY,GAAAhf,EAAAuG,GAAAyY,EAAAzY,IAAAse,EAAA,GAEA7F,EAAAzY,GAAAyY,EAAAzY,IAAA8wB,EAAArY,GAAAhf,EAAAuG,GAAAyY,EAAAzY,IAAAse,EAIA,GAAA1K,EAAA2e,eAAA3e,EAAAsd,GAAA,CACA,GAAAJ,EAAAI,GAAA/W,SACA,IAAAna,EAAA,EAAgCA,EAAA,EAAIA,GAAA,EACpCse,EAAA3nB,OACAu6B,EAAAlxB,GAAAkxB,EAAAlxB,IAAA8wB,EAAAI,GAAAz3B,EAAAuG,GAAAkxB,EAAAlxB,IAAAse,EAAA,GAEA4S,EAAAlxB,GAAAkxB,EAAAlxB,IAAA8wB,EAAAI,GAAAz3B,EAAAuG,GAAAkxB,EAAAlxB,IAAAse,EAIAwS,EAAAK,GAAAhX,WAEA+W,EADA5S,EAAA3nB,OACA6D,YAAA02B,EAAAJ,EAAAK,GAAA13B,EAAA6kB,EAAA,IAEA9jB,YAAA02B,EAAAJ,EAAAK,GAAA13B,EAAA6kB,IAGAwS,EAAAM,GAAAjX,WAEA+W,EADA5S,EAAA3nB,OACAwD,mBAAA+2B,EAAAJ,EAAAM,GAAA33B,EAAA6kB,EAAA,IAEAnkB,mBAAA+2B,EAAAJ,EAAAM,GAAA33B,EAAA6kB,IAGAwS,EAAAO,GAAAlX,WAEA+W,EADA5S,EAAA3nB,OACA4D,mBAAA22B,EAAAJ,EAAAO,GAAA53B,EAAA6kB,EAAA,IAEA/jB,mBAAA22B,EAAAJ,EAAAO,GAAA53B,EAAA6kB,KAMA,IAAAve,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,GAC3B+wB,EAAAgD,EAAA/zB,GAAAlP,GAEAiJ,EAAAqgB,WAEAmE,EADAwV,EAAA/zB,GAAAvG,EACAm8B,QAAAzB,EAAA19B,GAAAo/B,UAAA71B,GAAAiwB,EAAAn/B,EAAAkP,GAAAvG,EAAAq8B,YACAnlC,KAAAw/B,eACA5R,EAAA3nB,OACAo9B,EAAA1zB,UAAA,EAAAywB,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,IAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,IAEAyV,EAAA1zB,UAAA,EAAAywB,EAAAh3B,EAAAL,EAAA,GAAA6kB,GAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,GAGAA,EAAA3nB,OACAo9B,EAAA1zB,UAAAywB,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,GAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,IAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAA,IAEAyV,EAAA1zB,UAAAywB,EAAAh3B,EAAAL,EAAA,GAAA6kB,EAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,GAAAwS,EAAAh3B,EAAAL,EAAA,GAAA6kB,IAgBA,GAVA1K,EAAA6e,kBACAmC,EAAA3D,EAAA,IAAAA,GAEArd,EAAA4e,kBACAqC,EAAA,OAAAr/B,KAAAC,MAAA,IAAAgjB,EAAA,QAAAjjB,KAAAC,MAAA,IAAAgjB,EAAA,QAAAjjB,KAAAC,MAAA,IAAAgjB,EAAA,SAEA7E,EAAA2e,eAAA3e,EAAAsd,KACA4D,EAAA,OAAAt/B,KAAAC,MAAA,IAAAy7B,EAAA,QAAA17B,KAAAC,MAAA,IAAAy7B,EAAA,QAAA17B,KAAAC,MAAA,IAAAy7B,EAAA,SAGAxgC,KAAAw/B,eAAA,CAIA,GAHA6D,EAAA1zB,UAAA,GAAAuT,EAAAwe,IAEA2B,EAAA1zB,UAAA,EAAAqwB,EAAA,GAAA4D,EAAA,IAAAhB,EAAA,GACAtD,EAAAl2B,IAAA,CACA+5B,GAAAJ,EAAA5mB,MAAA,GAAA+mB,EAAA/mB,MAAA,KAAA4mB,EAAA5mB,MAAA,GAAA+mB,EAAA/mB,MAAA,IACA,IAAAspB,GAAA,IAAA3gC,KAAA4gC,KAAAvC,GAAAr+B,KAAA0B,GACAu8B,EAAA5mB,MAAA,GAAA+mB,EAAA/mB,MAAA,KACAspB,IAAA,KAEApC,EAAAp1B,QAAAw3B,GAAA3gC,KAAA0B,GAAA,KAEA68B,EAAA1zB,UAAAo0B,EAAAC,EAAA,GACAlB,GAAA9C,EAAA,GAAAwD,EAAA19B,GAAAw/B,GAAA,IACA9B,EAAA19B,EAAA,IAAAglB,IAAA0Y,EAAA19B,EAAA,GAAAglB,MACAgY,GAAAU,EAAA19B,GAAAw/B,GAAA,EACAxC,GAAA5f,EAAAiW,GAAA,IAAAjW,EAAA+e,eAEa,CAQb,OANAoB,EAAA1zB,UAAAgzB,EAAAC,EAAA,GAEA1f,EAAA0e,IAEAyB,EAAA1zB,UAAAuT,EAAA0e,GAAA,GAAA1e,EAAA0e,GAAA,GAAA1e,EAAAke,OAAA,GAEAle,EAAA7T,GACA,OACAg0B,EAAA1zB,UAAA6zB,EAAA19B,GAAA++B,sBAAA3hB,EAAAqe,eAAAre,EAAAme,SAAAne,EAAAue,WAAA+B,EAAA19B,GAAAs/B,OAAA,KACA,MACA,OACA/B,EAAA1zB,UAAA6zB,EAAA19B,GAAA++B,sBAAA3hB,EAAAqe,eAAAre,EAAAme,SAAAne,EAAAue,WAAA+B,EAAA19B,GAAAs/B,OAAA,OAGA/B,EAAA1zB,UAAA,GAAAuT,EAAAwe,IACA2B,EAAA1zB,UAAAm0B,EAAA,KACAT,EAAA1zB,UAAAqwB,EAAA,GAAAwD,EAAA19B,GAAAw/B,GAAA,IAAAtF,EAAA,GAAA4D,EAAA,OACAjB,GAAAa,EAAA19B,GAAAyJ,EAAA2T,EAAAiW,GAAA,IAAAjW,EAAA+e,UAEA,SAAA1C,EACAmF,GAAArB,EAAAnvB,QACa,QAAAqrB,EACbmF,GAAArB,EAAAhvB,UAEAswB,IAAAtB,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,GAAAkkC,EAAAlkC,MAAA,IAAAkkC,EAAAlkC,MAAA,IAAAkkC,EAAAlkC,MAAA,IAAAkkC,EAAAlkC,MAAA,IAAAkkC,EAAAlkC,MAAA,IAAAkkC,EAAAlkC,MAAA,KAEAklC,EAAAJ,EAGAV,GAAAz9B,GACA69B,EAAA,IAAA7C,YAAAuD,EAAAH,EAAAC,EAAAC,EAAAM,GAAAC,IACA3kC,KAAAigC,gBAAAt1B,KAAAg5B,GACAJ,GAAA,EACAvjC,KAAAkgC,oBAAA,IAEAyD,EAAA3jC,KAAAigC,gBAAAn6B,GACA9F,KAAAkgC,mBAAAyD,EAAAgC,OAAAtB,EAAAH,EAAAC,EAAAC,EAAAM,GAAAC,KAAA3kC,KAAAkgC,uBAKAb,qBAAAj1B,UAAA+B,SAAA,WACAnM,KAAA4/B,MAAA7R,WAAAC,UAAAhuB,KAAAy/B,WAGAz/B,KAAAy/B,SAAAz/B,KAAA4/B,MAAA7R,WAAAC,QACAhuB,KAAAiM,6BAGAozB,qBAAAj1B,UAAAk5B,QAAA,IAAA91B,OACA6xB,qBAAAj1B,UAAAw6B,qBACApqB,iBAAA7O,0BAAA0zB,sBA4CAyB,YAAA12B,UAAAu7B,OAAA,SAAAj2B,EAAA6wB,EAAAxY,EAAAyY,EAAAhxB,EAAApG,GACApJ,KAAAkM,KAAAwD,GAAA,EACA1P,KAAAkM,KAAAq0B,IAAA,EACAvgC,KAAAkM,KAAA6b,IAAA,EACA/nB,KAAAkM,KAAAs0B,IAAA,EACAxgC,KAAAkM,KAAAsD,GAAA,EACAxP,KAAAkM,KAAA9C,GAAA,EACA,IAAAw8B,GAAA,EAgCA,OA9BA5lC,KAAA0P,QACA1P,KAAA0P,IACA1P,KAAAkM,KAAAwD,GAAA,EACAk2B,GAAA,GAEA5lC,KAAAugC,SACAvgC,KAAAugC,KACAvgC,KAAAkM,KAAAq0B,IAAA,EACAqF,GAAA,GAEA5lC,KAAA+nB,SACA/nB,KAAA+nB,KACA/nB,KAAAkM,KAAA6b,IAAA,EACA6d,GAAA,GAEA5lC,KAAAwgC,SACAxgC,KAAAwgC,KACAxgC,KAAAkM,KAAAs0B,IAAA,EACAoF,GAAA,GAEA5lC,KAAAwP,QACAxP,KAAAwP,IACAxP,KAAAkM,KAAAsD,GAAA,EACAo2B,GAAA,IAEAx8B,EAAAnD,QAAAjG,KAAAoJ,EAAA,KAAAA,EAAA,IAAApJ,KAAAoJ,EAAA,KAAAA,EAAA,IAAApJ,KAAAoJ,EAAA,KAAAA,EAAA,IAAApJ,KAAAoJ,EAAA,KAAAA,EAAA,IAAApJ,KAAAoJ,EAAA,MAAAA,EAAA,KAAApJ,KAAAoJ,EAAA,MAAAA,EAAA,MACApJ,KAAAoJ,IACApJ,KAAAkM,KAAA9C,GAAA,EACAw8B,GAAA,GAEAA,GAsDA7E,aAAA32B,UAAAk3B,iBAAA,KAEAP,aAAA32B,UAAAg4B,SAAA,SAAAxsB,EAAAjW,GACA,QAAAmJ,KAAAnJ,EACAA,EAAAkb,eAAA/R,KACA8M,EAAA9M,GAAAnJ,EAAAmJ,IAGA,OAAA8M,GAGAmrB,aAAA32B,UAAAy7B,eAAA,SAAAlmC,GACAA,EAAAqkB,YACAhkB,KAAAsiC,iBAAA3iC,GAEAK,KAAAmhC,YAAAxhC,EACAK,KAAAmhC,YAAAE,SAAArhC,KAAAmhC,YAAAE,UAAArhC,KAAAshC,gBACAthC,KAAAkM,MAAA,GAGA60B,aAAA32B,UAAAi4B,eAAA,WACA,OAAAriC,KAAA8lC,mBAGA/E,aAAA32B,UAAA07B,gBAAA,WAKA,OAJA9lC,KAAAquB,GAAAruB,KAAAL,KAAA6J,EAAA8F,EAAArJ,OAAA,EACAjG,KAAAquB,IACAruB,KAAAsuB,UAAAtuB,KAAA+lC,iBAAAl7B,KAAA7K,OAEAA,KAAAquB,IAGA0S,aAAA32B,UAAAkkB,UAAA,SAAAC,GACAvuB,KAAAiuB,gBAAAtjB,KAAA4jB,GACAvuB,KAAA8tB,KAAAliB,mBAAA5L,OAGA+gC,aAAA32B,UAAA+B,SAAA,SAAA65B,GACA,GAAAhmC,KAAA8tB,KAAAC,WAAAC,UAAAhuB,KAAAguB,SAAAhuB,KAAAiuB,gBAAAhoB,QAAA+/B,EAAA,CAGAhmC,KAAAmhC,YAAA73B,EAAAtJ,KAAAL,KAAA6J,EAAA8F,EAAAtP,KAAAghC,WAAAl4B,EAAAQ,EACA,IAAA28B,EAAAjmC,KAAAmhC,YACA+E,EAAAlmC,KAAAghC,UACA,GAAAhhC,KAAAkuB,KACAluB,KAAA6lC,eAAA7lC,KAAAmhC,iBADA,CAIAnhC,KAAAkuB,MAAA,EACAluB,KAAAkM,MAAA,EAEA,IAAApG,EAAAE,EAAAhG,KAAAiuB,gBAAAhoB,OACAmoB,EAAA4X,GAAAhmC,KAAAL,KAAA6J,EAAA8F,EAAAtP,KAAAghC,WAAAl4B,EACA,IAAAhD,EAAA,EAAcA,EAAAE,EAASF,GAAA,EAGvBsoB,EADA8X,IAAAlmC,KAAAghC,UACAhhC,KAAAiuB,gBAAAnoB,GAAAsoB,IAAA9kB,GAEAtJ,KAAAiuB,gBAAAnoB,GAAA9F,KAAAmhC,YAAA/S,EAAA9kB,GAGA28B,IAAA7X,GACApuB,KAAA6lC,eAAAzX,GAEApuB,KAAA0pB,GAAA1pB,KAAA+I,EAAA/I,KAAAmhC,YACAnhC,KAAAkuB,MAAA,EACAluB,KAAAguB,QAAAhuB,KAAA8tB,KAAAC,WAAAC,WAGA+S,aAAA32B,UAAA27B,iBAAA,WAIA,IAHA,IAAAI,EAAAnmC,KAAAL,KAAA6J,EAAA8F,EACA+Z,EAAArpB,KAAA8tB,KAAAT,KAAAC,cACAxnB,EAAA,EAAAE,EAAAmgC,EAAAlgC,OACAH,GAAAE,EAAA,IACAmgC,EAAArgC,GAAAgD,IACAhD,IAAAE,EAAA,GAAAmgC,EAAArgC,EAAA,GAAAwD,EAAA+f,KAGAvjB,GAAA,EAKA,OAHA9F,KAAAghC,YAAAl7B,IACA9F,KAAAghC,UAAAl7B,GAEA9F,KAAAL,KAAA6J,EAAA8F,EAAAtP,KAAAghC,WAAAl4B,GAGAi4B,aAAA32B,UAAAg8B,eAAA,SAAAC,GAKA,IAJA,IAGAC,EAHA/hB,EAAAL,YAAAwC,4BACA6f,KACAzgC,EAAA,EAAAE,EAAAqgC,EAAApgC,OAEAH,EAAAE,GACAsgC,EAAAD,EAAA9wB,WAAAzP,IACA,IAAAye,EAAAxY,QAAAu6B,GACAC,IAAAtgC,OAAA,IAAAogC,EAAAG,OAAA1gC,GAEAwgC,GAAA,OAAAA,GAAA,QACAA,EAAAD,EAAA9wB,WAAAzP,EAAA,KACA,OAAAwgC,GAAA,OACAC,EAAA57B,KAAA07B,EAAAI,OAAA3gC,EAAA,MACAA,GAKAygC,EAAA57B,KAAA07B,EAAAG,OAAA1gC,IAGAA,GAAA,EAEA,OAAAygC,GAGAxF,aAAA32B,UAAAk4B,iBAAA,SAAApf,GACAA,EAAAc,YAAA,EACA,IAGAle,EAAAE,EACA0gC,EAAAvgC,EAKAkJ,EAAA+R,EAEAulB,EAXAzlB,EAAAlhB,KAAA8tB,KAAAC,WAAA7M,YACAvhB,EAAAK,KAAAL,KACA6jC,KAEA7a,EAAA,EACAie,EAAAjnC,EAAA6P,EAAAvG,EACA49B,EAAA,EAAAC,EAAA,EAAArC,EAAA,EAAAhD,KACAsF,EAAA,EACAC,EAAA,EAEAthB,EAAAxE,EAAAqH,cAAArF,EAAA/Z,GACA4sB,EAAA,EACAkR,EAAAvhB,EAAAI,OAAAJ,EAAAI,OAAAjD,MAAA,QAEAkD,EAAA,SAAAD,EAAA,SAGA,IAFA9f,EAAAihC,EAAAhhC,OAEAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAElB,OADAmhC,EAAAnhC,GAAAohC,eAEA,aACAphB,EAAA,SACA,MACA,WACAC,EAAA,MACA,MACA,YACAA,EAAA,MACA,MACA,aACAA,EAAA,MACA,MACA,cACA,aACAA,EAAA,MACA,MACA,YACA,WACAA,EAAA,MAIA7C,EAAA6C,QAAAL,EAAAK,WACA7C,EAAA4C,SACA5C,EAAA+e,UAAA/e,EAAApa,EACAoa,EAAAgf,UAAAliC,KAAAomC,eAAAljB,EAAA5Z,GACAtD,EAAAkd,EAAAgf,UAAAj8B,OACAid,EAAAif,gBAAAjf,EAAAse,GACA,IACA8E,EADAa,EAAAjkB,EAAAiW,GAAA,IAAAjW,EAAA+e,UAEA,GAAA/e,EAAAjU,GAKA,IAJA,IAGAm4B,EAAAlF,EAHAv7B,GAAA,EACA06B,EAAAne,EAAAjU,GAAA,GACAo4B,EAAAnkB,EAAAjU,GAAA,GAEAtI,GAAA,CAEAygC,EAAA,EACAL,EAAA,EACA/gC,GAHAk8B,EAAAliC,KAAAomC,eAAAljB,EAAA5Z,IAGArD,OACAkhC,EAAAjkB,EAAAiW,GAAA,IAAAjW,EAAA+e,UACA,IAAAqF,GAAA,EACA,IAAAxhC,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BwgC,EAAApE,EAAAp8B,GAAAyP,WAAA,GACAmxB,GAAA,EACA,MAAAxE,EAAAp8B,GACAwhC,EAAAxhC,EACiB,KAAAwgC,GAAA,IAAAA,IACjBS,EAAA,EACAL,GAAA,EACAU,GAAAlkB,EAAAif,iBAAA,IAAAjf,EAAA+e,WAEA/gB,EAAAmC,OACAsjB,EAAAzlB,EAAAiH,YAAA+Z,EAAAp8B,GAAA4f,EAAAI,OAAAJ,EAAAG,SACAkQ,EAAA2Q,EAAA,EAAAC,EAAAtiB,EAAAnB,EAAA+e,UAAA,KAGAlM,EAAA7U,EAAAuH,YAAAyZ,EAAAp8B,GAAAod,EAAA/Z,EAAA+Z,EAAA+e,WAEA8E,EAAAhR,EAAAsL,GAAA,MAAAa,EAAAp8B,KACA,IAAAwhC,EACAthC,GAAA,EAEAF,EAAAwhC,EAEAF,GAAAlkB,EAAAif,iBAAA,IAAAjf,EAAA+e,UACAC,EAAAp3B,OAAAhF,EAAAwhC,IAAAxhC,EAAA,UAEAwhC,GAAA,EACAP,EAAA,IAEAA,GAAAhR,EACAgR,GAAAI,GAGAC,GAAA1hB,EAAA0b,OAAAle,EAAA+e,UAAA,IACAjiC,KAAAihC,WAAA/d,EAAA+e,UAAAjiC,KAAAkhC,iBAAAmG,EAAAD,GACAlkB,EAAA+e,WAAA,EACA/e,EAAAif,gBAAAjf,EAAA+e,UAAA/e,EAAAse,GAAAte,EAAApa,IAEAoa,EAAAgf,YACAl8B,EAAAkd,EAAAgf,UAAAj8B,OACAU,GAAA,GAKAogC,GAAAI,EACApR,EAAA,EACA,IACAwR,EADAC,EAAA,EAEA,IAAA1hC,EAAA,EAAeA,EAAAE,EAASF,GAAA,EAkCxB,GAjCA4gC,GAAA,EAEAJ,GADAiB,EAAArkB,EAAAgf,UAAAp8B,IACAyP,WAAA,GACA,MAAAgyB,EACAphC,EAAA,IACS,KAAAmgC,GAAA,IAAAA,GACTkB,EAAA,EACA/F,EAAA92B,KAAAo8B,GACAC,EAAAD,EAAAC,EAAAD,EAAAC,EACAD,GAAA,EAAAI,EACAhhC,EAAA,GACAugC,GAAA,EACAjC,GAAA,GAEAt+B,EAAA+c,EAAAgf,UAAAp8B,GAEAob,EAAAmC,OACAsjB,EAAAzlB,EAAAiH,YAAAof,EAAA7hB,EAAAI,OAAA5E,EAAAqH,cAAArF,EAAA/Z,GAAA0c,SACAkQ,EAAA2Q,EAAA,EAAAC,EAAAtiB,EAAAnB,EAAA+e,UAAA,KAIAlM,EAAA7U,EAAAuH,YAAAtiB,EAAA+c,EAAA/Z,EAAA+Z,EAAA+e,WAIA,MAAAsF,EACAC,GAAAzR,EAAAoR,GAEAJ,GAAAhR,EAAAoR,EAAAK,EACAA,EAAA,GAEAhE,EAAA74B,MAAsB4E,EAAAwmB,EAAAuP,GAAAvP,EAAAyP,IAAAqB,EAAAp3B,EAAAi3B,EAAAxB,aAAA/+B,MAAAi/B,KAAAX,EAAAI,sBAAA,IACtB,GAAA+B,GAEA,GADAC,GAAA9Q,EACA,KAAA5vB,GAAA,MAAAA,GAAAL,IAAAE,EAAA,GAIA,IAHA,KAAAG,GAAA,MAAAA,IACA0gC,GAAA9Q,GAEA+Q,GAAAhhC,GACA09B,EAAAsD,GAAAxB,GAAAuB,EACArD,EAAAsD,GAAAhc,IAAAnC,EACA6a,EAAAsD,GAAAzB,MAAAtP,EACA+Q,GAAA,EAEAne,GAAA,EACAke,EAAA,QAES,MAAAD,GAET,GADAC,GAAA9Q,EACA,KAAA5vB,GAAAL,IAAAE,EAAA,GAIA,IAHA,KAAAG,IACA0gC,GAAA9Q,GAEA+Q,GAAAhhC,GACA09B,EAAAsD,GAAAxB,GAAAuB,EACArD,EAAAsD,GAAAhc,IAAAnC,EACA6a,EAAAsD,GAAAzB,MAAAtP,EACA+Q,GAAA,EAEAD,EAAA,EACAle,GAAA,QAGA6a,EAAA7a,GAAAmC,IAAAnC,EACA6a,EAAA7a,GAAA0c,MAAA,EACA1c,GAAA,EAMA,GAHAzF,EAAA3T,EAAAi0B,EACAwD,EAAAD,EAAAC,EAAAD,EAAAC,EACAvF,EAAA92B,KAAAo8B,GACA7jB,EAAAjU,GACAiU,EAAAme,SAAAne,EAAAjU,GAAA,GACAiU,EAAAqe,cAAA,OAGA,OADAre,EAAAme,SAAA2F,EACA9jB,EAAA7T,GACA,OACA6T,EAAAqe,eAAAre,EAAAme,SACA,MACA,OACAne,EAAAqe,eAAAre,EAAAme,SAAA,EACA,MACA,QACAne,EAAAqe,cAAA,EAGAre,EAAAue,aAEA,IAAAgG,EAAAC,EAAAtE,EAAAzjC,EAAAQ,EACAihB,EAAAgiB,EAAAn9B,OACA,IAAA0hC,EAAA7c,EAAA8c,KACA,IAAAv4B,EAAA,EAAYA,EAAA+R,EAAO/R,GAAA,GAanB,KAZAo4B,EAAArE,EAAA/zB,IACAlP,EAAA4nB,KACA7E,EAAA4e,iBAAA,GAEA2F,EAAAtnC,EAAAogC,KACArd,EAAA6e,iBAAA,IAEA0F,EAAAtnC,EAAAqgC,IAAAiH,EAAAtnC,EAAAsgC,IAAAgH,EAAAtnC,EAAAugC,IAAA+G,EAAAtnC,EAAAwgC,MACAzd,EAAA2e,eAAA,GAEA/W,EAAA,EACA6c,EAAAF,EAAA3+B,EAAAI,EACApD,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,GACtB4hC,EAAAlE,EAAA19B,IACAo/B,UAAA71B,GAAAyb,GACA,GAAA6c,GAAA,KAAAD,EAAAvhC,KAAA,GAAAwhC,GAAA,KAAAD,EAAAvhC,KAAA,MAAAuhC,EAAAvhC,KAAA,GAAAwhC,IAAAD,EAAAj4B,GAAA,KAAAi4B,EAAAvhC,KAAAL,GAAAE,EAAA,OAAA2hC,IAAAD,EAAAj4B,GAAA3J,GAAAE,EAAA,MACA,IAAAyhC,EAAA3+B,EAAA++B,IACAD,EAAAj9B,KAAAmgB,GAEAA,GAAA,GAGAnrB,EAAAQ,EAAAkP,GAAAvG,EAAAq8B,WAAAra,EACA,IAAAgd,EAAAC,GAAA,EACA,OAAAN,EAAA3+B,EAAA++B,GACA,IAAA/hC,EAAA,EAAsBA,EAAAE,EAASF,GAAA,EAE/BiiC,IADAL,EAAAlE,EAAA19B,IACAo/B,UAAA71B,KACA04B,EAAAL,EAAAxC,UAAA71B,GACAy4B,EAAAF,EAAA98B,OAAAhG,KAAAU,MAAAV,KAAAoB,SAAA0hC,EAAA3hC,QAAA,OAEAyhC,EAAAxC,UAAA71B,GAAAy4B,EAIA5kB,EAAA8e,QAAA9e,EAAAif,iBAAA,IAAAjf,EAAA+e,UACA/e,EAAAwe,GAAAxe,EAAAwe,IAAA,EACAxe,EAAAke,OAAA1b,EAAA0b,OAAAle,EAAA+e,UAAA,KAGAlB,aAAA32B,UAAA49B,mBAAA,SAAAC,EAAAtf,GACAA,OAAAuf,IAAAvf,EAAA3oB,KAAAghC,UAAArY,EACA,IAAAwf,EAAAnoC,KAAAoiC,YAAgCpiC,KAAAL,KAAA6J,EAAA8F,EAAAqZ,GAAA7f,GAChCq/B,EAAAnoC,KAAAoiC,SAAA+F,EAAAF,GACAjoC,KAAAL,KAAA6J,EAAA8F,EAAAqZ,GAAA7f,EAAAq/B,EACAnoC,KAAAooC,YAAAzf,GACA3oB,KAAA8tB,KAAAliB,mBAAA5L,OAGA+gC,aAAA32B,UAAAg+B,YAAA,SAAAzf,GACA,IAAAwf,EAAAnoC,KAAAL,KAAA6J,EAAA8F,EAAAqZ,GAAA7f,EACAq/B,EAAAnkB,YAAA,EACAhkB,KAAAghC,UAAA,EACAhhC,KAAAmuB,eAAA,EACAnuB,KAAAmM,SAAAg8B,IAGApH,aAAA32B,UAAAi+B,cAAA,SAAAC,GACAtoC,KAAAihC,UAAAqH,EACAtoC,KAAAooC,YAAApoC,KAAAghC,WACAhhC,KAAA8tB,KAAAliB,mBAAA5L,OAGA+gC,aAAA32B,UAAAm+B,mBAAA,SAAAC,GACAxoC,KAAAkhC,gBAAAp8B,KAAAU,MAAAgjC,IAAA,EACAxoC,KAAAooC,YAAApoC,KAAAghC,WACAhhC,KAAA8tB,KAAAliB,mBAAA5L,OAGA,IAAA4gC,iBAAA,WACA,IAAAv9B,EAAAyB,KAAAzB,IACAD,EAAA0B,KAAA1B,IACAoC,EAAAV,KAAAU,MAEA,SAAAo7B,EAAA9S,EAAAnuB,GACAK,KAAAyoC,oBAAA,EACAzoC,KAAAsP,GAAA,EACAtP,KAAAL,OACAK,KAAA8tB,OACA9tB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAA0oC,OAAA,EACA1oC,KAAA2oC,OAAA,EACA3oC,KAAAoM,6BAAA0hB,GACA9tB,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,IAAyDwG,EAAA,GAAI,IAAAtP,MAE7DA,KAAAoP,EADA,MAAAzP,EACAspB,gBAAAuF,QAAAV,EAAAnuB,EAAAyP,EAAA,IAAApP,OAEsB+I,EAAA,KAEtB/I,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,IAAyDJ,EAAA,GAAI,IAAAtP,MAC7DA,KAAA4oC,GAAA3f,gBAAAuF,QAAAV,EAAAnuB,EAAAipC,KAA2Dt5B,EAAA,GAAI,IAAAtP,MAC/DA,KAAA6oC,GAAA5f,gBAAAuF,QAAAV,EAAAnuB,EAAAkpC,KAA2Dv5B,EAAA,GAAI,IAAAtP,MAC/DA,KAAAG,EAAA8oB,gBAAAuF,QAAAV,EAAAnuB,EAAAQ,EAAA,MAAAH,MACAA,KAAA8L,kBAAA7F,QACAjG,KAAAmM,WAsHA,OAlHAy0B,EAAAx2B,WACA66B,QAAA,SAAAna,GACA9qB,KAAAyoC,qBAAAzoC,KAAA8tB,KAAAgb,aAAA3H,YAAA5xB,EAAAtJ,QACAjG,KAAAmM,WAGA,IAAAkP,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAxb,KAAA6oC,GAAA9/B,EAAA,EACAsS,EAAArb,KAAA6oC,GAAA9/B,EAAA,IAGAuS,GAAAtb,KAAA6oC,GAAA9/B,EAAA,IAEA/I,KAAA4oC,GAAA7/B,EAAA,EACAwS,EAAA,EAAAvb,KAAA4oC,GAAA7/B,EAAA,IAGAyS,EAAA,EAAAxb,KAAA4oC,GAAA7/B,EAAA,IAEA,IAAAggC,EAAAxxB,cAAAE,gBAAA4D,EAAAC,EAAAC,EAAAC,GAAAvC,IAEA2U,EAAA,EACA9kB,EAAA9I,KAAA0oC,OACAt5B,EAAApP,KAAA2oC,OACAtpC,EAAAW,KAAAL,KAAAgsB,GACA,OAAAtsB,EAMAuuB,EAAAmb,EAJAnb,EADAxe,IAAAtG,EACAgiB,GAAA1b,EAAA,IAEA/L,EAAA,EAAAD,EAAA,IAAAgM,EAAAtG,IAAAgiB,EAAAhiB,IAAAsG,EAAAtG,GAAA,UAGa,OAAAzJ,EAObuuB,EAAAmb,EALAnb,EADAxe,IAAAtG,EACAgiB,GAAA1b,EAAA,IAEA,EAAA/L,EAAA,EAAAD,EAAA,IAAAgM,EAAAtG,IAAAgiB,EAAAhiB,IAAAsG,EAAAtG,GAAA,UAIa,OAAAzJ,EACb+P,IAAAtG,EACA8kB,EAAA,GAEAA,EAAAvqB,EAAA,EAAAD,EAAA,IAAAgM,EAAAtG,IAAAgiB,EAAAhiB,IAAAsG,EAAAtG,GAAA,KACA,GACA8kB,GAAA,EAEAA,EAAA,KAAAA,EAAA,IAGAA,EAAAmb,EAAAnb,QACa,OAAAvuB,EAAA,CACb,GAAA+P,IAAAtG,EACA8kB,EAAA,MACiB,CACjB,IAAAob,EAAA55B,EAAAtG,EAIA2J,GAAAu2B,EAAA,GADAle,EAAA1nB,EAAAC,EAAA,EAAAynB,EAAA,GAAAhiB,GAAAsG,EAAAtG,IAEA3I,EAAA6oC,EAAA,EACApb,EAAA9oB,KAAAM,KAAA,EAAAqN,KAAAtS,MAEAytB,EAAAmb,EAAAnb,QACa,IAAAvuB,GACb+P,IAAAtG,EACA8kB,EAAA,GAEA9C,EAAA1nB,EAAAC,EAAA,EAAAynB,EAAA,GAAAhiB,GAAAsG,EAAAtG,GACA8kB,GAAA,EAAA9oB,KAAA4I,IAAA5I,KAAA0B,GAAA,EAAA1B,KAAA0B,GAAA,GAAA4I,EAAAtG,KAAA,GAEA8kB,EAAAmb,EAAAnb,KAEA9C,GAAAtlB,EAAAsD,KAEA8kB,EAAAvqB,EAAA,EAAAD,EADA0nB,EAAAhiB,EAAA,EACA1F,EAAAgM,EAAA,IAAAtG,EAAAgiB,GAEA1b,EAAA0b,EAFA,KAKA8C,EAAAmb,EAAAnb,IAEA,OAAAA,EAAA5tB,KAAAG,EAAA4I,GAEAoD,SAAA,SAAA88B,GACAjpC,KAAAiM,2BACAjM,KAAAkM,KAAA+8B,GAAAjpC,KAAAkM,KACAlM,KAAAyoC,mBAAAzoC,KAAA8tB,KAAAgb,aAAA3H,YAAA5xB,EAAAtJ,QAAA,EACAgjC,GAAA,IAAAjpC,KAAAL,KAAAqJ,IACAhJ,KAAAoP,EAAArG,EAAA/I,KAAAyoC,oBAEA,IAAAS,EAAA,IAAAlpC,KAAAL,KAAAqJ,EAAA,MAAAhJ,KAAAL,KAAAwlC,WACAz1B,EAAA1P,KAAA0P,EAAA3G,EAAAmgC,EACApgC,EAAA9I,KAAA8I,EAAAC,EAAAmgC,EAAAx5B,EACAN,EAAApP,KAAAoP,EAAArG,EAAAmgC,EAAAx5B,EACA,GAAA5G,EAAAsG,EAAA,CACA,IAAAqoB,EAAA3uB,EACAA,EAAAsG,EACAA,EAAAqoB,EAEAz3B,KAAA0oC,OAAA5/B,EACA9I,KAAA2oC,OAAAv5B,IAGAoL,iBAAA7O,0BAAAi1B,IAOAC,oBALA,SAAA/S,EAAAnuB,EAAAwL,GACA,WAAAy1B,EAAA9S,EAAAnuB,EAAAwL,KA5IA,GAqJAg+B,aACA,SAAAC,EAAAC,EAAAC,EAAAC,GAEA,IAAAvrB,EAAA,EACAwS,EAAA4Y,EACA90B,EAAAjO,iBAAAmqB,GAOA,SAAAjU,IAQA,OANAyB,EAEA1J,EADA0J,GAAA,GAGAqrB,IAsBA,OAhCA9sB,aACA+a,QAcA,SAAAzwB,GACAmX,IAAAwS,IACAlc,EAAAk1B,QAAAryB,OAAA7C,GACAkc,GAAA,GAEA8Y,GACAA,EAAAziC,GAEAyN,EAAA0J,GAAAnX,EACAmX,GAAA,KAYAwrB,QAAA,WAMA,OACAryB,OALA,SAAAhM,GACA,OAAAA,EAAAgb,OAAA9f,iBAAA8E,EAAAlF,WAHA,GAUA0qB,WAAA,WAKA,OAAAwY,aAAA,EAHA,WACA,OAAAp+B,iBAAA,eAHA,GAOA0nB,WAAA,WAiCA,IAAAxuB,EAAAklC,aAAA,EA/BA,WACA,WAAA5Y,WAGA,SAAA4H,GACA,IAAAryB,EAAAE,EAAAmyB,EAAAna,QACA,IAAAlY,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrB6qB,WAAA2G,QAAAa,EAAApvB,EAAAjD,IACA6qB,WAAA2G,QAAAa,EAAAryB,MACA6qB,WAAA2G,QAAAa,EAAAzoB,EAAA5J,IACAqyB,EAAApvB,EAAAjD,GAAA,KACAqyB,EAAAryB,KAAA,KACAqyB,EAAAzoB,EAAA5J,GAAA,KAEAqyB,EAAAna,QAAA,EACAma,EAAAhpB,GAAA,IAmBA,OAFAlL,EAAAqO,MAdA,SAAAikB,GACA,IACAzwB,EADA2jC,EAAAxlC,EAAAsY,aACAvW,OAAAkiC,IAAA3R,EAAAvY,QAAAuY,EAAAxtB,EAAA9C,OAAAswB,EAAAvY,QAKA,IAJAyrB,EAAA/Y,UAAA1qB,GACAyjC,EAAAt6B,EAAAonB,EAAApnB,EAGArJ,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrB2jC,EAAA1Y,YAAAwF,EAAAxtB,EAAAjD,GAAA,GAAAywB,EAAAxtB,EAAAjD,GAAA,GAAAywB,EAAA7mB,EAAA5J,GAAA,GAAAywB,EAAA7mB,EAAA5J,GAAA,GAAAywB,EAAAzwB,KAAA,GAAAywB,EAAAzwB,KAAA,GAAAA,GAEA,OAAA2jC,GAMAxlC,EApCA,GAsCA4uB,qBAAA,WACA,IAAArb,GACAsb,mBAQA,WACA,IAAA4W,EAGAA,EAFA1rB,EAEA1J,EADA0J,GAAA,GAGA,IAAAwX,gBAEA,OAAAkU,GAfApS,QAkBA,SAAAoS,GACA,IAAA5jC,EAAAE,EAAA0jC,EAAA1rB,QACA,IAAAlY,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrB2sB,WAAA6E,QAAAoS,EAAA1nB,OAAAlc,IAEA4jC,EAAA1rB,QAAA,EAEAA,IAAAwS,IACAlc,EAAAk1B,QAAAryB,OAAA7C,GACAkc,GAAA,GAEAlc,EAAA0J,GAAA0rB,EACA1rB,GAAA,IA3BAA,EAAA,EACAwS,EAAA,EACAlc,EAAAjO,iBAAAmqB,GA4BA,OAAAhZ,EApCA,GAsCAmG,qBAAA,WAiBA,OAAAwrB,aAAA,EAfA,WACA,OACA1sB,WACAwB,YAAA,IAIA,SAAApX,GACA,IAAAf,EAAAE,EAAAa,EAAA4V,QAAAxW,OACA,IAAAH,EAAA,EAAUA,EAAAE,EAAMF,GAAA,EAChBwW,mBAAAgb,QAAAzwB,EAAA4V,QAAA3W,IAEAe,EAAA4V,QAAAxW,OAAA,IAdA,GAmBAqW,mBAAA,WASA,OAAA6sB,aAAA,EAPA,WACA,OACAjtB,YAAA,EACAM,SAAAzR,iBAAA,UAAAzE,sBACAmW,QAAA1R,iBAAA,UAAAzE,yBANA,GAWA,SAAAqjC,gBA+HA,SAAAC,YAAAC,EAAAC,GACA9pC,KAAA6pC,gBACA7pC,KAAAghB,OAAA,KACAhhB,KAAAstB,eAAA,EACAttB,KAAA+pC,WAAAz+B,SAAA,OACA,IAAA0+B,EAAA,GACA,GAAAF,KAAAG,MAAA,CACA,IAAAC,EAAA5+B,SAAA,SACA6+B,EAAAzhC,kBACAwhC,EAAAtkB,aAAA,KAAAukB,GACAD,EAAAlkB,YAAA8jB,EAAAG,MACAjqC,KAAA+pC,WAAA3kB,YAAA8kB,GACAF,GAAAG,EAEA,GAAAL,KAAAM,YAAA,CACA,IAAAC,EAAA/+B,SAAA,QACAg/B,EAAA5hC,kBACA2hC,EAAAzkB,aAAA,KAAA0kB,GACAD,EAAArkB,YAAA8jB,EAAAM,YACApqC,KAAA+pC,WAAA3kB,YAAAilB,GACAL,GAAA,IAAAM,EAEAN,GACAhqC,KAAA+pC,WAAAnkB,aAAA,kBAAAokB,GAEA,IAAAjjB,EAAAzb,SAAA,QACAtL,KAAA+pC,WAAA3kB,YAAA2B,GACA,IAAAwjB,EAAAj/B,SAAA,KACAtL,KAAA+pC,WAAA3kB,YAAAmlB,GACAvqC,KAAAwqC,aAAAD,EACAvqC,KAAAyqC,cACAC,oBAAAZ,KAAAY,qBAAA,gBACAC,yBAAAb,KAAAa,0BAAA,iBACAC,gBAAAd,KAAAc,kBAAA,EACAC,mBAAAf,IAAA,IAAAA,EAAAe,kBACAC,YAAAhB,KAAAgB,cAAA,EACAC,YAAAjB,KAAAiB,cAAA,EACAC,UAAAlB,KAAAkB,WAAA,GACAtqB,GAAAopB,KAAAppB,IAAA,GACAuqB,UAAAnB,KAAAmB,WAGAjrC,KAAA+tB,YACA7hB,MAAA,EACAmd,UAAA,EACAtC,OACA0jB,aAAAzqC,KAAAyqC,cAEAzqC,KAAAq6B,YACAr6B,KAAAkrC,mBACAlrC,KAAAmrC,WAAA,EACAnrC,KAAAorC,aAAA,MA8MA,SAAAC,eAAAxB,EAAAC,GACA9pC,KAAA6pC,gBACA7pC,KAAAyqC,cACAa,aAAAxB,QAAA5B,IAAA4B,EAAAwB,aAAAxB,EAAAwB,YACAC,QAAAzB,KAAAyB,SAAA,KACAX,gBAAAd,KAAAc,kBAAA,EACAF,oBAAAZ,KAAAY,qBAAA,gBACAC,yBAAAb,KAAAa,0BAAA,iBACAK,UAAAlB,KAAAkB,WAAA,GACAtqB,GAAAopB,KAAAppB,IAAA,IAEA1gB,KAAAyqC,aAAAe,IAAA1B,KAAA0B,KAAA,EACAxrC,KAAA6pC,cAAA4B,UACAzrC,KAAAyqC,aAAAe,IAAA1B,KAAA0B,KAAArnC,OAAAunC,kBAAA,GAEA1rC,KAAAstB,eAAA,EACAttB,KAAA+tB,YACA1E,UAAA,EACAnd,MAAA,EACAu+B,aAAAzqC,KAAAyqC,aACAkB,oBAAA,GAEA3rC,KAAA4rC,YAAA,IAAAC,cACA7rC,KAAAq6B,YACAr6B,KAAAkrC,mBACAlrC,KAAA8rC,aAAA,IAAAt+B,OACAxN,KAAA+gB,gBAAA,EACA/gB,KAAAorC,aAAA,SAiTA,SAAAW,eAAAlC,EAAAC,GACA9pC,KAAA6pC,gBACA7pC,KAAAghB,OAAA,KACAhhB,KAAAstB,eAAA,EACAttB,KAAAyqC,cACAO,UAAAlB,KAAAkB,WAAA,GACAL,yBAAAb,KAAAa,0BAAA,iBACAE,mBAAAf,IAAA,IAAAA,EAAAe,mBAEA7qC,KAAA+tB,YACA7hB,MAAA,EACAmd,UAAA,EACAohB,aAAAzqC,KAAAyqC,cAEAzqC,KAAAkrC,mBACAlrC,KAAAq6B,YACAr6B,KAAAgsC,kBACAhsC,KAAAmrC,WAAA,EACAnrC,KAAAisC,OAAA,KACAjsC,KAAAksC,YAAA,EACAlsC,KAAAorC,aAAA,OAqRA,SAAAe,YAAAxsC,EAAAkH,EAAAknB,GACA/tB,KAAAL,OACAK,KAAA6G,UACA7G,KAAA+tB,aACA/tB,KAAA6c,cACA7c,KAAA2hB,gBAAA3hB,KAAAL,KAAAgiB,oBACA3hB,KAAAuqC,YAAA,KACA,IACAzkC,EADAihB,EAAA/mB,KAAA+tB,WAAAhH,KACA/gB,EAAAhG,KAAA2hB,gBAAA3hB,KAAA2hB,gBAAA1b,OAAA,EACAjG,KAAAosC,SAAA/lC,iBAAAL,GACAhG,KAAAqsC,UAAA,GAGA,IAAA7pB,EAGAnT,EAAA+R,EAEAkrB,EAAAC,EAAAC,EAAA/5B,EALAg6B,EAAAzsC,KAAA2hB,gBACA5K,EAAA,EACA21B,KAEAC,EAAAjkC,kBAEAq1B,EAAA,WAAA6O,EAAA,YACA,IAAA9mC,EAAA,EAAeA,EAAAE,EAASF,IAiBxB,IAhBA,MAAA2mC,EAAA3mC,GAAAyH,MAAA,MAAAk/B,EAAA3mC,GAAAyH,MAAAk/B,EAAA3mC,GAAA8zB,KAAA,MAAA6S,EAAA3mC,GAAA4J,EAAAJ,GAAAm9B,EAAA3mC,GAAA4J,EAAA+C,KACAsrB,EAAA,OACA6O,EAAA,QAGA,KAAAH,EAAA3mC,GAAAyH,MAAA,KAAAk/B,EAAA3mC,GAAAyH,MAAA,IAAAwJ,EAOAu1B,EAAA,OANAA,EAAAhhC,SAAA,SACAsa,aAAA,kBACA0mB,EAAA1mB,aAAA,QAAA5lB,KAAA6G,QAAAwmB,KAAA1tB,KAAA0kB,GAAA,GACAioB,EAAA1mB,aAAA,SAAA5lB,KAAA6G,QAAAwmB,KAAA1tB,KAAAkJ,GAAA,GACA6jC,EAAA/hC,KAAA2hC,IAKA9pB,EAAAlX,SAAA,QACA,KAAAmhC,EAAA3mC,GAAAyH,KAAA,CAeA,IAAAs/B,EA+BA,GAnCA91B,GAAA,EAEAyL,EAAAoD,aAAA,aAAA6mB,EAAA3mC,GAAAyH,KAAA,qBACAiV,EAAAoD,aAAA,uBAGA,IAAA6mB,EAAA3mC,GAAA2M,EAAAnD,GACAyuB,EAAA,OACA6O,EAAA,OACAn6B,EAAAwW,gBAAAuF,QAAAxuB,KAAA6G,QAAA4lC,EAAA3mC,GAAA2M,EAAA,OAAAzS,KAAA6G,SACAgmC,EAAAnkC,mBACA6jC,EAAAjhC,SAAA,WACAsa,aAAA,KAAAinB,IACAL,EAAAlhC,SAAA,iBACAsa,aAAA,oBACA4mB,EAAA5mB,aAAA,sBACA4mB,EAAA5mB,aAAA,cACA2mB,EAAAnnB,YAAAonB,GACAzlB,EAAA3B,YAAAmnB,GACA/pB,EAAAoD,aAAA,eAAA6mB,EAAA3mC,GAAAyH,KAAA,uBAEAi/B,EAAA,KACA/5B,EAAA,MAIAzS,KAAA6c,WAAA/W,IACAgoB,KAAAtL,EACA/P,IACAq6B,MAAAN,EACAO,SAAA,GACAC,aAAA,GACAC,SAAAJ,EACAK,WAAA,GAEA,KAAAT,EAAA3mC,GAAAyH,KAAA,CACA6T,EAAAsrB,EAAAzmC,OACA,IAAAgD,EAAAqC,SAAA,KACA,IAAA+D,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAC3BpG,EAAAmc,YAAAsnB,EAAAr9B,IAEA,IAAAyF,EAAAxJ,SAAA,QACAwJ,EAAA8Q,aAAA,qBACA9Q,EAAA8Q,aAAA,KAAA+mB,EAAA,IAAA51B,GACAjC,EAAAsQ,YAAA5C,GACAuE,EAAA3B,YAAAtQ,GACA7L,EAAA2c,aAAA,cAAAvhB,aAAA,IAAAsoC,EAAA,IAAA51B,EAAA,KAEA21B,EAAAzmC,OAAA,EACAymC,EAAA/hC,KAAA1B,QAEAyjC,EAAA/hC,KAAA6X,GAEAiqB,EAAA3mC,GAAA8zB,MAAA55B,KAAAqsC,YACArsC,KAAAqsC,UAAArsC,KAAAmtC,wBAGAntC,KAAAosC,SAAAtmC,IACAgoB,KAAAtL,EACAuqB,SAAA,GACApR,GAAA1S,gBAAAuF,QAAAxuB,KAAA6G,QAAA4lC,EAAA3mC,GAAA4J,EAAA,MAAA1P,KAAA6G,SACAgF,KAAAgmB,qBAAAgD,aAAA70B,KAAA6G,QAAA4lC,EAAA3mC,GAAA,GACAsnC,QAAAd,GAEAtsC,KAAAosC,SAAAtmC,GAAA+F,KAAAyD,GACAtP,KAAAqtC,SAAAZ,EAAA3mC,GAAA9F,KAAAosC,SAAAtmC,GAAA+F,KAAA9C,EAAA/I,KAAAosC,SAAAtmC,SA1EA9F,KAAAosC,SAAAtmC,IACA61B,GAAA1S,gBAAAuF,QAAAxuB,KAAA6G,QAAA4lC,EAAA3mC,GAAA4J,EAAA,MAAA1P,KAAA6G,SACAgF,KAAAgmB,qBAAAgD,aAAA70B,KAAA6G,QAAA4lC,EAAA3mC,GAAA,GACAgoB,KAAAtL,EACAuqB,SAAA,IAEAhmB,EAAA3B,YAAA5C,GA2EA,IAHAxiB,KAAAuqC,YAAAj/B,SAAAyyB,GAEA/3B,EAAA0mC,EAAAzmC,OACAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB9F,KAAAuqC,YAAAnlB,YAAAsnB,EAAA5mC,IAGAiR,EAAA,IACA/W,KAAAuqC,YAAA3kB,aAAA,KAAA+mB,GACA3sC,KAAA6G,QAAAymC,cAAA1nB,aAAAgnB,EAAA,OAAAvoC,aAAA,IAAAsoC,EAAA,KACA5lB,EAAA3B,YAAAplB,KAAAuqC,cAEAvqC,KAAAosC,SAAAnmC,QACAjG,KAAA6G,QAAA0mC,uBAAAvtC,MAiGA,SAAAwtC,oBAmDA,SAAAC,gBA4CA,SAAAC,oBA0EA,SAAAC,qBAwFA,SAAAC,wBA6DA,SAAAC,iBAAAhnC,EAAAC,GACA9G,KAAA8tB,KAAAjnB,EACA7G,KAAA8wB,IAAAhqB,EAEA,SAAAgnC,aAAAnuC,EAAAouC,GACA/tC,KAAAL,OACAK,KAAAX,KAAAM,EAAAkQ,GACA7P,KAAAwJ,EAAA,GACAxJ,KAAAguC,IAAAD,EACA/tC,KAAAkM,MAAA,EACAlM,KAAA4d,QAAA,IAAAje,EAAAsuC,GACAjuC,KAAAkuC,MAAA5iC,SAAA,QACAtL,KAAAmuC,OAAA,KAOA,SAAAC,aAAAC,EAAAN,EAAAxX,GACAv2B,KAAAsuC,UACAtuC,KAAAinC,UACAjnC,KAAAquC,eACAruC,KAAAuuC,KAAA,GACAvuC,KAAA2rB,GAAA4K,EACAv2B,KAAAguC,IAAAD,EAIA/tC,KAAAgM,cAAAuqB,EAAAjnB,EAGA,IADA,IAAAxJ,EAAA,EAAAE,EAAAqoC,EAAApoC,OACAH,EAAAE,GAAA,CACA,GAAAqoC,EAAAvoC,GAAA41B,OAAA5vB,kBAAA7F,OAAA,CACAjG,KAAAgM,aAAA,EACA,MAEAlG,GAAA,GAOA,SAAA0oC,iBAAA9S,EAAAC,EAAAt7B,GACAL,KAAA+P,WACA2rB,SACAC,KACAt7B,aAEAL,KAAAq6B,YACAr6B,KAAAgM,YAAAhM,KAAA+P,UAAA2rB,OAAA5vB,kBAAA7F,QAAAjG,KAAA+P,UAAA4rB,GAAA1N,gBAAAhoB,OAEA,SAAAwoC,mBAAA3gB,EAAAnuB,EAAA+uC,GACA1uC,KAAAoM,6BAAA0hB,GACA9tB,KAAAmM,SAAAnM,KAAAiM,yBACAjM,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,MAAA1P,MACAA,KAAAqkB,EAAA4E,gBAAAuF,QAAAV,EAAAnuB,EAAA0kB,EAAA,OAAArkB,MACAA,KAAAwJ,EAAA,IAAAisB,aAAA3H,EAAAnuB,EAAA6J,MAA0C,MAAAxJ,MAC1CA,KAAAmP,EAAA8Z,gBAAAuF,QAAAV,EAAAnuB,EAAAwP,EAAA,MAAAnP,MACAA,KAAAJ,MAAA8uC,EACA1uC,KAAAgM,cAAAhM,KAAAgM,YAIA,SAAA2iC,iBAAA7gB,EAAAnuB,EAAA+uC,GACA1uC,KAAAoM,6BAAA0hB,GACA9tB,KAAAmM,SAAAnM,KAAAiM,yBACAjM,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,MAAA1P,MACAA,KAAAmP,EAAA8Z,gBAAAuF,QAAAV,EAAAnuB,EAAAwP,EAAA,MAAAnP,MACAA,KAAAJ,MAAA8uC,EAIA,SAAAE,yBAAA9gB,EAAAnuB,EAAA+uC,GACA1uC,KAAAoM,6BAAA0hB,GACA9tB,KAAAmM,SAAAnM,KAAAiM,yBACAjM,KAAA6uC,iBAAA/gB,EAAAnuB,EAAA+uC,GAsEA,SAAAI,2BAAAhhB,EAAAnuB,EAAA+uC,GACA1uC,KAAAoM,6BAAA0hB,GACA9tB,KAAAmM,SAAAnM,KAAAiM,yBACAjM,KAAAqkB,EAAA4E,gBAAAuF,QAAAV,EAAAnuB,EAAA0kB,EAAA,OAAArkB,MACAA,KAAAwJ,EAAA,IAAAisB,aAAA3H,EAAAnuB,EAAA6J,MAA0C,MAAAxJ,MAC1CA,KAAA6uC,iBAAA/gB,EAAAnuB,EAAA+uC,GACA1uC,KAAAgM,cAAAhM,KAAAgM,YAIA,SAAA+iC,iBACA/uC,KAAAuiB,MACAviB,KAAAgvC,gBACAhvC,KAAAivC,GAAA3jC,SAAA,KArrDAq+B,aAAAv/B,UAAA8kC,YAAA,SAAAC,GACA,IAAArpC,EAAAnG,EAAAqG,EAAAhG,KAAAghB,OAAA/a,OAEA,IADAjG,KAAA+gB,gBAAA,EACAjb,EAAAE,EAAA,EAAqBF,GAAA,EAAQA,IAC7B9F,KAAAq6B,SAAAv0B,KACAnG,EAAAK,KAAAghB,OAAAlb,IACAspC,GAAAzvC,EAAA+uB,IAAAygB,EAAAnvC,KAAAghB,OAAAlb,GAAA4oB,IAAA/uB,EAAAg8B,GAAAh8B,EAAA+uB,GAAAygB,EAAAnvC,KAAAghB,OAAAlb,GAAA4oB,IAEA1uB,KAAAqvC,UAAAvpC,GAGA9F,KAAA+gB,iBAAA/gB,KAAAq6B,SAAAv0B,IAAA9F,KAAA+gB,eAEA/gB,KAAAsvC,wBAGA3F,aAAAv/B,UAAAmlC,WAAA,SAAAC,GACA,OAAAA,EAAA3/B,IACA,OACA,OAAA7P,KAAAyvC,YAAAD,GACA,OACA,OAAAxvC,KAAA0vC,WAAAF,GACA,OACA,OAAAxvC,KAAA2vC,YAAAH,GACA,OACA,OAAAxvC,KAAA4vC,WAAAJ,GACA,OACA,OAAAxvC,KAAA6vC,YAAAL,GACA,OACA,OAAAxvC,KAAA8vC,WAAAN,GACA,QACA,OAAAxvC,KAAA+vC,aAAAP,GAEA,OAAAxvC,KAAA4vC,WAAAJ,IAGA7F,aAAAv/B,UAAA2lC,aAAA,WACA,UAAAC,MAAA,qDAGArG,aAAAv/B,UAAA6lC,cAAA,WACA,IAAAnqC,EAAAE,EAAAhG,KAAAghB,OAAA/a,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB9F,KAAAqvC,UAAAvpC,GAEA9F,KAAAsvC,wBAGA3F,aAAAv/B,UAAA8lC,cAAA,SAAAC,GACAnwC,KAAA+gB,gBAAA,EACA,IAAAjb,EACAuJ,EADArJ,EAAAmqC,EAAAlqC,OACAmb,EAAAphB,KAAAghB,OAAA/a,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAElB,IADAuJ,EAAA,EACAA,EAAA+R,GAAA,CACA,GAAAphB,KAAAghB,OAAA3R,GAAAqR,IAAAyvB,EAAArqC,GAAA4a,GAAA,CACA1gB,KAAAghB,OAAA3R,GAAA8gC,EAAArqC,GACA,MAEAuJ,GAAA,IAKAs6B,aAAAv/B,UAAAgmC,oBAAA,SAAAC,GACArwC,KAAA+tB,WAAAuiB,iBAAAD,GAGA1G,aAAAv/B,UAAAmmC,UAAA,WACAvwC,KAAA+tB,WAAA6c,iBACA5qC,KAAAiwC,iBAGAtG,aAAAv/B,UAAAomC,sBAAA,SAAA3pC,EAAA4pC,EAAAC,GAIA,IAHA,IAAArW,EAAAr6B,KAAAq6B,SACArZ,EAAAhhB,KAAAghB,OACAlb,EAAA,EAAAE,EAAAgb,EAAA/a,OACAH,EAAAE,GACAgb,EAAAlb,GAAAglB,KAAA2lB,IACApW,EAAAv0B,KAAA,IAAAu0B,EAAAv0B,IAIA4qC,EAAA/lC,KAAA0vB,EAAAv0B,IACAu0B,EAAAv0B,GAAA6qC,mBACAzI,IAAAlnB,EAAAlb,GAAAyf,OACAvlB,KAAAwwC,sBAAA3pC,EAAAma,EAAAlb,GAAAyf,OAAAmrB,GAEA7pC,EAAA+pC,aAAAF,KARA1wC,KAAAqvC,UAAAvpC,GACA9F,KAAA6wC,kBAAAhqC,KAWAf,GAAA,GAIA6jC,aAAAv/B,UAAAymC,kBAAA,SAAAhqC,GACA7G,KAAAkrC,gBAAAvgC,KAAA9D,IAGA8iC,aAAAv/B,UAAA0mC,wBAAA,SAAA3tB,GACA,IAAArd,EAAAE,EAAAmd,EAAAld,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB,GAAAqd,EAAArd,GAAAirC,GAAA,CACA,IAAA1jB,EAAArtB,KAAA0vC,WAAAvsB,EAAArd,IACAunB,EAAA2jB,kBACAhxC,KAAA+tB,WAAAuiB,iBAAAW,oBAAA5jB,KAKAsc,aAAAv/B,UAAA8mC,gBAAA,SAAAC,EAAAC,GACApxC,KAAA+tB,WAAA7M,YAAA,IAAAgD,YACAlkB,KAAA+tB,WAAA7M,YAAAyF,SAAAwqB,EAAA9tB,OACArjB,KAAA+tB,WAAA7M,YAAA4F,SAAAqqB,EAAA9qB,MAAA+qB,GACApxC,KAAA+tB,WAAAsjB,aAAArxC,KAAA6pC,cAAAwH,aAAAxmC,KAAA7K,KAAA6pC,eACA7pC,KAAA+tB,WAAAmP,cAAAl9B,KAAA6pC,cAAA3M,cAAAryB,KAAA7K,KAAA6pC,eACA7pC,KAAA+tB,WAAAujB,YAAAtxC,KAAA6pC,cAAA0H,eACAvxC,KAAA+tB,WAAAC,QAAA,EACAhuB,KAAA+tB,WAAAmC,UAAAihB,EAAAK,GACAxxC,KAAA+tB,WAAArW,GAAAy5B,EAAAz5B,GACA1X,KAAA+tB,WAAA0jB,UACAptB,EAAA8sB,EAAA9sB,EACAxb,EAAAsoC,EAAAtoC,IA0DA2R,iBAAAmvB,cAAAC,aAEAA,YAAAx/B,UAAAwlC,WAAA,SAAAjwC,GACA,WAAA+xC,YAAA/xC,EAAAK,KAAA+tB,WAAA/tB,OAGA4pC,YAAAx/B,UAAAylC,YAAA,SAAAlwC,GACA,WAAAgyC,gBAAAhyC,EAAAK,KAAA+tB,WAAA/tB,OAGA4pC,YAAAx/B,UAAA0lC,WAAA,SAAAnwC,GACA,WAAAiyC,eAAAjyC,EAAAK,KAAA+tB,WAAA/tB,OAIA4pC,YAAAx/B,UAAAqlC,YAAA,SAAA9vC,GACA,WAAAkyC,cAAAlyC,EAAAK,KAAA+tB,WAAA/tB,OAGA4pC,YAAAx/B,UAAAslC,WAAA,SAAA/vC,GACA,WAAAmyC,eAAAnyC,EAAAK,KAAA+tB,WAAA/tB,OAIA4pC,YAAAx/B,UAAAulC,YAAA,SAAAhwC,GACA,WAAAoyC,cAAApyC,EAAAK,KAAA+tB,WAAA/tB,OAGA4pC,YAAAx/B,UAAA4nC,gBAAA,SAAAb,GACAnxC,KAAA+pC,WAAAnkB,aAAA,sCACA5lB,KAAAyqC,aAAAM,YACA/qC,KAAA+pC,WAAAnkB,aAAA,UAAA5lB,KAAAyqC,aAAAM,aAEA/qC,KAAA+pC,WAAAnkB,aAAA,iBAAAurB,EAAA9sB,EAAA,IAAA8sB,EAAAtoC,GAGA7I,KAAAyqC,aAAAK,cACA9qC,KAAA+pC,WAAAnkB,aAAA,QAAAurB,EAAA9sB,GACArkB,KAAA+pC,WAAAnkB,aAAA,SAAAurB,EAAAtoC,GACA7I,KAAA+pC,WAAAnqC,MAAAF,MAAA,OACAM,KAAA+pC,WAAAnqC,MAAAJ,OAAA,OACAQ,KAAA+pC,WAAAnqC,MAAAmQ,UAAA,sBAEA/P,KAAAyqC,aAAAO,WACAhrC,KAAA+pC,WAAAnkB,aAAA,QAAA5lB,KAAAyqC,aAAAO,WAEAhrC,KAAAyqC,aAAA/pB,IACA1gB,KAAA+pC,WAAAnkB,aAAA,KAAA5lB,KAAAyqC,aAAA/pB,SAEAwnB,IAAAloC,KAAAyqC,aAAAQ,WACAjrC,KAAA+pC,WAAAnkB,aAAA,YAAA5lB,KAAAyqC,aAAAQ,WAEAjrC,KAAA+pC,WAAAnkB,aAAA,sBAAA5lB,KAAAyqC,aAAAC,qBAGA1qC,KAAA6pC,cAAA4B,QAAArmB,YAAAplB,KAAA+pC,YAEA,IAAAhjB,EAAA/mB,KAAA+tB,WAAAhH,KAEA/mB,KAAAkxC,gBAAAC,EAAApqB,GACA/mB,KAAA+tB,WAAA6c,gBAAA5qC,KAAAyqC,aAAAG,gBACA5qC,KAAAL,KAAAwxC,EAEA,IAAA5G,EAAAj/B,SAAA,YACAghC,EAAAhhC,SAAA,QACAghC,EAAA1mB,aAAA,QAAAurB,EAAA9sB,GACAioB,EAAA1mB,aAAA,SAAAurB,EAAAtoC,GACAyjC,EAAA1mB,aAAA,OACA0mB,EAAA1mB,aAAA,OACA,IAAAqsB,EAAAvpC,kBACA6hC,EAAA3kB,aAAA,KAAAqsB,GACA1H,EAAAnlB,YAAAknB,GACAtsC,KAAAwqC,aAAA5kB,aAAA,mBAAAvhB,aAAA,IAAA4tC,EAAA,KAEAlrB,EAAA3B,YAAAmlB,GACAvqC,KAAAghB,OAAAmwB,EAAAnwB,OACAhhB,KAAAq6B,SAAAh0B,iBAAA8qC,EAAAnwB,OAAA/a,SAIA2jC,YAAAx/B,UAAAyzB,QAAA,WACA79B,KAAA6pC,cAAA4B,QAAA3mB,UAAA,GACA9kB,KAAAwqC,aAAA,KACAxqC,KAAA+tB,WAAAhH,KAAA,KACA,IAAAjhB,EAAAE,EAAAhG,KAAAghB,OAAAhhB,KAAAghB,OAAA/a,OAAA,EACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,IACxB9F,KAAAq6B,SAAAv0B,IACA9F,KAAAq6B,SAAAv0B,GAAA+3B,UAGA79B,KAAAq6B,SAAAp0B,OAAA,EACAjG,KAAAmrC,WAAA,EACAnrC,KAAA6pC,cAAA,MAGAD,YAAAx/B,UAAA8nC,oBAAA,aAGAtI,YAAAx/B,UAAAilC,UAAA,SAAAve,GACA,IAAAuJ,EAAAr6B,KAAAq6B,SACA,IAAAA,EAAAvJ,IAAA,IAAA9wB,KAAAghB,OAAA8P,GAAAjhB,GAAA,CAGAwqB,EAAAvJ,IAAA,EACA,IAAAjqB,EAAA7G,KAAAuvC,WAAAvvC,KAAAghB,OAAA8P,IAEAuJ,EAAAvJ,GAAAjqB,EACArC,oBACA,IAAAxE,KAAAghB,OAAA8P,GAAAjhB,IACA7P,KAAA+tB,WAAAuiB,iBAAAW,oBAAApqC,GAEAA,EAAAmqC,mBAEAhxC,KAAAmyC,mBAAAtrC,EAAAiqB,GACA9wB,KAAAghB,OAAA8P,GAAAvP,KACAvhB,KAAAq6B,SAAAvJ,EAAA,SAAA9wB,KAAAq6B,SAAAvJ,EAAA,GAIAjqB,EAAAurC,SAAA/X,EAAAvJ,EAAA,GAAA6b,UAHA3sC,KAAAqvC,UAAAve,EAAA,GACA9wB,KAAA6wC,kBAAAhqC,OAOA+iC,YAAAx/B,UAAAklC,qBAAA,WACA,KAAAtvC,KAAAkrC,gBAAAjlC,QAAA,CACA,IAAAY,EAAA7G,KAAAkrC,gBAAAnT,MAEA,GADAlxB,EAAAwrC,iBACAxrC,EAAAlH,KAAA4hB,GAEA,IADA,IAAAzb,EAAA,EAAAE,EAAAhG,KAAAq6B,SAAAp0B,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAq6B,SAAAv0B,KAAAe,EAAA,CACAA,EAAAurC,SAAApyC,KAAAq6B,SAAAv0B,EAAA,GAAA6mC,SACA,MAEA7mC,GAAA,KAMA8jC,YAAAx/B,UAAAkoC,YAAA,SAAAnD,GACA,GAAAnvC,KAAAstB,gBAAA6hB,IAAAnvC,KAAAmrC,UAAA,CAGA,OAAAgE,EACAA,EAAAnvC,KAAAstB,cAEAttB,KAAAstB,cAAA6hB,EAIAnvC,KAAA+tB,WAAA1E,SAAA8lB,EACAnvC,KAAA+tB,WAAAC,SAAA,EACAhuB,KAAA+tB,WAAAuiB,iBAAAiC,aAAApD,EACAnvC,KAAA+tB,WAAA7hB,MAAA,EACA,IAAApG,EAAAE,EAAAhG,KAAAghB,OAAA/a,OAIA,IAHAjG,KAAA+gB,gBACA/gB,KAAAkvC,YAAAC,GAEArpC,EAAAE,EAAA,EAAqBF,GAAA,EAAQA,KAC7B9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAA0sC,aAAArD,EAAAnvC,KAAAghB,OAAAlb,GAAA4oB,IAGA,GAAA1uB,KAAA+tB,WAAA7hB,KACA,IAAApG,EAAA,EAAmBA,EAAAE,EAASF,GAAA,GAC5B9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAAwsC,gBAMA1I,YAAAx/B,UAAA+nC,mBAAA,SAAAtrC,EAAAiqB,GACA,IAAAvU,EAAA1V,EAAA4rC,iBACA,GAAAl2B,EAAA,CAKA,IAFA,IACAm2B,EADA5sC,EAAA,EAEAA,EAAAgrB,GACA9wB,KAAAq6B,SAAAv0B,KAAA,IAAA9F,KAAAq6B,SAAAv0B,IAAA9F,KAAAq6B,SAAAv0B,GAAA2sC,mBACAC,EAAA1yC,KAAAq6B,SAAAv0B,GAAA2sC,kBAEA3sC,GAAA,EAEA4sC,EACA1yC,KAAAwqC,aAAAmI,aAAAp2B,EAAAm2B,GAEA1yC,KAAAwqC,aAAAplB,YAAA7I,KAIAqtB,YAAAx/B,UAAAwoC,KAAA,WACA5yC,KAAAwqC,aAAA5qC,MAAAqH,QAAA,QAGA2iC,YAAAx/B,UAAAyoC,KAAA,WACA7yC,KAAAwqC,aAAA5qC,MAAAqH,QAAA,SAgCAuT,iBAAAmvB,cAAA0B,gBAEAA,eAAAjhC,UAAAylC,YAAA,SAAAlwC,GACA,WAAAmzC,eAAAnzC,EAAAK,KAAA+tB,WAAA/tB,OAGAqrC,eAAAjhC,UAAA0lC,WAAA,SAAAnwC,GACA,WAAAozC,cAAApzC,EAAAK,KAAA+tB,WAAA/tB,OAGAqrC,eAAAjhC,UAAAqlC,YAAA,SAAA9vC,GACA,WAAAqzC,eAAArzC,EAAAK,KAAA+tB,WAAA/tB,OAGAqrC,eAAAjhC,UAAAslC,WAAA,SAAA/vC,GACA,WAAAszC,cAAAtzC,EAAAK,KAAA+tB,WAAA/tB,OAGAqrC,eAAAjhC,UAAAulC,YAAA,SAAAhwC,GACA,WAAAuzC,eAAAvzC,EAAAK,KAAA+tB,WAAA/tB,OAGAqrC,eAAAjhC,UAAAwlC,WAAAhG,YAAAx/B,UAAAwlC,WAEAvE,eAAAjhC,UAAA+oC,aAAA,SAAAh0C,GACA,OAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,IAGA,GAAAa,KAAAyqC,aAAAa,YAAA,CAIAtrC,KAAA8rC,aAAAv5B,eAAApT,GACA,IAAAi0C,EAAApzC,KAAA4rC,YAAAyH,IAAAl0C,MACAa,KAAA8rC,aAAA/7B,UAAAqjC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAEApzC,KAAA4rC,YAAAyH,IAAA9gC,eAAAvS,KAAA8rC,aAAA3sC,OACA,IAAAm0C,EAAAtzC,KAAA4rC,YAAAyH,IAAAl0C,MACAa,KAAAuzC,cAAArkC,aAAAokC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,UATAtzC,KAAAuzC,cAAAxjC,UAAA5Q,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,MAYAksC,eAAAjhC,UAAAopC,WAAA,SAAA7X,GAIA,IAAA37B,KAAAyqC,aAAAa,YAGA,OAFAtrC,KAAAuzC,cAAAE,aAAA9X,EAAA,IAAAA,OACA37B,KAAA+tB,WAAA4d,mBAAA3rC,KAAA4rC,YAAA8H,IAGA1zC,KAAA4rC,YAAA8H,IAAA/X,EAAA,IAAAA,EACA37B,KAAA+tB,WAAA4d,qBAAA3rC,KAAA4rC,YAAA8H,KACA1zC,KAAAuzC,cAAAE,YAAAzzC,KAAA4rC,YAAA8H,GACA1zC,KAAA+tB,WAAA4d,mBAAA3rC,KAAA4rC,YAAA8H,KAIArI,eAAAjhC,UAAA4D,MAAA,WACAhO,KAAAyqC,aAAAa,YAIAtrC,KAAA4rC,YAAA59B,QAHAhO,KAAAuzC,cAAAI,WAMAtI,eAAAjhC,UAAAwpC,KAAA,SAAAC,GACA,GAAA7zC,KAAAyqC,aAAAa,YAAA,CAIAuI,GACA7zC,KAAAuzC,cAAAK,OAEA,IAAAz0C,EAAAa,KAAA4rC,YAAAyH,IAAAl0C,MACAa,KAAA4rC,YAAA5tB,SAAAhe,KAAA4rC,YAAAkI,SACA9zC,KAAA4rC,YAAAmI,YAEA,IAAAjuC,EAAAqF,EAAAnL,KAAA4rC,YAAAoI,MAAAh0C,KAAA4rC,YAAAkI,SACA,IAAAhuC,EAAA,EAAeA,EAAA,GAAQA,GAAA,EACvBqF,EAAArF,GAAA3G,EAAA2G,GAEA9F,KAAA4rC,YAAAqI,QAAAj0C,KAAA4rC,YAAAkI,SAAA9zC,KAAA4rC,YAAA8H,GACA1zC,KAAA4rC,YAAAkI,SAAA,OAfA9zC,KAAAuzC,cAAAK,QAkBAvI,eAAAjhC,UAAAupC,QAAA,SAAAE,GACA,GAAA7zC,KAAAyqC,aAAAa,YAAA,CAIAuI,IACA7zC,KAAAuzC,cAAAI,UACA3zC,KAAA+tB,WAAAmmB,UAAA,eAEAl0C,KAAA4rC,YAAAkI,SAAA,EACA,IACAhuC,EADAquC,EAAAn0C,KAAA4rC,YAAAoI,MAAAh0C,KAAA4rC,YAAAkI,SACA3oC,EAAAnL,KAAA4rC,YAAAyH,IAAAl0C,MACA,IAAA2G,EAAA,EAAYA,EAAA,GAAKA,GAAA,EACjBqF,EAAArF,GAAAquC,EAAAruC,GAEA9F,KAAAuzC,cAAArkC,aAAAilC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,KACAA,EAAAn0C,KAAA4rC,YAAAqI,QAAAj0C,KAAA4rC,YAAAkI,SACA9zC,KAAA4rC,YAAA8H,GAAAS,EACAn0C,KAAA+tB,WAAA4d,qBAAAwI,IACAn0C,KAAAuzC,cAAAE,YAAAU,EACAn0C,KAAA+tB,WAAA4d,mBAAAwI,QAlBAn0C,KAAAuzC,cAAAI,WAsBAtI,eAAAjhC,UAAA4nC,gBAAA,SAAAb,GACAnxC,KAAA6pC,cAAA4B,SACAzrC,KAAA6pC,cAAAxpC,UAAAoL,UAAA,UACAzL,KAAA6pC,cAAAxpC,UAAAT,MAAAF,MAAA,OACAM,KAAA6pC,cAAAxpC,UAAAT,MAAAJ,OAAA,OAGAQ,KAAA6pC,cAAAxpC,UAAAT,MAAAsH,gBAAAlH,KAAA6pC,cAAAxpC,UAAAT,MAAAw0C,mBAAAp0C,KAAA6pC,cAAAxpC,UAAAT,MAAAuH,sBAAAnH,KAAA6pC,cAAAxpC,UAAAT,MAAA,mCACAI,KAAA6pC,cAAA4B,QAAArmB,YAAAplB,KAAA6pC,cAAAxpC,WACAL,KAAAuzC,cAAAvzC,KAAA6pC,cAAAxpC,UAAA6lB,WAAA,MACAlmB,KAAAyqC,aAAAO,WACAhrC,KAAA6pC,cAAAxpC,UAAAulB,aAAA,QAAA5lB,KAAAyqC,aAAAO,WAEAhrC,KAAAyqC,aAAA/pB,IACA1gB,KAAA6pC,cAAAxpC,UAAAulB,aAAA,KAAA5lB,KAAAyqC,aAAA/pB,KAGA1gB,KAAAuzC,cAAAvzC,KAAAyqC,aAAAc,QAEAvrC,KAAAL,KAAAwxC,EACAnxC,KAAAghB,OAAAmwB,EAAAnwB,OACAhhB,KAAAq0C,iBACAhwB,EAAA8sB,EAAA9sB,EACAxb,EAAAsoC,EAAAtoC,EACA6F,GAAA,EACAC,GAAA,EACAiB,GAAA,EACAC,GAAA,GAEA7P,KAAAkxC,gBAAAC,EAAA5lC,SAAA8Z,MACArlB,KAAA+tB,WAAAwlB,cAAAvzC,KAAAuzC,cACAvzC,KAAA+tB,WAAAvtB,SAAAR,KACAA,KAAA+tB,WAAAumB,UAAA,EACAt0C,KAAA+tB,WAAA6c,gBAAA5qC,KAAAyqC,aAAAG,gBACA5qC,KAAA+tB,WAAAsmB,gBAAAr0C,KAAAq0C,gBACAr0C,KAAAq6B,SAAAh0B,iBAAA8qC,EAAAnwB,OAAA/a,QAEAjG,KAAAkyC,uBAGA7G,eAAAjhC,UAAA8nC,oBAAA,WAEA,IAAAqC,EAAAC,EAUAC,EAAAC,EACA,GAZA10C,KAAAgO,QAEAhO,KAAA6pC,cAAA4B,SAAAzrC,KAAA6pC,cAAAxpC,WACAk0C,EAAAv0C,KAAA6pC,cAAA4B,QAAAnmB,YACAkvB,EAAAx0C,KAAA6pC,cAAA4B,QAAAkJ,aACA30C,KAAA6pC,cAAAxpC,UAAAulB,aAAA,QAAA2uB,EAAAv0C,KAAAyqC,aAAAe,KACAxrC,KAAA6pC,cAAAxpC,UAAAulB,aAAA,SAAA4uB,EAAAx0C,KAAAyqC,aAAAe,OAEA+I,EAAAv0C,KAAAuzC,cAAAnX,OAAA18B,MAAAM,KAAAyqC,aAAAe,IACAgJ,EAAAx0C,KAAAuzC,cAAAnX,OAAA58B,OAAAQ,KAAAyqC,aAAAe,MAGA,IAAAxrC,KAAAyqC,aAAAC,oBAAA3+B,QAAA,cAAA/L,KAAAyqC,aAAAC,oBAAA3+B,QAAA,UACA,IAAA6oC,EAAA50C,KAAAyqC,aAAAC,oBAAA7nB,MAAA,KACAgyB,EAAAD,EAAA,WACA9jB,EAAA8jB,EAAA,eACAjS,EAAA7R,EAAA2V,OAAA,KACA7D,EAAA9R,EAAA2V,OAAA,GACAgO,EAAAF,EAAAC,GACAE,EAAA10C,KAAAq0C,gBAAAhwB,EAAArkB,KAAAq0C,gBAAAxrC,GACA4rC,GAAA,SAAAI,GAAAH,EAAAD,GAAA,UAAAI,GACA70C,KAAAq0C,gBAAA3lC,GAAA6lC,GAAAv0C,KAAAq0C,gBAAAhwB,EAAArkB,KAAAyqC,aAAAe,KACAxrC,KAAAq0C,gBAAA1lC,GAAA4lC,GAAAv0C,KAAAq0C,gBAAAhwB,EAAArkB,KAAAyqC,aAAAe,OAEAxrC,KAAAq0C,gBAAA3lC,GAAA8lC,GAAAx0C,KAAAq0C,gBAAAxrC,EAAA7I,KAAAyqC,aAAAe,KACAxrC,KAAAq0C,gBAAA1lC,GAAA6lC,GAAAx0C,KAAAq0C,gBAAAxrC,EAAA7I,KAAAyqC,aAAAe,MAIAxrC,KAAAq0C,gBAAAzkC,GADA,SAAA+yB,IAAA+R,EAAAD,GAAA,SAAAI,GAAAH,EAAAD,GAAA,UAAAI,IACAN,EAAAv0C,KAAAq0C,gBAAAhwB,GAAAmwB,EAAAx0C,KAAAq0C,gBAAAxrC,IAAA,EAAA7I,KAAAyqC,aAAAe,IACS,SAAA7I,IAAA+R,EAAAD,GAAA,SAAAI,GAAAH,EAAAD,GAAA,UAAAI,IACTN,EAAAv0C,KAAAq0C,gBAAAhwB,GAAAmwB,EAAAx0C,KAAAq0C,gBAAAxrC,IAAA7I,KAAAyqC,aAAAe,IAEA,EAGAxrC,KAAAq0C,gBAAAxkC,GADA,SAAA+yB,IAAA8R,EAAAD,GAAA,SAAAI,GAAAH,EAAAD,GAAA,UAAAI,IACAL,EAAAx0C,KAAAq0C,gBAAAxrC,GAAA0rC,EAAAv0C,KAAAq0C,gBAAAhwB,IAAA,EAAArkB,KAAAyqC,aAAAe,IACS,SAAA5I,IAAA8R,EAAAD,GAAA,SAAAI,GAAAH,EAAAD,GAAA,UAAAI,IACTL,EAAAx0C,KAAAq0C,gBAAAxrC,GAAA0rC,EAAAv0C,KAAAq0C,gBAAAhwB,IAAArkB,KAAAyqC,aAAAe,IAEA,MAGK,QAAAxrC,KAAAyqC,aAAAC,qBACL1qC,KAAAq0C,gBAAA3lC,GAAA6lC,GAAAv0C,KAAAq0C,gBAAAhwB,EAAArkB,KAAAyqC,aAAAe,KACAxrC,KAAAq0C,gBAAA1lC,GAAA6lC,GAAAx0C,KAAAq0C,gBAAAxrC,EAAA7I,KAAAyqC,aAAAe,KACAxrC,KAAAq0C,gBAAAzkC,GAAA,EACA5P,KAAAq0C,gBAAAxkC,GAAA,IAEA7P,KAAAq0C,gBAAA3lC,GAAA1O,KAAAyqC,aAAAe,IACAxrC,KAAAq0C,gBAAA1lC,GAAA3O,KAAAyqC,aAAAe,IACAxrC,KAAAq0C,gBAAAzkC,GAAA,EACA5P,KAAAq0C,gBAAAxkC,GAAA,GAEA7P,KAAAq0C,gBAAAl1C,OAAAa,KAAAq0C,gBAAA3lC,GAAA,QAAA1O,KAAAq0C,gBAAA1lC,GAAA,YAAA3O,KAAAq0C,gBAAAzkC,GAAA5P,KAAAq0C,gBAAAxkC,GAAA,KAOA7P,KAAAmzC,aAAAnzC,KAAAq0C,gBAAAl1C,OACAa,KAAAuzC,cAAAuB,YACA90C,KAAAuzC,cAAAjH,KAAA,IAAAtsC,KAAAq0C,gBAAAhwB,EAAArkB,KAAAq0C,gBAAAxrC,GACA7I,KAAAuzC,cAAAwB,YACA/0C,KAAAuzC,cAAAyB,OAEAh1C,KAAAsyC,YAAAtyC,KAAAstB,eAAA,IAGA+d,eAAAjhC,UAAAyzB,QAAA,WAIA,IAAA/3B,EACA,IAJA9F,KAAAyqC,aAAAa,cACAtrC,KAAA6pC,cAAA4B,QAAA3mB,UAAA,IAGAhf,GADA9F,KAAAghB,OAAAhhB,KAAAghB,OAAA/a,OAAA,GACA,EAAqBH,GAAA,EAAQA,GAAA,EAC7B9F,KAAAq6B,SAAAv0B,IACA9F,KAAAq6B,SAAAv0B,GAAA+3B,UAGA79B,KAAAq6B,SAAAp0B,OAAA,EACAjG,KAAA+tB,WAAAwlB,cAAA,KACAvzC,KAAA6pC,cAAAxpC,UAAA,KACAL,KAAAmrC,WAAA,GAGAE,eAAAjhC,UAAAkoC,YAAA,SAAAnD,EAAAtf,GACA,IAAA7vB,KAAAstB,gBAAA6hB,IAAA,IAAAnvC,KAAAyqC,aAAAa,aAAAzb,KAAA7vB,KAAAmrC,YAAA,IAAAgE,EAAA,CAGAnvC,KAAAstB,cAAA6hB,EACAnvC,KAAA+tB,WAAA1E,SAAA8lB,EAAAnvC,KAAA6pC,cAAA1b,cACAnuB,KAAA+tB,WAAAC,SAAA,EACAhuB,KAAA+tB,WAAA7hB,MAAAlM,KAAAyqC,aAAAa,aAAAzb,EACA7vB,KAAA+tB,WAAAuiB,iBAAAiC,aAAApD,EAIA,IAAArpC,EAAAE,EAAAhG,KAAAghB,OAAA/a,OAKA,IAJAjG,KAAA+gB,gBACA/gB,KAAAkvC,YAAAC,GAGArpC,EAAA,EAAeA,EAAAE,EAASF,KACxB9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAA0sC,aAAArD,EAAAnvC,KAAAghB,OAAAlb,GAAA4oB,IAGA,GAAA1uB,KAAA+tB,WAAA7hB,KAAA,CAMA,KALA,IAAAlM,KAAAyqC,aAAAa,YACAtrC,KAAAuzC,cAAA0B,UAAA,IAAAj1C,KAAAq0C,gBAAAhwB,EAAArkB,KAAAq0C,gBAAAxrC,GAEA7I,KAAA4zC,OAEA9tC,EAAAE,EAAA,EAAyBF,GAAA,EAAQA,GAAA,GACjC9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAAwsC,eAGA,IAAAtyC,KAAAyqC,aAAAa,aACAtrC,KAAA2zC,aAKAtI,eAAAjhC,UAAAilC,UAAA,SAAAve,GACA,IAAAuJ,EAAAr6B,KAAAq6B,SACA,IAAAA,EAAAvJ,IAAA,IAAA9wB,KAAAghB,OAAA8P,GAAAjhB,GAAA,CAGA,IAAAhJ,EAAA7G,KAAAuvC,WAAAvvC,KAAAghB,OAAA8P,GAAA9wB,UAAA+tB,YACAsM,EAAAvJ,GAAAjqB,EACAA,EAAAmqC,oBAMA3F,eAAAjhC,UAAAklC,qBAAA,WACA,KAAAtvC,KAAAkrC,gBAAAjlC,QAAA,CACAjG,KAAAkrC,gBAAAnT,MACAsa,mBAIAhH,eAAAjhC,UAAAwoC,KAAA,WACA5yC,KAAA6pC,cAAAxpC,UAAAT,MAAAqH,QAAA,QAGAokC,eAAAjhC,UAAAyoC,KAAA,WACA7yC,KAAA6pC,cAAAxpC,UAAAT,MAAAqH,QAAA,SA2BAuT,iBAAAmvB,cAAAoC,gBAEAA,eAAA3hC,UAAAilC,UAAAzF,YAAAx/B,UAAAilC,UAEAtD,eAAA3hC,UAAAklC,qBAAA,WACA,KAAAtvC,KAAAkrC,gBAAAjlC,QAAA,CACAjG,KAAAkrC,gBAAAnT,MACAsa,mBAIAtG,eAAA3hC,UAAA+nC,mBAAA,SAAAtrC,EAAAiqB,GACA,IAAAokB,EAAAruC,EAAA4rC,iBACA,GAAAyC,EAAA,CAGA,IAAA1F,EAAAxvC,KAAAghB,OAAA8P,GACA,GAAA0e,EAAA2F,KAAAn1C,KAAAksC,WA0BAlsC,KAAAo1C,iBAAAF,EAAApkB,QAzBA,GAAA9wB,KAAAgsC,eACAhsC,KAAAo1C,iBAAAF,EAAApkB,OACS,CAGT,IAFA,IACAukB,EAAAC,EADAxvC,EAAA,EAEAA,EAAAgrB,GACA9wB,KAAAq6B,SAAAv0B,KAAA,IAAA9F,KAAAq6B,SAAAv0B,IAAA9F,KAAAq6B,SAAAv0B,GAAA2sC,iBACA6C,EAAAt1C,KAAAq6B,SAAAv0B,GAEAuvC,GADAr1C,KAAAghB,OAAAlb,GAAAqvC,IAAAn1C,KAAAu1C,wBAAAzvC,GAAAwvC,EAAA7C,mBACA4C,GAEAvvC,GAAA,EAEAuvC,EACA7F,EAAA2F,KAAAn1C,KAAAksC,YACAlsC,KAAAwqC,aAAAmI,aAAAuC,EAAAG,GAGA7F,EAAA2F,KAAAn1C,KAAAksC,YACAlsC,KAAAwqC,aAAAplB,YAAA8vB,MAUAnJ,eAAA3hC,UAAAylC,YAAA,SAAAlwC,GACA,OAAAK,KAAAksC,WAGA,IAAAsJ,cAAA71C,EAAAK,KAAA+tB,WAAA/tB,MAFA,IAAA2xC,gBAAAhyC,EAAAK,KAAA+tB,WAAA/tB,OAKA+rC,eAAA3hC,UAAA0lC,WAAA,SAAAnwC,GACA,OAAAK,KAAAksC,WAGA,IAAAuJ,aAAA91C,EAAAK,KAAA+tB,WAAA/tB,MAFA,IAAA4xC,eAAAjyC,EAAAK,KAAA+tB,WAAA/tB,OAKA+rC,eAAA3hC,UAAA2lC,aAAA,SAAApwC,GAEA,OADAK,KAAAisC,OAAA,IAAAyJ,eAAA/1C,EAAAK,KAAA+tB,WAAA/tB,MACAA,KAAAisC,QAGAF,eAAA3hC,UAAAqlC,YAAA,SAAA9vC,GACA,OAAAK,KAAAksC,WAGA,IAAAyJ,cAAAh2C,EAAAK,KAAA+tB,WAAA/tB,MAFA,IAAA6xC,cAAAlyC,EAAAK,KAAA+tB,WAAA/tB,OAKA+rC,eAAA3hC,UAAAslC,WAAA,SAAA/vC,GACA,OAAAK,KAAAksC,WAGA,IAAA0J,aAAAj2C,EAAAK,KAAA+tB,WAAA/tB,MAFA,IAAA8xC,eAAAnyC,EAAAK,KAAA+tB,WAAA/tB,OAMA+rC,eAAA3hC,UAAAulC,YAAA,SAAAhwC,GACA,OAAAK,KAAAksC,WAGA,IAAA2J,cAAAl2C,EAAAK,KAAA+tB,WAAA/tB,MAFA,IAAA+xC,cAAApyC,EAAAK,KAAA+tB,WAAA/tB,OAKA+rC,eAAA3hC,UAAAwlC,WAAAhG,YAAAx/B,UAAAwlC,WAEA7D,eAAA3hC,UAAAmrC,wBAAA,SAAAzkB,GAEA,IADA,IAAAhrB,EAAA,EAAAE,EAAAhG,KAAAgsC,eAAA/lC,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAgsC,eAAAlmC,GAAAgwC,UAAAhlB,GAAA9wB,KAAAgsC,eAAAlmC,GAAAiwC,QAAAjlB,EACA,OAAA9wB,KAAAgsC,eAAAlmC,GAAAkwC,gBAEAlwC,GAAA,IAIAimC,eAAA3hC,UAAA6rC,sBAAA,SAAAnlB,EAAAzxB,GACA,IAAA22C,EAAAvqC,UAAA,OACA7E,SAAAovC,GACA,IAAA31C,EAAAoL,UAAA,OACA7E,SAAAvG,GACA,OAAAhB,IACA22C,EAAAp2C,MAAAF,MAAAM,KAAA+tB,WAAA0jB,SAAAptB,EAAA,KACA2xB,EAAAp2C,MAAAJ,OAAAQ,KAAA+tB,WAAA0jB,SAAA5oC,EAAA,KACAmtC,EAAAp2C,MAAAsH,gBAAA8uC,EAAAp2C,MAAAw0C,mBAAA4B,EAAAp2C,MAAAuH,sBAAA,UACA9G,EAAAT,MAAAmQ,UAAA1P,EAAAT,MAAAs2C,gBAAA,6CAGAF,EAAA5wB,YAAA/kB,GAEA,IAAA81C,GACA91C,YACA21C,kBACAF,SAAAhlB,EACAilB,OAAAjlB,EACAzxB,QAGA,OADAW,KAAAgsC,eAAArhC,KAAAwrC,GACAA,GAGApK,eAAA3hC,UAAAgsC,kBAAA,WACA,IAAAtwC,EACAuwC,EADArwC,EAAAhG,KAAAghB,OAAA/a,OAEAqwC,EAAA,GACA,IAAAxwC,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB9F,KAAAghB,OAAAlb,GAAAqvC,KAAA,IAAAn1C,KAAAghB,OAAAlb,GAAA+J,IACA,OAAAymC,IACAA,EAAA,KACAD,EAAAr2C,KAAAi2C,sBAAAnwC,EAAA,OAEAuwC,EAAAN,OAAAjxC,KAAAzB,IAAAgzC,EAAAN,OAAAjwC,KAEA,OAAAwwC,IACAA,EAAA,KACAD,EAAAr2C,KAAAi2C,sBAAAnwC,EAAA,OAEAuwC,EAAAN,OAAAjxC,KAAAzB,IAAAgzC,EAAAN,OAAAjwC,IAIA,IAAAA,GADAE,EAAAhG,KAAAgsC,eAAA/lC,QACA,EAAoBH,GAAA,EAAQA,IAC5B9F,KAAAu2C,YAAAnxB,YAAAplB,KAAAgsC,eAAAlmC,GAAAkwC,kBAIAjK,eAAA3hC,UAAAgrC,iBAAA,SAAAtnB,EAAAgD,GAEA,IADA,IAAAhrB,EAAA,EAAAE,EAAAhG,KAAAgsC,eAAA/lC,OACAH,EAAAE,GAAA,CACA,GAAA8qB,GAAA9wB,KAAAgsC,eAAAlmC,GAAAiwC,OAAA,CAGA,IAFA,IACArD,EADArjC,EAAArP,KAAAgsC,eAAAlmC,GAAAgwC,SAEAzmC,EAAAyhB,GACA9wB,KAAAq6B,SAAAhrB,IAAArP,KAAAq6B,SAAAhrB,GAAAojC,iBACAC,EAAA1yC,KAAAq6B,SAAAhrB,GAAAojC,kBAEApjC,GAAA,EAEAqjC,EACA1yC,KAAAgsC,eAAAlmC,GAAAzF,UAAAsyC,aAAA7kB,EAAA4kB,GAEA1yC,KAAAgsC,eAAAlmC,GAAAzF,UAAA+kB,YAAA0I,GAEA,MAEAhoB,GAAA,IAIAimC,eAAA3hC,UAAA4nC,gBAAA,SAAAb,GACA,IAAAoF,EAAA9qC,UAAA,OACAggC,EAAAzrC,KAAA6pC,cAAA4B,QACA8K,EAAA32C,MAAAF,MAAAyxC,EAAA9sB,EAAA,KACAkyB,EAAA32C,MAAAJ,OAAA2xC,EAAAtoC,EAAA,KACA7I,KAAAu2C,cACA3vC,SAAA2vC,GACAA,EAAA32C,MAAA0H,eAAAivC,EAAA32C,MAAA2H,qBAAAgvC,EAAA32C,MAAA4H,kBAAA,OACAxH,KAAAyqC,aAAAO,WACAuL,EAAA3wB,aAAA,QAAA5lB,KAAAyqC,aAAAO,WAEAS,EAAArmB,YAAAmxB,GAEAA,EAAA32C,MAAAC,SAAA,SACA,IAAA22C,EAAAlrC,SAAA,OACAkrC,EAAA5wB,aAAA,aACA4wB,EAAA5wB,aAAA,cACAhf,SAAA4vC,GACAx2C,KAAAu2C,YAAAnxB,YAAAoxB,GACA,IAAAzvB,EAAAzb,SAAA,QACAkrC,EAAApxB,YAAA2B,GACA/mB,KAAAL,KAAAwxC,EAEAnxC,KAAAkxC,gBAAAC,EAAAqF,GACAx2C,KAAA+tB,WAAAhH,OACA/mB,KAAAghB,OAAAmwB,EAAAnwB,OACAhhB,KAAAwqC,aAAAxqC,KAAAu2C,YACAv2C,KAAAo2C,oBACAp2C,KAAAkyC,uBAGAnG,eAAA3hC,UAAAyzB,QAAA,WACA79B,KAAA6pC,cAAA4B,QAAA3mB,UAAA,GACA9kB,KAAA6pC,cAAAxpC,UAAA,KACAL,KAAA+tB,WAAAhH,KAAA,KACA,IAAAjhB,EAAAE,EAAAhG,KAAAghB,OAAAhhB,KAAAghB,OAAA/a,OAAA,EACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,IACxB9F,KAAAq6B,SAAAv0B,GAAA+3B,UAEA79B,KAAAq6B,SAAAp0B,OAAA,EACAjG,KAAAmrC,WAAA,EACAnrC,KAAA6pC,cAAA,MAGAkC,eAAA3hC,UAAA8nC,oBAAA,WACA,IAIAxjC,EAAAC,EAAAiB,EAAAC,EAJA0kC,EAAAv0C,KAAA6pC,cAAA4B,QAAAnmB,YACAkvB,EAAAx0C,KAAA6pC,cAAA4B,QAAAkJ,aACAF,EAAAF,EAAAC,EACAx0C,KAAA+tB,WAAA0jB,SAAAptB,EAAArkB,KAAA+tB,WAAA0jB,SAAA5oC,EAEA4rC,GACA/lC,EAAA6lC,EAAAv0C,KAAA+tB,WAAA0jB,SAAA,EACA9iC,EAAA4lC,EAAAv0C,KAAA+tB,WAAA0jB,SAAA,EACA7hC,EAAA,EACAC,GAAA2kC,EAAAx0C,KAAA+tB,WAAA0jB,SAAA5oC,GAAA0rC,EAAAv0C,KAAA+tB,WAAA0jB,SAAAptB,IAAA,IAEA3V,EAAA8lC,EAAAx0C,KAAA+tB,WAAA0jB,SAAA,EACA9iC,EAAA6lC,EAAAx0C,KAAA+tB,WAAA0jB,SAAA,EACA7hC,GAAA2kC,EAAAv0C,KAAA+tB,WAAA0jB,SAAAptB,GAAAmwB,EAAAx0C,KAAA+tB,WAAA0jB,SAAA5oC,IAAA,EACAgH,EAAA,GAEA7P,KAAAu2C,YAAA32C,MAAAmQ,UAAA/P,KAAAu2C,YAAA32C,MAAAs2C,gBAAA,YAAAxnC,EAAA,YAAAC,EAAA,gBAAAiB,EAAA,IAAAC,EAAA,SAGAk8B,eAAA3hC,UAAAkoC,YAAA1I,YAAAx/B,UAAAkoC,YAEAvG,eAAA3hC,UAAAwoC,KAAA,WACA5yC,KAAAu2C,YAAA32C,MAAAqH,QAAA,QAGA8kC,eAAA3hC,UAAAyoC,KAAA,WACA7yC,KAAAu2C,YAAA32C,MAAAqH,QAAA,SAGA8kC,eAAA3hC,UAAAmmC,UAAA,WAEA,GADAvwC,KAAAiwC,gBACAjwC,KAAAisC,OACAjsC,KAAAisC,OAAAwK,YACK,CACL,IAEA3wC,EAFA4wC,EAAA12C,KAAA+tB,WAAA0jB,SAAAptB,EACAsyB,EAAA32C,KAAA+tB,WAAA0jB,SAAA5oC,EACA7C,EAAAhG,KAAAgsC,eAAA/lC,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB9F,KAAAgsC,eAAAlmC,GAAAkwC,gBAAAp2C,MAAAg3C,YAAA52C,KAAAgsC,eAAAlmC,GAAAkwC,gBAAAp2C,MAAAi3C,kBAAA/xC,KAAAM,KAAAN,KAAAI,IAAAwxC,EAAA,GAAA5xC,KAAAI,IAAAyxC,EAAA,WAKA5K,eAAA3hC,UAAA0mC,wBAAA,SAAA3tB,GACA,IAAArd,EAAAE,EAAAmd,EAAAld,OACA6wC,EAAArrC,UAAA,OACA,IAAA3F,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB,GAAAqd,EAAArd,GAAAirC,GAAA,CACA,IAAA1jB,EAAArtB,KAAA0vC,WAAAvsB,EAAArd,GAAAgxC,EAAA92C,KAAA+tB,WAAAV,KAAA,MACAA,EAAA2jB,kBACAhxC,KAAA+tB,WAAAuiB,iBAAAW,oBAAA5jB,KA4IA8e,YAAA/hC,UAAAq4B,gBAAA,SAAA3R,GACA,OAAA9wB,KAAAosC,SAAAtb,GAAAjlB,MAGAsgC,YAAA/hC,UAAAkoC,YAAA,SAAAyE,GACA,IACAjxC,EADAkxC,EAAAh3C,KAAA6G,QAAAowC,eAAArnB,IACA5pB,EAAAhG,KAAA2hB,gBAAA1b,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,IAOxB,IANA9F,KAAAosC,SAAAtmC,GAAA+F,KAAAK,MAAA6qC,IACA/2C,KAAAqtC,SAAArtC,KAAA2hB,gBAAA7b,GAAA9F,KAAAosC,SAAAtmC,GAAA+F,KAAA9C,EAAA/I,KAAAosC,SAAAtmC,KAEA9F,KAAAosC,SAAAtmC,GAAA61B,GAAAzvB,MAAA6qC,IACA/2C,KAAAosC,SAAAtmC,GAAAgoB,KAAAlI,aAAA,eAAA5lB,KAAAosC,SAAAtmC,GAAA61B,GAAA5yB,GAEA,MAAA/I,KAAA2hB,gBAAA7b,GAAAyH,OACAvN,KAAAosC,SAAAtmC,GAAAsnC,UAAAptC,KAAA6G,QAAAowC,eAAAC,MAAAhrC,MAAA6qC,IACA/2C,KAAAosC,SAAAtmC,GAAAsnC,QAAAxnB,aAAA,YAAAoxB,EAAAjkC,mBAAAsB,WAEArU,KAAA6c,WAAA/W,GAAA2M,IAAAzS,KAAA6c,WAAA/W,GAAA2M,EAAAvG,MAAA6qC,IAAA,CACA,IAAAvK,EAAAxsC,KAAA6c,WAAA/W,GAAAgnC,MACA9sC,KAAA6c,WAAA/W,GAAA2M,EAAA1J,EAAA,GACA,UAAA/I,KAAA6c,WAAA/W,GAAAknC,eACAhtC,KAAA6c,WAAA/W,GAAAknC,aAAA,QACAhtC,KAAA6c,WAAA/W,GAAAgoB,KAAAlI,aAAA,gBAAAvhB,aAAA,IAAArE,KAAA6c,WAAA/W,GAAAmnC,SAAA,MAEAT,EAAA5mB,aAAA,UAAA5lB,KAAA6c,WAAA/W,GAAA2M,EAAA1J,KAEA,WAAA/I,KAAA6c,WAAA/W,GAAAknC,eACAhtC,KAAA6c,WAAA/W,GAAAknC,aAAA,SACAhtC,KAAA6c,WAAA/W,GAAAgoB,KAAAlI,aAAA,gBAEA5lB,KAAA6c,WAAA/W,GAAAgoB,KAAAlI,aAAA,iBAAA5lB,KAAA6c,WAAA/W,GAAA2M,EAAA1J,MAQAojC,YAAA/hC,UAAA+sC,eAAA,WACA,OAAAn3C,KAAAuqC,aAGA4B,YAAA/hC,UAAA+iC,qBAAA,WACA,IAAA3qB,EAAA,QAKA,OAJAA,GAAA,KAAAxiB,KAAA+tB,WAAA0jB,SAAAptB,EACA7B,GAAA,KAAAxiB,KAAA+tB,WAAA0jB,SAAA5oC,EACA2Z,GAAA,MAAAxiB,KAAA+tB,WAAA0jB,SAAAptB,EACA7B,GAAA,MAAAxiB,KAAA+tB,WAAA0jB,SAAA5oC,EAAA,KAIAsjC,YAAA/hC,UAAAijC,SAAA,SAAA/pB,EAAAwY,EAAAsQ,GACA,IACAtmC,EAAAE,EADAoxC,EAAA,KAAAtb,EAAA/yB,EAAA,UAAA+yB,EAAA/yB,EAAA,MAGA,IADA/C,EAAA81B,EAAA9d,QACAlY,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAElBsxC,GAAA,KAAAtb,EAAApsB,EAAA5J,EAAA,UAAAg2B,EAAApsB,EAAA5J,EAAA,UAAAg2B,EAAAh2B,KAAA,OAAAg2B,EAAAh2B,KAAA,OAAAg2B,EAAA/yB,EAAAjD,GAAA,OAAAg2B,EAAA/yB,EAAAjD,GAAA,GAQA,GALAg2B,EAAA3sB,GAAAnJ,EAAA,IACAoxC,GAAA,KAAAtb,EAAApsB,EAAA5J,EAAA,UAAAg2B,EAAApsB,EAAA5J,EAAA,UAAAg2B,EAAAh2B,EAAA,UAAAg2B,EAAAh2B,EAAA,UAAAg2B,EAAA/yB,EAAA,UAAA+yB,EAAA/yB,EAAA,OAIAqjC,EAAAW,WAAAqK,EAAA,CACA,IAAAC,EAAA,GACAjL,EAAAte,OACAgO,EAAA3sB,IACAkoC,EAAA/zB,EAAAsW,IAAA55B,KAAAqsC,UAAA+K,KAEAhL,EAAAte,KAAAlI,aAAA,IAAAyxB,IAEAjL,EAAAW,SAAAqK,IAIAjL,YAAA/hC,UAAAyzB,QAAA,WACA79B,KAAA6G,QAAA,KACA7G,KAAA+tB,WAAA,KACA/tB,KAAAuqC,YAAA,KACAvqC,KAAAL,KAAA,KACAK,KAAA2hB,gBAAA,MAWA6rB,iBAAApjC,WAMAktC,cAAA,WAEAt3C,KAAA0wC,aAEA1wC,KAAAu3C,WAAA,EACAv3C,KAAAqyC,kBASAzB,aAAA,SAAAF,GACA1wC,KAAA0wC,aAOAC,YAAA,WACA3wC,KAAAu3C,WAAA,GAOAlF,eAAA,gBACAnK,IAAAloC,KAAAL,KAAA4lB,QACAvlB,KAAAqtB,KAAAmjB,sBAAAxwC,UAAAL,KAAA4lB,aAaAkoB,aAAArjC,WAMA8e,UAAA,WAEAlpB,KAAAmuB,eAAA,EAEAnuB,KAAA8L,qBAEA9L,KAAAkM,MAAA,GAYAsrC,kBAAA,SAAArI,EAAAsI,GACA,IAAA3xC,EAAAE,EAAAhG,KAAA8L,kBAAA7F,OACA,IAAAH,EAAA,EAAmBA,EAAAE,EAAQF,GAAA,GAC3B2xC,GAAAz3C,KAAAu3C,WAAA,cAAAv3C,KAAA8L,kBAAAhG,GAAA2jB,YACAzpB,KAAA8L,kBAAAhG,GAAAqG,WACAnM,KAAA8L,kBAAAhG,GAAAoG,OACAlM,KAAA+tB,WAAA7hB,MAAA,EACAlM,KAAAkM,MAAA,KAKAN,mBAAA,SAAAC,IACA,IAAA7L,KAAA8L,kBAAAC,QAAAF,IACA7L,KAAA8L,kBAAAnB,KAAAkB,KAMA6hC,iBAAAtjC,WACAstC,cAAA,WACA13C,KAAAi3C,gBACAC,MAAAl3C,KAAAL,KAAA2iB,GAAAsM,yBAAA0B,qBAAAtwB,UAAAL,KAAA2iB,GAAAtiB,OAA6G0P,EAAA,GAC7GioC,SAAA,EACAC,QAAA,EACAhoB,IAAA,IAAApiB,QAEAxN,KAAAL,KAAAk4C,KACA73C,KAAAi3C,eAAAC,MAAAnnB,cAAA,GAIA/vB,KAAAL,KAAAkQ,IAIAioC,gBAAA,WAKA,GAHA93C,KAAAi3C,eAAAW,OAAA53C,KAAAi3C,eAAAC,MAAAxnC,EAAAxD,MAAAlM,KAAAmuB,cACAnuB,KAAAi3C,eAAAU,QAAA33C,KAAAi3C,eAAAC,MAAAhrC,MAAAlM,KAAAmuB,cAEAnuB,KAAA0wC,UAAA,CACA,IAAA9gB,EACAonB,EAAAh3C,KAAAi3C,eAAArnB,IACA9pB,EAAA,EAAAE,EAAAhG,KAAA0wC,UAAAzqC,OAEA,IAAAjG,KAAAi3C,eAAAU,QACA,KAAA7xC,EAAAE,GAAA,CACA,GAAAhG,KAAA0wC,UAAA5qC,GAAAmxC,eAAAC,MAAAhrC,KAAA,CACAlM,KAAAi3C,eAAAU,SAAA,EACA,MAEA7xC,GAAA,EAIA,GAAA9F,KAAAi3C,eAAAU,QAGA,IAFA/nB,EAAA5vB,KAAAi3C,eAAAC,MAAAnuC,EAAA5J,MACA63C,EAAAzkC,eAAAqd,GACA9pB,EAAA,EAA2BA,EAAAE,EAASF,GAAA,EACpC8pB,EAAA5vB,KAAA0wC,UAAA5qC,GAAAmxC,eAAAC,MAAAnuC,EAAA5J,MACA63C,EAAAjnC,UAAA6f,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,OAKAmoB,cAAA,SAAA5kC,GACA,IAAA6kC,KACAA,EAAArtC,KAAA3K,KAAAi3C,gBAGA,IAFA,IAAAtwC,GAAA,EACA0mB,EAAArtB,KAAAqtB,KACA1mB,GACA0mB,EAAA4pB,gBACA5pB,EAAA1tB,KAAA8hB,SACAu2B,EAAAltC,OAAA,IAAAuiB,EAAA4pB,gBAEA5pB,UAEA1mB,GAAA,EAGA,IAAAb,EAAAmyC,EAAAjyC,EAAAgyC,EAAA/xC,OACA,IAAAH,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5BmyC,EAAAD,EAAAlyC,GAAA8pB,IAAAxc,kBAAA,OAEAD,KAAA,GAAA8kC,EAAA,GAAA9kC,EAAA,GAAA8kC,EAAA,MAEA,OAAA9kC,GAEAmwB,QAAA,IAAA91B,QAMAmgC,kBAAAvjC,WACA8tC,eAAA,WAEAl4C,KAAAm4C,WAAA,EAEAn4C,KAAAo4C,QAAA,EAEAp4C,KAAAq4C,eAAA,EAEAr4C,KAAAs4C,yBAEA/K,uBAAA,SAAAgL,IACA,IAAAv4C,KAAAs4C,qBAAAvsC,QAAAwsC,IACAv4C,KAAAs4C,qBAAA3tC,KAAA4tC,IAGAC,0BAAA,SAAAD,IACA,IAAAv4C,KAAAs4C,qBAAAvsC,QAAAwsC,IACAv4C,KAAAs4C,qBAAAxtC,OAAA9K,KAAAs4C,qBAAAvsC,QAAAwsC,GAAA,IAGAE,uBAAA,SAAAtJ,GACAnvC,KAAA04C,iBAAAvJ,IAEAwJ,kBAAA,WACA34C,KAAAi3C,eAAAC,MAAAxnC,EAAA3G,GAAA,GACA/I,KAAAq4C,eAAAr4C,KAAA+tB,WAAA0c,aAAAI,oBACA7qC,KAAAq4C,eAAA,EACAr4C,KAAA4yC,QAES5yC,KAAAq4C,gBACTr4C,KAAAq4C,eAAA,EACAr4C,KAAA6yC,SAWA6F,iBAAA,SAAAvJ,GACAnvC,KAAAL,KAAAyvC,GAAApvC,KAAAL,KAAA+uB,IAAAygB,GAAAnvC,KAAAL,KAAAg8B,GAAA37B,KAAAL,KAAA+uB,GAAAygB,GAEA,IAAAnvC,KAAAm4C,YACAn4C,KAAA+tB,WAAA7hB,MAAA,EACAlM,KAAAkM,MAAA,EACAlM,KAAAm4C,WAAA,EACAn4C,KAAA6yC,SAGA,IAAA7yC,KAAAm4C,YACAn4C,KAAA+tB,WAAA7hB,MAAA,EACAlM,KAAAm4C,WAAA,EACAn4C,KAAA4yC,SAIAgG,iBAAA,WACA,IAAA9yC,EAAAE,EAAAhG,KAAAs4C,qBAAAryC,OACA,IAAAH,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3B9F,KAAAs4C,qBAAAxyC,GAAAwsC,YAAAtyC,KAAAmuB,gBAKA0qB,iBAAA,WACA,OACA9xC,IAAA,EACAC,KAAA,EACAtH,MAAA,IACAF,OAAA,MAGAs5C,aAAA,WACA,WAAA94C,KAAAL,KAAAkQ,IACoBwU,EAAArkB,KAAAL,KAAA2/B,SAAA5/B,MAAAmJ,EAAA7I,KAAAL,KAAA2/B,SAAA9/B,SAEA6kB,EAAArkB,KAAAL,KAAAD,MAAAmJ,EAAA7I,KAAAL,KAAAH,UA+DpBgb,iBAAAmzB,kBAAA1yB,qBAvDA89B,YAAA,SAAAp5C,EAAAouB,EAAAV,GACArtB,KAAAkpB,YACAlpB,KAAAg5C,aAAAr5C,EAAAouB,EAAAV,GACArtB,KAAA03C,cAAA/3C,EAAAouB,EAAAV,GACArtB,KAAAs3C,gBACAt3C,KAAAk4C,iBACAl4C,KAAAi5C,sBACAj5C,KAAAk5C,0BACAl5C,KAAAm5C,6BACAn5C,KAAAo5C,gBACAp5C,KAAA4yC,QAEAA,KAAA,WACA5yC,KAAAo4C,QAAAp4C,KAAAm4C,YAAAn4C,KAAAq4C,iBACAr4C,KAAAq5C,aAAAr5C,KAAAwqC,cACA5qC,MAAAqH,QAAA,OACAjH,KAAAo4C,QAAA,IAGAvF,KAAA,WACA7yC,KAAAm4C,YAAAn4C,KAAAq4C,gBACAr4C,KAAAL,KAAAsuC,MACAjuC,KAAAq5C,aAAAr5C,KAAAwqC,cACA5qC,MAAAqH,QAAA,SAEAjH,KAAAo4C,QAAA,EACAp4C,KAAAmuB,eAAA,IAGAmkB,YAAA,WAGAtyC,KAAAL,KAAAsuC,IAAAjuC,KAAAo4C,SAGAp4C,KAAA83C,kBACA93C,KAAA44C,mBACA54C,KAAAs5C,gBACAt5C,KAAAu5C,qBACAv5C,KAAAmuB,gBACAnuB,KAAAmuB,eAAA,KAGAorB,mBAAA,aACA/G,aAAA,SAAArD,GACAnvC,KAAAkM,MAAA,EACAlM,KAAAy4C,uBAAAtJ,GACAnvC,KAAAw3C,kBAAArI,EAAAnvC,KAAAm4C,WACAn4C,KAAA24C,qBAEA9a,QAAA,WACA79B,KAAAw5C,UAAA,KACAx5C,KAAAy5C,yBAGA7L,sBAiBAE,aAAA1jC,UAAA4D,MAAA,WACAhO,KAAAwJ,EAAA,GACAxJ,KAAAkM,MAAA,GAwBAkiC,aAAAhkC,UAAAosB,cAAA,WACAx2B,KAAAgM,aAAA,GAsBAwO,iBAAA7O,0BAAA8iC,oBASAj0B,iBAAA7O,0BAAAgjC,kBAOAC,yBAAAxkC,UAAAykC,iBAAA,SAAA/gB,EAAAnuB,EAAA+uC,GACA1uC,KAAA0P,EAAAuZ,gBAAAuF,QAAAV,EAAAnuB,EAAA+P,EAAA,MAAA1P,MACAA,KAAA8I,EAAAmgB,gBAAAuF,QAAAV,EAAAnuB,EAAAmJ,EAAA,OAAA9I,MACAA,KAAAoP,EAAA6Z,gBAAAuF,QAAAV,EAAAnuB,EAAAyP,EAAA,OAAApP,MACAA,KAAA6I,EAAAogB,gBAAAuF,QAAAV,EAAAnuB,EAAAkJ,IAAmDyG,EAAA,GAAI,MAAAtP,MACvDA,KAAAG,EAAA8oB,gBAAAuF,QAAAV,EAAAnuB,EAAAQ,IAAmDmP,EAAA,GAAI,EAAA/I,UAAAvG,MACvDA,KAAAiJ,EAAA,IAAA6sB,iBAAAhI,EAAAnuB,EAAAsJ,EAAAjJ,MACAA,KAAAJ,MAAA8uC,EACA1uC,KAAA05C,SACA15C,KAAA25C,gBAAAjL,EAAAR,MAAAvuC,GACAK,KAAA45C,mBAAAj6C,EAAA+uC,GACA1uC,KAAAgM,cAAAhM,KAAAgM,aAIA4iC,yBAAAxkC,UAAAuvC,gBAAA,SAAAE,EAAAl6C,GAEA,IAAAm6C,EAAApxC,kBACAqxC,EAAAzuC,SAAA,IAAA3L,EAAA2J,EAAA,mCACAywC,EAAAn0B,aAAA,KAAAk0B,GACAC,EAAAn0B,aAAA,sBACAm0B,EAAAn0B,aAAA,kCACA,IACA1jB,EAAAmN,EAAA+R,EADAs4B,KAGA,IADAt4B,EAAA,EAAAzhB,EAAAsJ,EAAAG,EACAiG,EAAA,EAAYA,EAAA+R,EAAO/R,GAAA,EACnBnN,EAAAoJ,SAAA,QACAyuC,EAAA30B,YAAAljB,GACAw3C,EAAA/uC,KAAAzI,GAEA23C,EAAAj0B,aAAA,OAAAjmB,EAAAkQ,GAAA,uBAAAxL,aAAA,IAAAy1C,EAAA,KAEA95C,KAAAg6C,GAAAD,EACA/5C,KAAAi6C,IAAAP,GAGA9K,yBAAAxkC,UAAAwvC,mBAAA,SAAAj6C,EAAA+uC,GACA,GAAA1uC,KAAAiJ,EAAAmtB,cAAAp2B,KAAAiJ,EAAAitB,aAAA,CACA,IAAAh0B,EAAAmN,EAAA+R,EACAtM,EAAAxJ,SAAA,QACAi/B,EAAAj/B,SAAA,QACAwJ,EAAAsQ,YAAAmlB,GACA,IAAA2P,EAAAxxC,kBACAupC,EAAAvpC,kBACAoM,EAAA8Q,aAAA,KAAAqsB,GACA,IAAAkI,EAAA7uC,SAAA,IAAA3L,EAAA2J,EAAA,mCACA6wC,EAAAv0B,aAAA,KAAAs0B,GACAC,EAAAv0B,aAAA,sBACAu0B,EAAAv0B,aAAA,kCACAxE,EAAAzhB,EAAAsJ,EAAAqG,IAAA,GAAAxG,EAAAnJ,EAAAsJ,EAAAqG,IAAA,GAAAxG,EAAA7C,OAAAtG,EAAAsJ,EAAAqG,IAAArJ,OACA,IAAAyzC,EAAA15C,KAAA05C,MACA,IAAArqC,EAAA,EAAA1P,EAAAsJ,EAAAG,EAAyBiG,EAAA+R,EAAO/R,GAAA,GAChCnN,EAAAoJ,SAAA,SACAsa,aAAA,iCACAu0B,EAAA/0B,YAAAljB,GACAw3C,EAAA/uC,KAAAzI,GAEAqoC,EAAA3kB,aAAA,OAAAjmB,EAAAkQ,GAAA,uBAAAxL,aAAA,IAAA61C,EAAA,KACAl6C,KAAA2hC,GAAAwY,EACAn6C,KAAAo6C,GAAAtlC,EACA9U,KAAAq6C,IAAAX,EACA15C,KAAAiyC,SACAvD,EAAAP,OAAA5D,IAIA/vB,iBAAA7O,0BAAAijC,0BAUAp0B,iBAAAo0B,yBAAAjjC,0BAAAmjC,4BAMA,IAAAwL,oBAAA,WACA,IAAAC,EAAA,IAAA/sC,OACAgtC,EAAA,IAAAhtC,OA2BA,SAAAitC,EAAAC,EAAAC,EAAA5D,IACAA,GAAA4D,EAAA5qC,UAAA4rB,GAAAzvB,OACAyuC,EAAA5qC,UAAA1P,UAAAulB,aAAA,UAAA+0B,EAAA5qC,UAAA4rB,GAAA5yB,IAEAguC,GAAA4D,EAAA5qC,UAAA2rB,OAAAxvB,OACAyuC,EAAA5qC,UAAA1P,UAAAulB,aAAA,YAAA+0B,EAAA5qC,UAAA2rB,OAAA3yB,EAAAsL,WAIA,SAAAumC,EAAAF,EAAAC,EAAA5D,GACA,IAAA1nC,EAAA+R,EAAAy5B,EAAAC,EAAAhf,EAAAvsB,EAEAgU,EAAAqM,EAAAzwB,EAAA47C,EAAAzrC,EAFA0rC,EAAAL,EAAA1T,OAAAhhC,OACA+nC,EAAA2M,EAAA3M,IAEA,IAAAz+B,EAAA,EAAaA,EAAAyrC,EAAOzrC,GAAA,GAEpB,GADAurC,EAAAH,EAAAhvB,GAAAzf,MAAA6qC,EACA4D,EAAA1T,OAAA13B,GAAAy+B,MAAA,CAIA,IAHApe,EAAA4qB,EAAAxsC,QACA+sC,EAAA/M,EAAA2M,EAAA1T,OAAA13B,GAAAy+B,IACA1+B,EAAAqrC,EAAAtM,aAAApoC,OAAA,GACA60C,GAAAC,EAAA,GACAD,EAAAH,EAAAtM,aAAA/+B,GAAAosB,OAAAxvB,MAAA4uC,EACAC,IACAzrC,IAEA,GAAAwrC,EAGA,IAFAC,EAAA/M,EAAA2M,EAAA1T,OAAA13B,GAAAy+B,IACA1+B,EAAAqrC,EAAAtM,aAAApoC,OAAA,EACA80C,EAAA,GACA57C,EAAAw7C,EAAAtM,aAAA/+B,GAAAosB,OAAA3yB,EAAA5J,MACAywB,EAAA7f,UAAA5Q,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACA47C,IACAzrC,SAIAsgB,EAAA2qB,EAIA,GADAn5B,GADAmC,EAAAo3B,EAAAhvB,GAAApI,OACAvF,QACA88B,EAAA,CAEA,IADAD,EAAA,GACAxrC,EAAA,EAAqBA,EAAA+R,EAAO/R,GAAA,GAC5BysB,EAAAvY,EAAAvB,OAAA3S,KACAysB,EAAA9d,UACA68B,GAAAhf,iBAAAC,IAAA9d,QAAA8d,EAAA3sB,EAAAygB,IAGA+qB,EAAArM,OAAA/+B,GAAAsrC,OAEAA,EAAAF,EAAArM,OAAA/+B,GAEAorC,EAAA1T,OAAA13B,GAAA/F,IAAA,IAAAkxC,EAAAzM,GAAA,GAAA4M,EACAF,EAAA1T,OAAA13B,GAAArD,KAAA4uC,GAAAH,EAAA1T,OAAA13B,GAAArD,MAIA,SAAA+uC,EAAAP,EAAAC,EAAA5D,GACA,IAAAmE,EAAAP,EAAA/6C,OAEA+6C,EAAAxrC,EAAAjD,MAAA6qC,IACAmE,EAAAhN,MAAAtoB,aAAA,cAAArgB,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,UAEA4xC,EAAAjrC,EAAAxD,MAAA6qC,IACAmE,EAAAhN,MAAAtoB,aAAA,eAAA+0B,EAAAjrC,EAAA3G,GAIA,SAAAoyC,EAAAT,EAAAC,EAAA5D,GACAqE,EAAAV,EAAAC,EAAA5D,GACAsE,EAAAX,EAAAC,EAAA5D,GAGA,SAAAqE,EAAAV,EAAAC,EAAA5D,GACA,IAkBA2C,EAAA5zC,EAAAE,EAAA9D,EAqCA0xB,EAvDAmmB,EAAAY,EAAAX,GACAsB,EAAAX,EAAA1xC,EAAAmtB,YACA3iB,EAAAknC,EAAA7xC,EAAAC,EAAA2K,EAAAinC,EAAAvrC,EAAArG,EAEA,GAAA4xC,EAAAjrC,EAAAxD,MAAA6qC,EAAA,CACA,IAAAn8B,EAAA,OAAA8/B,EAAA7qC,GAAA,gCACA8qC,EAAA/6C,MAAAsuC,MAAAtoB,aAAAhL,EAAA+/B,EAAAjrC,EAAA3G,GAEA,GAAA4xC,EAAA7xC,EAAAoD,MAAA6qC,EAAA,CACA,IAAAwE,EAAA,IAAAb,EAAApxC,EAAA,UACAkyC,EAAA,OAAAD,EAAA,UACAxB,EAAAn0B,aAAA21B,EAAA9nC,EAAA,IACAsmC,EAAAn0B,aAAA41B,EAAA/nC,EAAA,IACA6nC,IAAAX,EAAA1xC,EAAAitB,eACAykB,EAAAhZ,GAAA/b,aAAA21B,EAAA9nC,EAAA,IACAknC,EAAAhZ,GAAA/b,aAAA41B,EAAA/nC,EAAA,KAIA,GAAAknC,EAAA1xC,EAAA+sB,OAAA+gB,EAAA,CACA2C,EAAAiB,EAAAV,IACA,IAAAwB,EAAAd,EAAA1xC,EAAAkG,EAEA,IADAnJ,EAAA0zC,EAAAzzC,OACAH,EAAA,EAAoBA,EAAAE,EAASF,GAAA,GAC7B5D,EAAAw3C,EAAA5zC,IACA8f,aAAA,SAAA61B,EAAA,EAAA31C,GAAA,KACA5D,EAAA0jB,aAAA,oBAAA61B,EAAA,EAAA31C,EAAA,OAAA21C,EAAA,EAAA31C,EAAA,OAAA21C,EAAA,EAAA31C,EAAA,QAGA,GAAAw1C,IAAAX,EAAA1xC,EAAAgtB,OAAA8gB,GAAA,CACA,IAAA2E,EAAAf,EAAA1xC,EAAAyG,EAOA,IADA1J,GAJA0zC,EADAiB,EAAA1xC,EAAAitB,aACAykB,EAAAV,IAEAU,EAAAN,KAEAp0C,OACAH,EAAA,EAAoBA,EAAAE,EAASF,GAAA,EAC7B5D,EAAAw3C,EAAA5zC,GACA60C,EAAA1xC,EAAAitB,cACAh0B,EAAA0jB,aAAA,SAAA81B,EAAA,EAAA51C,GAAA,KAEA5D,EAAA0jB,aAAA,eAAA81B,EAAA,EAAA51C,EAAA,IAGA,OAAA40C,EAAApxC,GACAqxC,EAAAvrC,EAAAlD,MAAA6qC,KACAgD,EAAAn0B,aAAA,KAAAlS,EAAA,IACAqmC,EAAAn0B,aAAA,KAAAlS,EAAA,IACA4nC,IAAAX,EAAA1xC,EAAAitB,eACAykB,EAAAhZ,GAAA/b,aAAA,KAAAlS,EAAA,IACAinC,EAAAhZ,GAAA/b,aAAA,KAAAlS,EAAA,WAYA,IAPAinC,EAAA7xC,EAAAoD,MAAAyuC,EAAAvrC,EAAAlD,MAAA6qC,KACAnjB,EAAA9uB,KAAAM,KAAAN,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,MAAA5O,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,OACAqmC,EAAAn0B,aAAA,IAAAgO,GACA0nB,IAAAX,EAAA1xC,EAAAitB,cACAykB,EAAAhZ,GAAA/b,aAAA,IAAAgO,IAGA+mB,EAAAvrC,EAAAlD,MAAAyuC,EAAA9xC,EAAAqD,MAAAyuC,EAAAx6C,EAAA+L,MAAA6qC,EAAA,CACAnjB,IACAA,EAAA9uB,KAAAM,KAAAN,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,MAAA5O,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,QAEA,IAAAioC,EAAA72C,KAAA8nB,MAAAlZ,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAGAmoC,EAAAhoB,GADA+mB,EAAA9xC,EAAAE,GAAA,MAAA4xC,EAAA9xC,EAAAE,IAAA,OAAA4xC,EAAA9xC,EAAAE,GAEA0J,EAAA3N,KAAA4I,IAAAiuC,EAAAhB,EAAAx6C,EAAA4I,GAAA6yC,EAAAnoC,EAAA,GACAf,EAAA5N,KAAA8I,IAAA+tC,EAAAhB,EAAAx6C,EAAA4I,GAAA6yC,EAAAnoC,EAAA,GACAsmC,EAAAn0B,aAAA,KAAAnT,GACAsnC,EAAAn0B,aAAA,KAAAlT,GACA4oC,IAAAX,EAAA1xC,EAAAitB,eACAykB,EAAAhZ,GAAA/b,aAAA,KAAAnT,GACAkoC,EAAAhZ,GAAA/b,aAAA,KAAAlT,KAOA,SAAA2oC,EAAAX,EAAAC,EAAA5D,GACA,IAAAmE,EAAAP,EAAA/6C,MACA4J,EAAAmxC,EAAAnxC,EACAA,MAAA0C,MAAA6qC,IAAAvtC,EAAAmsB,UACAulB,EAAAhN,MAAAtoB,aAAA,mBAAApc,EAAAmsB,SACAulB,EAAAhN,MAAAtoB,aAAA,oBAAApc,EAAAqsB,WAAA,KAEA8kB,EAAAxrC,IAAAwrC,EAAAxrC,EAAAjD,MAAA6qC,IACAmE,EAAAhN,MAAAtoB,aAAA,gBAAArgB,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,UAEA4xC,EAAAjrC,EAAAxD,MAAA6qC,IACAmE,EAAAhN,MAAAtoB,aAAA,iBAAA+0B,EAAAjrC,EAAA3G,IAEA4xC,EAAAt2B,EAAAnY,MAAA6qC,KACAmE,EAAAhN,MAAAtoB,aAAA,eAAA+0B,EAAAt2B,EAAAtb,GACAmyC,EAAA/M,QACA+M,EAAA/M,OAAAvoB,aAAA,eAAA+0B,EAAAt2B,EAAAtb,IAKA,OA1MA8yC,qBAGA,SAAAl8C,GACAA,EAAAkQ,GACA,OAAAlQ,EAAAkQ,IACA,SACA,OAAAorC,EACA,SACA,OAAAG,EACA,SACA,OAAAD,EACA,SACA,OAAAE,EACA,SACA,SACA,SACA,SACA,OAAAT,EACA,SACA,OAAAH,KAzBA,GAiNA,SAAAqB,wBACA97C,KAAA+7C,aACA/7C,KAAAg8C,gBACAh8C,KAAAi8C,oBAAA,EAqDA,SAAAC,YAAAr1C,EAAAlH,EAAAsnC,EAAAkV,GACAn8C,KAAAo8C,gBACAp8C,KAAAm5B,IAAA,aACA,IAAAtpB,EAAA,EACA,MAAAlQ,EAAAkQ,GACAA,EAAA,EACK,MAAAlQ,EAAAkQ,GACLA,EAAA,EACK,MAAAlQ,EAAAkQ,KACLA,EAAA,GAEA7P,KAAA2rB,GAAAkG,qBAAAgD,aAAAhuB,EAAAlH,EAAAkQ,EAAAhJ,GACA,IAAAf,EAAAu2C,EAAAr2C,EAAAihC,EAAAhhC,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxBmhC,EAAAnhC,GAAA8X,SACAy+B,GACArE,WAAAmE,EAAAG,qBAAArV,EAAAnhC,GAAAkyC,YACAuE,YAEAv8C,KAAAo8C,aAAAzxC,KAAA0xC,GACApV,EAAAnhC,GAAAu0B,SAAA1vB,KAAA0xC,IAMA,SAAAG,eA4DA,SAAA9K,YAAA/xC,EAAAouB,EAAAV,GACArtB,KAAAkpB,YACAlpB,KAAAg5C,aAAAr5C,EAAAouB,EAAAV,GACArtB,KAAAkpB,YACAlpB,KAAA03C,cAAA/3C,EAAAouB,EAAAV,GACArtB,KAAAs3C,gBAyBA,SAAAmF,kBA6JA,SAAAC,iBAuEA,SAAAC,gBAgFA,SAAAC,gBA8FA,SAAA/K,cAAAlyC,EAAAouB,EAAAV,GACArtB,KAAA68B,UAAA9O,EAAAsjB,aAAA1xC,EAAAmiB,OACA9hB,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GACArtB,KAAA68C,YAAuB91C,IAAA,EAAAC,KAAA,EAAAtH,MAAAM,KAAA68B,UAAAxY,EAAA7kB,OAAAQ,KAAA68B,UAAAh0B,GAqBvB,SAAAkpC,cAAApyC,EAAAouB,EAAAV,GACArtB,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAeA,SAAAykB,eAAAnyC,EAAAouB,EAAAV,GACArtB,KAAAghB,OAAArhB,EAAAqhB,OACAhhB,KAAAksC,YAAA,EACAlsC,KAAA+gB,gBAAA,EACA/gB,KAAAkrC,mBACAlrC,KAAAq6B,SAAAr6B,KAAAghB,OAAA3a,iBAAArG,KAAAghB,OAAA/a,WAEAjG,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GACArtB,KAAA88C,GAAAn9C,EAAAm9C,GAAA7zB,gBAAAuF,QAAAxuB,KAAAL,EAAAm9C,GAAA,EAAA/uB,EAAAmC,UAAAlwB,OAA6F+8C,cAAA,GAI7F,SAAAnL,eAAAjyC,EAAAouB,EAAAV,GACArtB,KAAAg9C,aACAh9C,KAAAu/B,WAAA,MACAv/B,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GA8MA,SAAAskB,gBAAAhyC,EAAAouB,EAAAV,GAEArtB,KAAAgiB,UAEAhiB,KAAAi9C,WAAAt9C,EAAAqiB,OAEAhiB,KAAAk9C,cAEAl9C,KAAAm9C,kBAEAn9C,KAAAo9C,aAEAp9C,KAAAq9C,qBAEAr9C,KAAAs9C,oBACAt9C,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAGArtB,KAAAgvC,gBAySA,SAAAuO,cAAAC,EAAAC,GACAz9C,KAAAy9C,gBACA,IAAApf,EAAA/yB,SAAA,iBAaA,GAZA+yB,EAAAzY,aAAA,iBACAyY,EAAAzY,aAAA,2CACAyY,EAAAzY,aAAA,iGACAyY,EAAAzY,aAAA,eACA43B,EAAAp4B,YAAAiZ,IACAA,EAAA/yB,SAAA,kBACAsa,aAAA,iBACAyY,EAAAzY,aAAA,sCACAyY,EAAAzY,aAAA,oDACAyY,EAAAzY,aAAA,eACA43B,EAAAp4B,YAAAiZ,GACAr+B,KAAA09C,aAAArf,EACA,MAAAof,EAAAE,eAAA,GAAAv0C,EAAAL,GAAA00C,EAAAE,eAAA,GAAAv0C,EAAAkG,EAAA,CACA,IAEAsuC,EAFAC,EAAAvyC,SAAA,WACAkyC,EAAAp4B,YAAAy4B,IAEAD,EAAAtyC,SAAA,gBACAsa,aAAA,sBACAi4B,EAAAz4B,YAAAw4B,IACAA,EAAAtyC,SAAA,gBACAsa,aAAA,WACAi4B,EAAAz4B,YAAAw4B,IAYA,SAAAE,cAAAN,EAAAC,GACAz9C,KAAAy9C,gBACA,IAAApf,EAAA/yB,SAAA,iBACA+yB,EAAAzY,aAAA,iBACAyY,EAAAzY,aAAA,sCACAyY,EAAAzY,aAAA,oDACA43B,EAAAp4B,YAAAiZ,GACAr+B,KAAA09C,aAAArf,EASA,SAAA0f,sBAAAP,EAAAC,GAEAD,EAAA53B,aAAA,aACA43B,EAAA53B,aAAA,aACA43B,EAAA53B,aAAA,gBACA43B,EAAA53B,aAAA,iBAEA5lB,KAAAy9C,gBACA,IAAAO,EAAA1yC,SAAA,kBACAkyC,EAAAp4B,YAAA44B,GACAh+C,KAAAg+C,iBA6BA,SAAAC,gBAAAnwB,EAAA2vB,GACAz9C,KAAAk+C,aAAA,EACAl+C,KAAAy9C,gBACAz9C,KAAA8tB,OACA9tB,KAAAujB,SAuGA,SAAA46B,iBAAAX,EAAAC,GACAz9C,KAAAy9C,gBACA,IAAApf,EAAA/yB,SAAA,iBACA+yB,EAAAzY,aAAA,iBACAyY,EAAAzY,aAAA,2CACAyY,EAAAzY,aAAA,iGACAyY,EAAAzY,aAAA,eACA43B,EAAAp4B,YAAAiZ,GACA,IAAA+f,EAAA9yC,SAAA,uBACA8yC,EAAAx4B,aAAA,sCACA43B,EAAAp4B,YAAAg5B,GACAp+C,KAAA09C,aAAAU,EACA,IAAAC,EAAA/yC,SAAA,WACA+yC,EAAAz4B,aAAA,gBACAw4B,EAAAh5B,YAAAi5B,GACAr+C,KAAAq+C,UACA,IAAAC,EAAAhzC,SAAA,WACAgzC,EAAA14B,aAAA,gBACAw4B,EAAAh5B,YAAAk5B,GACAt+C,KAAAs+C,UACA,IAAAC,EAAAjzC,SAAA,WACAizC,EAAA34B,aAAA,gBACAw4B,EAAAh5B,YAAAm5B,GACAv+C,KAAAu+C,UAkBA,SAAAC,mBAAAhB,EAAAC,GACAz9C,KAAAy9C,gBACA,IAAAE,EAAA39C,KAAAy9C,cAAAE,eACAS,EAAA9yC,SAAA,wBAGAqyC,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,KACA/I,KAAAq+C,QAAAr+C,KAAAy+C,aAAA,UAAAL,KAEAT,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,KACA/I,KAAAs+C,QAAAt+C,KAAAy+C,aAAA,UAAAL,KAEAT,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,KACA/I,KAAAu+C,QAAAv+C,KAAAy+C,aAAA,UAAAL,KAEAT,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,GAAA40C,EAAA,IAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,IAAAv0C,EAAAL,KACA/I,KAAA0+C,QAAA1+C,KAAAy+C,aAAA,UAAAL,KAGAp+C,KAAAq+C,SAAAr+C,KAAAs+C,SAAAt+C,KAAAu+C,SAAAv+C,KAAA0+C,WACAN,EAAAx4B,aAAA,sCACA43B,EAAAp4B,YAAAg5B,GACAA,EAAA9yC,SAAA,yBAGAqyC,EAAA,GAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,GAAAv0C,EAAAL,GAAA40C,EAAA,GAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,GAAAv0C,EAAAL,GAAA40C,EAAA,GAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,GAAAv0C,EAAAL,GAAA40C,EAAA,GAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,GAAAv0C,EAAAL,GAAA40C,EAAA,GAAAv0C,EAAAkG,GAAA,IAAAquC,EAAA,GAAAv0C,EAAAL,KAEAq1C,EAAAx4B,aAAA,sCACA43B,EAAAp4B,YAAAg5B,GACAp+C,KAAA2+C,gBAAA3+C,KAAAy+C,aAAA,UAAAL,GACAp+C,KAAA4+C,gBAAA5+C,KAAAy+C,aAAA,UAAAL,GACAp+C,KAAA6+C,gBAAA7+C,KAAAy+C,aAAA,UAAAL,IAuEA,SAAAU,oBAAAtB,EAAAC,GACAD,EAAA53B,aAAA,aACA43B,EAAA53B,aAAA,aACA43B,EAAA53B,aAAA,gBACA43B,EAAA53B,aAAA,iBACA5lB,KAAAy9C,gBAEA,IAAAO,EAAA1yC,SAAA,kBACA0yC,EAAAp4B,aAAA,oBACAo4B,EAAAp4B,aAAA,0BACAo4B,EAAAp4B,aAAA,oBACA5lB,KAAAg+C,iBACAR,EAAAp4B,YAAA44B,GAEA,IAAAe,EAAAzzC,SAAA,YACAyzC,EAAAn5B,aAAA,WACAm5B,EAAAn5B,aAAA,UACAm5B,EAAAn5B,aAAA,sBACAm5B,EAAAn5B,aAAA,0BACA5lB,KAAA++C,WACAvB,EAAAp4B,YAAA25B,GACA,IAAAC,EAAA1zC,SAAA,WACA0zC,EAAAp5B,aAAA,yBACAo5B,EAAAp5B,aAAA,qBACAo5B,EAAAp5B,aAAA,0BACA5lB,KAAAg/C,UACAxB,EAAAp4B,YAAA45B,GAEA,IAAAC,EAAA3zC,SAAA,eACA2zC,EAAAr5B,aAAA,sBACAq5B,EAAAr5B,aAAA,uBACAq5B,EAAAr5B,aAAA,iBACAq5B,EAAAr5B,aAAA,0BACA43B,EAAAp4B,YAAA65B,GAGA,IAEArB,EAFAC,EAAAvyC,SAAA,WACAkyC,EAAAp4B,YAAAy4B,GAEAD,EAAAtyC,SAAA,eACAuyC,EAAAz4B,YAAAw4B,IACAA,EAAAtyC,SAAA,gBACAsa,aAAA,sBACA5lB,KAAA49C,cACA59C,KAAA69C,UACA79C,KAAAk/C,mBAAA,EACArB,EAAAz4B,YAAAw4B,GA3/CA9B,sBAAA1xC,WACAkyC,qBAAA,SAAAtE,GACA,IAAAlyC,EAAAE,EAAAgyC,EAAA/xC,OACAmP,EAAA,IACA,IAAAtP,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrBsP,GAAA4iC,EAAAlyC,GAAAiK,UAAAqF,IAAA,IAEA,IAAA+pC,EAAAn/C,KAAA+7C,UAAA3mC,GAUA,OATA+pC,IACAA,GACAnH,cAAA7xB,OAAA6xB,GACAf,eAAA,IAAAzpC,OACAtB,MAAA,GAEAlM,KAAA+7C,UAAA3mC,GAAA+pC,EACAn/C,KAAAg8C,aAAArxC,KAAAw0C,IAEAA,GAEAC,gBAAA,SAAAD,EAAApI,GAEA,IADA,IASA53C,EATA2G,EAAA,EAAAE,EAAAm5C,EAAAnH,WAAA/xC,OAAAiG,EAAA6qC,EACAjxC,EAAAE,IAAA+wC,GAAA,CACA,GAAAoI,EAAAnH,WAAAlyC,GAAAiK,UAAA2rB,OAAAxvB,KAAA,CACAA,GAAA,EACA,MAEApG,GAAA,EAEA,GAAAoG,EAGA,IADAizC,EAAAlI,eAAAjpC,QACAlI,EAAAE,EAAA,EAAoBF,GAAA,EAAQA,GAAA,EAC5B3G,EAAAggD,EAAAnH,WAAAlyC,GAAAiK,UAAA2rB,OAAA3yB,EAAA5J,MACAggD,EAAAlI,eAAAlnC,UAAA5Q,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KAGAggD,EAAAjzC,QAGAmzC,iBAAA,SAAAtI,GACA,IAAAjxC,EAAAE,EAAAhG,KAAAg8C,aAAA/1C,OACA,IAAAH,EAAA,EAAaA,EAAAE,EAASF,GAAA,EACtB9F,KAAAo/C,gBAAAp/C,KAAAg8C,aAAAl2C,GAAAixC,IAIAuI,UAAA,WACA,UAAAt/C,KAAAi8C,wBA4BAC,YAAA9xC,UAAAosB,cAAA4X,aAAAhkC,UAAAosB,cAIAgmB,YAAApyC,WACAm1C,WAAA,WACA,IAAAv/C,KAAAL,KAAA8hB,QACA,SAGA,IADA,IAAA3b,EAAA,EAAAE,EAAAhG,KAAAL,KAAAgiB,gBAAA1b,OACAH,EAAAE,GAAA,CACA,SAAAhG,KAAAL,KAAAgiB,gBAAA7b,GAAAyH,OAAA,IAAAvN,KAAAL,KAAAgiB,gBAAA7b,GAAA8d,GACA,SAEA9d,GAAA,EAEA,UAEAkrC,gBAAA,WACAhxC,KAAAw/C,eAAAC,yBAAAz/C,MACAA,KAAAL,KAAA8hB,SAAAzhB,KAAAwiC,aACAxiC,KAAAw/C,eAAAE,sBAAA1/C,KAAAwiC,aAEA,IAAAmd,EAAAC,2BAAAC,uBAAA7/C,UAAAw/C,gBACAx/C,KAAAw/C,eAAAM,yBAAAH,GAEA,IAAA3/C,KAAAL,KAAAkQ,IAAA7P,KAAAL,KAAAoxC,GACA/wC,KAAA+/C,cAAAC,wBAAAhgD,MACS,IAAAA,KAAAL,KAAAkQ,IACT7P,KAAAw/C,eAAAS,eAAAC,yBAAAlgD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAw/C,gBACAx/C,KAAAw/C,eAAAW,QAAAngD,KAAAw/C,eAAAS,gBACS,IAAAjgD,KAAAL,KAAAkQ,KACT7P,KAAAw/C,eAAAY,cAAAC,wBAAArgD,MACAA,KAAAw/C,eAAAnZ,KAAArmC,KAAAw/C,eAAAY,gBAGAE,aAAA,WACA,IAAAC,EAAAl0C,aAAArM,KAAAL,KAAA6gD,KACAxgD,KAAAq5C,aAAAr5C,KAAAwqC,cAEA5qC,MAAA,kBAAA2gD,GAEAvH,aAAA,SAAAr5C,EAAAouB,EAAAV,GACArtB,KAAA+tB,aACA/tB,KAAAqtB,OACArtB,KAAAL,OACAK,KAAA2sC,QAAAjkC,kBAGA1I,KAAAL,KAAA8gD,KACAzgD,KAAAL,KAAA8gD,GAAA,GAGAzgD,KAAA0gD,eAAA,IAAAC,eAAA3gD,KAAAL,KAAAK,UAAA8L,oBAGA80C,QAAA,WACA,OAAA5gD,KAAAX,MAEAw5C,iBAAA,cAUAnH,YAAAtnC,UAAAooC,aAAA,SAAArD,GACAnvC,KAAAw3C,kBAAArI,GAAA,IAGAuC,YAAAtnC,UAAAkoC,YAAA,aAGAZ,YAAAtnC,UAAAqoC,eAAA,WACA,aAGAf,YAAAtnC,UAAAyzB,QAAA,aAGA6T,YAAAtnC,UAAAyuC,iBAAA,aAGAnH,YAAAtnC,UAAAwoC,KAAA,aAGAp4B,iBAAAgiC,YAAA9O,iBAAAF,iBAAAC,cAAAiE,aAKA+K,eAAAryC,WACA6uC,oBAAA,WACAj5C,KAAAwqC,aAAAl/B,SAAA,MAEA4tC,wBAAA,WACAl5C,KAAA6gD,aAAAv1C,SAAA,KACAtL,KAAA8gD,mBAAA9gD,KAAAwqC,aACAxqC,KAAAstC,cAAAttC,KAAAwqC,aACAxqC,KAAA+gD,cAAA,EACA,IAEA7iB,EAAAC,EAAA6iB,EAFAC,EAAA,KAGA,GAAAjhD,KAAAL,KAAA6hB,IACA,MAAAxhB,KAAAL,KAAA6hB,IAAA,GAAAxhB,KAAAL,KAAA6hB,GAAA,CACA,IAAA0/B,EAAA51C,SAAA,QACA41C,EAAAt7B,aAAA,KAAA5lB,KAAA2sC,SACAuU,EAAAt7B,aAAA,eAAA5lB,KAAAL,KAAA6hB,GAAA,qBACA0/B,EAAA97B,YAAAplB,KAAAwqC,cACAyW,EAAAC,EACAlhD,KAAA+tB,WAAAhH,KAAA3B,YAAA87B,GAEApjB,eAAAC,UAAA,GAAA/9B,KAAAL,KAAA6hB,KACA0/B,EAAAt7B,aAAA,yBACAsY,EAAAx1B,kBACAy1B,EAAAH,eAAAC,aAAAC,GACAl+B,KAAA+tB,WAAAhH,KAAA3B,YAAA+Y,GACAA,EAAA/Y,YAAA4Y,eAAAI,iCACA4iB,EAAA11C,SAAA,MACA8Z,YAAAplB,KAAAwqC,cACAyW,EAAAD,EACAE,EAAA97B,YAAA47B,GACAA,EAAAp7B,aAAA,gBAAAvhB,aAAA,IAAA65B,EAAA,WAEa,MAAAl+B,KAAAL,KAAA6hB,GAAA,CACb,IAAA2/B,EAAA71C,SAAA,QACA61C,EAAAv7B,aAAA,KAAA5lB,KAAA2sC,SACAwU,EAAAv7B,aAAA,qBACA,IAAAw7B,EAAA91C,SAAA,KACA61C,EAAA/7B,YAAAg8B,GACAljB,EAAAx1B,kBACAy1B,EAAAH,eAAAC,aAAAC,GAUA,IAAAmjB,EAAA/1C,SAAA,uBACA+1C,EAAAz7B,aAAA,sBACAuY,EAAA/Y,YAAAi8B,GACA,IAAAC,EAAAh2C,SAAA,WACAg2C,EAAA17B,aAAA,gBACA07B,EAAA17B,aAAA,yBACAy7B,EAAAj8B,YAAAk8B,GAEAthD,KAAA+tB,WAAAhH,KAAA3B,YAAA+Y,GACA,IAAAojB,EAAAj2C,SAAA,QACAi2C,EAAA37B,aAAA,QAAA5lB,KAAAqtB,KAAA1tB,KAAA0kB,GACAk9B,EAAA37B,aAAA,SAAA5lB,KAAAqtB,KAAA1tB,KAAAkJ,GACA04C,EAAA37B,aAAA,SACA27B,EAAA37B,aAAA,SACA27B,EAAA37B,aAAA,kBACA27B,EAAA37B,aAAA,eACAw7B,EAAAx7B,aAAA,gBAAAvhB,aAAA,IAAA65B,EAAA,KACAkjB,EAAAh8B,YAAAm8B,GACAH,EAAAh8B,YAAAplB,KAAAwqC,cACAyW,EAAAG,EACAtjB,eAAAC,WACAojB,EAAAv7B,aAAA,yBACAuY,EAAA/Y,YAAA4Y,eAAAI,gCACA4iB,EAAA11C,SAAA,KACA81C,EAAAh8B,YAAAm8B,GACAP,EAAA57B,YAAAplB,KAAAwqC,cACAyW,EAAAD,EACAI,EAAAh8B,YAAA47B,IAEAhhD,KAAA+tB,WAAAhH,KAAA3B,YAAA+7B,SAESnhD,KAAAL,KAAA4hB,IACTvhB,KAAA6gD,aAAAz7B,YAAAplB,KAAAwqC,cACAyW,EAAAjhD,KAAA6gD,aACA7gD,KAAAq5C,YAAAr5C,KAAA6gD,cAEA7gD,KAAAq5C,YAAAr5C,KAAAwqC,aASA,GAPAxqC,KAAAL,KAAA6hD,IACAxhD,KAAAwqC,aAAA5kB,aAAA,KAAA5lB,KAAAL,KAAA6hD,IAEAxhD,KAAAL,KAAAikB,IACA5jB,KAAAwqC,aAAA5kB,aAAA,QAAA5lB,KAAAL,KAAAikB,IAGA,IAAA5jB,KAAAL,KAAAkQ,KAAA7P,KAAAL,KAAAsuC,GAAA,CACA,IAAAwT,EAAAn2C,SAAA,YACA6H,EAAA7H,SAAA,QACA6H,EAAAyS,aAAA,aAAA5lB,KAAAL,KAAA0kB,EAAA,OAAArkB,KAAAL,KAAA0kB,EAAA,IAAArkB,KAAAL,KAAAkJ,EAAA,OAAA7I,KAAAL,KAAAkJ,EAAA,KACA,IAAA64C,EAAAh5C,kBAKA,GAJA+4C,EAAA77B,aAAA,KAAA87B,GACAD,EAAAr8B,YAAAjS,GACAnT,KAAA+tB,WAAAhH,KAAA3B,YAAAq8B,GAEAzhD,KAAAu/C,aAAA,CACA,IAAAoC,EAAAr2C,SAAA,KACAq2C,EAAA/7B,aAAA,mBAAAvhB,aAAA,IAAAq9C,EAAA,KACAC,EAAAv8B,YAAAplB,KAAAwqC,cACAxqC,KAAA8gD,mBAAAa,EACAV,EACAA,EAAA77B,YAAAplB,KAAA8gD,oBAEA9gD,KAAAq5C,YAAAr5C,KAAA8gD,wBAGA9gD,KAAAwqC,aAAA5kB,aAAA,mBAAAvhB,aAAA,IAAAq9C,EAAA,KAIA,IAAA1hD,KAAAL,KAAA6gD,IACAxgD,KAAAsgD,gBAIAhH,cAAA,WACAt5C,KAAAi3C,eAAAU,SACA33C,KAAA8gD,mBAAAl7B,aAAA,YAAA5lB,KAAAi3C,eAAArnB,IAAAvb,WAEArU,KAAAi3C,eAAAW,QACA53C,KAAA8gD,mBAAAl7B,aAAA,UAAA5lB,KAAAi3C,eAAAC,MAAAxnC,EAAA3G,IAGA0wC,mBAAA,WACAz5C,KAAAwqC,aAAA,KACAxqC,KAAA6gD,aAAA,KACA7gD,KAAAwiC,YAAA3E,WAEA4U,eAAA,WACA,OAAAzyC,KAAAL,KAAAsuC,GACA,KAEAjuC,KAAAq5C,aAEAF,2BAAA,WACAn5C,KAAAwiC,YAAA,IAAA2J,YAAAnsC,KAAAL,KAAAK,UAAA+tB,YACA/tB,KAAA4hD,yBAAA,IAAAC,WAAA7hD,OAEAoyC,SAAA,SAAA1xB,GACA1gB,KAAA6gD,cAGA7gD,KAAA6gD,aAAAj7B,aAAA,cAAAvhB,aAAA,IAAAqc,EAAA,OAMAg8B,cAAAtyC,WACA03C,oBAAA,SAAAniD,GACA,IAAAmG,EAAAE,EAAAhG,KAAAm9C,eAAAl3C,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB9F,KAAAm9C,eAAAr3C,GAAA6sB,SAAAhzB,IAGAoiD,2BAAA,SAAApiD,GAEA,IADA,IAAAqG,EAAAhG,KAAAm9C,eAAAl3C,OAAA,EACAD,GACA,GAAAhG,KAAAm9C,eAFA,GAEA6E,oBAAAriD,GACA,SAGA,UAEAsiD,gBAAA,WACA,GAAAjiD,KAAAm9C,eAAAl3C,OAAA,CAGA,IAAAH,EAAAE,EAAAhG,KAAAgiB,OAAA/b,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB9F,KAAAgiB,OAAAlc,GAAA6lB,GAAA3d,QAIA,IAAAlI,GADAE,EAAAhG,KAAAm9C,eAAAl3C,QACA,EAAoBH,GAAA,EAAKA,GAAA,EACzB9F,KAAAm9C,eAAAr3C,GAAAyxB,cAAAv3B,KAAAmuB,iBAGA+zB,QACA11C,EAAA,OACAC,EAAA,QACAC,EAAA,UAEAy1C,QACA31C,EAAA,QACAC,EAAA,QACAC,EAAA,SAEA01C,uBAAA,SAAAt0B,GAGA,IAFA,IAAAuM,EAAAr6B,KAAAq9C,kBACAv3C,EAAA,EAAAE,EAAAq0B,EAAAp0B,OACAH,EAAAE,GAAA,CACA,GAAAq0B,EAAAv0B,GAAAgoB,SACA,OAAAuM,EAAAv0B,GAAAgrB,IAEAhrB,GAAA,EAEA,UAEAu8C,oBAAA,SAAAv0B,EAAAgD,GAGA,IAFA,IAAAuJ,EAAAr6B,KAAAq9C,kBACAv3C,EAAAu0B,EAAAp0B,OACAH,GAEA,GAAAu0B,EADAv0B,GAAA,GACAgoB,SAEA,YADAuM,EAAAv0B,GAAAgrB,OAIAuJ,EAAA1vB,KAAA,IAAAkjC,iBAAA/f,EAAAgD,KAEA0hB,aAAA,SAAArD,GACAnvC,KAAAy4C,uBAAAtJ,GACAnvC,KAAAw3C,kBAAArI,EAAAnvC,KAAAm4C,aAMAwE,aAAAvyC,UAAA2uC,YAAA,SAAAp5C,EAAAouB,EAAAV,GACArtB,KAAAkgC,oBAAA,EACAlgC,KAAAkpB,YACAlpB,KAAAg5C,aAAAr5C,EAAAouB,EAAAV,GACArtB,KAAA8oC,aAAA,IAAA/H,aAAA/gC,KAAAL,EAAA2J,EAAAtJ,KAAA8L,mBACA9L,KAAAsiD,aAAA,IAAAjjB,qBAAA1/B,EAAA2J,EAAAtJ,KAAAu/B,WAAAv/B,MACAA,KAAA03C,cAAA/3C,EAAAouB,EAAAV,GACArtB,KAAAs3C,gBACAt3C,KAAAk4C,iBACAl4C,KAAAi5C,sBACAj5C,KAAAk5C,0BACAl5C,KAAAm5C,6BACAn5C,KAAAo5C,gBACAp5C,KAAA4yC,OACA5yC,KAAAsiD,aAAA/f,iBAAAviC,KAAA8L,oBAGA6wC,aAAAvyC,UAAAooC,aAAA,SAAArD,GACAnvC,KAAAkM,MAAA,EACAlM,KAAAy4C,uBAAAtJ,GACAnvC,KAAAw3C,kBAAArI,EAAAnvC,KAAAm4C,YACAn4C,KAAA8oC,aAAA58B,MAAAlM,KAAA8oC,aAAA3a,iBACAnuB,KAAAuiD,eACAviD,KAAA8oC,aAAA3a,eAAA,EACAnuB,KAAA8oC,aAAA58B,MAAA,IAIAywC,aAAAvyC,UAAAo4C,gBAAA,SAAAnf,EAAArhB,GACA,IAAA3S,EACAysB,EADA1a,EAAAY,EAAA/b,OAEAw8C,EAAA,GACA,IAAApzC,EAAA,EAAYA,EAAA+R,EAAO/R,GAAA,EACnBysB,EAAA9Z,EAAA3S,GAAAiT,GAAAhT,EACAmzC,GAAA5mB,iBAAAC,IAAAh2B,EAAAG,QAAA,EAAAo9B,GAEA,OAAAof,GAGA9F,aAAAvyC,UAAA49B,mBAAA,SAAAC,EAAAtf,GACA3oB,KAAA8oC,aAAAd,mBAAAC,EAAAtf,IAGAg0B,aAAAvyC,UAAAi+B,cAAA,SAAAC,GACAtoC,KAAA8oC,aAAAT,cAAAC,IAGAqU,aAAAvyC,UAAAm+B,mBAAA,SAAAma,GACA1iD,KAAA8oC,aAAAP,mBAAAma,IAGA/F,aAAAvyC,UAAAu4C,4BAAA,SAAAz/B,EAAAmgB,EAAAuf,EAAAjgB,EAAAC,GAKA,OAJA1f,EAAA0e,IACAyB,EAAA1zB,UAAAuT,EAAA0e,GAAA,GAAA1e,EAAA0e,GAAA,GAAA1e,EAAAke,OAAA,GAEAiC,EAAA1zB,UAAA,GAAAuT,EAAAwe,GAAA,GACAxe,EAAA7T,GACA,OACAg0B,EAAA1zB,UAAAuT,EAAAqe,eAAAre,EAAAme,SAAAne,EAAAue,WAAAmhB,IAAA,KACA,MACA,OACAvf,EAAA1zB,UAAAuT,EAAAqe,eAAAre,EAAAme,SAAAne,EAAAue,WAAAmhB,IAAA,OAGAvf,EAAA1zB,UAAAgzB,EAAAC,EAAA,IAIA+Z,aAAAvyC,UAAAy4C,WAAA,SAAAC,GACA,aAAAh+C,KAAAC,MAAA,IAAA+9C,EAAA,QAAAh+C,KAAAC,MAAA,IAAA+9C,EAAA,QAAAh+C,KAAAC,MAAA,IAAA+9C,EAAA,SAGAnG,aAAAvyC,UAAA24C,UAAA,IAAAjiB,YAEA6b,aAAAvyC,UAAAyzB,QAAA,aAKArjB,iBAAAgiC,YAAA9O,iBAAAF,iBAAAC,aAAAG,sBAAAgP,cAEAA,aAAAxyC,UAAA2uC,YAAA,SAAAp5C,EAAAouB,EAAAV,GACArtB,KAAAkpB,YACAlpB,KAAAg5C,aAAAr5C,EAAAouB,EAAAV,GACArtB,KAAA03C,cAAA/3C,EAAAouB,EAAAV,GACArtB,KAAAk4C,iBACAl4C,KAAAs3C,gBACAt3C,KAAAi5C,sBACAj5C,KAAAk5C,0BACAl5C,KAAAm5C,8BACAn5C,KAAAL,KAAAoxC,IAAAhjB,EAAA6c,iBACA5qC,KAAAiwC,gBAEAjwC,KAAA4yC,QAeAgK,aAAAxyC,UAAAooC,aAAA,SAAArD,GAIA,GAHAnvC,KAAAkM,MAAA,EACAlM,KAAAy4C,uBAAAtJ,GACAnvC,KAAAw3C,kBAAArI,EAAAnvC,KAAAm4C,WACAn4C,KAAAm4C,WAAAn4C,KAAAL,KAAAoxC,GAAA,CAIA,GAAA/wC,KAAA88C,GAAAC,aAOA/8C,KAAAstB,cAAA6hB,EAAAnvC,KAAAL,KAAA8gD,OAPA,CACA,IAAAuC,EAAAhjD,KAAA88C,GAAA/zC,EACAi6C,IAAAhjD,KAAAL,KAAAg8B,KACAqnB,EAAAhjD,KAAAL,KAAAg8B,GAAA,GAEA37B,KAAAstB,cAAA01B,EAIA,IAAAl9C,EAAAE,EAAAhG,KAAAq6B,SAAAp0B,OAKA,IAJAjG,KAAA+gB,gBACA/gB,KAAAkvC,YAAAlvC,KAAAstB,eAGAxnB,EAAAE,EAAA,EAAqBF,GAAA,EAAQA,GAAA,GAC7B9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,MACA9F,KAAAq6B,SAAAv0B,GAAA0sC,aAAAxyC,KAAAstB,cAAAttB,KAAAghB,OAAAlb,GAAA4oB,IACA1uB,KAAAq6B,SAAAv0B,GAAAoG,OACAlM,KAAAkM,MAAA,MAMA0wC,aAAAxyC,UAAAmvC,mBAAA,WACA,IAAAzzC,EAAAE,EAAAhG,KAAAghB,OAAA/a,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,GACxB9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAAwsC,eAKAsK,aAAAxyC,UAAA64C,YAAA,SAAAC,GACAljD,KAAAq6B,SAAA6oB,GAGAtG,aAAAxyC,UAAA+4C,YAAA,WACA,OAAAnjD,KAAAq6B,UAGAuiB,aAAAxyC,UAAAg5C,gBAAA,WACA,IAAAt9C,EAAAE,EAAAhG,KAAAghB,OAAA/a,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAAq6B,SAAAv0B,IACA9F,KAAAq6B,SAAAv0B,GAAA+3B,WAKA+e,aAAAxyC,UAAAyzB,QAAA,WACA79B,KAAAojD,kBACApjD,KAAAy5C,sBASAj/B,iBAAAgiC,YAAA9O,iBAAA+O,eAAAjP,iBAAAC,aAAAG,sBAAAiE,eAEAA,cAAAznC,UAAAgvC,cAAA,WAEA,IAAAiK,EAAArjD,KAAA+tB,WAAAmP,cAAAl9B,KAAA68B,WAEA78B,KAAAw5C,UAAAluC,SAAA,SACAtL,KAAAw5C,UAAA5zB,aAAA,QAAA5lB,KAAA68B,UAAAxY,EAAA,MACArkB,KAAAw5C,UAAA5zB,aAAA,SAAA5lB,KAAA68B,UAAAh0B,EAAA,MACA7I,KAAAw5C,UAAA5zB,aAAA,sBAAA5lB,KAAA68B,UAAAymB,IAAAtjD,KAAA+tB,WAAA0c,aAAAE,0BACA3qC,KAAAw5C,UAAA+J,eAAA,sCAAAF,GAEArjD,KAAAwqC,aAAAplB,YAAAplB,KAAAw5C,YAGA3H,cAAAznC,UAAAyuC,iBAAA,WACA,OAAA74C,KAAA68C,YAKAriC,iBAAAq3B,eAAAE,eAEAA,cAAA3nC,UAAAgvC,cAAA,WAEA,IAAA9M,EAAAhhC,SAAA,QAIAghC,EAAA1mB,aAAA,QAAA5lB,KAAAL,KAAA4gC,IACA+L,EAAA1mB,aAAA,SAAA5lB,KAAAL,KAAAgsB,IACA2gB,EAAA1mB,aAAA,OAAA5lB,KAAAL,KAAAooB,IACA/nB,KAAAwqC,aAAAplB,YAAAknB,IAaA9xB,iBAAAovB,YAAAgT,aAAAH,gBAAA3K,gBAOAt3B,iBAAAgiC,YAAA9O,iBAAA+O,eAAAjP,iBAAAC,aAAAG,qBAAA+O,cAAA/K,gBAEAA,eAAAxnC,UAAAgvC,cAAA,WAEAp5C,KAAAL,KAAAkkB,cAAA7jB,KAAA+tB,WAAA7M,YAAAmC,QACArjB,KAAAwjD,cAAAl4C,SAAA,UAIAsmC,eAAAxnC,UAAAq5C,kBAAA,SAAAC,GAGA,IAFA,IAAA59C,EAAA,EAAAE,EAAA09C,EAAAz9C,OACA09C,KAAAC,EAAA,GACA99C,EAAAE,GACA09C,EAAA59C,KAAArG,OAAAgW,aAAA,KAAAiuC,EAAA59C,KAAArG,OAAAgW,aAAA,IACAkuC,EAAAh5C,KAAAi5C,GACAA,EAAA,IAEAA,GAAAF,EAAA59C,GAEAA,GAAA,EAGA,OADA69C,EAAAh5C,KAAAi5C,GACAD,GAGA/R,eAAAxnC,UAAAm4C,aAAA,WACA,IAAAz8C,EAAAE,EAEAkd,EAAAljB,KAAA8oC,aAAA3H,YACAnhC,KAAAigC,gBAAA55B,iBAAA6c,IAAA3T,EAAAtJ,OAAA,GACAid,EAAAsd,GACAxgC,KAAAwqC,aAAA5kB,aAAA,OAAA5lB,KAAA6iD,WAAA3/B,EAAAsd,KAEAxgC,KAAAwqC,aAAA5kB,aAAA,wBAEA1C,EAAA6E,KACA/nB,KAAAwqC,aAAA5kB,aAAA,SAAA5lB,KAAA6iD,WAAA3/B,EAAA6E,KACA/nB,KAAAwqC,aAAA5kB,aAAA,eAAA1C,EAAAqd,KAEAvgC,KAAAwqC,aAAA5kB,aAAA,YAAA1C,EAAA+e,WACA,IAAAvc,EAAA1lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GACA,GAAAuc,EAAAO,OACAjmB,KAAAwqC,aAAA5kB,aAAA,QAAAF,EAAAO,YACK,CACLjmB,KAAAwqC,aAAA5kB,aAAA,cAAAF,EAAAG,SACA,IAAAE,EAAA7C,EAAA6C,QAAAD,EAAA5C,EAAA4C,OACA9lB,KAAAwqC,aAAA5kB,aAAA,aAAAE,GACA9lB,KAAAwqC,aAAA5kB,aAAA,cAAAG,GAEA/lB,KAAAwqC,aAAA5kB,aAAA,aAAA1C,EAAA5Z,GAEA,IAIAu6C,EAJArgB,EAAAtgB,EAAA3T,MACAu0C,IAAA9jD,KAAA+tB,WAAA7M,YAAAmC,MACArd,EAAAw9B,EAAAv9B,OAGA,IACA+b,EADAqhB,EAAArjC,KAAAsjC,QACAmf,EAAA,GAAA5+B,EAAA7jB,KAAAL,KAAAkkB,YACA8e,EAAA,EAAAC,EAAA,EAAAiB,GAAA,EACAsD,EAAAjkB,EAAAiW,GAAA,IAAAjW,EAAA+e,UACA,IAAApe,GAAAigC,GAAA5gC,EAAAjU,GA4BK,CACL,IACAwO,EAAAkpB,EADAod,EAAA/jD,KAAAg9C,UAAA/2C,OAEA,IAAAH,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5Bg+C,GAAAjgC,GAAA,IAAA/d,IACA+9C,EAAAE,EAAAj+C,EAAA9F,KAAAg9C,UAAAl3C,GAAAwF,SAAAw4C,EAAA,eACAC,GAAAj+C,IACA+9C,EAAAj+B,aAAA,yBACAi+B,EAAAj+B,aAAA,2BACAi+B,EAAAj+B,aAAA,yBACA5lB,KAAAg9C,UAAAl3C,GAAA+9C,EACA7jD,KAAAwqC,aAAAplB,YAAAy+B,IAEAA,EAAAjkD,MAAAqH,QAAA,WAGAo8B,EAAAr1B,QACAq1B,EAAAr0B,MAAAkU,EAAA+e,UAAA,IAAA/e,EAAA+e,UAAA,KACApe,IACA2f,EAAA19B,GAAA2J,IACAkzB,GAAAwE,EACAvE,GAAA1f,EAAA8e,QACAY,GAAAiB,EAAA,IACAA,GAAA,GAEA7jC,KAAA2iD,4BAAAz/B,EAAAmgB,EAAAG,EAAA19B,GAAAs/B,KAAAzC,EAAAC,GACAD,GAAAa,EAAA19B,GAAAyJ,GAAA,EAEAozB,GAAAwE,GAEA2c,GAGA9hC,GADAvE,GADAkpB,EAAA3mC,KAAA+tB,WAAA7M,YAAAiH,YAAAjF,EAAAgf,UAAAp8B,GAAA4f,EAAAI,OAAA9lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GAAA0c,WACA8gB,EAAAhnC,UACAqiB,OAAAvE,EAAAuE,OAAA,GAAAO,MACAsB,EAGA4+B,GAAAziD,KAAAwiD,gBAAAnf,EAAArhB,GAFA6hC,EAAAj+B,aAAA,IAAA5lB,KAAAwiD,gBAAAnf,EAAArhB,MAKA6B,GACAggC,EAAAj+B,aAAA,yBAAAyd,EAAAlkC,MAAA,QAAAkkC,EAAAlkC,MAAA,SAEA0kD,EAAA79B,YAAAwd,EAAA19B,GAAAK,IACA09C,EAAAN,eAAA,gEAIA1/B,GAAAggC,GACAA,EAAAj+B,aAAA,IAAA68B,OA7EA,CACA,IAAAuB,EAAAhkD,KAAAwjD,cACAS,EAAA,QACA,OAAA/gC,EAAA7T,GACA,OACA40C,EAAA,MACA,MACA,OACAA,EAAA,SAGAD,EAAAp+B,aAAA,cAAAq+B,GACAD,EAAAp+B,aAAA,iBAAAuhB,GACA,IAAAnhB,EAAAhmB,KAAAyjD,kBAAAvgC,EAAAgf,WAGA,IAFAl8B,EAAAggB,EAAA/f,OACA28B,EAAA1f,EAAA0e,GAAA1e,EAAA0e,GAAA,GAAA1e,EAAAke,OAAA,EACAt7B,EAAA,EAAoBA,EAAAE,EAASF,GAAA,GAC7B+9C,EAAA7jD,KAAAg9C,UAAAl3C,IAAAwF,SAAA,UACA0a,cAAAlgB,GACA+9C,EAAAj+B,aAAA,OACAi+B,EAAAj+B,aAAA,IAAAgd,GACAihB,EAAAjkD,MAAAqH,QAAA,UACA+8C,EAAA5+B,YAAAy+B,GACA7jD,KAAAg9C,UAAAl3C,GAAA+9C,EACAjhB,GAAA1f,EAAAif,gBAGAniC,KAAAwqC,aAAAplB,YAAA4+B,GAqDA,KAAAl+C,EAAA9F,KAAAg9C,UAAA/2C,QACAjG,KAAAg9C,UAAAl3C,GAAAlG,MAAAqH,QAAA,OACAnB,GAAA,EAGA9F,KAAA+gD,cAAA,GAGAnP,eAAAxnC,UAAAyuC,iBAAA,SAAAqL,GAGA,GAFAlkD,KAAAwyC,aAAAxyC,KAAAqtB,KAAAC,cAAAttB,KAAAL,KAAA+uB,IACA1uB,KAAAu5C,qBACAv5C,KAAA+gD,aAAA,CACA/gD,KAAA+gD,cAAA,EACA,IAAAoD,EAAAnkD,KAAAwqC,aAAA4Z,UACApkD,KAAAqkD,MACAt9C,IAAAo9C,EAAAzxC,EACA1L,KAAAm9C,EAAA1xC,EACA/S,MAAAykD,EAAAzkD,MACAF,OAAA2kD,EAAA3kD,QAGA,OAAAQ,KAAAqkD,MAGAzS,eAAAxnC,UAAAmvC,mBAAA,WAEA,IAAAv5C,KAAAL,KAAAkkB,cACA7jB,KAAAsiD,aAAA5f,YAAA1iC,KAAA8oC,aAAA3H,YAAAnhC,KAAAkgC,oBACAlgC,KAAAkgC,oBAAAlgC,KAAAsiD,aAAApiB,oBAAA,CAEA,IAAAp6B,EAAAE,EADAhG,KAAA+gD,cAAA,EAEA,IAKAuD,EAAAC,EALAtkB,EAAAjgC,KAAAsiD,aAAAriB,gBAEAuD,EAAAxjC,KAAA8oC,aAAA3H,YAAA5xB,EAIA,IAFAvJ,EAAAw9B,EAAAv9B,OAEAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B09B,EAAA19B,GAAA2J,IAGA60C,EAAArkB,EAAAn6B,GACAy+C,EAAAvkD,KAAAg9C,UAAAl3C,GACAw+C,EAAAp4C,KAAAsD,GACA+0C,EAAA3+B,aAAA,YAAA0+B,EAAA90C,GAEA80C,EAAAp4C,KAAAwD,GACA60C,EAAA3+B,aAAA,UAAA0+B,EAAA50C,GAEA40C,EAAAp4C,KAAAq0B,IACAgkB,EAAA3+B,aAAA,eAAA0+B,EAAA/jB,IAEA+jB,EAAAp4C,KAAA6b,IACAw8B,EAAA3+B,aAAA,SAAA0+B,EAAAv8B,IAEAu8B,EAAAp4C,KAAAs0B,IACA+jB,EAAA3+B,aAAA,OAAA0+B,EAAA9jB,OA6BAhmB,iBAAAgiC,YAAA9O,iBAAA+O,eAAAC,cAAAlP,iBAAAC,aAAAG,sBAAA+D,iBAEAA,gBAAAvnC,UAAAo6C,qBAAA,aAGA7S,gBAAAvnC,UAAAq6C,eAAA,IAAAj3C,OAEAmkC,gBAAAvnC,UAAAs6C,yBAAA,aAEA/S,gBAAAvnC,UAAAgvC,cAAA,WACAp5C,KAAA2kD,aAAA3kD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAgvC,aAAAhvC,KAAAwqC,aAAA,SACAxqC,KAAA4kD,sBAMAjT,gBAAAvnC,UAAAw6C,mBAAA,WACA,IAAA9+C,EAAAywB,EACAlnB,EACAzP,EAFAoG,EAAAhG,KAAAgiB,OAAA/b,OACAmb,EAAAphB,KAAAk9C,WAAAj3C,OAEA4+C,KACAC,GAAA,EACA,IAAAz1C,EAAA,EAAcA,EAAA+R,EAAU/R,GAAA,GAIxB,IAHAzP,EAAAI,KAAAk9C,WAAA7tC,GACAy1C,GAAA,EACAD,EAAA5+C,OAAA,EACAH,EAAA,EAAkBA,EAAAE,EAASF,GAAA,GAE3B,KADAywB,EAAAv2B,KAAAgiB,OAAAlc,IACAmhC,OAAAl7B,QAAAnM,KACAilD,EAAAl6C,KAAA4rB,GACAuuB,EAAAvuB,EAAAvqB,aAAA84C,GAGAD,EAAA5+C,OAAA,GAAA6+C,GACA9kD,KAAA+kD,oBAAAF,KAKAlT,gBAAAvnC,UAAA26C,oBAAA,SAAA/iC,GACA,IAAAlc,EAAAE,EAAAgc,EAAA/b,OACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBkc,EAAAlc,GAAA0wB,iBAIAmb,gBAAAvnC,UAAA46C,mBAAA,SAAArlD,EAAAouC,GAEA,IAAAkX,EACAvW,EAAA,IAAAZ,aAAAnuC,EAAAouC,GAEA8L,EAAAnL,EAAAR,MACA,UAAAvuC,EAAAkQ,GACAo1C,EAAA,IAAAxW,mBAAAzuC,KAAAL,EAAA+uC,QACK,UAAA/uC,EAAAkQ,GACLo1C,EAAA,IAAAtW,iBAAA3uC,KAAAL,EAAA+uC,QACK,UAAA/uC,EAAAkQ,IAAA,OAAAlQ,EAAAkQ,GAAA,CAELo1C,EAAA,IADA,OAAAtlD,EAAAkQ,GAAA++B,yBAAAE,4BACA9uC,KAAAL,EAAA+uC,GACA1uC,KAAA+tB,WAAAhH,KAAA3B,YAAA6/B,EAAAjL,IACAiL,EAAAhT,SACAjyC,KAAA+tB,WAAAhH,KAAA3B,YAAA6/B,EAAA7K,IACAp6C,KAAA+tB,WAAAhH,KAAA3B,YAAA6/B,EAAAtjB,IACAkY,EAAAj0B,aAAA,cAAAvhB,aAAA,IAAA4gD,EAAAhT,OAAA,MA4BA,MAxBA,OAAAtyC,EAAAkQ,IAAA,OAAAlQ,EAAAkQ,KACAgqC,EAAAj0B,aAAA,iBAAA5lB,KAAAkiD,OAAAviD,EAAAulD,KAAA,SACArL,EAAAj0B,aAAA,kBAAA5lB,KAAAmiD,OAAAxiD,EAAAwlD,KAAA,SACAtL,EAAAj0B,aAAA,oBACA,IAAAjmB,EAAAwlD,IACAtL,EAAAj0B,aAAA,oBAAAjmB,EAAAylD,KAIA,IAAAzlD,EAAAqJ,GACA6wC,EAAAj0B,aAAA,uBAGAjmB,EAAA6hD,IACA3H,EAAAj0B,aAAA,KAAAjmB,EAAA6hD,IAEA7hD,EAAAikB,IACAi2B,EAAAj0B,aAAA,QAAAjmB,EAAAikB,IAEAjkB,EAAA6gD,KACA3G,EAAAj6C,MAAA,kBAAAyM,aAAA1M,EAAA6gD,KAEAxgD,KAAAk9C,WAAAvyC,KAAA+jC,GACA1uC,KAAAqlD,sBAAA1lD,EAAAslD,GACAA,GAGAtT,gBAAAvnC,UAAAk7C,mBAAA,SAAA3lD,GACA,IAAAslD,EAAA,IAAAlW,eAUA,OATApvC,EAAA6hD,IACAyD,EAAAhW,GAAArpB,aAAA,KAAAjmB,EAAA6hD,IAEA7hD,EAAAikB,IACAqhC,EAAAhW,GAAArpB,aAAA,QAAAjmB,EAAAikB,IAEAjkB,EAAA6gD,KACAyE,EAAAhW,GAAArvC,MAAA,kBAAAyM,aAAA1M,EAAA6gD,KAEAyE,GAGAtT,gBAAAvnC,UAAAm7C,uBAAA,SAAA5lD,EAAAU,GACA,IAAAmlD,EAAA52B,yBAAA0B,qBAAAtwB,KAAAL,EAAAK,MACAilD,EAAA,IAAAzW,iBAAAgX,IAAA91C,EAAArP,GAEA,OADAL,KAAAqlD,sBAAA1lD,EAAAslD,GACAA,GAGAtT,gBAAAvnC,UAAAq7C,mBAAA,SAAA9lD,EAAA+lD,EAAA3X,GACA,IAAAl+B,EAAA,EACA,OAAAlQ,EAAAkQ,GACAA,EAAA,EACK,OAAAlQ,EAAAkQ,GACLA,EAAA,EACK,OAAAlQ,EAAAkQ,KACLA,EAAA,GAEA,IACAo1C,EAAA,IAAA7W,aAAAsX,EAAA3X,EADAlc,qBAAAgD,aAAA70B,KAAAL,EAAAkQ,EAAA7P,OAKA,OAHAA,KAAAgiB,OAAArX,KAAAs6C,GACAjlD,KAAA8hD,oBAAAmD,GACAjlD,KAAAqlD,sBAAA1lD,EAAAslD,GACAA,GAGAtT,gBAAAvnC,UAAAi7C,sBAAA,SAAA1lD,EAAAkH,GAEA,IADA,IAAAf,EAAA,EAAAE,EAAAhG,KAAAs9C,iBAAAr3C,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAs9C,iBAAAx3C,GAAAe,YACA,OAEAf,GAAA,EAEA9F,KAAAs9C,iBAAA3yC,MACAg7C,GAAArL,oBAAAuB,qBAAAl8C,GACAkH,UACAlH,UAIAgyC,gBAAAvnC,UAAAw7C,iBAAA,SAAAX,GACA,IACA51C,EADAlE,EAAA85C,EAAAhe,OACA7lB,EAAAphB,KAAAk9C,WAAAj3C,OACA,IAAAoJ,EAAA,EAAeA,EAAA+R,EAAU/R,GAAA,EACzBrP,KAAAk9C,WAAA7tC,GAAAuO,QACAzS,EAAAR,KAAA3K,KAAAk9C,WAAA7tC,KAKAsiC,gBAAAvnC,UAAA+wB,aAAA,WACAn7B,KAAAmuB,eAAA,EACA,IAAAroB,EAAAE,EAAAhG,KAAAo9C,UAAAn3C,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAAgvC,aAAAlpC,GAAA9F,KAAAo9C,UAAAt3C,GAKA,IAHA9F,KAAA2kD,aAAA3kD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAgvC,aAAAhvC,KAAAwqC,aAAA,SACAxqC,KAAA4kD,qBACA5+C,EAAAhG,KAAA8L,kBAAA7F,OACAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvB9F,KAAA8L,kBAAAhG,GAAAqG,WAEAnM,KAAAiiD,mBAGAtQ,gBAAAvnC,UAAAu6C,aAAA,SAAAx5C,EAAAiyC,EAAApO,EAAA3uC,EAAA0tC,EAAAM,EAAAttC,GACA,IACA+E,EACAuJ,EAAA+R,EACAykC,EAAAC,EAAAC,EAHAL,KAAAv/B,OAAAkoB,GACAroC,EAAAmF,EAAAlF,OAAA,EAEA+/C,KAAAC,KACA,IAAAngD,EAAAE,EAAcF,GAAA,EAAKA,GAAA,GAOnB,IANAigD,EAAA/lD,KAAAoiD,uBAAAj3C,EAAArF,KAIAs3C,EAAAt3C,GAAAkpC,EAAA+W,EAAA,GAFA56C,EAAArF,GAAA60B,QAAA55B,EAIA,MAAAoK,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,GACAk2C,EAGA3I,EAAAt3C,GAAAlG,MAAAge,QAAA,EAFAw/B,EAAAt3C,GAAA9F,KAAAglD,mBAAA75C,EAAArF,GAAAioC,GAIA5iC,EAAArF,GAAA60B,SACAt6B,EAAA+kB,YAAAg4B,EAAAt3C,GAAAlG,MAAAsuC,OAEA8X,EAAAr7C,KAAAyyC,EAAAt3C,GAAAlG,YACS,SAAAuL,EAAArF,GAAA+J,GAAA,CACT,GAAAk2C,EAIA,IADA3kC,EAAAg8B,EAAAt3C,GAAAyc,GAAAtc,OACAoJ,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/B+tC,EAAAt3C,GAAAkpC,aAAA3/B,GAAA+tC,EAAAt3C,GAAAyc,GAAAlT,QAJA+tC,EAAAt3C,GAAA9F,KAAAslD,mBAAAn6C,EAAArF,IAOA9F,KAAA2kD,aAAAx5C,EAAArF,GAAAyc,GAAA66B,EAAAt3C,GAAAyc,GAAA66B,EAAAt3C,GAAAkpC,aAAAoO,EAAAt3C,GAAAmpC,GAAAlB,EAAA,EAAA2X,EAAA3kD,GACAoK,EAAArF,GAAA60B,SACAt6B,EAAA+kB,YAAAg4B,EAAAt3C,GAAAmpC,QAES,MAAA9jC,EAAArF,GAAA+J,IACTk2C,IACA3I,EAAAt3C,GAAA9F,KAAAulD,uBAAAp6C,EAAArF,GAAAzF,IAEAwlD,EAAAzI,EAAAt3C,GAAAiK,UACA21C,EAAA/6C,KAAAk7C,IACS,MAAA16C,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IACTk2C,IACA3I,EAAAt3C,GAAA9F,KAAAylD,mBAAAt6C,EAAArF,GAAA4/C,EAAA3X,IAEA/tC,KAAA4lD,iBAAAxI,EAAAt3C,KAES,MAAAqF,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IACTk2C,GAMAD,EAAA1I,EAAAt3C,IACA8X,QAAA,IANAkoC,EAAA9wB,eAAAG,YAAAhqB,EAAArF,GAAA+J,KACA8hB,KAAA3xB,KAAAmL,EAAArF,IACAs3C,EAAAt3C,GAAAggD,EACA9lD,KAAAm9C,eAAAxyC,KAAAm7C,IAKAG,EAAAt7C,KAAAm7C,IACS,MAAA36C,EAAArF,GAAA+J,KACTk2C,GAOAD,EAAA1I,EAAAt3C,IACA8X,QAAA,GAPAkoC,EAAA9wB,eAAAG,YAAAhqB,EAAArF,GAAA+J,IACAutC,EAAAt3C,GAAAggD,EACAA,EAAAn0B,KAAA3xB,KAAAmL,EAAArF,EAAAs3C,GACAp9C,KAAAm9C,eAAAxyC,KAAAm7C,GACA/kD,GAAA,GAKAklD,EAAAt7C,KAAAm7C,IAEA9lD,KAAAqiD,oBAAAl3C,EAAArF,KAAA,GAGA,IADAE,EAAAggD,EAAA//C,OACAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClBkgD,EAAAlgD,GAAA8X,QAAA,EAGA,IADA5X,EAAAigD,EAAAhgD,OACAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClBmgD,EAAAngD,GAAA8X,QAAA,GAIA+zB,gBAAAvnC,UAAAmvC,mBAAA,WACAv5C,KAAAiiD,kBACA,IAAAn8C,EAAAE,EAAAhG,KAAAk9C,WAAAj3C,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB9F,KAAAk9C,WAAAp3C,GAAAkI,QAIA,IAFAhO,KAAAkmD,cAEApgD,EAAA,EAAeA,EAAAE,EAASF,GAAA,GACxB9F,KAAAk9C,WAAAp3C,GAAAoG,MAAAlM,KAAAmuB,iBACAnuB,KAAAk9C,WAAAp3C,GAAAqoC,SACAnuC,KAAAk9C,WAAAp3C,GAAAqoC,OAAAvoB,aAAA,IAAA5lB,KAAAk9C,WAAAp3C,GAAA0D,GAEAxJ,KAAAk9C,WAAAp3C,GAAA0D,EAAA,OAAAxJ,KAAAk9C,WAAAp3C,GAAA0D,GAEAxJ,KAAAk9C,WAAAp3C,GAAAooC,MAAAtoB,aAAA,IAAA5lB,KAAAk9C,WAAAp3C,GAAA0D,GAAA,UAKAmoC,gBAAAvnC,UAAA87C,YAAA,WACA,IAAApgD,EACAqgD,EADAngD,EAAAhG,KAAAs9C,iBAAAr3C,OAEA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBqgD,EAAAnmD,KAAAs9C,iBAAAx3C,IACA9F,KAAAmuB,eAAAg4B,EAAAt/C,QAAAmF,eAAA,IAAAm6C,EAAAxmD,MACAwmD,EAAAR,GAAAQ,EAAAxmD,KAAAwmD,EAAAt/C,QAAA7G,KAAAmuB,gBAKAwjB,gBAAAvnC,UAAAyzB,QAAA,WACA79B,KAAAy5C,qBACAz5C,KAAAi9C,WAAA,KACAj9C,KAAAo9C,UAAA,MA+BAG,cAAAnzC,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CACA,IAAAk6C,EAAApmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAs9C,EAAArmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAu9C,EAAAtmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,IACA/I,KAAA09C,aAAA93B,aAAA,SAAAygC,EAAA,GAAAD,EAAA,aAAAA,EAAA,QAAAC,EAAA,GAAAD,EAAA,cAAAA,EAAA,QAAAC,EAAA,GAAAD,EAAA,cAAAA,EAAA,aAAAE,EAAA,QAYAxI,cAAA1zC,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CACA,IAAAxC,EAAA1J,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAu9C,EAAAtmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA/I,KAAA09C,aAAA93B,aAAA,oBAAAlc,EAAA,eAAAA,EAAA,eAAAA,EAAA,aAAA48C,EAAA,QAgBAvI,sBAAA3zC,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CAEA,IACAq6C,EADA,GACAvmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAQAy9C,EAAAxmD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA09C,EAAA,GAAAD,EAAA,EAAAD,EACAG,EAAA,GAAAF,EAAA,EAAAD,EAEAvmD,KAAAg+C,eAAAp4B,aAAA,eAAA6gC,EAAA,IAAAC,GAMA,IAAAC,EAAA,GAAA3mD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,mBACA/I,KAAAg+C,eAAAp4B,aAAA,WAAA+gC,KAUA1I,gBAAA7zC,UAAAw8C,WAAA,WAEA,IACApkC,EAAAqkC,EAAA/gD,EAAAE,EADA8gD,EAAA9mD,KAAA8tB,KAAA0c,aAAAuc,UAAA/mD,KAAA8tB,KAAA0c,aAAAwc,WAaA,IAXA,IAAAhnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,GACA/C,EAAAhG,KAAA8tB,KAAA0U,YAAA7gB,gBAAA1b,OACAH,EAAA,GAGAE,GADAF,EAAA9F,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,GACA,GAEA89C,EAAAv7C,SAAA,MACAsa,aAAA,eACAihC,EAAAjhC,aAAA,0BACAihC,EAAAjhC,aAAA,uBACU9f,EAAAE,EAAMF,GAAA,EAChB0c,EAAAlX,SAAA,QACAu7C,EAAAzhC,YAAA5C,GACAxiB,KAAAujB,MAAA5Y,MAAyBvB,EAAAoZ,EAAAhT,EAAA1J,IAEzB,OAAA9F,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,EAAA,CACA,IAAA+L,EAAAxJ,SAAA,QACAoV,EAAAhY,kBACAoM,EAAA8Q,aAAA,KAAAlF,GACA5L,EAAA8Q,aAAA,qBACA9Q,EAAAsQ,YAAAyhC,GACA7mD,KAAA8tB,KAAAC,WAAAhH,KAAA3B,YAAAtQ,GACA,IAAA7L,EAAAqC,SAAA,KAEA,IADArC,EAAA2c,aAAA,cAAAvhB,aAAA,IAAAqc,EAAA,KACAomC,EAAA,IACA79C,EAAAmc,YAAA0hC,EAAA,IAEA9mD,KAAA8tB,KAAA0c,aAAAplB,YAAAnc,GACAjJ,KAAAkhD,OAAApsC,EACA+xC,EAAAjhC,aAAA,sBACK,OAAA5lB,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,GAAA,IAAA/I,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,EAAA,CACL,OAAA/I,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,EAEA,IADA+9C,EAAA9mD,KAAA8tB,KAAA0c,aAAAuc,UAAA/mD,KAAA8tB,KAAA0c,aAAAwc,WACAF,EAAA7gD,QACAjG,KAAA8tB,KAAA0c,aAAAxhB,YAAA89B,EAAA,IAGA9mD,KAAA8tB,KAAA0c,aAAAplB,YAAAyhC,GACA7mD,KAAA8tB,KAAA0c,aAAAyc,gBAAA,QACAJ,EAAAjhC,aAAA,iBAEA5lB,KAAAk+C,aAAA,EACAl+C,KAAAknD,WAAAL,GAGA5I,gBAAA7zC,UAAAkoC,YAAA,SAAAziB,GACA7vB,KAAAk+C,aACAl+C,KAAA4mD,aAEA,IAAA9gD,EACAgP,EAAA0N,EADAxc,EAAAhG,KAAAujB,MAAAtd,OAEA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB,QAAA9F,KAAAujB,MAAAzd,GAAA0J,IAGAsF,EAAA9U,KAAA8tB,KAAA0U,YAAA4J,SAAApsC,KAAAujB,MAAAzd,GAAA0J,GACAgT,EAAAxiB,KAAAujB,MAAAzd,GAAAsD,GACAymB,GAAA7vB,KAAAy9C,cAAAvxC,MAAA4I,EAAAjJ,KAAAK,OACAsW,EAAAoD,aAAA,IAAA9Q,EAAAi4B,UAEAld,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAAlM,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAAlM,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAAlM,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAA4I,EAAAjJ,KAAAK,MAAA,CACA,IAAAi7C,EACA,OAAAnnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,GAAA,MAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,CACA,IAAAD,EAAAhE,KAAA1B,IAAApD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,GAAA,IACAqG,EAAAtK,KAAAzB,IAAArD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,GAAA,IACAwG,EAAAiT,EAAA4kC,iBACAD,EAAA,SAAA53C,EAAAzG,EAAA,IACA,IAGAuG,EAHAg4C,EAAA93C,GAAAH,EAAAtG,GACA2vB,EAAA,IAAAz4B,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,IACAu+C,EAAAxiD,KAAAU,MAAA6hD,EAAA5uB,GAEA,IAAAppB,EAAA,EAAwBA,EAAAi4C,EAAQj4C,GAAA,EAChC83C,GAAA,OAAAnnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,QAEAo+C,GAAA,QAAA53C,EAAA,YAEA43C,EAAA,OAAAnnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA/I,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,IAEAyZ,EAAAoD,aAAA,mBAAAuhC,GAUA,IAPAt3B,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,OACAlM,KAAAknD,WAAAthC,aAAA,iBAAA5lB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,IAGA8mB,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,OACAlM,KAAAknD,WAAAthC,aAAA,UAAA5lB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,IAEA,IAAA/I,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,GAAA,IAAA/I,KAAAy9C,cAAAE,eAAA,IAAAv0C,EAAAL,KACA8mB,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAA,CACA,IAAAxC,EAAA1J,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA/I,KAAAknD,WAAAthC,aAAA,gBAAArgB,SAAA,IAAAmE,EAAA,QAAAnE,SAAA,IAAAmE,EAAA,QAAAnE,SAAA,IAAAmE,EAAA,WA8BAy0C,iBAAA/zC,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CACA,IAAAq7C,EAAAvnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAy+C,EAAAxnD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA0+C,EAAAznD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA2+C,EAAAD,EAAA,OAAAD,EAAA,OAAAD,EAAA,GACAI,EAAAF,EAAA,OAAAD,EAAA,OAAAD,EAAA,GACAK,EAAAH,EAAA,OAAAD,EAAA,OAAAD,EAAA,GACAvnD,KAAAq+C,QAAAz4B,aAAA,cAAA8hC,GACA1nD,KAAAs+C,QAAA14B,aAAA,cAAA+hC,GACA3nD,KAAAu+C,QAAA34B,aAAA,cAAAgiC,KAwCApJ,mBAAAp0C,UAAAq0C,aAAA,SAAAp/C,EAAA++C,GACA,IAAAkD,EAAAh2C,SAAAjM,GAGA,OAFAiiD,EAAA17B,aAAA,gBACAw4B,EAAAh5B,YAAAk8B,GACAA,GAGA9C,mBAAAp0C,UAAAy9C,cAAA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAWA,IAVA,IAEAnsC,EAIAosC,EANAv2B,EAAA,EAGAxuB,EAAA0B,KAAA1B,IAAA0kD,EAAAC,GACA1kD,EAAAyB,KAAAzB,IAAAykD,EAAAC,GACAK,EAAAh9C,MAAAi9C,KAAA,MAAiCpiD,OAJjC,MAMA6qB,EAAA,EACAw3B,EAAAJ,EAAAD,EACAM,EAAAR,EAAAD,EACAl2B,GAAA,KAGAu2B,GAFApsC,EAAA6V,EAAA,MACAxuB,EACAmlD,EAAA,EAAAL,EAAAD,EACSlsC,GAAA1Y,EACTklD,EAAA,EAAAN,EAAAC,EAEAD,EAAAK,EAAAxjD,KAAAI,KAAA6W,EAAA+rC,GAAAS,EAAA,EAAAP,GAEAI,EAAAt3B,KAAAq3B,EACAv2B,GAAA,QAEA,OAAAw2B,EAAAI,KAAA,MAGAhK,mBAAAp0C,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CACA,IAAA/F,EACAw3C,EAAA39C,KAAAy9C,cAAAE,eACA39C,KAAA2+C,kBAAA9uB,GAAA8tB,EAAA,GAAAv0C,EAAA8C,MAAAyxC,EAAA,GAAAv0C,EAAA8C,MAAAyxC,EAAA,GAAAv0C,EAAA8C,MAAAyxC,EAAA,GAAAv0C,EAAA8C,MAAAyxC,EAAA,GAAAv0C,EAAA8C,QACA/F,EAAAnG,KAAA6nD,cAAAlK,EAAA,GAAAv0C,EAAAL,EAAA40C,EAAA,GAAAv0C,EAAAL,EAAA40C,EAAA,GAAAv0C,EAAAL,EAAA40C,EAAA,GAAAv0C,EAAAL,EAAA40C,EAAA,GAAAv0C,EAAAL,GACA/I,KAAA2+C,gBAAA/4B,aAAA,cAAAzf,GACAnG,KAAA4+C,gBAAAh5B,aAAA,cAAAzf,GACAnG,KAAA6+C,gBAAAj5B,aAAA,cAAAzf,IAIAnG,KAAAq+C,UAAAxuB,GAAA8tB,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,QACA/F,EAAAnG,KAAA6nD,cAAAlK,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,GACA/I,KAAAq+C,QAAAz4B,aAAA,cAAAzf,IAGAnG,KAAAs+C,UAAAzuB,GAAA8tB,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,QACA/F,EAAAnG,KAAA6nD,cAAAlK,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,GACA/I,KAAAs+C,QAAA14B,aAAA,cAAAzf,IAGAnG,KAAAu+C,UAAA1uB,GAAA8tB,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,QACA/F,EAAAnG,KAAA6nD,cAAAlK,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,GACA/I,KAAAu+C,QAAA34B,aAAA,cAAAzf,IAGAnG,KAAA0+C,UAAA7uB,GAAA8tB,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,MAAAyxC,EAAA,IAAAv0C,EAAA8C,QACA/F,EAAAnG,KAAA6nD,cAAAlK,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,EAAA40C,EAAA,IAAAv0C,EAAAL,GACA/I,KAAA0+C,QAAA94B,aAAA,cAAAzf,MAsDA24C,oBAAA10C,UAAAkoC,YAAA,SAAAziB,GACA,GAAAA,GAAA7vB,KAAAy9C,cAAAvxC,KAAA,CAIA,IAHA2jB,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,OACAlM,KAAAg+C,eAAAp4B,aAAA,eAAA5lB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,GAEA8mB,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,KAAA,CACA,IAAAu8C,EAAAzoD,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACA/I,KAAAg/C,QAAAp5B,aAAA,cAAA7b,SAAAjF,KAAAC,MAAA,IAAA0jD,EAAA,IAAA3jD,KAAAC,MAAA,IAAA0jD,EAAA,IAAA3jD,KAAAC,MAAA,IAAA0jD,EAAA,MAKA,IAHA54B,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,OACAlM,KAAAg/C,QAAAp5B,aAAA,gBAAA5lB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,KAEA8mB,GAAA7vB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,MAAAlM,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAA8C,KAAA,CACA,IAAA+sB,EAAAj5B,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAmF,GAAAlO,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EAAA,IAAAxC,UACAkM,EAAAwmB,EAAAn0B,KAAA4I,IAAAQ,GACAwE,EAAAumB,EAAAn0B,KAAA8I,IAAAM,GACAlO,KAAA++C,SAAAn5B,aAAA,KAAAnT,GACAzS,KAAA++C,SAAAn5B,aAAA,KAAAlT,MAaA,IAAAg2C,oBAEA,SAAAC,gBAAAC,EAAAnL,EAAA3vB,GACA9tB,KAAAk+C,aAAA,EACAl+C,KAAAy9C,gBACAz9C,KAAA4oD,aACA5oD,KAAA8tB,OACAA,EAAA+yB,aAAAv1C,SAAA,KACAwiB,EAAA+yB,aAAAz7B,YAAA0I,EAAA0c,cACA1c,EAAA+yB,aAAAz7B,YAAA0I,EAAAgzB,oBACAhzB,EAAAurB,YAAAvrB,EAAA+yB,aAiFA,SAAAgB,WAAA/zB,GACA,IAAAhoB,EAKA23C,EALAz3C,EAAA8nB,EAAAnuB,KAAAkpD,GAAA/6B,EAAAnuB,KAAAkpD,GAAA5iD,OAAA,EACAi4B,EAAAx1B,kBACAy1B,EAAAH,eAAAC,aAAAC,GACAnnB,EAAA,EAGA,IAFA/W,KAAA8oD,WAEAhjD,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB23C,EAAA,KACA,KAAA3vB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,IACAkH,GAAA,EACA0mC,EAAA,IAAAF,cAAApf,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,IACTkH,GAAA,EACA0mC,EAAA,IAAAK,cAAA3f,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,GACT4tC,EAAA,IAAAQ,gBAAAnwB,IAAA4yB,eAAA/C,eAAA73C,IACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,IACTkH,GAAA,EACA0mC,EAAA,IAAAU,iBAAAhgB,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,IACTkH,GAAA,EACA0mC,EAAA,IAAAe,mBAAArgB,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,IACTkH,GAAA,EACA0mC,EAAA,IAAAqB,oBAAA3gB,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KACS,KAAAgoB,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,GAET4tC,EAAA,IAAAkL,gBAAAxqB,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,GAAAgoB,GACS,KAAAA,EAAAnuB,KAAAkpD,GAAA/iD,GAAA+J,KACTkH,GAAA,EACA0mC,EAAA,IAAAM,sBAAA5f,EAAArQ,EAAA4yB,eAAA/C,eAAA73C,KAEA23C,GACAz9C,KAAA8oD,QAAAn+C,KAAA8yC,GAGA1mC,IACA+W,EAAAC,WAAAhH,KAAA3B,YAAA+Y,GACArQ,EAAA0c,aAAA5kB,aAAA,gBAAAvhB,aAAA,IAAA65B,EAAA,MAEAl+B,KAAA8oD,QAAA7iD,QACA6nB,EAAAyf,uBAAAvtC,MAUA,SAAA6rC,gBACA7rC,KAAAg0C,SACAh0C,KAAA8zC,QAAA,EACA9zC,KAAAqzC,IAAA,IAAA7lC,OACAxN,KAAA0zC,GAAA,EACA,IAAA5tC,EAEA,IADA9F,KAAAi0C,QAAAlpC,iBAAA,UADA,IAEAjF,EAAA,EAAYA,EAFZ,GAEkBA,GAAA,EAClB9F,KAAAg0C,MAAAluC,GAAAiF,iBAAA,cAEA/K,KAAAge,QALA,GAyBA,SAAA+qC,iBAiEA,SAAA/V,eAAArzC,EAAAouB,EAAAV,GACArtB,KAAA68B,UAAA9O,EAAAsjB,aAAA1xC,EAAAmiB,OACA9hB,KAAAm9B,IAAApP,EAAAujB,YAAA1T,SAAA59B,KAAA68B,WACA78B,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAyCA,SAAA4lB,cAAAtzC,EAAAouB,EAAAV,GACArtB,KAAA+gB,gBAAA,EACA/gB,KAAAghB,OAAArhB,EAAAqhB,OACAhhB,KAAAkrC,mBACAlrC,KAAAq6B,SAAAh0B,iBAAArG,KAAAghB,OAAA/a,QACAjG,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GACArtB,KAAA88C,GAAAn9C,EAAAm9C,GAAA7zB,gBAAAuF,QAAAxuB,KAAAL,EAAAm9C,GAAA,EAAA/uB,EAAAmC,UAAAlwB,OAA8F+8C,cAAA,GAiC9F,SAAAiM,cAAArpD,EAAAkH,GACA7G,KAAAL,OACAK,KAAA6G,UACA7G,KAAA2hB,gBAAA3hB,KAAAL,KAAAgiB,oBACA3hB,KAAAosC,SAAA/lC,iBAAArG,KAAA2hB,gBAAA1b,QACA,IAAAH,EAAAE,EAAAhG,KAAA2hB,gBAAA1b,OAAAgjD,GAAA,EACA,IAAAnjD,EAAA,EAAeA,EAAAE,EAASF,IACxB,MAAA9F,KAAA2hB,gBAAA7b,GAAAyH,OACA07C,GAAA,GAEAjpD,KAAAosC,SAAAtmC,GAAA+rB,qBAAAgD,aAAA70B,KAAA6G,QAAA7G,KAAA2hB,gBAAA7b,GAAA,GAEA9F,KAAAipD,WACAA,GACAjpD,KAAA6G,QAAA0mC,uBAAAvtC,MA2CA,SAAA8yC,eAAAnzC,EAAAouB,EAAAV,GACArtB,KAAAgiB,UACAhiB,KAAAi9C,WAAAt9C,EAAAqiB,OACAhiB,KAAAk9C,cACAl9C,KAAAo9C,aACAp9C,KAAAgvC,gBACAhvC,KAAAm9C,kBACAn9C,KAAAq9C,qBACAr9C,KAAAm8C,kBAAA,IAAAL,sBACA97C,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAkcA,SAAA6lB,eAAAvzC,EAAAouB,EAAAV,GACArtB,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAaA,SAAA0lB,cAAApzC,EAAAouB,EAAAV,GACArtB,KAAAg9C,aACAh9C,KAAAgiC,QAAA,EACAhiC,KAAA6hC,eAAA,EACA7hC,KAAA8hC,iBAAA,EACA9hC,KAAA+hC,iBAAA,EACA/hC,KAAAkpD,QAAA,EACAlpD,KAAAmpD,MAAA,EACAnpD,KAAAuhC,cAAA,EACAvhC,KAAAopD,cAAA,KACAppD,KAAAu/B,WAAA,SACAv/B,KAAA+sB,QACAo8B,KAAA,gBACAD,OAAA,gBACAG,OAAA,EACAC,OAAA,IAEAtpD,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GA8KA,SAAAk8B,aAIA,SAAAC,aAAA7pD,EAAAouB,EAAAV,IAyEA,SAAAwoB,cAAAl2C,EAAAouB,EAAAV,GACArtB,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAsBA,SAAAuoB,aAAAj2C,EAAAouB,EAAAV,GACArtB,KAAAghB,OAAArhB,EAAAqhB,OACAhhB,KAAAksC,YAAAvsC,EAAA8hB,QACAzhB,KAAA+gB,gBAAA,EACA/gB,KAAAkrC,mBACAlrC,KAAAq6B,SAAAr6B,KAAAghB,OAAA3a,iBAAArG,KAAAghB,OAAA/a,WACAjG,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GACArtB,KAAA88C,GAAAn9C,EAAAm9C,GAAA7zB,gBAAAuF,QAAAxuB,KAAAL,EAAAm9C,GAAA,EAAA/uB,EAAAmC,UAAAlwB,OAA6F+8C,cAAA,GAkC7F,SAAAvH,cAAA71C,EAAAouB,EAAAV,GAEArtB,KAAAgiB,UAEAhiB,KAAAi9C,WAAAt9C,EAAAqiB,OAEAhiB,KAAAk9C,cAEAl9C,KAAAm9C,kBAEAn9C,KAAAo9C,aAEAp9C,KAAAq9C,qBAEAr9C,KAAAs9C,oBACAt9C,KAAAypD,gBAAAn+C,SAAA,KACAtL,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GAGArtB,KAAAgvC,gBACAhvC,KAAA0pD,aACAj3C,EAAA,OACAC,GAAA,OACA7J,EAAA,EACAwb,EAAA,GAmMA,SAAAoxB,aAAA91C,EAAAouB,EAAAV,GACArtB,KAAAg9C,aACAh9C,KAAA2pD,aACA3pD,KAAA0pD,aACAj3C,EAAA,OACAC,GAAA,OACA7J,EAAA,EACAwb,EAAA,GAEArkB,KAAAu/B,WAAA,MACAv/B,KAAA4pD,UAAA,EACA5pD,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GA8OA,SAAAsoB,cAAAh2C,EAAAouB,EAAAV,GACArtB,KAAA68B,UAAA9O,EAAAsjB,aAAA1xC,EAAAmiB,OACA9hB,KAAA+4C,YAAAp5C,EAAAouB,EAAAV,GA0BA,SAAAqoB,eAAA/1C,EAAAouB,EAAAV,GACArtB,KAAAkpB,YACAlpB,KAAAg5C,aAAAr5C,EAAAouB,EAAAV,GACArtB,KAAAs3C,gBACA,IAAA9oB,EAAAvF,gBAAAuF,QAYA,GAXAxuB,KAAA6pD,GAAAr7B,EAAAxuB,KAAAL,EAAAkqD,GAAA,IAAA7pD,MACAL,EAAA2iB,GAAAlZ,EAAAN,GACA9I,KAAAivB,GAAAT,EAAAxuB,KAAAL,EAAA2iB,GAAAlZ,EAAAqJ,EAAA,IAAAzS,MACAA,KAAAkvB,GAAAV,EAAAxuB,KAAAL,EAAA2iB,GAAAlZ,EAAAsJ,EAAA,IAAA1S,MACAA,KAAAmvB,GAAAX,EAAAxuB,KAAAL,EAAA2iB,GAAAlZ,EAAAuJ,EAAA,IAAA3S,OAEAA,KAAAoJ,EAAAolB,EAAAxuB,KAAAL,EAAA2iB,GAAAlZ,EAAA,IAAApJ,MAEAL,EAAA2iB,GAAAniB,IACAH,KAAAG,EAAAquB,EAAAxuB,KAAAL,EAAA2iB,GAAAniB,EAAA,IAAAH,OAEAL,EAAA2iB,GAAAiN,GAAAjgB,EAAArJ,QAAAtG,EAAA2iB,GAAAiN,GAAAjgB,EAAA,GAAAsb,GAAA,CACA,IAAA9kB,EAAAE,EAAArG,EAAA2iB,GAAAiN,GAAAjgB,EAAArJ,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtBnG,EAAA2iB,GAAAiN,GAAAjgB,EAAAxJ,GAAA8kB,GAAA,KACAjrB,EAAA2iB,GAAAiN,GAAAjgB,EAAAxJ,GAAA+kB,GAAA,KAGA7qB,KAAAuvB,GAAAf,EAAAxuB,KAAAL,EAAA2iB,GAAAiN,GAAA,EAAAhpB,UAAAvG,MACAA,KAAAuvB,GAAA5D,IAAA,EACA3rB,KAAAovB,GAAAZ,EAAAxuB,KAAAL,EAAA2iB,GAAA8M,GAAA,EAAA7oB,UAAAvG,MACAA,KAAAqvB,GAAAb,EAAAxuB,KAAAL,EAAA2iB,GAAA+M,GAAA,EAAA9oB,UAAAvG,MACAA,KAAAsvB,GAAAd,EAAAxuB,KAAAL,EAAA2iB,GAAAgN,GAAA,EAAA/oB,UAAAvG,MACAA,KAAA4vB,IAAA,IAAApiB,OACAxN,KAAA8pD,SAAA,IAAAt8C,OACAxN,KAAAmuB,eAAA,EAGAnuB,KAAAi3C,gBACAC,MAAAl3C,MAyGA,SAAA+pD,YA7wDApB,gBAAAv+C,UAAA4/C,WAAA,SAAAl1C,GAEA,IADA,IAAAhP,EAAA,EAAAE,EAAA0iD,iBAAAziD,OACAH,EAAAE,GAAA,CACA,GAAA0iD,iBAAA5iD,KAAAgP,EACA,OAAA4zC,iBAAA5iD,GAEAA,GAAA,EAEA,aAGA6iD,gBAAAv+C,UAAA6/C,gBAAA,SAAAn1C,EAAAo1C,GACA,IAAAvlC,EAAA7P,EAAA01B,aAAA7lB,WACA,GAAAA,EAAA,CAKA,IAFA,IAQAwlC,EARApD,EAAApiC,EAAAoiC,SACAjhD,EAAA,EAAAE,EAAA+gD,EAAA9gD,OACAH,EAAAE,GACA+gD,EAAAjhD,KAAAgP,EAAA01B,cAGA1kC,GAAA,EAGAA,GAAAE,EAAA,IACAmkD,EAAApD,EAAAjhD,EAAA,IAEA,IAAAskD,EAAA9+C,SAAA,OACA8+C,EAAAxkC,aAAA,WAAAskC,GACAC,EACAxlC,EAAAguB,aAAAyX,EAAAD,GAEAxlC,EAAAS,YAAAglC,KAIAzB,gBAAAv+C,UAAAigD,iBAAA,SAAAv8B,EAAAhZ,GACA,IAAA9U,KAAAgqD,WAAAl1C,GAAA,CACA,IAAAo1C,EAAAxhD,kBACAw4C,EAAA51C,SAAA,QACA41C,EAAAt7B,aAAA,KAAA9Q,EAAA63B,SACAuU,EAAAt7B,aAAA,qBACA8iC,iBAAA/9C,KAAAmK,GACA,IAAAiS,EAAA+G,EAAAC,WAAAhH,KACAA,EAAA3B,YAAA87B,GACA,IAAAoJ,EAAAh/C,SAAA,UACAg/C,EAAA1kC,aAAA,KAAAskC,GACAlqD,KAAAiqD,gBAAAn1C,EAAAo1C,GACAI,EAAAllC,YAAAtQ,EAAA01B,cACAzjB,EAAA3B,YAAAklC,GACA,IAAAF,EAAA9+C,SAAA,OACA8+C,EAAAxkC,aAAA,WAAAskC,GACAhJ,EAAA97B,YAAAglC,GACAt1C,EAAAnV,KAAAsuC,IAAA,EACAn5B,EAAA+9B,OAEA/kB,EAAAskB,SAAAt9B,EAAA63B,UAGAgc,gBAAAv+C,UAAAw8C,WAAA,WAIA,IAHA,IAAA97B,EAAA9qB,KAAAy9C,cAAAE,eAAA,GAAAv0C,EAAAL,EACAsxB,EAAAr6B,KAAA8tB,KAAAT,KAAAgN,SACAv0B,EAAA,EAAAE,EAAAq0B,EAAAp0B,OACAH,EAAAE,GACAq0B,EAAAv0B,IAAAu0B,EAAAv0B,GAAAnG,KAAAmrB,SACA9qB,KAAAqqD,iBAAArqD,KAAA8tB,KAAAuM,EAAAv0B,IAEAA,GAAA,EAEA9F,KAAAk+C,aAAA,GAGAyK,gBAAAv+C,UAAAkoC,YAAA,WACAtyC,KAAAk+C,aACAl+C,KAAA4mD,cAiDA/E,WAAAz3C,UAAAkoC,YAAA,SAAAnkB,GACA,IAAAroB,EAAAE,EAAAhG,KAAA8oD,QAAA7iD,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB9F,KAAA8oD,QAAAhjD,GAAAwsC,YAAAnkB,IAgBA0d,cAAAzhC,UAAA2pC,UAAA,WACA,IAAAwW,EAAA,EAAAvqD,KAAAge,QACAwsC,EAAAxqD,KAAAi0C,QACAj0C,KAAAi0C,QAAAlpC,iBAAA,UAAAw/C,GACAvqD,KAAAi0C,QAAAwW,IAAAD,GACA,IAAA1kD,EAAA,EACA,IAAAA,EAAA9F,KAAAge,QAAyBlY,EAAAykD,EAAezkD,GAAA,EACxC9F,KAAAg0C,MAAAluC,GAAAiF,iBAAA,cAEA/K,KAAAge,QAAAusC,GAGA1e,cAAAzhC,UAAA4D,MAAA,WACAhO,KAAA8zC,QAAA,EACA9zC,KAAAqzC,IAAArlC,QACAhO,KAAA0zC,GAAA,GAKAqV,cAAA3+C,WACAsgD,eAAA,aACAzR,oBAAA,aACAC,wBAAA,WACAl5C,KAAAuzC,cAAAvzC,KAAA+tB,WAAAwlB,cACAvzC,KAAA4hD,yBAAA,IAAA2H,UAAAvpD,OAEAo5C,cAAA,aACAkH,aAAA,WACA,IAAAvyB,EAAA/tB,KAAA+tB,WACA,GAAAA,EAAAmmB,YAAAl0C,KAAAL,KAAA6gD,GAAA,CACAzyB,EAAAmmB,UAAAl0C,KAAAL,KAAA6gD,GACA,IAAAD,EAAAl0C,aAAArM,KAAAL,KAAA6gD,IACAzyB,EAAAwlB,cAAAoX,yBAAApK,IAGApH,2BAAA,WACAn5C,KAAAwiC,YAAA,IAAAwmB,cAAAhpD,KAAAL,KAAAK,OAEA4qD,YAAA,WACA5qD,KAAAo4C,QAAAp4C,KAAAm4C,YAAAn4C,KAAAq4C,gBACAr4C,KAAAo4C,QAAA,IAGAyS,YAAA,WACA7qD,KAAAm4C,YAAAn4C,KAAAq4C,gBACAr4C,KAAAo4C,QAAA,EACAp4C,KAAAmuB,eAAA,EACAnuB,KAAAwiC,YAAArU,eAAA,IAGAmkB,YAAA,WACA,IAAAtyC,KAAAo4C,SAAAp4C,KAAAL,KAAAsuC,GAAA,CAGAjuC,KAAA83C,kBACA93C,KAAA44C,mBACA54C,KAAAsgD,eACA,IAAAwK,EAAA,IAAA9qD,KAAAL,KAAAkQ,GACA7P,KAAA+tB,WAAAvtB,SAAAozC,KAAAkX,GACA9qD,KAAA+tB,WAAAvtB,SAAA2yC,aAAAnzC,KAAAi3C,eAAArnB,IAAAzwB,OACAa,KAAA+tB,WAAAvtB,SAAAgzC,WAAAxzC,KAAAi3C,eAAAC,MAAAxnC,EAAA3G,GACA/I,KAAAu5C,qBACAv5C,KAAA+tB,WAAAvtB,SAAAmzC,QAAAmX,GACA9qD,KAAAwiC,YAAAymB,UACAjpD,KAAA+tB,WAAAvtB,SAAAmzC,SAAA,GAEA3zC,KAAAmuB,gBACAnuB,KAAAmuB,eAAA,KAGA0P,QAAA,WACA79B,KAAAuzC,cAAA,KACAvzC,KAAAL,KAAA,KACAK,KAAA+tB,WAAA,KACA/tB,KAAAwiC,YAAA3E,WAEAyF,QAAA,IAAA91B,QAEAu7C,cAAA3+C,UAAAwoC,KAAAmW,cAAA3+C,UAAAwgD,YACA7B,cAAA3+C,UAAAyoC,KAAAkW,cAAA3+C,UAAAygD,YAOArwC,iBAAAgiC,YAAA9O,iBAAAqb,cAAAvb,iBAAAC,aAAAE,mBAAAqF,gBAEAA,eAAA5oC,UAAA2uC,YAAApH,gBAAAvnC,UAAA2uC,YACA/F,eAAA5oC,UAAAooC,aAAAX,cAAAznC,UAAAooC,aAEAQ,eAAA5oC,UAAAgvC,cAAA,WAEA,GAAAp5C,KAAAm9B,IAAAz9B,QAAAM,KAAA68B,UAAAxY,IAAArkB,KAAAm9B,IAAAz9B,OAAAM,KAAA68B,UAAAh0B,IAAA7I,KAAAm9B,IAAA39B,QAAA,CACA,IAAA48B,EAAA3wB,UAAA,UACA2wB,EAAA18B,MAAAM,KAAA68B,UAAAxY,EACA+X,EAAA58B,OAAAQ,KAAA68B,UAAAh0B,EACA,IAMAkiD,EAAAC,EANA3uB,EAAAD,EAAAlW,WAAA,MAEA+kC,EAAAjrD,KAAAm9B,IAAAz9B,MACAwrD,EAAAlrD,KAAAm9B,IAAA39B,OACA2rD,EAAAF,EAAAC,EACAE,EAAAprD,KAAA68B,UAAAxY,EAAArkB,KAAA68B,UAAAh0B,EAEA+rC,EAAA50C,KAAA68B,UAAAymB,IAAAtjD,KAAA+tB,WAAA0c,aAAAE,yBACAwgB,EAAAC,GAAA,mBAAAxW,GAAAuW,EAAAC,GAAA,mBAAAxW,EAEAmW,GADAC,EAAAE,GACAE,EAGAJ,GADAD,EAAAE,GACAG,EAEA/uB,EAAAgvB,UAAArrD,KAAAm9B,KAAA8tB,EAAAF,GAAA,GAAAG,EAAAF,GAAA,EAAAD,EAAAC,EAAA,IAAAhrD,KAAA68B,UAAAxY,EAAArkB,KAAA68B,UAAAh0B,GACA7I,KAAAm9B,IAAAf,IAKA4W,eAAA5oC,UAAAmvC,mBAAA,SAAA+R,GACAtrD,KAAAuzC,cAAA8X,UAAArrD,KAAAm9B,IAAA,MAGA6V,eAAA5oC,UAAAyzB,QAAA,WACA79B,KAAAm9B,IAAA,MAWA3iB,iBAAA6wB,eAAAuR,aAAAmM,eAAA9V,eAEAA,cAAA7oC,UAAAmvC,mBAAA,WACA,IAQAzzC,EARAu2B,EAAAr8B,KAAAuzC,cASA,IARAlX,EAAAyY,YACAzY,EAAAkvB,OAAA,KACAlvB,EAAAmvB,OAAAxrD,KAAAL,KAAA0kB,EAAA,GACAgY,EAAAmvB,OAAAxrD,KAAAL,KAAA0kB,EAAArkB,KAAAL,KAAAkJ,GACAwzB,EAAAmvB,OAAA,EAAAxrD,KAAAL,KAAAkJ,GACAwzB,EAAAmvB,OAAA,KACAnvB,EAAA2Y,OAEAlvC,EADA9F,KAAAghB,OAAA/a,OACA,EAAqBH,GAAA,EAAQA,GAAA,GAC7B9F,KAAA+gB,gBAAA/gB,KAAAq6B,SAAAv0B,KACA9F,KAAAq6B,SAAAv0B,GAAAwsC,eAKAW,cAAA7oC,UAAAyzB,QAAA,WACA,IAAA/3B,EACA,IAAAA,EADA9F,KAAAghB,OAAA/a,OACA,EAAqBH,GAAA,EAAQA,GAAA,EAC7B9F,KAAAq6B,SAAAv0B,IACA9F,KAAAq6B,SAAAv0B,GAAA+3B,UAGA79B,KAAAghB,OAAA,KACAhhB,KAAAq6B,SAAA,MAqBA2uB,cAAA5+C,UAAAkoC,YAAA,WACA,GAAAtyC,KAAAipD,SAAA,CAGA,IAEAnjD,EACAqN,EAAAG,EAAA3T,EAHAoQ,EAAA/P,KAAA6G,QAAAowC,eAAArnB,IACAyM,EAAAr8B,KAAA6G,QAAA0sC,cACAvtC,EAAAhG,KAAA2hB,gBAAA1b,OAGA,IADAo2B,EAAAyY,YACAhvC,EAAA,EAAeA,EAAAE,EAASF,IACxB,SAAA9F,KAAA2hB,gBAAA7b,GAAAyH,KAAA,CACAvN,KAAA2hB,gBAAA7b,GAAA8zB,MACAyC,EAAAkvB,OAAA,KACAlvB,EAAAmvB,OAAAxrD,KAAA6G,QAAAknB,WAAA0jB,SAAAptB,EAAA,GACAgY,EAAAmvB,OAAAxrD,KAAA6G,QAAAknB,WAAA0jB,SAAAptB,EAAArkB,KAAA6G,QAAAknB,WAAA0jB,SAAA5oC,GACAwzB,EAAAmvB,OAAA,EAAAxrD,KAAA6G,QAAAknB,WAAA0jB,SAAA5oC,GACAwzB,EAAAmvB,OAAA,MAEA7rD,EAAAK,KAAAosC,SAAAtmC,GAAAiD,EACAoK,EAAApD,EAAAqD,kBAAAzT,EAAAoJ,EAAA,MAAApJ,EAAAoJ,EAAA,SACAszB,EAAAkvB,OAAAp4C,EAAA,GAAAA,EAAA,IACA,IAAA9D,EAAA+R,EAAAzhB,EAAAqe,QACA,IAAA3O,EAAA,EAAuBA,EAAA+R,EAAU/R,IACjCiE,EAAAvD,EAAAyD,oBAAA7T,EAAA+P,EAAAL,EAAA,GAAA1P,EAAAmG,EAAAuJ,GAAA1P,EAAAoJ,EAAAsG,IACAgtB,EAAAovB,cAAAn4C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,EAAAvD,EAAAyD,oBAAA7T,EAAA+P,EAAAL,EAAA,GAAA1P,EAAAmG,EAAA,GAAAnG,EAAAoJ,EAAA,IACAszB,EAAAovB,cAAAn4C,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAGAtT,KAAA6G,QAAAknB,WAAAvtB,SAAAozC,MAAA,GACAvX,EAAA2Y,SAGAgU,cAAA5+C,UAAAq4B,gBAAA0J,YAAA/hC,UAAAq4B,gBAEAumB,cAAA5+C,UAAAyzB,QAAA,WACA79B,KAAA6G,QAAA,MAcA2T,iBAAAgiC,YAAA9O,iBAAAqb,cAAArM,cAAAlP,iBAAAC,aAAAE,mBAAAmF,gBAEAA,eAAA1oC,UAAA2uC,YAAAnL,qBAAAxjC,UAAA2uC,YAEAjG,eAAA1oC,UAAAshD,iBAA4CpF,QAAA,EAAA1O,QAAA,GAE5C9E,eAAA1oC,UAAAuhD,gBAEA7Y,eAAA1oC,UAAAgvC,cAAA,WACAp5C,KAAA2kD,aAAA3kD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAgvC,cAAA,OAGA8D,eAAA1oC,UAAA46C,mBAAA,SAAArlD,EAAAq4C,GACA,IAAAkD,GACAv7C,OACAN,KAAAM,EAAAkQ,GACA+7C,cAAA5rD,KAAAm8C,kBAAAG,qBAAAtE,GACAA,cACA3d,YACAzc,QAAA,IAAAje,EAAAsuC,IAEAgX,KAcA,GAbA,MAAAtlD,EAAAkQ,IAAA,MAAAlQ,EAAAkQ,IACAo1C,EAAA91C,EAAA8Z,gBAAAuF,QAAAxuB,KAAAL,EAAAwP,EAAA,MAAAnP,MACAilD,EAAA91C,EAAAG,IACA4rC,EAAA2Q,GAAA,OAAAtmD,SAAA0/C,EAAA91C,EAAApG,EAAA,QAAAxD,SAAA0/C,EAAA91C,EAAApG,EAAA,QAAAxD,SAAA0/C,EAAA91C,EAAApG,EAAA,UAEK,OAAApJ,EAAAkQ,IAAA,OAAAlQ,EAAAkQ,KACLo1C,EAAAn8C,EAAAmgB,gBAAAuF,QAAAxuB,KAAAL,EAAAmJ,EAAA,OAAA9I,MACAilD,EAAA71C,EAAA6Z,gBAAAuF,QAAAxuB,KAAAL,EAAAyP,EAAA,OAAApP,MACAilD,EAAAp8C,EAAAogB,gBAAAuF,QAAAxuB,KAAAL,EAAAkJ,IAA8DyG,EAAA,GAAI,MAAAtP,MAClEilD,EAAA9kD,EAAA8oB,gBAAAuF,QAAAxuB,KAAAL,EAAAQ,IAA8DmP,EAAA,GAAI,EAAA/I,UAAAvG,MAClEilD,EAAAh8C,EAAA,IAAA6sB,iBAAA91B,KAAAL,EAAAsJ,EAAAjJ,OAEAilD,EAAAv1C,EAAAuZ,gBAAAuF,QAAAxuB,KAAAL,EAAA+P,EAAA,MAAA1P,MACA,MAAAL,EAAAkQ,IAAA,MAAAlQ,EAAAkQ,IAUA,GATAqrC,EAAAgK,GAAAllD,KAAAkiD,OAAAviD,EAAAulD,KAAA,QACAhK,EAAAiK,GAAAnlD,KAAAmiD,OAAAxiD,EAAAwlD,KAAA,QACA,GAAAxlD,EAAAwlD,KACAjK,EAAAkK,GAAAzlD,EAAAylD,IAEAH,EAAA5gC,EAAA4E,gBAAAuF,QAAAxuB,KAAAL,EAAA0kB,EAAA,OAAArkB,MACAilD,EAAA5gC,EAAA/U,IACA4rC,EAAA4Q,GAAA7G,EAAA5gC,EAAAtb,GAEApJ,EAAA6J,EAAA,CACA,IAAAA,EAAA,IAAAisB,aAAAz1B,KAAAL,EAAA6J,EAAA,SAAAxJ,MACAilD,EAAAz7C,IACAy7C,EAAAz7C,EAAA8F,IACA4rC,EAAA6Q,GAAA9G,EAAAz7C,EAAAosB,UACAslB,EAAA8Q,GAAA/G,EAAAz7C,EAAAqsB,WAAA,UAIAqlB,EAAAlyC,EAAA,IAAArJ,EAAAqJ,EAAA,oBAIA,OAFAhJ,KAAAk9C,WAAAvyC,KAAAuwC,GACA+J,EAAArlD,MAAAs7C,EACA+J,GAGAnS,eAAA1oC,UAAAk7C,mBAAA,SAAA3lD,GAKA,OAHA4iB,MACAysB,kBAKA8D,eAAA1oC,UAAAm7C,uBAAA,SAAA5lD,GAUA,OARAoQ,WACAu2C,QAAA,EACA1O,QAAA,EACAxiC,IAAApV,KAAAm8C,kBAAAmD,YACA3jB,GAAA1S,gBAAAuF,QAAAxuB,KAAAL,EAAA+P,EAAA,MAAA1P,MACA07B,OAAA9M,yBAAA0B,qBAAAtwB,KAAAL,EAAAK,SAMA8yC,eAAA1oC,UAAAq7C,mBAAA,SAAA9lD,GACA,IAAAslD,EAAA,IAAA/I,YAAAl8C,KAAAL,EAAAK,KAAAk9C,WAAAl9C,KAAAm8C,mBAIA,OAFAn8C,KAAAgiB,OAAArX,KAAAs6C,GACAjlD,KAAA8hD,oBAAAmD,GACAA,GAGAnS,eAAA1oC,UAAA+wB,aAAA,WACAn7B,KAAAmuB,eAAA,EACA,IAAAroB,EAAAE,EAAAhG,KAAAo9C,UAAAn3C,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAAgvC,aAAAlpC,GAAA9F,KAAAo9C,UAAAt3C,GAIA,IAFA9F,KAAA2kD,aAAA3kD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAgvC,cAAA,MACAhpC,EAAAhG,KAAA8L,kBAAA7F,OACAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAA8L,kBAAAhG,GAAAqG,WAEAnM,KAAAiiD,kBACAjiD,KAAAm8C,kBAAAkD,iBAAAr/C,KAAAmuB,gBAGA2kB,eAAA1oC,UAAA6hD,wBAAA,SAAAl8C,GACA,IAAAjK,EAAAE,EAAAhG,KAAAk9C,WAAAj3C,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAAk9C,WAAAp3C,GAAA8X,QACA5d,KAAAk9C,WAAAp3C,GAAAkyC,WAAArtC,KAAAoF,IAKA+iC,eAAA1oC,UAAA8hD,6BAAA,WACA,IAAApmD,EAAAE,EAAAhG,KAAAk9C,WAAAj3C,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxB9F,KAAAk9C,WAAAp3C,GAAA8X,QACA5d,KAAAk9C,WAAAp3C,GAAAkyC,WAAAjgB,OAKA+a,eAAA1oC,UAAA+hD,YAAA,SAAAllB,GACA,IAAAnhC,EAAAE,EAAAihC,EAAAhhC,OACA,IAAAH,EAAA,EAAeA,EAAAE,EAASF,GAAA,EACxBmhC,EAAAnhC,GAAA8X,QAAA,GAIAk1B,eAAA1oC,UAAAu6C,aAAA,SAAAx5C,EAAAiyC,EAAApO,EAAAod,EAAApU,GACA,IAAAlyC,EACAuJ,EAAA+R,EACA2kC,EAAAD,EAAAD,EAFA7/C,EAAAmF,EAAAlF,OAAA,EAEA+/C,KAAAC,KACAoG,KAAAlmC,OAAA6xB,GACA,IAAAlyC,EAAAE,EAAcF,GAAA,EAAKA,GAAA,GAOnB,IANAigD,EAAA/lD,KAAAoiD,uBAAAj3C,EAAArF,KAIAs3C,EAAAt3C,GAAAkpC,EAAA+W,EAAA,GAFA56C,EAAArF,GAAAwmD,cAAAF,EAIA,MAAAjhD,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,GACAk2C,EAGA3I,EAAAt3C,GAAAlG,MAAAge,QAAA,EAFAw/B,EAAAt3C,GAAA9F,KAAAglD,mBAAA75C,EAAArF,GAAAumD,GAKArG,EAAAr7C,KAAAyyC,EAAAt3C,GAAAlG,YACS,SAAAuL,EAAArF,GAAA+J,GAAA,CACT,GAAAk2C,EAIA,IADA3kC,EAAAg8B,EAAAt3C,GAAAyc,GAAAtc,OACAoJ,EAAA,EAAwBA,EAAA+R,EAAO/R,GAAA,EAC/B+tC,EAAAt3C,GAAAkpC,aAAA3/B,GAAA+tC,EAAAt3C,GAAAyc,GAAAlT,QAJA+tC,EAAAt3C,GAAA9F,KAAAslD,mBAAAn6C,EAAArF,IAOA9F,KAAA2kD,aAAAx5C,EAAArF,GAAAyc,GAAA66B,EAAAt3C,GAAAyc,GAAA66B,EAAAt3C,GAAAkpC,aAAAod,EAAAC,OACS,MAAAlhD,EAAArF,GAAA+J,IACTk2C,IACAF,EAAA7lD,KAAAulD,uBAAAp6C,EAAArF,IACAs3C,EAAAt3C,GAAA+/C,GAEAwG,EAAA1hD,KAAAyyC,EAAAt3C,IACA9F,KAAAisD,wBAAA7O,EAAAt3C,KACS,MAAAqF,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,GACTk2C,IACA3I,EAAAt3C,GAAA9F,KAAAylD,mBAAAt6C,EAAArF,KAGS,MAAAqF,EAAArF,GAAA+J,IAAA,MAAA1E,EAAArF,GAAA+J,IACTk2C,GAMAD,EAAA1I,EAAAt3C,IACA8X,QAAA,IANAkoC,EAAA9wB,eAAAG,YAAAhqB,EAAArF,GAAA+J,KACA8hB,KAAA3xB,KAAAmL,EAAArF,IACAs3C,EAAAt3C,GAAAggD,EACA9lD,KAAAm9C,eAAAxyC,KAAAm7C,IAKAG,EAAAt7C,KAAAm7C,IACS,MAAA36C,EAAArF,GAAA+J,KACTk2C,GAOAD,EAAA1I,EAAAt3C,IACA8X,QAAA,GAPAkoC,EAAA9wB,eAAAG,YAAAhqB,EAAArF,GAAA+J,IACAutC,EAAAt3C,GAAAggD,EACAA,EAAAn0B,KAAA3xB,KAAAmL,EAAArF,EAAAs3C,GACAp9C,KAAAm9C,eAAAxyC,KAAAm7C,GACAsG,GAAA,GAKAnG,EAAAt7C,KAAAm7C,IAEA9lD,KAAAqiD,oBAAAl3C,EAAArF,KAAA,GAKA,IAHA9F,KAAAksD,+BACAlsD,KAAAmsD,YAAAnG,GACAhgD,EAAAigD,EAAAhgD,OACAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClBmgD,EAAAngD,GAAA8X,QAAA,GAIAk1B,eAAA1oC,UAAAmvC,mBAAA,WACAv5C,KAAA0rD,gBAAApF,QAAA,EACAtmD,KAAA0rD,gBAAA9T,QAAA,EACA53C,KAAAiiD,kBACAjiD,KAAAm8C,kBAAAkD,iBAAAr/C,KAAAmuB,eACAnuB,KAAAkmD,YAAAlmD,KAAA0rD,gBAAA1rD,KAAAi9C,WAAAj9C,KAAAo9C,WAAA,IAGAtK,eAAA1oC,UAAAmiD,qBAAA,SAAAC,EAAAC,IAEAD,EAAA5U,QAAA6U,EAAA9wB,GAAAzvB,MAAAlM,KAAAmuB,iBACAs+B,EAAAnG,QAAAkG,EAAAlG,QACAmG,EAAAnG,SAAAmG,EAAA9wB,GAAA5yB,EACA0jD,EAAA7U,QAAA,IAIA9E,eAAA1oC,UAAAsiD,UAAA,WACA,IAAA5mD,EACAuJ,EAAA+R,EAAA9R,EAAA+R,EAAA6hC,EAAAyJ,EAAAttD,EAAAutD,EADA5mD,EAAAhG,KAAAk9C,WAAAj3C,OACAzF,EAAAR,KAAA+tB,WAAAvtB,SAAA67B,EAAAr8B,KAAA+tB,WAAAwlB,cACA,IAAAztC,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EASlB,YAPAzG,GADAutD,EAAA5sD,KAAAk9C,WAAAp3C,IACAzG,OAOA,OAAAA,GAAA,IAAAutD,EAAAd,KAAAc,EAAAjtD,KAAA2sD,eAAA,IAAAM,EAAAC,MAAA,IAAA7sD,KAAA+tB,WAAA4d,mBAAA,CAoBA,IAjBAnrC,EAAAozC,OACAsP,EAAA0J,EAAAvyB,SACA,OAAAh7B,GAAA,OAAAA,GACAg9B,EAAAywB,YAAA,OAAAztD,EAAAutD,EAAAf,GAAAe,EAAAG,IACA1wB,EAAA0K,UAAA6lB,EAAAd,GACAzvB,EAAA2wB,QAAAJ,EAAA1H,GACA7oB,EAAA4wB,SAAAL,EAAAzH,GACA9oB,EAAA6wB,WAAAN,EAAAxH,IAAA,GAEA/oB,EAAAC,UAAA,OAAAj9B,EAAAutD,EAAAf,GAAAe,EAAAG,IAEAvsD,EAAAgzC,WAAAoZ,EAAAC,MACA,OAAAxtD,GAAA,OAAAA,GACAg9B,EAAAyY,YAEAt0C,EAAA2yC,aAAAyZ,EAAAhB,cAAA3U,eAAA93C,OACAiiB,EAAA8hC,EAAAj9C,OACAoJ,EAAA,EAAgBA,EAAA+R,EAAO/R,GAAA,GAWvB,IAVA,OAAAhQ,GAAA,OAAAA,IACAg9B,EAAAyY,YACA8X,EAAAb,KACA1vB,EAAA8wB,YAAAP,EAAAb,IACA1vB,EAAA+wB,eAAAR,EAAAZ,KAIA3qC,GADAsrC,EAAAzJ,EAAA7zC,GAAAktC,SACAt2C,OAEAqJ,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAC3B,KAAAq9C,EAAAr9C,GAAAhG,EACA+yB,EAAAkvB,OAAAoB,EAAAr9C,GAAAlG,EAAA,GAAAujD,EAAAr9C,GAAAlG,EAAA,IACiB,KAAAujD,EAAAr9C,GAAAhG,EACjB+yB,EAAAovB,cAAAkB,EAAAr9C,GAAAgE,IAAA,GAAAq5C,EAAAr9C,GAAAgE,IAAA,GAAAq5C,EAAAr9C,GAAAgE,IAAA,GAAAq5C,EAAAr9C,GAAAgE,IAAA,GAAAq5C,EAAAr9C,GAAAgE,IAAA,GAAAq5C,EAAAr9C,GAAAgE,IAAA,IAEA+oB,EAAA0Y,YAGA,OAAA11C,GAAA,OAAAA,IACAg9B,EAAA6sB,SACA0D,EAAAb,IACA1vB,EAAA8wB,YAAAntD,KAAA2rD,eAIA,OAAAtsD,GAAA,OAAAA,GACAg9B,EAAA8sB,KAAAyD,EAAA5jD,GAEAxI,EAAAmzC,YAIAb,eAAA1oC,UAAA87C,YAAA,SAAAsG,EAAA5xB,EAAAj7B,EAAA0tD,GACA,IAAAvnD,EACA2mD,EAEA,IADAA,EAAAD,EACA1mD,EAHA80B,EAAA30B,OAAA,EAGcH,GAAA,EAAKA,GAAA,EACnB,MAAA80B,EAAA90B,GAAA+J,IACA48C,EAAA9sD,EAAAmG,GAAAiK,UACA/P,KAAAusD,qBAAAC,EAAAC,IACS,MAAA7xB,EAAA90B,GAAA+J,IAAA,MAAA+qB,EAAA90B,GAAA+J,IAAA,MAAA+qB,EAAA90B,GAAA+J,IAAA,MAAA+qB,EAAA90B,GAAA+J,GACT7P,KAAA46C,WAAAhgB,EAAA90B,GAAAnG,EAAAmG,IACS,MAAA80B,EAAA90B,GAAA+J,GACT7P,KAAAi7C,WAAArgB,EAAA90B,GAAAnG,EAAAmG,GAAA2mD,GACS,MAAA7xB,EAAA90B,GAAA+J,GACT7P,KAAAq7C,aAAAzgB,EAAA90B,GAAAnG,EAAAmG,GAAA2mD,GACS,MAAA7xB,EAAA90B,GAAA+J,IAAA,MAAA+qB,EAAA90B,GAAA+J,GACT7P,KAAAstD,mBAAA1yB,EAAA90B,GAAAnG,EAAAmG,GAAA2mD,GACS,MAAA7xB,EAAA90B,GAAA+J,GACT7P,KAAAkmD,YAAAuG,EAAA7xB,EAAA90B,GAAAyc,GAAA5iB,EAAAmG,GAAAyc,IACSqY,EAAA90B,GAAA+J,GAITw9C,GACArtD,KAAA0sD,aAKA5Z,eAAA1oC,UAAAmjD,kBAAA,SAAAlR,EAAA9lB,GACA,GAAAv2B,KAAAmuB,eAAAoI,EAAArqB,MAAAmwC,EAAArE,WAAA9rC,KAAA,CACA,IAEApG,EAAAE,EAAAqJ,EAFAm+C,EAAAnR,EAAAE,QACAh5B,EAAAgT,EAAAhT,MACAnC,EAAAmC,EAAAvF,QACAwvC,EAAAvnD,OAAA,EACA,IAAAwnD,EAAApR,EAAArE,WAAAf,eACA,IAAA5nC,EAAA,EAAmBA,EAAA+R,EAAU/R,GAAA,GAC7B,IAAAysB,EAAAvY,EAAAvB,OAAA3S,GACA,GAAAysB,KAAA/yB,EAAA,CAEA,IADA/C,EAAA81B,EAAA9d,QACAlY,EAAA,EAA2BA,EAAAE,EAASF,GAAA,EACpC,IAAAA,GACA0nD,EAAA7iD,MACArB,EAAA,IACAF,EAAAqkD,EAAAr6C,kBAAA0oB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,WAGAykD,EAAA7iD,MACArB,EAAA,IACAgK,IAAAm6C,EAAAj6C,oBAAAsoB,EAAApsB,EAAA5J,EAAA,GAAAg2B,EAAAh2B,KAAAg2B,EAAA/yB,EAAAjD,MAGA,IAAAE,GACAwnD,EAAA7iD,MACArB,EAAA,IACAF,EAAAqkD,EAAAr6C,kBAAA0oB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,WAGA+yB,EAAA3sB,GAAAnJ,IACAwnD,EAAA7iD,MACArB,EAAA,IACAgK,IAAAm6C,EAAAj6C,oBAAAsoB,EAAApsB,EAAA5J,EAAA,GAAAg2B,EAAAh2B,EAAA,GAAAg2B,EAAA/yB,EAAA,MAEAykD,EAAA7iD,MACArB,EAAA,QAKA+yC,EAAAE,QAAAiR,IAIA1a,eAAA1oC,UAAAwwC,WAAA,SAAAt3B,EAAAq3B,GACA,QAAAr3B,EAAA2qB,IAAA3qB,EAAAgpC,cAAA,CACA,IAAAxmD,EAAAE,EAAA20C,EAAAyB,aAAAn2C,OACA,IAAAH,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B9F,KAAAutD,kBAAA5S,EAAAyB,aAAAt2C,GAAA60C,EAAAhvB,MAKAmnB,eAAA1oC,UAAA6wC,WAAA,SAAAP,EAAAC,EAAA8R,GACA,IAAAvR,EAAAP,EAAA/6C,OAEA+6C,EAAAxrC,EAAAjD,MAAAlM,KAAAmuB,iBACA+sB,EAAA2Q,GAAA,OACAtmD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QACAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QACAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,UAEA4xC,EAAAjrC,EAAAxD,MAAAugD,EAAA7U,QAAA53C,KAAAmuB,iBACA+sB,EAAA2R,KAAAlS,EAAAjrC,EAAA3G,EAAA0jD,EAAAnG,UAIAxT,eAAA1oC,UAAAkjD,mBAAA,SAAA5S,EAAAC,EAAA8R,GACA,IAAAvR,EAAAP,EAAA/6C,MACA,IAAAs7C,EAAA6R,KAAApS,EAAA1xC,EAAAiD,MAAAyuC,EAAA7xC,EAAAoD,MAAAyuC,EAAAvrC,EAAAlD,MAAA,IAAAwuC,EAAApxC,IAAAqxC,EAAA9xC,EAAAqD,MAAAyuC,EAAAx6C,EAAA+L,MAAA,CACA,IAAAmwB,EAAAr8B,KAAA+tB,WAAAwlB,cAEA9/B,EAAAknC,EAAA7xC,EAAAC,EAAA2K,EAAAinC,EAAAvrC,EAAArG,EACA,OAAA2xC,EAAApxC,EACAyjD,EAAA1wB,EAAAqxB,qBAAAj6C,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,SAEA,IAAAkgB,EAAA9uB,KAAAM,KAAAN,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,MAAA5O,KAAAI,IAAAuO,EAAA,GAAAC,EAAA,OACAioC,EAAA72C,KAAA8nB,MAAAlZ,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IAGAmoC,EAAAhoB,GADA+mB,EAAA9xC,EAAAE,GAAA,MAAA4xC,EAAA9xC,EAAAE,IAAA,OAAA4xC,EAAA9xC,EAAAE,GAEA0J,EAAA3N,KAAA4I,IAAAiuC,EAAAhB,EAAAx6C,EAAA4I,GAAA6yC,EAAAnoC,EAAA,GACAf,EAAA5N,KAAA8I,IAAA+tC,EAAAhB,EAAAx6C,EAAA4I,GAAA6yC,EAAAnoC,EAAA,GACAs5C,EAAA1wB,EAAAsxB,qBAAAl7C,EAAAC,EAAA,EAAAe,EAAA,GAAAA,EAAA,GAAAmgB,GAGA,IAAA9tB,EAAAE,EAAA00C,EAAAzxC,EAAAG,EACAqyC,EAAAd,EAAA1xC,EAAAkG,EACAm3C,EAAA,EAEA,IAAAxgD,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B60C,EAAA1xC,EAAAmtB,aAAAukB,EAAA1xC,EAAAitB,eACAowB,EAAA3L,EAAA1xC,EAAAyG,EAAA,EAAA5J,EAAA,IAEAinD,EAAAa,aAAAnS,EAAA,EAAA31C,GAAA,YAAA21C,EAAA,EAAA31C,EAAA,OAAA21C,EAAA,EAAA31C,EAAA,OAAA21C,EAAA,EAAA31C,EAAA,OAAAwgD,EAAA,KAEApL,EAAA6R,MAEA7R,EAAA2R,KAAAlS,EAAAjrC,EAAA3G,EAAA0jD,EAAAnG,SAIAxT,eAAA1oC,UAAAixC,aAAA,SAAAX,EAAAC,EAAA8R,GACA,IAAAvR,EAAAP,EAAA/6C,MACA4J,EAAAmxC,EAAAnxC,EACAA,MAAA0C,MAAAlM,KAAAmuB,iBACA+sB,EAAA6Q,GAAAviD,EAAAosB,UACAslB,EAAA8Q,GAAAxiD,EAAAqsB,WAAA,KAEA8kB,EAAAxrC,EAAAjD,MAAAlM,KAAAmuB,iBACA+sB,EAAA2Q,GAAA,OAAAtmD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,QAAAxD,SAAAo1C,EAAAxrC,EAAApG,EAAA,UAEA4xC,EAAAjrC,EAAAxD,MAAAugD,EAAA7U,QAAA53C,KAAAmuB,iBACA+sB,EAAA2R,KAAAlS,EAAAjrC,EAAA3G,EAAA0jD,EAAAnG,UAEA3L,EAAAt2B,EAAAnY,MAAAlM,KAAAmuB,iBACA+sB,EAAA4Q,GAAAnR,EAAAt2B,EAAAtb,IAKA+pC,eAAA1oC,UAAAyzB,QAAA,WACA79B,KAAAi9C,WAAA,KACAj9C,KAAA+tB,WAAA,KACA/tB,KAAAuzC,cAAA,KACAvzC,KAAAk9C,WAAAj3C,OAAA,EACAjG,KAAAo9C,UAAAn3C,OAAA,GAOAuU,iBAAAgiC,YAAA9O,iBAAAqb,cAAAvb,iBAAAC,aAAAE,mBAAAuF,gBAEAA,eAAA9oC,UAAA2uC,YAAApH,gBAAAvnC,UAAA2uC,YACA7F,eAAA9oC,UAAAooC,aAAAX,cAAAznC,UAAAooC,aAEAU,eAAA9oC,UAAAmvC,mBAAA,WACA,IAAAld,EAAAr8B,KAAAuzC,cACAlX,EAAAC,UAAAt8B,KAAAL,KAAAooB,GACAsU,EAAAE,SAAA,IAAAv8B,KAAAL,KAAA4gC,GAAAvgC,KAAAL,KAAAgsB,KAsBAnR,iBAAAgiC,YAAA9O,iBAAAqb,cAAAvb,iBAAAC,aAAAE,kBAAAgP,cAAA5J,eAEAA,cAAA3oC,UAAAub,QAAAla,UAAA,UAAAya,WAAA,MAEA6sB,cAAA3oC,UAAAm4C,aAAA,WACA,IAAAr/B,EAAAljB,KAAA8oC,aAAA3H,YACAnhC,KAAAigC,gBAAA55B,iBAAA6c,EAAA3T,EAAA2T,EAAA3T,EAAAtJ,OAAA,GAEA,IAAA4nD,GAAA,EACA3qC,EAAAsd,IACAqtB,GAAA,EACA7tD,KAAA+sB,OAAAo8B,KAAAnpD,KAAA6iD,WAAA3/B,EAAAsd,KAEAxgC,KAAA+sB,OAAAo8B,KAAA,gBAEAnpD,KAAAmpD,KAAA0E,EACA,IAAAC,GAAA,EACA5qC,EAAA6E,KACA+lC,GAAA,EACA9tD,KAAA+sB,OAAAm8B,OAAAlpD,KAAA6iD,WAAA3/B,EAAA6E,IACA/nB,KAAA+sB,OAAAs8B,OAAAnmC,EAAAqd,IAEA,IACAz6B,EAAAE,EADA0f,EAAA1lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GAEAq6B,EAAAtgB,EAAA3T,EACA8zB,EAAArjC,KAAAsjC,QACAtjC,KAAAkpD,OAAA4E,EACA9tD,KAAA+sB,OAAAu8B,OAAApmC,EAAA+e,UAAA,MAAAjiC,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GAAA0c,QACA7f,EAAAkd,EAAAgf,UAAAj8B,OAEA,IAAA0gC,EAAAlpB,EAAAnO,EAAA+R,EAAAW,EAAA3S,EAAA+R,EAAA0a,EAAAiyB,EAAAC,EAAAnqC,EAAA7jB,KAAAL,KAAAkkB,YACAsjB,EAAAjkB,EAAAiW,GAAA,IAAAjW,EAAA+e,UACAU,EAAA,EAAAC,EAAA,EAAAiB,GAAA,EACAjS,EAAA,EACA,IAAA9rB,EAAA,EAAeA,EAAAE,EAASF,GAAA,GAkBxB,IAhBA2X,GADAkpB,EAAA3mC,KAAA+tB,WAAA7M,YAAAiH,YAAAjF,EAAAgf,UAAAp8B,GAAA4f,EAAAI,OAAA9lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GAAA0c,WACA8gB,EAAAhnC,SACA0jC,EAAAr1B,QACA6V,GAAA2f,EAAA19B,GAAA2J,IACAkzB,GAAAwE,EACAvE,GAAA1f,EAAA8e,QACAY,GAAAiB,EAAA,IACAA,GAAA,GAIAziB,GADAY,EAAAvE,EAAAuE,OAAAvE,EAAAuE,OAAA,GAAAO,OACAtc,OACAo9B,EAAAr0B,MAAAkU,EAAA+e,UAAA,IAAA/e,EAAA+e,UAAA,KACApe,GACA7jB,KAAA2iD,4BAAAz/B,EAAAmgB,EAAAG,EAAA19B,GAAAs/B,KAAAzC,EAAAC,GAEAmrB,EAAA1nD,iBAAA+a,GACA/R,EAAA,EAAgBA,EAAA+R,EAAO/R,GAAA,GAIvB,IAHAgS,EAAAW,EAAA3S,GAAAiT,GAAAhT,EAAAxJ,EAAAG,OACA61B,EAAA9Z,EAAA3S,GAAAiT,GAAAhT,EACA0+C,KACA1+C,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAC3B,GAAAA,GACA0+C,EAAArjD,KAAA04B,EAAAzwB,SAAAkpB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,SAAAs6B,EAAAxwB,SAAAipB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,UAEAilD,EAAArjD,KAAA04B,EAAAzwB,SAAAkpB,EAAApsB,EAAAJ,EAAA,MAAAwsB,EAAApsB,EAAAJ,EAAA,SAAA+zB,EAAAxwB,SAAAipB,EAAApsB,EAAAJ,EAAA,MAAAwsB,EAAApsB,EAAAJ,EAAA,SAAA+zB,EAAAzwB,SAAAkpB,EAAAh2B,EAAAwJ,GAAA,GAAAwsB,EAAAh2B,EAAAwJ,GAAA,MAAA+zB,EAAAxwB,SAAAipB,EAAAh2B,EAAAwJ,GAAA,GAAAwsB,EAAAh2B,EAAAwJ,GAAA,MAAA+zB,EAAAzwB,SAAAkpB,EAAA/yB,EAAAuG,GAAA,GAAAwsB,EAAA/yB,EAAAuG,GAAA,MAAA+zB,EAAAxwB,SAAAipB,EAAA/yB,EAAAuG,GAAA,GAAAwsB,EAAA/yB,EAAAuG,GAAA,OAEA0+C,EAAArjD,KAAA04B,EAAAzwB,SAAAkpB,EAAApsB,EAAAJ,EAAA,MAAAwsB,EAAApsB,EAAAJ,EAAA,SAAA+zB,EAAAxwB,SAAAipB,EAAApsB,EAAAJ,EAAA,MAAAwsB,EAAApsB,EAAAJ,EAAA,SAAA+zB,EAAAzwB,SAAAkpB,EAAAh2B,EAAA,MAAAg2B,EAAAh2B,EAAA,SAAAu9B,EAAAxwB,SAAAipB,EAAAh2B,EAAA,MAAAg2B,EAAAh2B,EAAA,SAAAu9B,EAAAzwB,SAAAkpB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,SAAAs6B,EAAAxwB,SAAAipB,EAAA/yB,EAAA,MAAA+yB,EAAA/yB,EAAA,UACAglD,EAAA1+C,GAAA2+C,EAEAnqC,IACA8e,GAAAa,EAAA19B,GAAAyJ,EACAozB,GAAAwE,GAEAnnC,KAAAg9C,UAAAprB,GACA5xB,KAAAg9C,UAAAprB,GAAA9D,KAAAigC,EAEA/tD,KAAAg9C,UAAAprB,IAAmC9D,KAAAigC,GAEnCn8B,GAAA,IAIAmhB,cAAA3oC,UAAAmvC,mBAAA,WACA,IAWAzzC,EAAAE,EAAAqJ,EAAA+R,EAAA9R,EAAA+R,EAXAgb,EAAAr8B,KAAAuzC,cACAvzC,KAAAi3C,eAAArnB,IAAAzwB,MACAk9B,EAAA5X,KAAAzkB,KAAA+sB,OAAAu8B,OACAjtB,EAAA2wB,QAAA,OACA3wB,EAAA4wB,SAAA,QACA5wB,EAAA6wB,WAAA,EAEAltD,KAAAL,KAAAkkB,aACA7jB,KAAAsiD,aAAA5f,YAAA1iC,KAAA8oC,aAAA3H,YAAAnhC,KAAAkgC,oBAIA,IAKAokB,EALArkB,EAAAjgC,KAAAsiD,aAAAriB,gBAEAuD,EAAAxjC,KAAA8oC,aAAA3H,YAAA5xB,EAEAvJ,EAAAw9B,EAAAv9B,OAEA,IAAA8nD,EAAAC,EAAAC,EAAA,KAAAC,EAAA,KAAAC,EAAA,KACA,IAAAroD,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB,IAAA09B,EAAA19B,GAAA2J,EAAA,CASA,IANA60C,EAAArkB,EAAAn6B,MAEA9F,KAAA+tB,WAAAvtB,SAAAozC,OACA5zC,KAAA+tB,WAAAvtB,SAAA2yC,aAAAmR,EAAAl7C,GACApJ,KAAA+tB,WAAAvtB,SAAAgzC,WAAA8Q,EAAA50C,IAEA1P,KAAAmpD,KAAA,CAaA,IAZA7E,KAAA9jB,GACAytB,IAAA3J,EAAA9jB,KACAytB,EAAA3J,EAAA9jB,GACAnE,EAAAC,UAAAgoB,EAAA9jB,IAEaytB,IAAAjuD,KAAA+sB,OAAAo8B,OACb8E,EAAAjuD,KAAA+sB,OAAAo8B,KACA9sB,EAAAC,UAAAt8B,KAAA+sB,OAAAo8B,MAGA/nC,GADA2sC,EAAA/tD,KAAAg9C,UAAAl3C,GAAAgoB,MACA7nB,OACAjG,KAAA+tB,WAAAwlB,cAAAuB,YACAzlC,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAI3B,IAFAgS,GADA2sC,EAAAD,EAAA1+C,IACApJ,OACAjG,KAAA+tB,WAAAwlB,cAAAgY,OAAAyC,EAAA,GAAAA,EAAA,IACA1+C,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,EACrCtP,KAAA+tB,WAAAwlB,cAAAkY,cAAAuC,EAAA1+C,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,IAGAtP,KAAA+tB,WAAAwlB,cAAAwB,YACA/0C,KAAA+tB,WAAAwlB,cAAA4V,OAGA,GAAAnpD,KAAAkpD,OAAA,CAsBA,IArBA5E,KAAA/jB,GACA4tB,IAAA7J,EAAA/jB,KACA4tB,EAAA7J,EAAA/jB,GACAlE,EAAA0K,UAAAud,EAAA/jB,IAEa4tB,IAAAnuD,KAAA+sB,OAAAs8B,SACb8E,EAAAnuD,KAAA+sB,OAAAs8B,OACAhtB,EAAA0K,UAAA/mC,KAAA+sB,OAAAs8B,QAEA/E,KAAAv8B,GACAmmC,IAAA5J,EAAAv8B,KACAmmC,EAAA5J,EAAAv8B,GACAsU,EAAAywB,YAAAxI,EAAAv8B,IAEammC,IAAAluD,KAAA+sB,OAAAm8B,SACbgF,EAAAluD,KAAA+sB,OAAAm8B,OACA7sB,EAAAywB,YAAA9sD,KAAA+sB,OAAAm8B,QAGA9nC,GADA2sC,EAAA/tD,KAAAg9C,UAAAl3C,GAAAgoB,MACA7nB,OACAjG,KAAA+tB,WAAAwlB,cAAAuB,YACAzlC,EAAA,EAAoBA,EAAA+R,EAAO/R,GAAA,EAI3B,IAFAgS,GADA2sC,EAAAD,EAAA1+C,IACApJ,OACAjG,KAAA+tB,WAAAwlB,cAAAgY,OAAAyC,EAAA,GAAAA,EAAA,IACA1+C,EAAA,EAA2BA,EAAA+R,EAAU/R,GAAA,EACrCtP,KAAA+tB,WAAAwlB,cAAAkY,cAAAuC,EAAA1+C,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,GAAA0+C,EAAA1+C,EAAA,IAGAtP,KAAA+tB,WAAAwlB,cAAAwB,YACA/0C,KAAA+tB,WAAAwlB,cAAA2V,SAGA5E,GACAtkD,KAAA+tB,WAAAvtB,SAAAmzC,YAOA4V,UAAAn/C,UAAAkoC,YAAA,aAEAkX,aAAAp/C,WACAgkD,eAAA,aACAnV,oBAAA,WACAj5C,KAAAq5C,YAAA5tC,UAAAzL,KAAAL,KAAA0uD,IAAA,OACAruD,KAAAL,KAAA8hB,SACAzhB,KAAA+pC,WAAAz+B,SAAA,OACAtL,KAAAwqC,aAAAl/B,SAAA,KACAtL,KAAAstC,cAAAttC,KAAAwqC,aACAxqC,KAAA+pC,WAAA3kB,YAAAplB,KAAAwqC,cACAxqC,KAAAq5C,YAAAj0B,YAAAplB,KAAA+pC,aAEA/pC,KAAAwqC,aAAAxqC,KAAAq5C,YAEAzyC,SAAA5G,KAAAq5C,cAEAH,wBAAA,WACAl5C,KAAA4hD,yBAAA,IAAA2H,UAAAvpD,MACAA,KAAA8gD,mBAAA9gD,KAAAq5C,YACAr5C,KAAAstC,cAAAttC,KAAAwqC,aACAxqC,KAAAL,KAAA6hD,IACAxhD,KAAAwqC,aAAA5kB,aAAA,KAAA5lB,KAAAL,KAAA6hD,IAEAxhD,KAAAL,KAAAikB,IACA5jB,KAAAwqC,aAAA5kB,aAAA,QAAA5lB,KAAAL,KAAAikB,IAEA,IAAA5jB,KAAAL,KAAA6gD,IACAxgD,KAAAsgD,gBAGAhH,cAAA,WACAt5C,KAAAi3C,eAAAU,UACA33C,KAAA8gD,mBAAAlhD,MAAAmQ,UAAA/P,KAAA8gD,mBAAAlhD,MAAAs2C,gBAAAl2C,KAAAi3C,eAAArnB,IAAA1b,SAEAlU,KAAAi3C,eAAAW,SACA53C,KAAA8gD,mBAAAlhD,MAAA0mD,QAAAtmD,KAAAi3C,eAAAC,MAAAxnC,EAAA3G,IAGAupC,YAAA,WAGAtyC,KAAAL,KAAAsuC,IAAAjuC,KAAAo4C,SAGAp4C,KAAA83C,kBACA93C,KAAA44C,mBACA54C,KAAAs5C,gBACAt5C,KAAAu5C,qBACAv5C,KAAAmuB,gBACAnuB,KAAAmuB,eAAA,KAGA0P,QAAA,WACA79B,KAAAwqC,aAAA,KACAxqC,KAAA8gD,mBAAA,KACA9gD,KAAA6gD,eACA7gD,KAAA6gD,aAAA,MAEA7gD,KAAAwiC,cACAxiC,KAAAwiC,YAAA3E,UACA79B,KAAAwiC,YAAA,OAGA2W,2BAAA,WACAn5C,KAAAwiC,YAAA,IAAA2J,YAAAnsC,KAAAL,KAAAK,UAAA+tB,aAEAugC,WAAA,aAEAlc,SAAA,cAEAoX,aAAAp/C,UAAAqoC,eAAAgK,eAAAryC,UAAAqoC,eACA+W,aAAAp/C,UAAAqvC,mBAAA+P,aAAAp/C,UAAAyzB,QACA2rB,aAAAp/C,UAAAomC,sBAAAzE,eAAA3hC,UAAAomC,sBAIAh2B,iBAAAgiC,YAAA9O,iBAAA8b,aAAAhc,iBAAAC,aAAAG,sBAAAiI,eAEAA,cAAAzrC,UAAAgvC,cAAA,WACA,IAAA9M,EACAtsC,KAAAL,KAAA8hB,UACA6qB,EAAAhhC,SAAA,SACAsa,aAAA,QAAA5lB,KAAAL,KAAA4gC,IACA+L,EAAA1mB,aAAA,SAAA5lB,KAAAL,KAAAgsB,IACA2gB,EAAA1mB,aAAA,OAAA5lB,KAAAL,KAAAooB,IACA/nB,KAAA+pC,WAAAnkB,aAAA,QAAA5lB,KAAAL,KAAA4gC,IACAvgC,KAAA+pC,WAAAnkB,aAAA,SAAA5lB,KAAAL,KAAAgsB,OAEA2gB,EAAA7gC,UAAA,QACA7L,MAAAF,MAAAM,KAAAL,KAAA4gC,GAAA,KACA+L,EAAA1sC,MAAAJ,OAAAQ,KAAAL,KAAAgsB,GAAA,KACA2gB,EAAA1sC,MAAA2uD,gBAAAvuD,KAAAL,KAAAooB,IAEA/nB,KAAAwqC,aAAAplB,YAAAknB,IAaA9xB,iBAAAuxB,eAAA6Q,aAAA4M,cAAA5T,cACAA,aAAAxrC,UAAAokD,6BAAA5Y,aAAAxrC,UAAA8uC,wBAEAtD,aAAAxrC,UAAA8uC,wBAAA,WACAl5C,KAAAwuD,+BAEAxuD,KAAAL,KAAA8hB,SACAzhB,KAAA+pC,WAAAnkB,aAAA,QAAA5lB,KAAAL,KAAA0kB,GACArkB,KAAA+pC,WAAAnkB,aAAA,SAAA5lB,KAAAL,KAAAkJ,GACA7I,KAAA8gD,mBAAA9gD,KAAAq5C,aAEAr5C,KAAA8gD,mBAAA9gD,KAAAwqC,cAIAoL,aAAAxrC,UAAAgrC,iBAAA,SAAAtnB,EAAAgD,GAGA,IAFA,IACA4hB,EADArjC,EAAA,EAEAA,EAAAyhB,GACA9wB,KAAAq6B,SAAAhrB,IAAArP,KAAAq6B,SAAAhrB,GAAAojC,iBACAC,EAAA1yC,KAAAq6B,SAAAhrB,GAAAojC,kBAEApjC,GAAA,EAEAqjC,EACA1yC,KAAAwqC,aAAAmI,aAAA7kB,EAAA4kB,GAEA1yC,KAAAwqC,aAAAplB,YAAA0I,IA+BAtT,iBAAAgiC,YAAA9O,iBAAAmI,cAAAlE,gBAAA6X,aAAAhc,iBAAAC,aAAAE,mBAAA6H,eACAA,cAAAprC,UAAAqkD,kBAAAjZ,cAAAprC,UAAAmvC,mBAEA/D,cAAAprC,UAAAgvC,cAAA,WACA,IAAAte,EAEA,GADA96B,KAAAq5C,YAAAz5C,MAAAmlB,SAAA,EACA/kB,KAAAL,KAAA8hB,QACAzhB,KAAAwqC,aAAAplB,YAAAplB,KAAAypD,iBACA3uB,EAAA96B,KAAA+pC,eACK,CACLjP,EAAAxvB,SAAA,OACA,IAAAgZ,EAAAtkB,KAAAqtB,KAAA1tB,KAAAK,KAAAqtB,KAAA1tB,KAAAK,KAAA+tB,WAAA0jB,SACA3W,EAAAlV,aAAA,QAAAtB,EAAAD,GACAyW,EAAAlV,aAAA,SAAAtB,EAAAzb,GACAiyB,EAAA1V,YAAAplB,KAAAypD,iBACAzpD,KAAAwqC,aAAAplB,YAAA0V,GAGA96B,KAAA2kD,aAAA3kD,KAAAi9C,WAAAj9C,KAAAo9C,UAAAp9C,KAAAgvC,aAAAhvC,KAAAypD,gBAAA,SACAzpD,KAAA4kD,qBACA5kD,KAAA0uD,UAAA5zB,GAGA0a,cAAAprC,UAAAukD,oBAAA,SAAAtgB,EAAAlyB,GACA,IAAArW,EAAAE,EAAAqoC,EAAApoC,OACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBqW,EAAAkyB,EAAAvoC,GAAA41B,OAAA3yB,EAAAqK,kBAAA+I,EAAA,GAAAA,EAAA,MAEA,OAAAA,GAGAq5B,cAAAprC,UAAAwkD,0BAAA,SAAAC,EAAAC,GACA,IAEAhpD,EAAAipD,EAAAC,EAAAC,EAAAC,EAFA34B,EAAAs4B,EAAAljC,GAAA5iB,EACAslC,EAAAwgB,EAAAxgB,aACAroC,EAAAuwB,EAAAvY,QACA,KAAAhY,GAAA,IAGA,IAAAF,EAAA,EAAeA,EAAAE,EAAA,EAAaF,GAAA,EAC5BipD,EAAA/uD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAxtB,EAAAjD,IACAkpD,EAAAhvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAA7mB,EAAA5J,IACAmpD,EAAAjvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAzwB,IAAA,IACAopD,EAAAlvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAxtB,EAAAjD,EAAA,IACA9F,KAAAmvD,YAAAJ,EAAAC,EAAAC,EAAAC,EAAAJ,GAEAv4B,EAAApnB,IACA4/C,EAAA/uD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAxtB,EAAAjD,IACAkpD,EAAAhvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAA7mB,EAAA5J,IACAmpD,EAAAjvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAzwB,EAAA,IACAopD,EAAAlvD,KAAA2uD,oBAAAtgB,EAAA9X,EAAAxtB,EAAA,IACA/I,KAAAmvD,YAAAJ,EAAAC,EAAAC,EAAAC,EAAAJ,MAIAtZ,cAAAprC,UAAA+kD,YAAA,SAAAJ,EAAAC,EAAAC,EAAAC,EAAAJ,GACA9uD,KAAAovD,iBAAAL,EAAAC,EAAAC,EAAAC,GACA,IAAAG,EAAArvD,KAAAsvD,iBACAR,EAAAr8C,EAAA/M,OAAA2pD,EAAAroD,KAAA8nD,EAAAr8C,GACAq8C,EAAAS,KAAA9pD,OAAA4pD,EAAAG,MAAAV,EAAAS,MACAT,EAAAp8C,EAAAhN,OAAA2pD,EAAAtoD,IAAA+nD,EAAAp8C,GACAo8C,EAAAW,KAAAhqD,OAAA4pD,EAAAK,OAAAZ,EAAAW,OAGAja,cAAAprC,UAAAklD,kBACAtoD,KAAA,EACAwoD,MAAA,EACAzoD,IAAA,EACA2oD,OAAA,GAGAla,cAAAprC,UAAAulD,iBACAl9C,EAAA,EACA88C,KAAA,EACA78C,EAAA,EACA+8C,KAAA,EACA/vD,MAAA,EACAF,OAAA,GAGAg2C,cAAAprC,UAAAglD,iBAAA,SAAAx7C,EAAA3B,EAAAlB,EAAA6+C,GAIA,IAFA,IAEAzvD,EAAA+I,EAAAiG,EAAA7F,EAAAumD,EAAAvxC,EAAAwxC,EAFAT,IAAAz7C,EAAA,GAAAg8C,EAAA,KAAAh8C,EAAA,GAAAg8C,EAAA,KAEA9pD,EAAA,EAA6CA,EAAA,IAAOA,EAUpD,GARAoD,EAAA,EAAA0K,EAAA9N,GAAA,GAAAmM,EAAAnM,GAAA,EAAAiL,EAAAjL,GACA3F,GAAA,EAAAyT,EAAA9N,GAAA,EAAAmM,EAAAnM,GAAA,EAAAiL,EAAAjL,GAAA,EAAA8pD,EAAA9pD,GACAqJ,EAAA,EAAA8C,EAAAnM,GAAA,EAAA8N,EAAA9N,GAEAoD,GAAA,EAEAiG,GAAA,EAEA,KAHAhP,GAAA,IAiBA0vD,EAAA3mD,IAAA,EAAAiG,EAAAhP,GAEA,IAKA,GADAme,IAAApV,EAAA/D,QAAA0qD,KAAA,EAAA1vD,KACAme,EAAA,GAAA+wC,EAAAvpD,GAAA6E,KAAA3K,KAAA+vD,WAAAzxC,EAAA1K,EAAA3B,EAAAlB,EAAA6+C,EAAA9pD,IAGA,GADAgqD,IAAA5mD,EAAA/D,QAAA0qD,KAAA,EAAA1vD,KACA2vD,EAAA,GAAAT,EAAAvpD,GAAA6E,KAAA3K,KAAA+vD,WAAAD,EAAAl8C,EAAA3B,EAAAlB,EAAA6+C,EAAA9pD,SAxBA,CAEA,OAAAoD,EACA,SAKA,GAFAI,GAAA6F,EAAAjG,IAEAI,EAAA,GACA+lD,EAAAvpD,GAAA6E,KAAA3K,KAAA+vD,WAAAzmD,EAAAsK,EAAA3B,EAAAlB,EAAA6+C,EAAA9pD,IAmBA9F,KAAAsvD,iBAAAtoD,KAAAtB,OAAA2F,MAAA,KAAAgkD,EAAA,IACArvD,KAAAsvD,iBAAAvoD,IAAArB,OAAA2F,MAAA,KAAAgkD,EAAA,IACArvD,KAAAsvD,iBAAAE,MAAA/pD,OAAA4F,MAAA,KAAAgkD,EAAA,IACArvD,KAAAsvD,iBAAAI,OAAAjqD,OAAA4F,MAAA,KAAAgkD,EAAA,KAGA7Z,cAAAprC,UAAA2lD,WAAA,SAAAzmD,EAAAsK,EAAA3B,EAAAlB,EAAA6+C,EAAA9pD,GACA,OAAAb,OAAA,EAAAqE,EAAA,GAAAsK,EAAA9N,GACA,EAAAb,OAAA,EAAAqE,EAAA,GAAAA,EAAA2I,EAAAnM,GACA,KAAAwD,GAAArE,OAAAqE,EAAA,GAAAyH,EAAAjL,GACAb,OAAAqE,EAAA,GAAAsmD,EAAA9pD,IAGA0vC,cAAAprC,UAAA4lD,qBAAA,SAAA5S,EAAA0R,GACA,IAAAhpD,EAAAE,EAAAo3C,EAAAn3C,OACA,IAAAH,EAAA,EAAcA,EAAAE,EAASF,GAAA,EACvBs3C,EAAAt3C,IAAAs3C,EAAAt3C,GAAA6lB,GACA3rB,KAAA4uD,0BAAAxR,EAAAt3C,GAAAgpD,GACS1R,EAAAt3C,IAAAs3C,EAAAt3C,GAAAyc,IACTviB,KAAAgwD,qBAAA5S,EAAAt3C,GAAAyc,GAAAusC,IAKAtZ,cAAAprC,UAAA6lD,mBAAA,SAAAC,GACA,OAAAlwD,KAAA0pD,YAAAj3C,GAAAy9C,EAAAz9C,GACAzS,KAAA0pD,YAAAh3C,GAAAw9C,EAAAx9C,GACA1S,KAAA0pD,YAAAhqD,MAAAM,KAAA0pD,YAAAj3C,GAAAy9C,EAAAz9C,EAAAy9C,EAAAxwD,OACAM,KAAA0pD,YAAAlqD,OAAAQ,KAAA0pD,YAAAh3C,GAAAw9C,EAAAx9C,EAAAw9C,EAAA1wD,QAGAg2C,cAAAprC,UAAAmvC,mBAAA,WAGA,GAFAv5C,KAAAyuD,qBAEAzuD,KAAAo4C,SAAAp4C,KAAAmuB,eAAAnuB,KAAAkM,MAAA,CACA,IAAAyjD,EAAA3vD,KAAA2vD,gBACAtsD,EAAA,OASA,GARAssD,EAAAl9C,EAAApP,EACAssD,EAAAJ,MAAAlsD,EACAssD,EAAAj9C,EAAArP,EACAssD,EAAAF,MAAApsD,EACArD,KAAAgwD,qBAAAhwD,KAAAo9C,UAAAuS,GACAA,EAAAjwD,MAAAiwD,EAAAJ,KAAAI,EAAAl9C,EAAA,EAAAk9C,EAAAJ,KAAAI,EAAAl9C,EACAk9C,EAAAnwD,OAAAmwD,EAAAF,KAAAE,EAAAj9C,EAAA,EAAAi9C,EAAAF,KAAAE,EAAAj9C,EAEA1S,KAAAiwD,mBAAAN,GACA,OAEA,IAAAQ,GAAA,EACAnwD,KAAA0pD,YAAArlC,IAAAsrC,EAAAjwD,QACAM,KAAA0pD,YAAArlC,EAAAsrC,EAAAjwD,MACAM,KAAA0uD,UAAA9oC,aAAA,QAAA+pC,EAAAjwD,OACAywD,GAAA,GAEAnwD,KAAA0pD,YAAA7gD,IAAA8mD,EAAAnwD,SACAQ,KAAA0pD,YAAA7gD,EAAA8mD,EAAAnwD,OACAQ,KAAA0uD,UAAA9oC,aAAA,SAAA+pC,EAAAnwD,QACA2wD,GAAA,IAEAA,GAAAnwD,KAAA0pD,YAAAj3C,IAAAk9C,EAAAl9C,GAAAzS,KAAA0pD,YAAAh3C,IAAAi9C,EAAAj9C,KACA1S,KAAA0pD,YAAArlC,EAAAsrC,EAAAjwD,MACAM,KAAA0pD,YAAA7gD,EAAA8mD,EAAAnwD,OACAQ,KAAA0pD,YAAAj3C,EAAAk9C,EAAAl9C,EACAzS,KAAA0pD,YAAAh3C,EAAAi9C,EAAAj9C,EAEA1S,KAAA0uD,UAAA9oC,aAAA,UAAA5lB,KAAA0pD,YAAAj3C,EAAA,IAAAzS,KAAA0pD,YAAAh3C,EAAA,IAAA1S,KAAA0pD,YAAArlC,EAAA,IAAArkB,KAAA0pD,YAAA7gD,GACA7I,KAAA0uD,UAAA9uD,MAAAmQ,UAAA/P,KAAA0uD,UAAA9uD,MAAAs2C,gBAAA,aAAAl2C,KAAA0pD,YAAAj3C,EAAA,MAAAzS,KAAA0pD,YAAAh3C,EAAA,SAmBA8H,iBAAAgiC,YAAA9O,iBAAA8b,aAAAhc,iBAAAC,aAAAG,qBAAA+O,cAAAlH,cAEAA,aAAArrC,UAAAgvC,cAAA,WAEA,GADAp5C,KAAA4pD,SAAA5pD,KAAAu/C,aACAv/C,KAAA4pD,SAAA,CACA5pD,KAAAu/B,WAAA,MACAv/B,KAAAowD,MAAApwD,KAAAqtB,KAAA1tB,KAAA0kB,EACArkB,KAAAqwD,MAAArwD,KAAAqtB,KAAA1tB,KAAAkJ,EACA7I,KAAA+pC,WAAAnkB,aAAA,QAAA5lB,KAAAowD,OACApwD,KAAA+pC,WAAAnkB,aAAA,SAAA5lB,KAAAqwD,OACA,IAAApnD,EAAAqC,SAAA,KACAtL,KAAAstC,cAAAloB,YAAAnc,GACAjJ,KAAAw5C,UAAAvwC,OAEAjJ,KAAAu/B,WAAA,OACAv/B,KAAAw5C,UAAAx5C,KAAAwqC,aAGAxqC,KAAAqyC,kBAIAoD,aAAArrC,UAAAm4C,aAAA,WACA,IAAAr/B,EAAAljB,KAAA8oC,aAAA3H,YACAnhC,KAAAigC,gBAAA55B,iBAAA6c,EAAA3T,EAAA2T,EAAA3T,EAAAtJ,OAAA,GACA,IAAAqqD,EAAAtwD,KAAAw5C,UAAA55C,MACA0wD,EAAA5mD,MAAA4mD,EAAAnH,KAAAjmC,EAAAsd,GAAAxgC,KAAA6iD,WAAA3/B,EAAAsd,IAAA,gBACAtd,EAAA6E,KACAuoC,EAAApH,OAAAlpD,KAAA6iD,WAAA3/B,EAAA6E,IACAuoC,EAAAC,YAAArtC,EAAAqd,GAAA,MAEA,IAaAz6B,EAAAE,EAbA0f,EAAA1lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GACA,IAAAnJ,KAAA+tB,WAAA7M,YAAAmC,MAGA,GAFAitC,EAAAvrC,SAAA7B,EAAA+e,UAAA,KACAquB,EAAAE,WAAAttC,EAAA+e,UAAA,KACAvc,EAAAO,OACAjmB,KAAAw5C,UAAAxO,UAAAtlB,EAAAO,WACS,CACTqqC,EAAA1rC,WAAAc,EAAAG,QACA,IAAAE,EAAA7C,EAAA6C,QAAAD,EAAA5C,EAAA4C,OACAwqC,EAAArrC,UAAAa,EACAwqC,EAAAprC,WAAAa,EAKA,IAEA89B,EAAA4M,EAAAC,EAFAltB,EAAAtgB,EAAA3T,EACAvJ,EAAAw9B,EAAAv9B,OAEA,IACA+b,EADAqhB,EAAArjC,KAAAsjC,QACAmf,EAAA,GACA7wB,EAAA,EACA,IAAA9rB,EAAA,EAAeA,EAAAE,EAASF,GAAA,GAwCxB,GAvCA9F,KAAA+tB,WAAA7M,YAAAmC,OACArjB,KAAA2pD,UAAA/3B,GAMAiyB,EAAA7jD,KAAA2pD,UAAA/3B,KALAiyB,EAAAv4C,SAAA,SACAsa,aAAA,yBACAi+B,EAAAj+B,aAAA,2BACAi+B,EAAAj+B,aAAA,0BAIA5lB,KAAA4pD,WACA5pD,KAAAg9C,UAAAprB,GAEA8+B,GADAD,EAAAzwD,KAAAg9C,UAAAprB,IACAm1B,SAAA,KAGA0J,EAAAhlD,UAAA,QACA7L,MAAA4wD,WAAA,GACAE,EAAAplD,SAAA,QACA8Z,YAAAy+B,GACAj9C,SAAA6pD,MAIAzwD,KAAA4pD,SAYA/F,EAAA7jD,KAAA2pD,UAAA/3B,GAAA5xB,KAAA2pD,UAAA/3B,GAAAtmB,SAAA,QAXAtL,KAAAg9C,UAAAprB,IACA6+B,EAAAzwD,KAAAg9C,UAAAprB,GACAiyB,EAAA7jD,KAAA2pD,UAAA/3B,KAGAhrB,SADA6pD,EAAAhlD,UAAA,SAGA7E,SADAi9C,EAAAp4C,UAAA,SAEAglD,EAAArrC,YAAAy+B,IAOA7jD,KAAA+tB,WAAA7M,YAAAmC,MAAA,CACA,IACA5F,EADAkpB,EAAA3mC,KAAA+tB,WAAA7M,YAAAiH,YAAAjF,EAAAgf,UAAAp8B,GAAA4f,EAAAI,OAAA9lB,KAAA+tB,WAAA7M,YAAAqH,cAAArF,EAAA/Z,GAAA0c,SAcA,GAXApI,EADAkpB,EACAA,EAAAhnC,KAEA,KAEA0jC,EAAAr1B,QACAyP,KAAAuE,SACAA,EAAAvE,EAAAuE,OAAA,GAAAO,GACA8gB,EAAAr0B,MAAAkU,EAAA+e,UAAA,IAAA/e,EAAA+e,UAAA,KACAwgB,EAAAziD,KAAAwiD,gBAAAnf,EAAArhB,GACA6hC,EAAAj+B,aAAA,IAAA68B,IAEAziD,KAAA4pD,SAoBA5pD,KAAAw5C,UAAAp0B,YAAAy+B,OApBA,CAEA,GADA7jD,KAAAw5C,UAAAp0B,YAAAqrC,GACAhzC,KAAAuE,OAAA,CAGAzW,SAAA8Z,KAAAD,YAAAsrC,GACA,IAAA5B,EAAA4B,EAAAtM,UACAsM,EAAA9qC,aAAA,QAAAkpC,EAAApvD,MAAA,GACAgxD,EAAA9qC,aAAA,SAAAkpC,EAAAtvD,OAAA,GACAkxD,EAAA9qC,aAAA,UAAAkpC,EAAAr8C,EAAA,OAAAq8C,EAAAp8C,EAAA,QAAAo8C,EAAApvD,MAAA,QAAAovD,EAAAtvD,OAAA,IACAkxD,EAAA9wD,MAAAmQ,UAAA2gD,EAAA9wD,MAAAs2C,gBAAA,cAAA4Y,EAAAr8C,EAAA,UAAAq8C,EAAAp8C,EAAA,SAEA8wB,EAAA19B,GAAAk8B,QAAA8sB,EAAAp8C,EAAA,OAGAg+C,EAAA9qC,aAAA,WACA8qC,EAAA9qC,aAAA,YAEA6qC,EAAArrC,YAAAsrC,SAKA7M,EAAA79B,YAAAwd,EAAA19B,GAAAK,IACA09C,EAAAN,eAAA,+DACAvjD,KAAA4pD,SAKA5pD,KAAAw5C,UAAAp0B,YAAAy+B,IAJA7jD,KAAAw5C,UAAAp0B,YAAAqrC,GAEA5M,EAAAjkD,MAAAmQ,UAAA8zC,EAAAjkD,MAAAs2C,gBAAA,kBAAAhzB,EAAA+e,UAAA,aAMAjiC,KAAA4pD,SAGA5pD,KAAAg9C,UAAAprB,GAAAiyB,EAFA7jD,KAAAg9C,UAAAprB,GAAA6+B,EAIAzwD,KAAAg9C,UAAAprB,GAAAhyB,MAAAqH,QAAA,QACAjH,KAAA2pD,UAAA/3B,GAAAiyB,EACAjyB,GAAA,EAEA,KAAAA,EAAA5xB,KAAAg9C,UAAA/2C,QACAjG,KAAAg9C,UAAAprB,GAAAhyB,MAAAqH,QAAA,OACA2qB,GAAA,GAIA6jB,aAAArrC,UAAAmvC,mBAAA,WAEA,GAAAv5C,KAAAL,KAAAkkB,YAAA,CACA,IAAA7jB,KAAAmuB,gBAAAnuB,KAAAkgC,mBACA,OAGAlgC,KAAA4pD,UAAA5pD,KAAAi3C,eAAAU,UACA33C,KAAA+pC,WAAAnkB,aAAA,WAAA5lB,KAAAi3C,eAAAC,MAAA9tC,EAAAL,EAAA,QAAA/I,KAAAi3C,eAAAC,MAAA9tC,EAAAL,EAAA,OAAA/I,KAAAowD,MAAA,IAAApwD,KAAAqwD,OACArwD,KAAA+pC,WAAAnqC,MAAAmQ,UAAA/P,KAAA+pC,WAAAnqC,MAAAs2C,gBAAA,cAAAl2C,KAAAi3C,eAAAC,MAAA9tC,EAAAL,EAAA,UAAA/I,KAAAi3C,eAAAC,MAAA9tC,EAAAL,EAAA,UAMA,GADA/I,KAAAsiD,aAAA5f,YAAA1iC,KAAA8oC,aAAA3H,YAAAnhC,KAAAkgC,oBACAlgC,KAAAkgC,oBAAAlgC,KAAAsiD,aAAApiB,mBAAA,CAGA,IAAAp6B,EAAAE,EAMAs+C,EAAAC,EAAAoM,EANA55C,EAAA,EACAkpB,EAAAjgC,KAAAsiD,aAAAriB,gBAEAuD,EAAAxjC,KAAA8oC,aAAA3H,YAAA5xB,EAIA,IAFAvJ,EAAAw9B,EAAAv9B,OAEAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAClB09B,EAAA19B,GAAA2J,EACAsH,GAAA,GAGAwtC,EAAAvkD,KAAAg9C,UAAAl3C,GACA6qD,EAAA3wD,KAAA2pD,UAAA7jD,GACAw+C,EAAArkB,EAAAlpB,GACAA,GAAA,EACAutC,EAAAp4C,KAAAsD,IACAxP,KAAA4pD,SAGArF,EAAA3+B,aAAA,YAAA0+B,EAAA90C,GAFA+0C,EAAA3kD,MAAAmQ,UAAAw0C,EAAA3kD,MAAAs2C,gBAAAoO,EAAA90C,GAMA+0C,EAAA3kD,MAAA0mD,QAAAhC,EAAA50C,EACA40C,EAAA/jB,IAAA+jB,EAAAp4C,KAAAq0B,IACAowB,EAAA/qC,aAAA,eAAA0+B,EAAA/jB,IAEA+jB,EAAAv8B,IAAAu8B,EAAAp4C,KAAA6b,IACA4oC,EAAA/qC,aAAA,SAAA0+B,EAAAv8B,IAEAu8B,EAAA9jB,IAAA8jB,EAAAp4C,KAAAs0B,KACAmwB,EAAA/qC,aAAA,OAAA0+B,EAAA9jB,IACAmwB,EAAA/wD,MAAA8J,MAAA46C,EAAA9jB,KAIA,GAAAxgC,KAAAw5C,UAAA4K,UAAApkD,KAAAo4C,SAAAp4C,KAAAmuB,eAAAnuB,KAAAkM,MAAA,CACA,IAAA4iD,EAAA9uD,KAAAw5C,UAAA4K,UAEApkD,KAAA0pD,YAAArlC,IAAAyqC,EAAApvD,QACAM,KAAA0pD,YAAArlC,EAAAyqC,EAAApvD,MACAM,KAAA+pC,WAAAnkB,aAAA,QAAAkpC,EAAApvD,QAEAM,KAAA0pD,YAAA7gD,IAAAimD,EAAAtvD,SACAQ,KAAA0pD,YAAA7gD,EAAAimD,EAAAtvD,OACAQ,KAAA+pC,WAAAnkB,aAAA,SAAAkpC,EAAAtvD,SAIAQ,KAAA0pD,YAAArlC,IAAAyqC,EAAApvD,MAAAI,GAAAE,KAAA0pD,YAAA7gD,IAAAimD,EAAAtvD,OAAAM,GAAAE,KAAA0pD,YAAAj3C,IAAAq8C,EAAAr8C,EADA,GACAzS,KAAA0pD,YAAAh3C,IAAAo8C,EAAAp8C,EADA,IAEA1S,KAAA0pD,YAAArlC,EAAAyqC,EAAApvD,MAAAI,EACAE,KAAA0pD,YAAA7gD,EAAAimD,EAAAtvD,OAAAM,EACAE,KAAA0pD,YAAAj3C,EAAAq8C,EAAAr8C,EAJA,EAKAzS,KAAA0pD,YAAAh3C,EAAAo8C,EAAAp8C,EALA,EAOA1S,KAAA+pC,WAAAnkB,aAAA,UAAA5lB,KAAA0pD,YAAAj3C,EAAA,IAAAzS,KAAA0pD,YAAAh3C,EAAA,IAAA1S,KAAA0pD,YAAArlC,EAAA,IAAArkB,KAAA0pD,YAAA7gD,GACA7I,KAAA+pC,WAAAnqC,MAAAmQ,UAAA/P,KAAA+pC,WAAAnqC,MAAAs2C,gBAAA,aAAAl2C,KAAA0pD,YAAAj3C,EAAA,MAAAzS,KAAA0pD,YAAAh3C,EAAA,UASA8H,iBAAAgiC,YAAA9O,iBAAA8b,aAAA3T,cAAArI,iBAAAC,aAAAE,mBAAAgI,eAGAA,cAAAvrC,UAAAgvC,cAAA,WACA,IAAAiK,EAAArjD,KAAA+tB,WAAAmP,cAAAl9B,KAAA68B,WACAM,EAAA,IAAAyzB,MAEA5wD,KAAAL,KAAA8hB,SACAzhB,KAAA6wD,UAAAvlD,SAAA,SACAtL,KAAA6wD,UAAAjrC,aAAA,QAAA5lB,KAAA68B,UAAAxY,EAAA,MACArkB,KAAA6wD,UAAAjrC,aAAA,SAAA5lB,KAAA68B,UAAAh0B,EAAA,MACA7I,KAAA6wD,UAAAtN,eAAA,sCAAAF,GACArjD,KAAAwqC,aAAAplB,YAAAplB,KAAA6wD,WACA7wD,KAAAq5C,YAAAzzB,aAAA,QAAA5lB,KAAA68B,UAAAxY,GACArkB,KAAAq5C,YAAAzzB,aAAA,SAAA5lB,KAAA68B,UAAAh0B,IAEA7I,KAAAwqC,aAAAplB,YAAA+X,GAEAA,EAAArV,IAAAu7B,EACArjD,KAAAL,KAAA6hD,IACAxhD,KAAAq5C,YAAAzzB,aAAA,KAAA5lB,KAAAL,KAAA6hD,KAwCAhnC,iBAAAgiC,YAAA/O,aAAAD,kBAAAkI,gBAEAA,eAAAtrC,UAAAqsC,MAAA,WACA,IAAA3wC,EAAAunB,EAAArnB,EAAAhG,KAAAqtB,KAAA2e,eAAA/lC,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,GAAA,EAGlB,QADAunB,EAAArtB,KAAAqtB,KAAA2e,eAAAlmC,IACAzG,OACAguB,EAAA2oB,gBAAAp2C,MAAAg3C,YAAAvpB,EAAA2oB,gBAAAp2C,MAAAi3C,kBAAA72C,KAAA6pD,GAAA9gD,EAAA,KACAskB,EAAAhtB,UAAAT,MAAAsH,gBAAAmmB,EAAAhtB,UAAAT,MAAAw0C,mBAAA/mB,EAAAhtB,UAAAT,MAAAuH,sBAAA,cACAkmB,EAAA2oB,gBAAAp2C,MAAAmQ,UAAAsd,EAAA2oB,gBAAAp2C,MAAAs2C,gBAAA,8CAKAR,eAAAtrC,UAAAsgD,eAAA,aAGAhV,eAAAtrC,UAAAwoC,KAAA,aAGA8C,eAAAtrC,UAAAkoC,YAAA,WACA,IACAxsC,EAAAE,EADAkG,EAAAlM,KAAAmuB,cAEA,GAAAnuB,KAAA0wC,UAEA,IADA1qC,EAAAhG,KAAA0wC,UAAAzqC,OACAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtBoG,EAAAlM,KAAA0wC,UAAA5qC,GAAAmxC,eAAAC,MAAAhrC,QAGA,GAAAA,GAAAlM,KAAA6pD,GAAA39C,MAAAlM,KAAAoJ,GAAApJ,KAAAoJ,EAAA8C,MAAAlM,KAAAivB,KAAAjvB,KAAAivB,GAAA/iB,MAAAlM,KAAAkvB,GAAAhjB,MAAAlM,KAAAmvB,GAAAjjB,OAAAlM,KAAAovB,GAAAljB,MAAAlM,KAAAqvB,GAAAnjB,MAAAlM,KAAAsvB,GAAApjB,MAAAlM,KAAAuvB,GAAArjB,MAAAlM,KAAAG,GAAAH,KAAAG,EAAA+L,KAAA,CAGA,GAFAlM,KAAA4vB,IAAA5hB,QAEAhO,KAAA0wC,UAGA,IAAA5qC,EADAE,EAAAhG,KAAA0wC,UAAAzqC,OAAA,EACyBH,GAAA,EAAQA,GAAA,GACjC,IAAAgrD,EAAA9wD,KAAA0wC,UAAA5qC,GAAAmxC,eAAAC,MACAl3C,KAAA4vB,IAAAjgB,WAAAmhD,EAAA1nD,EAAAL,EAAA,IAAA+nD,EAAA1nD,EAAAL,EAAA,GAAA+nD,EAAA1nD,EAAAL,EAAA,IACA/I,KAAA4vB,IAAAthB,SAAAwiD,EAAAvhC,GAAAxmB,EAAA,IAAAwF,SAAAuiD,EAAAvhC,GAAAxmB,EAAA,IAAAyF,QAAAsiD,EAAAvhC,GAAAxmB,EAAA,IACA/I,KAAA4vB,IAAAthB,SAAAwiD,EAAA1hC,GAAArmB,GAAAwF,SAAAuiD,EAAAzhC,GAAAtmB,GAAAyF,QAAAsiD,EAAAxhC,GAAAvmB,GACA/I,KAAA4vB,IAAA5gB,MAAA,EAAA8hD,EAAAhoD,EAAAC,EAAA,KAAA+nD,EAAAhoD,EAAAC,EAAA,KAAA+nD,EAAAhoD,EAAAC,EAAA,IACA/I,KAAA4vB,IAAAjgB,UAAAmhD,EAAA3wD,EAAA4I,EAAA,GAAA+nD,EAAA3wD,EAAA4I,EAAA,GAAA+nD,EAAA3wD,EAAA4I,EAAA,IAQA,GALA/I,KAAAoJ,EACApJ,KAAA4vB,IAAAjgB,WAAA3P,KAAAoJ,EAAAL,EAAA,IAAA/I,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAoJ,EAAAL,EAAA,IAEA/I,KAAA4vB,IAAAjgB,WAAA3P,KAAAivB,GAAAlmB,GAAA/I,KAAAkvB,GAAAnmB,EAAA/I,KAAAmvB,GAAApmB,GAEA/I,KAAAG,EAAA,CACA,IAAA4wD,EAEAA,EADA/wD,KAAAoJ,GACApJ,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAoJ,EAAAL,EAAA,GAAA/I,KAAAG,EAAA4I,EAAA,KAEA/I,KAAAivB,GAAAlmB,EAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAkvB,GAAAnmB,EAAA/I,KAAAG,EAAA4I,EAAA,GAAA/I,KAAAmvB,GAAApmB,EAAA/I,KAAAG,EAAA4I,EAAA,IAEA,IAAAioD,EAAAlsD,KAAAM,KAAAN,KAAAI,IAAA6rD,EAAA,MAAAjsD,KAAAI,IAAA6rD,EAAA,MAAAjsD,KAAAI,IAAA6rD,EAAA,OAEAE,GAAAF,EAAA,GAAAC,EAAAD,EAAA,GAAAC,EAAAD,EAAA,GAAAC,GACAE,EAAApsD,KAAAM,KAAA6rD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAE,EAAArsD,KAAA8nB,MAAAqkC,EAAA,GAAAC,GACAE,EAAAtsD,KAAA8nB,MAAAqkC,EAAA,IAAAA,EAAA,IACAjxD,KAAA4vB,IAAArhB,QAAA6iD,GAAA9iD,SAAA6iD,GAGAnxD,KAAA4vB,IAAAthB,SAAAtO,KAAAovB,GAAArmB,GAAAwF,SAAAvO,KAAAqvB,GAAAtmB,GAAAyF,QAAAxO,KAAAsvB,GAAAvmB,GACA/I,KAAA4vB,IAAAthB,SAAAtO,KAAAuvB,GAAAxmB,EAAA,IAAAwF,SAAAvO,KAAAuvB,GAAAxmB,EAAA,IAAAyF,QAAAxO,KAAAuvB,GAAAxmB,EAAA,IACA/I,KAAA4vB,IAAAjgB,UAAA3P,KAAA+tB,WAAA0jB,SAAAptB,EAAA,EAAArkB,KAAA+tB,WAAA0jB,SAAA5oC,EAAA,KACA7I,KAAA4vB,IAAAjgB,UAAA,IAAA3P,KAAA6pD,GAAA9gD,GAKA,IAAAsoD,GAAArxD,KAAA8pD,SAAA13C,OAAApS,KAAA4vB,KACA,IAAAyhC,GAAArxD,KAAA6pD,GAAA39C,OAAAlM,KAAAqtB,KAAA2e,eAAA,CAEA,IAAA3e,EACA,IAFArnB,EAAAhG,KAAAqtB,KAAA2e,eAAA/lC,OAEAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAE1B,QADAunB,EAAArtB,KAAAqtB,KAAA2e,eAAAlmC,IACAzG,OACAgyD,IACAhkC,EAAAhtB,UAAAT,MAAAmQ,UAAAsd,EAAAhtB,UAAAT,MAAAs2C,gBAAAl2C,KAAA4vB,IAAA1b,SAEAlU,KAAA6pD,GAAA39C,OACAmhB,EAAA2oB,gBAAAp2C,MAAAg3C,YAAAvpB,EAAA2oB,gBAAAp2C,MAAAi3C,kBAAA72C,KAAA6pD,GAAA9gD,EAAA,OAIA/I,KAAA4vB,IAAAtd,MAAAtS,KAAA8pD,WAGA9pD,KAAAmuB,eAAA,GAGAunB,eAAAtrC,UAAAooC,aAAA,SAAArD,GACAnvC,KAAAw3C,kBAAArI,GAAA,IAGAuG,eAAAtrC,UAAAyzB,QAAA,aAEA6X,eAAAtrC,UAAAqoC,eAAA,WAAqD,aAGrDsX,SAAA3/C,UAAAkoC,YAAA,aACA,IAAAgf,iBAAA,WACA,IAAAxtC,KACAytC,KACA/qC,EAAA,EACAxgB,EAAA,EACAwrD,EAAA,EACAC,GAAA,EACAC,GAAA,EAEA,SAAAC,EAAAC,GAGA,IAFA,IAAA9rD,EAAA,EACA+rD,EAAAD,EAAAjuD,OACAmC,EAAAE,GACAurD,EAAAzrD,GAAAgsD,YAAAD,IACAN,EAAAzmD,OAAAhF,EAAA,GACAA,GAAA,EACAE,GAAA,EACA6rD,EAAAE,UACAC,KAGAlsD,GAAA,EAIA,SAAAmsD,EAAAprD,EAAAlG,GACA,IAAAkG,EACA,YAGA,IADA,IAAAf,EAAA,EACAA,EAAAE,GAAA,CACA,GAAAurD,EAAAzrD,GAAAgoB,MAAAjnB,GAAA,OAAA0qD,EAAAzrD,GAAAgoB,KACA,OAAAyjC,EAAAzrD,GAAAgsD,UAEAhsD,GAAA,EAEA,IAAA+rD,EAAA,IAAAK,cAGA,OAFAC,EAAAN,EAAAhrD,GACAgrD,EAAAO,QAAAvrD,EAAAlG,GACAkxD,EAYA,SAAAQ,IACAb,GAAA,EACAc,IAGA,SAAAN,IACAR,GAAA,EAGA,SAAAW,EAAAN,EAAAhrD,GACAgrD,EAAApnD,iBAAA,UAAAknD,GACAE,EAAApnD,iBAAA,UAAA4nD,GACAR,EAAApnD,iBAAA,QAAAunD,GACAT,EAAA5mD,MAAmCmjB,KAAAjnB,EAAAirD,UAAAD,IACnC7rD,GAAA,EA+BA,SAAAusD,EAAAC,GACA,IACA1sD,EADA2sD,EAAAD,EAAAhsC,EAEA,IAAA1gB,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAY,YAAAD,GAEAjsC,EAAAgsC,EACAhB,IAAAE,EACAvtD,OAAAkc,sBAAAkyC,GAEAd,GAAA,EAIA,SAAAkB,EAAAH,GACAhsC,EAAAgsC,EACAruD,OAAAkc,sBAAAkyC,GAsEA,SAAAD,KACAZ,GAAAF,GACAC,IACAttD,OAAAkc,sBAAAsyC,GACAlB,GAAA,GA8BA,OAhBA3tC,EAAAmuC,oBACAnuC,EAAA1jB,cArIA,SAAAwyD,GACA,IAAAf,EAAA,IAAAK,cAGA,OAFAC,EAAAN,EAAA,MACAA,EAAAgB,UAAAD,GACAf,GAkIA/tC,EAAAxhB,SA9HA,SAAA6D,EAAA2rD,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAxvD,SAAA6D,EAAA2rD,IA4HAhuC,EAAAgvC,aAxHA,SAAA3sD,EAAA2rD,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAgB,aAAA3sD,EAAA2rD,IAsHAhuC,EAAA3hB,KAlHA,SAAA2vD,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAA3vD,KAAA2vD,IAgHAhuC,EAAA1hB,MA1FA,SAAA0vD,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAA1vD,MAAA0vD,IAwFAhuC,EAAA5hB,KA7EA,SAAA4vD,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAA5vD,KAAA4vD,IA2EAhuC,EAAAivC,YAvEA,SAAAjB,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAiB,YAAAjB,IAqEAhuC,EAAAkvC,iBA1DA,SAAAryD,EAAAsyD,EAAAzyD,GACA,IAEAsF,EAFAotD,KAAA/sC,UAAAlR,MAAAozC,KAAA98C,SAAA4nD,uBAAA,cACAl+C,MAAAozC,KAAA98C,SAAA4nD,uBAAA,eACAntD,EAAAktD,EAAAjtD,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtBtF,GACA0yD,EAAAptD,GAAA8f,aAAA,eAAAplB,GAEAyxD,EAAAiB,EAAAptD,GAAAnF,GAEA,GAAAsyD,GAAA,IAAAjtD,EAAA,CACAxF,IACAA,EAAA,OAEA,IAAA6kB,EAAA9Z,SAAA6nD,qBAAA,WACA/tC,EAAAP,UAAA,GACA,IAAAuuC,EAAA5nD,UAAA,OACA4nD,EAAAzzD,MAAAF,MAAA,OACA2zD,EAAAzzD,MAAAJ,OAAA,OACA6zD,EAAAztC,aAAA,eAAAplB,GACA6kB,EAAAD,YAAAiuC,GACApB,EAAAoB,EAAA1yD,KAsCAmjB,EAAAwvC,OAlCA,WACA,IAAAxtD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAwB,UAiCAxvC,EAAAyvC,YAzFA,SAAArwD,EAAAswD,EAAA1B,GACA,IAAAhsD,EACA,IAAAA,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtByrD,EAAAzrD,GAAAgsD,UAAAyB,YAAArwD,EAAAswD,EAAA1B,IAuFAhuC,EAAA+Z,QArEA,SAAAi0B,GACA,IAAAhsD,EACA,IAAAA,EAAAE,EAAA,EAAsBF,GAAA,EAAKA,GAAA,EAC3ByrD,EAAAzrD,GAAAgsD,UAAAj0B,QAAAi0B,IAmEAhuC,EAAA2vC,OAtBA,WACA/B,GAAA,GAsBA5tC,EAAA4vC,SAnBA,WACAhC,GAAA,EACAY,KAkBAxuC,EAAA6vC,wBA7KA,WACA,IAAA7tD,EAAAE,EAAAurD,EAAAtrD,OACA2tD,KACA,IAAA9tD,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3B8tD,EAAAjpD,KAAA4mD,EAAAzrD,GAAAgsD,WAEA,OAAA8B,GAwKA9vC,EAxNA,GA2NAouC,cAAA,WACAlyD,KAAAwK,QACAxK,KAAA0B,KAAA,GACA1B,KAAAwiB,KAAA,GACAxiB,KAAAumB,UAAA,EACAvmB,KAAAuyC,aAAA,EACAvyC,KAAA6zD,gBAAA,EACA7zD,KAAAoI,YAAA,EACApI,KAAAkwB,UAAA,EACAlwB,KAAA8zD,UAAA,EACA9zD,KAAA+zD,UAAA,EACA/zD,KAAAg0D,cAAA,EACAh0D,KAAAi0D,UAAA,EACAj0D,KAAAW,iBACAX,KAAAmjB,UACAnjB,KAAA+xD,UAAA,EACA/xD,KAAAU,UAAA,EACAV,KAAAS,MAAA,EACAT,KAAAQ,SAAA,KACAR,KAAAk0D,YAAAxrD,kBACA1I,KAAA88B,WAAA,GACA98B,KAAAm0D,cAAA,EACAn0D,KAAAo0D,WAAA,EACAp0D,KAAAuE,gCACAvE,KAAAg3B,YACAh3B,KAAAq0D,OAAA,EACAr0D,KAAAs0D,gBAAA,EACAt0D,KAAAswC,iBAAAzqC,mBACA7F,KAAAuxC,eAAA,IAAArV,gBAGA1hB,iBAAArQ,WAAA+nD,eAEAA,cAAA9nD,UAAAyoD,UAAA,SAAAD,GACAA,EAAArnB,UACAvrC,KAAAurC,QAAAqnB,EAAArnB,UAEAqnB,EAAAnnB,SAAAmnB,EAAAvyD,aACAL,KAAAyrC,QAAAmnB,EAAAnnB,SAAAmnB,EAAAvyD,WAEA,IAAAk0D,EAAA3B,EAAA2B,SAAA3B,EAAA2B,SAAA3B,EAAApyD,SAAAoyD,EAAApyD,SAAA,MACA,OAAA+zD,GACA,aACAv0D,KAAAQ,SAAA,IAAA6qC,eAAArrC,KAAA4yD,EAAAhyD,kBACA,MACA,UACAZ,KAAAQ,SAAA,IAAAopC,YAAA5pC,KAAA4yD,EAAAhyD,kBACA,MACA,QACAZ,KAAAQ,SAAA,IAAAurC,eAAA/rC,KAAA4yD,EAAAhyD,kBAGAZ,KAAAQ,SAAA4vC,oBAAApwC,KAAAswC,kBACAtwC,KAAAu0D,WAEA,KAAA3B,EAAAnyD,MAAA,OAAAmyD,EAAAnyD,QACK,IAAAmyD,EAAAnyD,KACLT,KAAAS,MAAA,GACK,IAAAmyD,EAAAnyD,KACLT,KAAAS,MAAA,EAEAT,KAAAS,KAAA+zD,SAAA5B,EAAAnyD,OAEAT,KAAAU,WAAA,aAAAkyD,MAAAlyD,SACAV,KAAA0B,KAAAkxD,EAAAlxD,KAAAkxD,EAAAlxD,KAAA,GACA1B,KAAAy0D,kBAAA7B,EAAA/3C,eAAA,qBAAA+3C,EAAA6B,iBACAz0D,KAAA88B,WAAA81B,EAAA91B,WACA81B,EAAAjyD,cACAX,KAAAgyC,gBAAA4gB,EAAAjyD,eACKiyD,EAAApwC,QAEL,IAAAowC,EAAApwC,KAAAkyC,YAAA,MACA10D,KAAAwiB,KAAAowC,EAAApwC,KAAAikB,OAAA,EAAAmsB,EAAApwC,KAAAkyC,YAAA,SAEA10D,KAAAwiB,KAAAowC,EAAApwC,KAAAikB,OAAA,EAAAmsB,EAAApwC,KAAAkyC,YAAA,QAEA10D,KAAA20D,SAAA/B,EAAApwC,KAAAikB,OAAAmsB,EAAApwC,KAAAkyC,YAAA,QACA10D,KAAA20D,SAAA30D,KAAA20D,SAAAluB,OAAA,EAAAzmC,KAAA20D,SAAAD,YAAA,UAEAp2B,YAAAK,KAAAi0B,EAAApwC,KAAAxiB,KAAAgyC,gBAAAnnC,KAAA7K,MAAA,WACAA,KAAA40D,QAAA,gBACS/pD,KAAA7K,SAITkyD,cAAA9nD,UAAAgoD,QAAA,SAAA3mB,EAAA9qC,GACA,IAAAiyD,GACAnnB,UACA9qC,gBAAA,iBAAAA,IAAAwhB,KAAAC,MAAAzhB,GAAA,MAEAk0D,EAAAppB,EAAAqpB,WAEAlC,EAAApwC,KAAAqyC,EAAAE,aAAA,uBAAAF,EAAAE,aAAA,uBAAA7xD,MAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA7xD,MAAA2xD,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA7xD,MAAA,GACA0vD,EAAA2B,SAAAM,EAAAE,aAAA,kBAAAF,EAAAE,aAAA,kBAAA7xD,MAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA7xD,MAAA2xD,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA7xD,MAAA2xD,EAAAE,aAAA,oBAAAF,EAAAE,aAAA,oBAAA7xD,MAAA2xD,EAAAE,aAAA,eAAAF,EAAAE,aAAA,eAAA7xD,MAAA,SAEA,IAAAzC,EAAAo0D,EAAAE,aAAA,kBAAAF,EAAAE,aAAA,kBAAA7xD,MAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA7xD,MAAA2xD,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA7xD,MAAA,GACA,KAAAzC,IAEAmyD,EAAAnyD,KADK,UAAAA,IAEA,SAAAA,GAGL+zD,SAAA/zD,KAEA,IAAAC,EAAAm0D,EAAAE,aAAA,sBAAAF,EAAAE,aAAA,sBAAA7xD,MAAA2xD,EAAAE,aAAA,oBAAAF,EAAAE,aAAA,oBAAA7xD,OAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,eAAA7xD,MACA0vD,EAAAlyD,SAAA,UAAAA,EAEAkyD,EAAAlxD,KAAAmzD,EAAAE,aAAA,aAAAF,EAAAE,aAAA,aAAA7xD,MAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA7xD,MAAA2xD,EAAAE,aAAA,WAAAF,EAAAE,aAAA,WAAA7xD,MAAA,GAGA,WAFA2xD,EAAAE,aAAA,uBAAAF,EAAAE,aAAA,uBAAA7xD,MAAA2xD,EAAAE,aAAA,qBAAAF,EAAAE,aAAA,qBAAA7xD,MAAA2xD,EAAAE,aAAA,gBAAAF,EAAAE,aAAA,gBAAA7xD,MAAA,MAGA0vD,EAAAoC,WAAA,GAEAh1D,KAAA6yD,UAAAD,IAGAV,cAAA9nD,UAAA8lC,cAAA,SAAAvwC,GACAA,EAAAg8B,GAAA37B,KAAAW,cAAAg7B,KACA37B,KAAAW,cAAAg7B,GAAAh8B,EAAAg8B,GACA37B,KAAAoI,YAAAtD,KAAAU,MAAA7F,EAAAg8B,GAAA37B,KAAAW,cAAAyuC,KAEA,IACAtpC,EAEAuJ,EAHA2R,EAAAhhB,KAAAW,cAAAqgB,OACAhb,EAAAgb,EAAA/a,OACAkqC,EAAAxwC,EAAAqhB,OACAI,EAAA+uB,EAAAlqC,OACA,IAAAoJ,EAAA,EAAYA,EAAA+R,EAAO/R,GAAA,EAEnB,IADAvJ,EAAA,EACAA,EAAAE,GAAA,CACA,GAAAgb,EAAAlb,GAAA4a,IAAAyvB,EAAA9gC,GAAAqR,GAAA,CACAM,EAAAlb,GAAAqqC,EAAA9gC,GACA,MAEAvJ,GAAA,EAOA,IAJAnG,EAAA0jB,OAAA1jB,EAAA0mB,SACArmB,KAAAQ,SAAAutB,WAAA7M,YAAAyF,SAAAhnB,EAAA0jB,OACArjB,KAAAQ,SAAAutB,WAAA7M,YAAA4F,SAAAnnB,EAAA0mB,MAAArmB,KAAAQ,SAAAutB,WAAAhH,OAEApnB,EAAAwjB,OAEA,IADAnd,EAAArG,EAAAwjB,OAAAld,OACAH,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3B9F,KAAAW,cAAAwiB,OAAAxY,KAAAhL,EAAAwjB,OAAArd,IAGA9F,KAAAW,cAAAqjB,YAAA,EACAC,YAAAF,aAAA/jB,KAAAW,cAAAX,KAAAQ,SAAAutB,WAAA7M,aACAlhB,KAAAQ,SAAA0vC,cAAAvwC,EAAAqhB,QACAxc,mBACAA,kBAAAwsC,gBAAAhxC,MAEAA,KAAAi1D,mBAGA/C,cAAA9nD,UAAA6qD,gBAAA,WACA,IAAAj+B,EAAAh3B,KAAAW,cAAAq2B,SACA,IAAAA,GAAA,IAAAA,EAAA/wB,SAAAjG,KAAAy0D,iBAGA,OAFAz0D,KAAA40D,QAAA,mBACA50D,KAAAm0D,cAAAn0D,KAAAoI,aAGA,IAAAqwB,EAAAzB,EAAAk+B,QACAl1D,KAAAm0D,cAAA17B,EAAAyrB,KAAAlkD,KAAAkwB,UACA,IAAAilC,EAAAn1D,KAAAwiB,KAAAxiB,KAAA20D,SAAA,IAAA30D,KAAAo0D,WAAA,QACAp0D,KAAAo0D,YAAA,EACA91B,YAAAK,KAAAw2B,EAAAn1D,KAAAkwC,cAAArlC,KAAA7K,MAAA,WACAA,KAAA40D,QAAA,gBACK/pD,KAAA7K,QAGLkyD,cAAA9nD,UAAAgrD,aAAA,WACAp1D,KAAAW,cAAAq2B,WAEAh3B,KAAAm0D,cAAAn0D,KAAAoI,aAEApI,KAAAi1D,mBAGA/C,cAAA9nD,UAAAirD,aAAA,WACAr1D,KAAA40D,QAAA,iBACA50D,KAAAs1D,eAGApD,cAAA9nD,UAAAmrD,cAAA,WACAv1D,KAAAuxC,eAAA5T,cAAA39B,KAAA88B,YACA98B,KAAAuxC,eAAA7T,QAAA19B,KAAAwiB,MACAxiB,KAAAuxC,eAAAjU,WAAAt9B,KAAAW,cAAAwiB,OAAAnjB,KAAAq1D,aAAAxqD,KAAA7K,QAGAkyD,cAAA9nD,UAAA4nC,gBAAA,SAAAb,GACA,GAAAnxC,KAAAQ,SAGA,IACAR,KAAAW,cAAAwwC,EACAnxC,KAAAoI,YAAAtD,KAAAU,MAAAxF,KAAAW,cAAAg7B,GAAA37B,KAAAW,cAAAyuC,IACApvC,KAAAQ,SAAAwxC,gBAAAb,GACAA,EAAAhuB,SACAguB,EAAAhuB,WAGAnjB,KAAAmjB,OAAAnjB,KAAAW,cAAAwiB,OACAnjB,KAAAkwB,UAAAlwB,KAAAW,cAAA6wC,GACAxxC,KAAAmI,WAAArD,KAAAC,MAAA/E,KAAAW,cAAAyuC,IACApvC,KAAA8zD,UAAA9zD,KAAAW,cAAA6wC,GAAA,IACAxxC,KAAAQ,SAAAswC,wBAAAK,EAAAhuB,QACAnjB,KAAA40D,QAAA,gBACA50D,KAAAu1D,gBACAv1D,KAAAo1D,eACAp1D,KAAAw1D,oBACAx1D,KAAAy1D,qBACK,MAAAC,GACL11D,KAAA21D,mBAAAD,KAIAxD,cAAA9nD,UAAAqrD,mBAAA,WACAz1D,KAAAQ,WAGAR,KAAAQ,SAAAutB,WAAA7M,YAAAmG,SACArnB,KAAAs1D,cAEA30C,WAAA3gB,KAAAy1D,mBAAA5qD,KAAA7K,MAAA,MAIAkyD,cAAA9nD,UAAAkrD,YAAA,WACAt1D,KAAAumB,WAAAvmB,KAAAQ,SAAAutB,WAAA7M,YAAAmG,WAAArnB,KAAAuxC,eAAAlqB,UAAA,WAAArnB,KAAAQ,SAAA4qC,eACAprC,KAAAumB,UAAA,EACAtC,YAAAF,aAAA/jB,KAAAW,cAAAX,KAAAQ,SAAAutB,WAAA7M,aACA1c,mBACAA,kBAAAwsC,gBAAAhxC,MAEAA,KAAAQ,SAAA+vC,YACA5vB,WAAA,WACA3gB,KAAA40D,QAAA,cACS/pD,KAAA7K,MAAA,GACTA,KAAA41D,YACA51D,KAAAU,UACAV,KAAAmC,SAKA+vD,cAAA9nD,UAAAkpD,OAAA,WACAtzD,KAAAQ,SAAA0xC,uBAGAggB,cAAA9nD,UAAAyrD,YAAA,SAAAlvD,GACA3G,KAAAuE,kBAAAoC,GAGAurD,cAAA9nD,UAAAwrD,UAAA,WACA51D,KAAAuyC,aAAAvyC,KAAAuE,gBAAAvE,KAAA6zD,kBAAA7zD,KAAA6zD,gBAEA7zD,KAAAm0D,gBAAAn0D,KAAAoI,aAAApI,KAAAuyC,aAAAvyC,KAAAm0D,gBACAn0D,KAAAuyC,aAAAvyC,KAAAm0D,eAEAn0D,KAAA40D,QAAA,cACA50D,KAAAsyC,eAGA4f,cAAA9nD,UAAAkoC,YAAA,WACA,QAAAtyC,KAAAumB,SAGA,IACAvmB,KAAAQ,SAAA8xC,YAAAtyC,KAAAuyC,aAAAvyC,KAAAmI,YACK,MAAAutD,GACL11D,KAAA81D,wBAAAJ,KAIAxD,cAAA9nD,UAAAjI,KAAA,SAAAT,GACAA,GAAA1B,KAAA0B,UAGA,IAAA1B,KAAA+xD,WACA/xD,KAAA+xD,UAAA,EACA/xD,KAAAq0D,QACAr0D,KAAAq0D,OAAA,EACAr0D,KAAA40D,QAAA,cAKA1C,cAAA9nD,UAAAhI,MAAA,SAAAV,GACAA,GAAA1B,KAAA0B,UAGA,IAAA1B,KAAA+xD,WACA/xD,KAAA+xD,UAAA,EACA/xD,KAAAq0D,OAAA,EACAr0D,KAAA40D,QAAA,WAIA1C,cAAA9nD,UAAA2oD,YAAA,SAAArxD,GACAA,GAAA1B,KAAA0B,WAGA,IAAA1B,KAAA+xD,SACA/xD,KAAAmC,OAEAnC,KAAAoC,UAIA8vD,cAAA9nD,UAAAlI,KAAA,SAAAR,GACAA,GAAA1B,KAAA0B,UAGA1B,KAAAoC,QACApC,KAAAi0D,UAAA,EACAj0D,KAAAs0D,gBAAA,EACAt0D,KAAA+1D,wBAAA,KAGA7D,cAAA9nD,UAAAmpD,YAAA,SAAArwD,EAAAswD,EAAA9xD,GACAA,GAAA1B,KAAA0B,UAGA8xD,EACAxzD,KAAA+1D,wBAAA7yD,GAEAlD,KAAA+1D,wBAAA7yD,EAAAlD,KAAAg2D,eAEAh2D,KAAAoC,UAGA8vD,cAAA9nD,UAAA6rD,YAAA,SAAA/yD,EAAAswD,EAAA9xD,GACA1B,KAAAuzD,YAAArwD,EAAAswD,EAAA9xD,GACA1B,KAAAmC,QAGA+vD,cAAA9nD,UAAAsoD,YAAA,SAAAxvD,GACA,QAAAlD,KAAA+xD,WAAA,IAAA/xD,KAAAumB,SAAA,CAGA,IAAA2vC,EAAAl2D,KAAA6zD,gBAAA3wD,EAAAlD,KAAAg2D,cACAG,GAAA,EAGAD,GAAAl2D,KAAAoI,YAAA,GAAApI,KAAAg2D,cAAA,EACAh2D,KAAAS,MAAAT,KAAAi0D,YAAAj0D,KAAAS,KAKSy1D,GAAAl2D,KAAAoI,aACTpI,KAAAi0D,WAAA,EACAj0D,KAAAo2D,cAAAF,EAAAl2D,KAAAoI,eACApI,KAAA+1D,wBAAAG,EAAAl2D,KAAAoI,aACApI,KAAAs0D,gBAAA,EACAt0D,KAAA40D,QAAA,kBAGA50D,KAAA+1D,wBAAAG,GAZAl2D,KAAAo2D,cAAAF,EAAAl2D,KAAAoI,YAAA8tD,EAAAl2D,KAAAoI,YAAA,KACA+tD,GAAA,EACAD,EAAAl2D,KAAAoI,YAAA,GAYK8tD,EAAA,EACLl2D,KAAAo2D,cAAAF,EAAAl2D,KAAAoI,gBACApI,KAAAS,MAAAT,KAAAi0D,aAAA,QAAAj0D,KAAAS,MAQA01D,GAAA,EACAD,EAAA,IARAl2D,KAAA+1D,wBAAA/1D,KAAAoI,YAAA8tD,EAAAl2D,KAAAoI,aACApI,KAAAs0D,eAGAt0D,KAAA40D,QAAA,gBAFA50D,KAAAs0D,gBAAA,IAUAt0D,KAAA+1D,wBAAAG,GAEAC,IACAn2D,KAAA+1D,wBAAAG,GACAl2D,KAAAoC,QACApC,KAAA40D,QAAA,eAIA1C,cAAA9nD,UAAAisD,cAAA,SAAAlrD,EAAAxB,GACA3J,KAAAi0D,UAAA,EACA9oD,EAAA,GAAAA,EAAA,IACAnL,KAAAg2D,cAAA,IACAh2D,KAAA+zD,UAAA,EACA/zD,KAAAsC,UAAAtC,KAAA+zD,WAEA/zD,KAAA8yD,cAAA,IAGA9yD,KAAAm0D,cAAAn0D,KAAAoI,YAAA+C,EAAA,GAAAA,EAAA,GACAnL,KAAAmI,WAAAgD,EAAA,GACAnL,KAAA+1D,wBAAA/1D,KAAAoI,YAAA,KAAAuB,IACKwB,EAAA,GAAAA,EAAA,KACLnL,KAAAg2D,cAAA,IACAh2D,KAAA+zD,UAAA,EACA/zD,KAAAsC,UAAAtC,KAAA+zD,WAEA/zD,KAAA8yD,aAAA,IAGA9yD,KAAAm0D,cAAAn0D,KAAAoI,YAAA+C,EAAA,GAAAA,EAAA,GACAnL,KAAAmI,WAAAgD,EAAA,GACAnL,KAAA+1D,wBAAA,KAAApsD,IAEA3J,KAAA40D,QAAA,iBAEA1C,cAAA9nD,UAAAksD,WAAA,SAAA3kC,EAAA4kC,GACA,IAAAC,GAAA,EACAx2D,KAAA+xD,WACA/xD,KAAA6zD,gBAAA7zD,KAAAmI,WAAAwpB,EACA6kC,EAAA7kC,EACS3xB,KAAA6zD,gBAAA7zD,KAAAmI,WAAAouD,IACTC,EAAAD,EAAA5kC,IAIA3xB,KAAAmI,WAAAwpB,EACA3xB,KAAAm0D,cAAAn0D,KAAAoI,YAAAmuD,EAAA5kC,GACA,IAAA6kC,GACAx2D,KAAAuzD,YAAAiD,GAAA,IAIAtE,cAAA9nD,UAAAqsD,aAAA,SAAAtrD,EAAAurD,GAIA,GAHAA,IACA12D,KAAAg3B,SAAA/wB,OAAA,GAEA,iBAAAkF,EAAA,IACA,IAAArF,EAAAE,EAAAmF,EAAAlF,OACA,IAAAH,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5B9F,KAAAg3B,SAAArsB,KAAAQ,EAAArF,SAGA9F,KAAAg3B,SAAArsB,KAAAQ,GAEAnL,KAAAg3B,SAAA/wB,QAAAywD,GACA12D,KAAAq2D,cAAAr2D,KAAAg3B,SAAAk+B,QAAA,GAEAl1D,KAAA+xD,UACA/xD,KAAAmC,QAIA+vD,cAAA9nD,UAAAusD,cAAA,SAAAD,GACA12D,KAAAg3B,SAAA/wB,OAAA,EACAjG,KAAAg3B,SAAArsB,MAAA3K,KAAAW,cAAAyuC,GAAApvC,KAAAW,cAAAg7B,KAEA+6B,GACA12D,KAAAo2D,cAAA,IAGAlE,cAAA9nD,UAAAgsD,cAAA,SAAAzsD,GACA,QAAA3J,KAAAg3B,SAAA/wB,SACAjG,KAAAq2D,cAAAr2D,KAAAg3B,SAAAk+B,QAAAvrD,IACA,IAKAuoD,cAAA9nD,UAAAyzB,QAAA,SAAAn8B,GACAA,GAAA1B,KAAA0B,UAAA1B,KAAAQ,WAGAR,KAAAQ,SAAAq9B,UACA79B,KAAAuxC,eAAA1T,UACA79B,KAAA40D,QAAA,WACA50D,KAAAwK,KAAA,KACAxK,KAAA42D,aAAA52D,KAAA62D,eAAA72D,KAAA82D,WAAA92D,KAAA+2D,eAAA/2D,KAAAg3D,UAAA,KACAh3D,KAAAQ,SAAA,OAGA0xD,cAAA9nD,UAAA2rD,wBAAA,SAAA7yD,GACAlD,KAAA6zD,gBAAA3wD,EACAlD,KAAA41D,aAGA1D,cAAA9nD,UAAA9H,SAAA,SAAA6D,GACAnG,KAAA+zD,UAAA5tD,EACAnG,KAAAw1D,qBAGAtD,cAAA9nD,UAAA0oD,aAAA,SAAA3sD,GACAnG,KAAAg0D,cAAA7tD,EAAA,OACAnG,KAAAw1D,qBAGAtD,cAAA9nD,UAAAorD,kBAAA,WACAx1D,KAAAg2D,cAAAh2D,KAAA8zD,UAAA9zD,KAAA+zD,UAAA/zD,KAAAg0D,eAGA9B,cAAA9nD,UAAA6sD,QAAA,WACA,OAAAj3D,KAAAwiB,MAGA0vC,cAAA9nD,UAAA8yB,cAAA,SAAAL,GACA,IAAAra,EAAA,GACA,GAAAqa,EAAAztB,EACAoT,EAAAqa,EAAAzzB,OACK,GAAApJ,KAAA88B,WAAA,CACL,IAAAE,EAAAH,EAAAzzB,GACA,IAAA4zB,EAAAjxB,QAAA,aACAixB,IAAAna,MAAA,SAEAL,EAAAxiB,KAAA88B,WAAAE,OAEAxa,EAAAxiB,KAAAwiB,KACAA,GAAAqa,EAAAI,EAAAJ,EAAAI,EAAA,GACAza,GAAAqa,EAAAzzB,EAEA,OAAAoZ,GAGA0vC,cAAA9nD,UAAAinC,aAAA,SAAA3wB,GAEA,IADA,IAAA5a,EAAA,EAAAE,EAAAhG,KAAAmjB,OAAAld,OACAH,EAAAE,GAAA,CACA,GAAA0a,GAAA1gB,KAAAmjB,OAAArd,GAAA4a,GACA,OAAA1gB,KAAAmjB,OAAArd,GAEAA,GAAA,IAIAosD,cAAA9nD,UAAAwoC,KAAA,WACA5yC,KAAAQ,SAAAoyC,QAGAsf,cAAA9nD,UAAAyoC,KAAA,WACA7yC,KAAAQ,SAAAqyC,QAGAqf,cAAA9nD,UAAA8sD,YAAA,SAAA1D,GACA,OAAAA,EAAAxzD,KAAAoI,YAAApI,KAAAoI,YAAApI,KAAAkwB,WAGAgiC,cAAA9nD,UAAAwqD,QAAA,SAAAlzD,GACA,GAAA1B,KAAAwK,MAAAxK,KAAAwK,KAAA9I,GACA,OAAAA,GACA,iBACA1B,KAAAqK,aAAA3I,EAAA,IAAA+F,kBAAA/F,EAAA1B,KAAAuyC,aAAAvyC,KAAAoI,YAAApI,KAAAg2D,gBACA,MACA,mBACAh2D,KAAAqK,aAAA3I,EAAA,IAAAqG,oBAAArG,EAAA1B,KAAAS,KAAAT,KAAAi0D,UAAAj0D,KAAA8zD,YACA,MACA,eACA9zD,KAAAqK,aAAA3I,EAAA,IAAAoG,gBAAApG,EAAA1B,KAAA8zD,YACA,MACA,mBACA9zD,KAAAqK,aAAA3I,EAAA,IAAAwG,oBAAAxG,EAAA1B,KAAAmI,WAAAnI,KAAAoI,cACA,MACA,cACApI,KAAAqK,aAAA3I,EAAA,IAAA2G,eAAA3G,EAAA1B,OACA,MACA,QACAA,KAAAqK,aAAA3I,GAGA,eAAAA,GAAA1B,KAAA42D,cACA52D,KAAA42D,aAAAvO,KAAAroD,KAAA,IAAAyH,kBAAA/F,EAAA1B,KAAAuyC,aAAAvyC,KAAAoI,YAAApI,KAAA8zD,YAEA,iBAAApyD,GAAA1B,KAAA62D,gBACA72D,KAAA62D,eAAAxO,KAAAroD,KAAA,IAAA+H,oBAAArG,EAAA1B,KAAAS,KAAAT,KAAAi0D,UAAAj0D,KAAA8zD,YAEA,aAAApyD,GAAA1B,KAAA82D,YACA92D,KAAA82D,WAAAzO,KAAAroD,KAAA,IAAA8H,gBAAApG,EAAA1B,KAAA8zD,YAEA,iBAAApyD,GAAA1B,KAAA+2D,gBACA/2D,KAAA+2D,eAAA1O,KAAAroD,KAAA,IAAAkI,oBAAAxG,EAAA1B,KAAAmI,WAAAnI,KAAAoI,cAEA,YAAA1G,GAAA1B,KAAAg3D,WACAh3D,KAAAg3D,UAAA3O,KAAAroD,KAAA,IAAAqI,eAAA3G,EAAA1B,QAIAkyD,cAAA9nD,UAAA0rD,wBAAA,SAAAvtD,GAEA,IAAAmtD,EAAA,IAAAptD,wBAAAC,EAAAvI,KAAAuyC,cACAvyC,KAAAqK,aAAA,QAAAqrD,GAEA11D,KAAAm3D,SACAn3D,KAAAm3D,QAAA9O,KAAAroD,KAAA01D,IAIAxD,cAAA9nD,UAAAurD,mBAAA,SAAAptD,GAEA,IAAAmtD,EAAA,IAAAltD,mBAAAD,EAAAvI,KAAAuyC,cACAvyC,KAAAqK,aAAA,QAAAqrD,GAEA11D,KAAAm3D,SACAn3D,KAAAm3D,QAAA9O,KAAAroD,KAAA01D,IAGA,IAAA0B,YAAA,WACA,IAAA5/C,KAwCA,OAvCAA,EAAAw5B,gBAGA,SAAA8gB,GAEA,IAAAuF,EAAA,EACAC,KA2BAxF,EAAAtxD,SAAAu/C,cAAAC,wBAAA8R,EAAAtxD,UACAsxD,EAAAtxD,SAAAutB,WAAAuiB,iBAAAW,oBAAA6gB,EAAAtxD,UACAsxD,EAAAtxD,SAAAutB,WAAAwpC,eA3BA,WACAF,GAAA,GA2BAvF,EAAAtxD,SAAAutB,WAAAypC,cAxBA,WAEA,IADAH,GAAA,IAYA,WACA,IAAAvxD,EAAAE,EAAAsxD,EAAArxD,OACA,IAAAH,EAAA,EAAiBA,EAAAE,EAASF,GAAA,EAC1BwxD,EAAAxxD,GAAAwxB,UAEAggC,EAAArxD,OAAA,EAfAwxD,IAsBA3F,EAAAtxD,SAAAutB,WAAA2pC,2BAlBA,SAAAv0D,IACA,IAAAm0D,EAAAvrD,QAAA5I,IACAm0D,EAAA3sD,KAAAxH,KAkBAqU,EAzCA,GA4CAhT,kBAAA4yD,YAEA,IAAAO,kBAAA,WAEA,IAAAngD,MACA1S,KAAAc,OACAzB,OAAA,KACAoH,SAAA,KAEA,SAAAqsD,sBAAAzsD,GACA,OAAAA,EAAA2hB,cAAA1hB,OAAAD,EAAA2hB,cAAA7hB,aAGA,SAAA4sD,YAAAC,EAAA/uD,GACA,iBAAA+uD,GAAA,YAAAA,GAAA,WAAAA,GAAA/uD,aAAAgvD,OAGA,SAAAC,QAAA73D,GACA,IAAA83D,SAAA93D,EACA,cAAA83D,GAAA,YAAAA,GAAA93D,aAAA43D,OACA,OAAA53D,EAEA,GAAAy3D,sBAAAz3D,GAAA,CACA,IAAA2F,EAAAoyD,EAAA/3D,EAAA8F,OACAkyD,KACA,IAAAryD,EAAA,EAAoBA,EAAAoyD,EAAOpyD,GAAA,EAC3BqyD,EAAAryD,IAAA3F,EAAA2F,GAEA,OAAAqyD,EAEA,OAAAh4D,EAAAspB,SACAtpB,EAAA4I,OADA,EAKA,IAAAqvD,UAAA7gD,cAAAE,gBAAA,2BAAAwB,IACAo/C,WAAA9gD,cAAAE,gBAAA,4BAAAwB,IACAq/C,aAAA/gD,cAAAE,gBAAA,0BAAAwB,IAEA,SAAAs/C,IAAAp4D,EAAA+I,GACA,IAAA+uD,SAAA93D,EACAq4D,SAAAtvD,EACA,cAAA+uD,GAAA,WAAAO,EACA,OAAAr4D,EAAA+I,EAEA,GAAA2uD,YAAAI,EAAA93D,IAAA03D,YAAAW,EAAAtvD,GACA,OAAA/I,EAAA+I,EAEA,GAAA0uD,sBAAAz3D,IAAA03D,YAAAW,EAAAtvD,GAGA,OAFA/I,IAAA8U,MAAA,IACA,GAAA9U,EAAA,GAAA+I,EACA/I,EAEA,GAAA03D,YAAAI,EAAA93D,IAAAy3D,sBAAA1uD,GAGA,OAFAA,IAAA+L,MAAA,IACA,GAAA9U,EAAA+I,EAAA,GACAA,EAEA,GAAA0uD,sBAAAz3D,IAAAy3D,sBAAA1uD,GAAA,CAIA,IAFA,IAAApD,EAAA,EAAAoyD,EAAA/3D,EAAA8F,OAAAwyD,EAAAvvD,EAAAjD,OACAkyD,KACAryD,EAAAoyD,GAAApyD,EAAA2yD,IACA,iBAAAt4D,EAAA2F,IAAA3F,EAAA2F,aAAAiyD,UAAA,iBAAA7uD,EAAApD,IAAAoD,EAAApD,aAAAiyD,QACAI,EAAAryD,GAAA3F,EAAA2F,GAAAoD,EAAApD,GAEAqyD,EAAAryD,QAAAoiC,IAAAh/B,EAAApD,GAAA3F,EAAA2F,GAAA3F,EAAA2F,IAAAoD,EAAApD,GAEAA,GAAA,EAEA,OAAAqyD,EAEA,SAEA,IAAA3yB,IAAA+yB,IAEA,SAAAG,IAAAv4D,EAAA+I,GACA,IAAA+uD,SAAA93D,EACAq4D,SAAAtvD,EACA,GAAA2uD,YAAAI,EAAA93D,IAAA03D,YAAAW,EAAAtvD,GAOA,MANA,WAAA+uD,IACA93D,EAAAq0D,SAAAr0D,IAEA,WAAAq4D,IACAtvD,EAAAsrD,SAAAtrD,IAEA/I,EAAA+I,EAEA,GAAA0uD,sBAAAz3D,IAAA03D,YAAAW,EAAAtvD,GAGA,OAFA/I,IAAA8U,MAAA,IACA,GAAA9U,EAAA,GAAA+I,EACA/I,EAEA,GAAA03D,YAAAI,EAAA93D,IAAAy3D,sBAAA1uD,GAGA,OAFAA,IAAA+L,MAAA,IACA,GAAA9U,EAAA+I,EAAA,GACAA,EAEA,GAAA0uD,sBAAAz3D,IAAAy3D,sBAAA1uD,GAAA,CAGA,IAFA,IAAApD,EAAA,EAAAoyD,EAAA/3D,EAAA8F,OAAAwyD,EAAAvvD,EAAAjD,OACAkyD,KACAryD,EAAAoyD,GAAApyD,EAAA2yD,IACA,iBAAAt4D,EAAA2F,IAAA3F,EAAA2F,aAAAiyD,UAAA,iBAAA7uD,EAAApD,IAAAoD,EAAApD,aAAAiyD,QACAI,EAAAryD,GAAA3F,EAAA2F,GAAAoD,EAAApD,GAEAqyD,EAAAryD,QAAAoiC,IAAAh/B,EAAApD,GAAA3F,EAAA2F,GAAA3F,EAAA2F,IAAAoD,EAAApD,GAEAA,GAAA,EAEA,OAAAqyD,EAEA,SAGA,SAAAQ,IAAAx4D,EAAA+I,GACA,IAEAiC,EAKArF,EAAAE,EAPAiyD,SAAA93D,EACAq4D,SAAAtvD,EAEA,GAAA2uD,YAAAI,EAAA93D,IAAA03D,YAAAW,EAAAtvD,GACA,OAAA/I,EAAA+I,EAIA,GAAA0uD,sBAAAz3D,IAAA03D,YAAAW,EAAAtvD,GAAA,CAGA,IAFAlD,EAAA7F,EAAA8F,OACAkF,EAAAJ,iBAAA,UAAA/E,GACAF,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BqF,EAAArF,GAAA3F,EAAA2F,GAAAoD,EAEA,OAAAiC,EAEA,GAAA0sD,YAAAI,EAAA93D,IAAAy3D,sBAAA1uD,GAAA,CAGA,IAFAlD,EAAAkD,EAAAjD,OACAkF,EAAAJ,iBAAA,UAAA/E,GACAF,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BqF,EAAArF,GAAA3F,EAAA+I,EAAApD,GAEA,OAAAqF,EAEA,SAGA,SAAAkoD,IAAAlzD,EAAA+I,GACA,IAEAiC,EAIArF,EAAAE,EANAiyD,SAAA93D,EACAq4D,SAAAtvD,EAEA,GAAA2uD,YAAAI,EAAA93D,IAAA03D,YAAAW,EAAAtvD,GACA,OAAA/I,EAAA+I,EAGA,GAAA0uD,sBAAAz3D,IAAA03D,YAAAW,EAAAtvD,GAAA,CAGA,IAFAlD,EAAA7F,EAAA8F,OACAkF,EAAAJ,iBAAA,UAAA/E,GACAF,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BqF,EAAArF,GAAA3F,EAAA2F,GAAAoD,EAEA,OAAAiC,EAEA,GAAA0sD,YAAAI,EAAA93D,IAAAy3D,sBAAA1uD,GAAA,CAGA,IAFAlD,EAAAkD,EAAAjD,OACAkF,EAAAJ,iBAAA,UAAA/E,GACAF,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BqF,EAAArF,GAAA3F,EAAA+I,EAAApD,GAEA,OAAAqF,EAEA,SAEA,SAAAytD,IAAAz4D,EAAA+I,GAOA,MANA,iBAAA/I,IACAA,EAAAq0D,SAAAr0D,IAEA,iBAAA+I,IACAA,EAAAsrD,SAAAtrD,IAEA/I,EAAA+I,EAEA,IAAA2vD,QAAAN,IACAO,QAAAJ,IACAK,QAAAJ,IACAK,QAAA3F,IACA4F,QAAAL,IAEA,SAAAM,MAAA/pB,EAAA/rC,EAAAC,GACA,GAAAD,EAAAC,EAAA,CACA,IAAA81D,EAAA91D,EACAA,EAAAD,EACAA,EAAA+1D,EAEA,OAAAr0D,KAAA1B,IAAA0B,KAAAzB,IAAA8rC,EAAA/rC,GAAAC,GAGA,SAAA+1D,iBAAAjzD,GACA,OAAAA,EAAAI,UAEA,IAAA8yD,mBAAAD,iBAEA,SAAAE,iBAAAnzD,GACA,OAAAA,EAAAI,UAEA,IAAAgzD,mBAAAH,iBAEAI,mBAAA,aAEA,SAAAvzD,OAAAwzD,EAAAC,GACA,oBAAAD,gBAAA1B,OAEA,OADA2B,KAAA,EACA50D,KAAAQ,IAAAm0D,EAAAC,GAEAA,IACAA,EAAAF,mBAEA,IAAA1zD,EAAAE,EAAAlB,KAAA1B,IAAAq2D,EAAAxzD,OAAAyzD,EAAAzzD,QACAiW,EAAA,EACA,IAAApW,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5BoW,GAAApX,KAAAI,IAAAw0D,EAAA5zD,GAAA2zD,EAAA3zD,GAAA,GAEA,OAAAhB,KAAAM,KAAA8W,GAGA,SAAAy9C,UAAAC,GACA,OAAAvG,IAAAuG,EAAA3zD,OAAA2zD,IAGA,SAAAC,SAAA1zD,GACA,IAEA0C,EAAAC,EAFAE,EAAA7C,EAAA,GAAuB8C,EAAA9C,EAAA,GAAgB+C,EAAA/C,EAAA,GACvC9C,EAAAyB,KAAAzB,IAAA2F,EAAAC,EAAAC,GAAA9F,EAAA0B,KAAA1B,IAAA4F,EAAAC,EAAAC,GACAqG,GAAAlM,EAAAD,GAAA,EAEA,GAAAC,GAAAD,EACAyF,EAAAC,EAAA,MACS,CACT,IAAAU,EAAAnG,EAAAD,EAEA,OADA0F,EAAAyG,EAAA,GAAA/F,GAAA,EAAAnG,EAAAD,GAAAoG,GAAAnG,EAAAD,GACAC,GACA,KAAA2F,EAAAH,GAAAI,EAAAC,GAAAM,GAAAP,EAAAC,EAAA,KAA0D,MAC1D,KAAAD,EAAAJ,GAAAK,EAAAF,GAAAQ,EAAA,EAA4C,MAC5C,KAAAN,EAAAL,GAAAG,EAAAC,GAAAO,EAAA,EAEAX,GAAA,EAGA,OAAAA,EAAAC,EAAAyG,EAAApJ,EAAA,IAGA,SAAA2zD,QAAA1wD,EAAAC,EAAAC,GAGA,OAFAA,EAAA,IAAAA,GAAA,GACAA,EAAA,IAAAA,GAAA,GACAA,EAAA,IAAAF,EAAA,GAAAC,EAAAD,GAAAE,EACAA,EAAA,GAAAD,EACAC,EAAA,IAAAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EACAF,EAGA,SAAA2wD,SAAA5zD,GACA,IAIA6C,EAAAC,EAAAC,EAJAL,EAAA1C,EAAA,GACA2C,EAAA3C,EAAA,GACAoJ,EAAApJ,EAAA,GAIA,OAAA2C,EACAE,EAAAC,EAAAC,EAAAqG,MACS,CAET,IAAAlG,EAAAkG,EAAA,GAAAA,GAAA,EAAAzG,GAAAyG,EAAAzG,EAAAyG,EAAAzG,EACAM,EAAA,EAAAmG,EAAAlG,EACAL,EAAA8wD,QAAA1wD,EAAAC,EAAAR,EAAA,KACAI,EAAA6wD,QAAA1wD,EAAAC,EAAAR,GACAK,EAAA4wD,QAAA1wD,EAAAC,EAAAR,EAAA,KAGA,OAAAG,EAAAC,EAAAC,EAAA/C,EAAA,IAGA,SAAA6zD,OAAA1wD,EAAA2wD,EAAAC,EAAAC,EAAAC,GAOA,QANAlyB,IAAAiyB,QAAAjyB,IAAAkyB,IACAD,EAAAF,EACAG,EAAAF,EACAD,EAAA,EACAC,EAAA,GAEAA,EAAAD,EAAA,CACA,IAAAI,EAAAH,EACAA,EAAAD,EACAA,EAAAI,EAEA,GAAA/wD,GAAA2wD,EACA,OAAAE,EACS,GAAA7wD,GAAA4wD,EACT,OAAAE,EAEA,IAAAr+C,EAAAm+C,IAAAD,EAAA,GAAA3wD,EAAA2wD,IAAAC,EAAAD,GACA,IAAAE,EAAAl0D,OACA,OAAAk0D,GAAAC,EAAAD,GAAAp+C,EAEA,IAAAjW,EAAAE,EAAAm0D,EAAAl0D,OACAkF,EAAAJ,iBAAA,UAAA/E,GACA,IAAAF,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtBqF,EAAArF,GAAAq0D,EAAAr0D,IAAAs0D,EAAAt0D,GAAAq0D,EAAAr0D,IAAAiW,EAEA,OAAA5Q,EAEA,SAAAjF,OAAA9C,EAAAC,GAUA,QATA6kC,IAAA7kC,SACA6kC,IAAA9kC,GACAA,EAAA,EACAC,EAAA,IAEAA,EAAAD,EACAA,OAAA8kC,IAGA7kC,EAAA4C,OAAA,CACA,IAAAH,EAAAE,EAAA3C,EAAA4C,OACA7C,IACAA,EAAA2H,iBAAA,UAAA/E,IAEA,IAAAmF,EAAAJ,iBAAA,UAAA/E,GACAs0D,EAAA10D,OAAAM,SACA,IAAAJ,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1BqF,EAAArF,GAAA1C,EAAA0C,GAAAw0D,GAAAj3D,EAAAyC,GAAA1C,EAAA0C,IAEA,OAAAqF,EAMA,YAJA+8B,IAAA9kC,IACAA,EAAA,GAGAA,EADAwC,OAAAM,UACA7C,EAAAD,GAGA,SAAAm3D,WAAAzhD,EAAA0hD,EAAAC,EAAA78C,GACA,IAAA9X,EAAAE,EAAA8S,EAAA7S,OACAuc,EAAAiQ,WAAAlW,aACAiG,EAAAiO,cAAA7S,EAAA5X,GACA,IAAA00D,EAAAC,EAAAC,GAAA,KACA,IAAA90D,EAAA,EAAkBA,EAAAE,EAASF,GAAA,EAC3B40D,EAAAF,KAAA10D,GAAA00D,EAAA10D,GAAA80D,EACAD,EAAAF,KAAA30D,GAAA20D,EAAA30D,GAAA80D,EACAp4C,EAAAuO,YAAAjY,EAAAhT,GAAA,GAAAgT,EAAAhT,GAAA,GAAA60D,EAAA,GAAA7hD,EAAAhT,GAAA,GAAA60D,EAAA,GAAA7hD,EAAAhT,GAAA,GAAA40D,EAAA,GAAA5hD,EAAAhT,GAAA,GAAA40D,EAAA,GAAA5hD,EAAAhT,GAAA,GAAAA,GAAA,GAEA,OAAA0c,EAGA,SAAAq4C,mBAAA/sC,KAAAnuB,KAAAm7D,UACA,IAAA30D,IAAAxG,KAAA8S,EACAsoD,cAAA,qBAAAr2D,KAAAyB,KACA60D,cAAA,IAAA70D,IAAA4F,QAAA,UACAkvD,SAAAntC,KAAAnuB,KAAAkQ,GACAE,UAAAmrD,cAAA/a,QAAAgb,OACAC,aAAAN,SACAM,aAAAC,YAAAD,aAAAjrC,eACA7wB,OAAAg8D,eAAAF,aAAA,SACAniD,IAAA,WACA,OAAAmiD,aAAAryD,KAGA+kB,KAAAT,KAAAkuC,cAAA,EAAAztC,KAAAT,KAAAU,WAAAmC,UACApC,KAAAT,KAAAmuC,iBAAA,EACA,IAAAC,QAAA3tC,KAAAnuB,KAAAyvC,GAAAthB,KAAAT,KAAAU,WAAAmC,UACAwrC,SAAA5tC,KAAAnuB,KAAAg8B,GAAA7N,KAAAT,KAAAU,WAAAmC,UACAxwB,MAAAouB,KAAAnuB,KAAA4gC,GAAAzS,KAAAnuB,KAAA4gC,GAAA,EACA/gC,OAAAsuB,KAAAnuB,KAAAgsB,GAAAmC,KAAAnuB,KAAAgsB,GAAA,EACAjqB,KAAAosB,KAAAnuB,KAAA+X,GACAikD,OAAAC,QAAAC,QAAAC,SAAAC,OACAC,QAAAC,UAAAC,SAAAC,OAAAC,kBAAAt1D,SAAAu1D,SAAAC,YAAAttD,MAAAutD,UAAAC,SAAA1nD,KAAAumD,YAAAoB,eACAC,0BAQAC,aAPA,GAAAh9D,KAAAi9D,GAAA,CACA,IAAA92D,EAAAE,IAAArG,KAAAi9D,GAAA32D,OACA,IAAAH,EAAA,EAAsBA,EAAAE,IAASF,GAAA,EAC/B42D,uBAAA52D,GAAA+2D,KAAA,uBAA8Dl9D,KAAAi9D,GAAA92D,GAAA,QAK9D,IAAAg3D,oBAAAD,KAAA,oCAAyE12D,IAAA,0BAA8B,GACvG42D,QAAAjC,SAAAzsC,GAAA1uB,KAAA2P,EAAArJ,OAAA,EAEA+2D,QAAAh9D,KAAAL,OAAA,IAAAK,KAAAL,KAAAsuC,GAEAgvB,OAAA,SAAAC,EAAAC,GACA,IAAAr3D,EAAAuJ,EAAArJ,EAAAhG,KAAA0pB,GAAAzjB,OAAAjG,KAAA0pB,GAAAzjB,OAAA,EACAm3D,EAAAryD,iBAAA,UAAA/E,GAEA,IAAA+0C,EAAAj2C,KAAAU,MADA,EACA0+C,MAGA,IAFAp+C,EAAA,EACAuJ,EAAA,EACAvJ,EAAAi1C,GAAA,CAEA,IAAA1rC,EAAA,EAAwBA,EAAArJ,EAAMqJ,GAAA,EAC9B+tD,EAAA/tD,KAAA8tD,EAAA,EAAAA,EAAAv3D,OAAAM,SAGAJ,GAAA,EAGA,IAAAu3D,EAbA,EAaAnZ,KACAnoC,EAAAshD,EAAAv4D,KAAAU,MAAA63D,GACAlyD,EAAAJ,iBAAA,UAAA/E,GACA,GAAAA,EAAA,GACA,IAAAqJ,EAAA,EAAwBA,EAAArJ,EAAMqJ,GAAA,EAC9BlE,EAAAkE,GAAArP,KAAA0pB,GAAAra,GAAA+tD,EAAA/tD,KAAA8tD,EAAA,EAAAA,EAAAv3D,OAAAM,UAAA6V,EAIA,OAAA5Q,EAEA,OAAAnL,KAAA0pB,GAAA0zC,EAAA,KAAAD,EAAA,EAAAA,EAAAv3D,OAAAM,UAAA6V,GAESlR,KAAA7K,MAgBT,SAAAs9D,eAAAj+D,EAAAk+D,GACA,OAAA5B,OAAAt8D,EAAAk+D,GAAA,GAGA,SAAAC,gBAAAn+D,EAAAk+D,GACA,OAAA1B,QAAAx8D,EAAAk+D,GAAA,GAnBAnC,aAAAO,SACAA,OAAAP,aAAAO,OAAA9wD,KAAAuwD,cACAQ,QAAAD,QAGAP,aAAAS,UACAA,QAAAT,aAAAS,QAAAhxD,KAAAuwD,cACAU,SAAAD,SAGAT,aAAAW,SACAA,OAAAX,aAAAW,OAAAlxD,KAAAuwD,eAWAp7D,KAAAmwB,iBACAkrC,YAAAr7D,KAAAmwB,eAAAtlB,KAAA7K,OAGAA,KAAAy9D,oBACAhB,eAAAz8D,KAAAy9D,kBAAA5yD,KAAA7K,OAGA,IAAAqtB,KAAAS,KAAAT,KAAAU,WAAAuiB,iBAAAzlC,KAAAijB,KAAAT,KAAAU,WAAAuiB,kBAyJA4T,KAAAwZ,SAAAx6D,MAAAmjC,KAAAs3B,UAAAC,UAAAC,cAvJA,SAAAC,OAAAC,EAAAC,GACA,IAAAC,GAAAD,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,IACAG,EAAAp5D,KAAA8nB,MAAAqxC,EAAA,GAAAn5D,KAAAM,KAAA64D,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAAA13D,UAEA,QADAzB,KAAA8nB,MAAAqxC,EAAA,GAAAA,EAAA,IAAA13D,UACA23D,EAAA,GAGA,SAAAC,QAAA70D,EAAA2wD,EAAAC,EAAAkE,EAAAC,GACA,OAAAC,UAAAjG,WAAA/uD,EAAA2wD,EAAAC,EAAAkE,EAAAC,GAGA,SAAAE,OAAAj1D,EAAA2wD,EAAAC,EAAAkE,EAAAC,GACA,OAAAC,UAAAlG,UAAA9uD,EAAA2wD,EAAAC,EAAAkE,EAAAC,GAGA,SAAAG,KAAAl1D,EAAA2wD,EAAAC,EAAAkE,EAAAC,GACA,OAAAC,UAAAhG,aAAAhvD,EAAA2wD,EAAAC,EAAAkE,EAAAC,GAGA,SAAAC,UAAA3Y,EAAAr8C,EAAA2wD,EAAAC,EAAAkE,EAAAC,QACAn2B,IAAAk2B,GACAA,EAAAnE,EACAoE,EAAAnE,GAEA5wD,KAAA2wD,IAAAC,EAAAD,GAGA,IAAArsC,EAAA+3B,EADAr8C,IAAA,IAAAA,EAAA,IAAAA,GAEA,GAAAsuD,sBAAAwG,GAAA,CACA,IAAAt4D,EAAAE,EAAAo4D,EAAAn4D,OACAkF,EAAAJ,iBAAA,UAAA/E,GACA,IAAAF,EAAA,EAA2BA,EAAAE,EAASF,GAAA,EACpCqF,EAAArF,IAAAu4D,EAAAv4D,GAAAs4D,EAAAt4D,IAAA8nB,EAAAwwC,EAAAt4D,GAEA,OAAAqF,EAEA,OAAAkzD,EAAAD,GAAAxwC,EAAAwwC,EAIA,SAAAK,WAAAva,GACA,IAAAp+C,EAAA6iB,EAAAgC,EAAA3kB,EAAArG,KAAA2P,EAAArJ,OACA,GAAAtG,KAAA2P,EAAArJ,QAAA,iBAAAtG,KAAA2P,EAAA,GAMA,GAFAqZ,GAAA,GACAu7B,GAAAp2B,KAAAT,KAAAU,WAAAmC,WACAvwB,KAAA2P,EAAA,GAAAhG,EACAqf,EAAA,EACAgC,EAAAhrB,KAAA2P,EAAA,GAAAhG,MACiB,CACjB,IAAAxD,EAAA,EAA4BA,EAAAE,EAAA,EAAQF,GAAA,GACpC,GAAAo+C,IAAAvkD,KAAA2P,EAAAxJ,GAAAwD,EAAA,CACAqf,EAAA7iB,EAAA,EACA6kB,EAAAhrB,KAAA2P,EAAAxJ,GAAAwD,EACA,MACyB,GAAA46C,EAAAvkD,KAAA2P,EAAAxJ,GAAAwD,GAAA46C,EAAAvkD,KAAA2P,EAAAxJ,EAAA,GAAAwD,EAAA,CACzB46C,EAAAvkD,KAAA2P,EAAAxJ,GAAAwD,EAAA3J,KAAA2P,EAAAxJ,EAAA,GAAAwD,EAAA46C,GACAv7B,EAAA7iB,EAAA,EACA6kB,EAAAhrB,KAAA2P,EAAAxJ,EAAA,GAAAwD,IAEAqf,EAAA7iB,EAAA,EACA6kB,EAAAhrB,KAAA2P,EAAAxJ,GAAAwD,GAEA,QAGA,IAAAqf,IACAA,EAAA7iB,EAAA,EACA6kB,EAAAhrB,KAAA2P,EAAAxJ,GAAAwD,QA3BAqf,EAAA,EACAgC,EAAA,EA+BA,IAAAnT,KAGA,OAFAA,EAAAmR,QACAnR,EAAA0sC,KAAAv5B,EAAAmD,KAAAT,KAAAU,WAAAmC,UACA1Y,EAGA,SAAApC,IAAA0V,GACA,IAAAtT,EAAA1R,EAAAE,EACA,IAAArG,KAAA2P,EAAArJ,QAAA,iBAAAtG,KAAA2P,EAAA,GACA,UAAA0gC,MAAA,yCAAAllB,GAEAA,GAAA,EACAtT,GACA0sC,KAAAvkD,KAAA2P,EAAAwb,GAAAxhB,EAAAwkB,KAAAT,KAAAU,WAAAmC,UACAhtB,UAEA,IAAAiI,EAAAxL,KAAA2P,EAAAwb,GAAAjQ,eAAA,KAAAlb,KAAA2P,EAAAwb,GAAAhiB,EAAAnJ,KAAA2P,EAAAwb,EAAA,GAAA1b,EAGA,IADApJ,EAAAmF,EAAAlF,OACAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B0R,EAAA1R,GAAAqF,EAAArF,GACA0R,EAAAtU,MAAA4C,GAAAqF,EAAArF,GAEA,OAAA0R,EAGA,SAAAknD,aAAAC,EAAAC,GAIA,OAHAA,IACAA,EAAA9wC,KAAAT,KAAAU,WAAAmC,WAEAyuC,EAAAC,EAGA,SAAAC,aAAAv1D,EAAAs1D,GAOA,OANAt1D,GAAA,IAAAA,IACAA,EAAA46C,MAEA0a,IACAA,EAAA9wC,KAAAT,KAAAU,WAAAmC,WAEA5mB,EAAAs1D,EAGA,SAAAE,WAAA3pD,GACAvP,OAAAm5D,WAAAC,SAAA7pD,GAGA,SAAA0jC,mBACA,OAAA/qB,KAAA+qB,mBAGA,SAAAomB,UAAAttC,EAAA4kC,GACA,uBAAArzD,WACAglC,IAAAquB,EACArzD,MAAA+7D,UAAAttC,GAEAzuB,MAAA+7D,UAAAttC,EAAA4kC,GAEA,GAGA,SAAA9vB,OAAA9U,EAAA4kC,GACA,uBAAArzD,WACAglC,IAAAquB,EACArzD,MAAAujC,OAAA9U,GAEAzuB,MAAAujC,OAAA9U,EAAA4kC,GAEA,GAGA,SAAA2I,cAAAC,GACAjb,KAAA,IAAAib,EAAA,EAAAr6D,KAAAU,MAAA0+C,KAAAib,KACAj8D,MAAAm4D,YAAAnX,MAIA,IAAAv7B,MAAAmF,KAAAnuB,KAAAmrB,IACAs0C,aAAAtxC,KAAA4iB,YAAA5iB,KAAA4iB,UAAAzqC,QACAsf,OACAy5C,SAAAl6D,KAAAU,MAAA,IAAAV,KAAAoB,UACA6nB,WAAAD,KAAAC,WACA,SAAAsxC,kBAAAC,GAMA,OAJAp8D,MAAAo8D,EACAtE,cACA8D,WAAAE,UAEAh/D,KAAAu/D,oBAAAzxC,KAAAC,WAAAC,SAAA,iBAAAhuB,KAAAypB,SACAvmB,OAEA,iBAAAlD,KAAAypB,WACAk0C,UAAA39D,KAAA29D,UACAC,UAAA59D,KAAA49D,UACAC,cAAA79D,KAAA69D,eAEAtB,YACAl2B,KAAAvY,KAAA0xB,eAAAnZ,KACAk2B,UAAAzuC,KAAA0xB,eACAgd,SAAA1uC,KAAAT,KAAA0yB,cACAic,QAAAO,UAAAP,QAAAnxD,KAAA0xD,WACAN,UAAAM,UAAAN,UAAApxD,KAAA0xD,WACAL,SAAAK,UAAAL,SAAArxD,KAAA0xD,WACAJ,OAAAI,UAAAJ,OAAAtxD,KAAA0xD,WACAznD,KAAAynD,UAAAznD,KAAAynD,UAAAznD,KAAAjK,KAAA0xD,WAAA,KACAH,kBAAAF,UAEAnsD,YACAA,UAAA+d,KAAA0xB,eAAA,wBACA0b,cAAAnrD,UACAA,YACAusD,YAAAvsD,UAAAusD,cAOA,IAAArB,UAAA9a,UACAA,QAAAoc,UAAA,4BAEApB,SACAA,OAAAoB,UAAA,KAEA6C,aAAAtxC,KAAA4iB,YAAA5iB,KAAA4iB,UAAAzqC,WACAsf,SACAA,OAAAuI,KAAA4iB,UAAA,GAAA8O,gBAEA0E,KAAAlkD,KAAAqtB,KAAAC,cAAAttB,KAAAqtB,KAAAU,WAAAmC,UACA6qC,gBACA2C,SAAAjB,eAAAvY,OAEA4Y,sBACA98D,KAAAu/D,kBAAAzxC,KAAAC,WAAAC,QAIA,UAAA2uC,aAAAlzC,WACAkzC,0BAAA5zD,GAGA4zD,cAEA,OAAA0C,kBAIA,OADA7nD,GAAAqjD,sCACArjD,GAxpBA,GA0pBAgoD,kBAAA,WAwEA,OACAC,kBAvEA,SAAA3xC,EAAAnuB,EAAAkM,GACAlM,EAAA8S,IACA5G,EAAAyD,GAAA,EACAzD,EAAA4G,GAAA,EACA5G,EAAAgvD,mBAAAlD,kBAAAkD,mBACAhvD,EAAAoiB,gBAAAtjB,KAAAkB,EAAAgvD,mBAAA/sC,EAAAnuB,EAAAkM,GAAAhB,KAAAgB,MAmEA6zD,eAnDA,SAAAr2C,GACA,IACA2G,EAAAhwB,KAAAmwB,eAAA9G,GACA4G,EAAAjwB,KAAAmwB,eAAA9G,GAFA,KAGAs2C,EAAA,EACA,GAAA3vC,EAAA/pB,OAAA,CACA,IAAAH,EACA,IAAAA,EAAA,EAAoBA,EAAAkqB,EAAA/pB,OAAYH,GAAA,EAChC65D,GAAA76D,KAAAI,IAAA+qB,EAAAnqB,GAAAkqB,EAAAlqB,GAAA,GAEA65D,EAAA,IAAA76D,KAAAM,KAAAu6D,QAEAA,EAAA,EAEA,OAAAA,GAsCAlC,kBAnCA,SAAAp0C,GACA,QAAA6e,IAAAloC,KAAAyuB,IACA,OAAAzuB,KAAAyuB,IAEA,IAIAivC,EAGA53D,EALAkqB,EAAAhwB,KAAAmwB,eAAA9G,GACA4G,EAAAjwB,KAAAmwB,eAAA9G,GAHA,MAKA,GAAA2G,EAAA/pB,OAGA,IAFAy3D,EAAA3yD,iBAAA,UAAAilB,EAAA/pB,QAEAH,EAAA,EAAoBA,EAAAkqB,EAAA/pB,OAAYH,GAAA,EAIhC43D,EAAA53D,IAAAmqB,EAAAnqB,GAAAkqB,EAAAlqB,KAZA,UAeA43D,GAAAztC,EAAAD,IAfA,KAiBA,OAAA0tC,GAeAvtC,eAjEA,SAAA9G,GAQA,OAPAA,GAAArpB,KAAA8tB,KAAAC,WAAAmC,WACA7G,GAAArpB,KAAAwpB,cACAxpB,KAAA4/D,eAAA10C,YACAlrB,KAAA4/D,eAAA71C,UAAA/pB,KAAA4/D,eAAA10C,UAAA7B,EAAArpB,KAAA4/D,eAAA71C,UAAA,EACA/pB,KAAA4/D,eAAA18D,MAAAlD,KAAAopB,iBAAAC,EAAArpB,KAAA4/D,gBACA5/D,KAAA4/D,eAAA10C,UAAA7B,GAEArpB,KAAA4/D,eAAA18D,OA0DA28D,qBAbA,WACA,OAAA7/D,KAAA0pB,IAaAo2C,iBAVA,SAAAC,GACA//D,KAAA+/D,kBArEA,IAiFA,WAEA,SAAAlE,EAAAx8D,EAAAk+D,EAAAyC,GACA,IAAAhgE,KAAAsP,IAAAtP,KAAAgqB,UACA,OAAAhqB,KAAA0pB,GAEArqB,MAAA6nC,cAAA,GACA,IAMA+4B,EAAAC,EAeAp6D,EAAAE,EAAAm6D,EArBA5tB,EAAAvyC,KAAAqtB,KAAAC,cACAtD,EAAAhqB,KAAAgqB,UACAo2C,EAAAp2C,IAAA/jB,OAAA,GAAAqD,EACA,GAAAipC,GAAA6tB,EACA,OAAApgE,KAAA0pB,GAkBA,GAfAs2C,EAYAE,EAAAE,GAFAH,EAHA1C,EAGAz4D,KAAAQ,IAAA86D,EAAAtyC,KAAAT,KAAAU,WAAAmC,UAAAqtC,GAFAz4D,KAAAzB,IAAA,EAAA+8D,EAAApgE,KAAA8tB,KAAAnuB,KAAAyvC,QAPAmuB,KAAAvzC,EAAA/jB,OAAA,KACAs3D,EAAAvzC,EAAA/jB,OAAA,GAGAg6D,EAAAG,GADAF,EAAAl2C,IAAA/jB,OAAA,EAAAs3D,GAAAj0D,IAWA,aAAAjK,EAAA,CAEA,GADAyF,KAAAU,OAAA+sC,EAAA2tB,GAAAD,GACA,KACA,OAAAjgE,KAAAmwB,gBAAA8vC,GAAA1tB,EAAA2tB,GAAAD,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,OAEa,eAAA7wB,EAAA,CACb,IAAAghE,EAAArgE,KAAAmwB,eAAA+vC,EAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAowC,EAAAtgE,KAAAmwB,eAAAiwC,EAAApgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAqwC,EAAAvgE,KAAAmwB,iBAAAoiB,EAAA2tB,GAAAD,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAswC,EAAA17D,KAAAU,OAAA+sC,EAAA2tB,GAAAD,GACA,GAAAjgE,KAAA0pB,GAAAzjB,OAAA,CAGA,IADAD,GADAm6D,EAAA,IAAA/0D,MAAAi1D,EAAAp6D,SACAA,OACAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCq6D,EAAAr6D,IAAAw6D,EAAAx6D,GAAAu6D,EAAAv6D,IAAA06D,EAAAD,EAAAz6D,GAEA,OAAAq6D,EAEA,OAAAG,EAAAD,GAAAG,EAAAD,EACa,gBAAAlhE,EAAA,CACb,IAAAohE,EAAAzgE,KAAAmwB,eAAAiwC,EAAApgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAwwC,EAAA1gE,KAAAmwB,gBAAAiwC,EAAA,MAAApgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACA,GAAAlwB,KAAA0pB,GAAAzjB,OAAA,CAGA,IADAD,GADAm6D,EAAA,IAAA/0D,MAAAq1D,EAAAx6D,SACAA,OACAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCq6D,EAAAr6D,GAAA26D,EAAA36D,IAAA26D,EAAA36D,GAAA46D,EAAA56D,MAAAysC,EAAA6tB,GAAApgE,KAAAqtB,KAAAU,WAAAmC,WAAA,KAEA,OAAAiwC,EAEA,OAAAM,GAAAluB,EAAA6tB,GAAA,MAAAK,EAAAC,IAEA,OAAA1gE,KAAAmwB,iBAAAoiB,EAAA2tB,GAAAD,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GAIA,SAAAyrC,EAAAt8D,EAAAk+D,EAAAyC,GACA,IAAAhgE,KAAAsP,EACA,OAAAtP,KAAA0pB,GAEArqB,MAAA6nC,cAAA,GACA,IAMA+4B,EAAAG,EAeAt6D,EAAAE,EAAAm6D,EArBA5tB,EAAAvyC,KAAAqtB,KAAAC,cACAtD,EAAAhqB,KAAAgqB,UACAk2C,EAAAl2C,EAAA,GAAA1gB,EACA,GAAAipC,GAAA2tB,EACA,OAAAlgE,KAAA0pB,GAkBA,GAfAs2C,EAYAI,EAAAF,GAFAD,EAHA1C,EAGAz4D,KAAAQ,IAAAwoB,KAAAT,KAAAU,WAAAmC,UAAAqtC,GAFAz4D,KAAAzB,IAAA,EAAArD,KAAA8tB,KAAAnuB,KAAAg8B,GAAAukC,OAPA3C,KAAAvzC,EAAA/jB,OAAA,KACAs3D,EAAAvzC,EAAA/jB,OAAA,GAGAg6D,GADAG,EAAAp2C,EAAAuzC,GAAAj0D,GACA42D,GAUA,aAAA7gE,EAAA,CAEA,GADAyF,KAAAU,OAAA06D,EAAA3tB,GAAA0tB,GACA,KACA,OAAAjgE,KAAAmwB,iBAAA+vC,EAAA3tB,GAAA0tB,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,OAEa,eAAA7wB,EAAA,CACb,IAAAghE,EAAArgE,KAAAmwB,eAAA+vC,EAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAowC,EAAAtgE,KAAAmwB,eAAAiwC,EAAApgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAqwC,EAAAvgE,KAAAmwB,gBAAA8vC,GAAAC,EAAA3tB,GAAA0tB,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACAswC,EAAA17D,KAAAU,OAAA06D,EAAA3tB,GAAA0tB,GAAA,EACA,GAAAjgE,KAAA0pB,GAAAzjB,OAAA,CAGA,IADAD,GADAm6D,EAAA,IAAA/0D,MAAAi1D,EAAAp6D,SACAA,OACAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCq6D,EAAAr6D,GAAAy6D,EAAAz6D,IAAAw6D,EAAAx6D,GAAAu6D,EAAAv6D,IAAA06D,EAEA,OAAAL,EAEA,OAAAI,GAAAD,EAAAD,GAAAG,EACa,gBAAAnhE,EAAA,CACb,IAAAshE,EAAA3gE,KAAAmwB,eAAA+vC,EAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACA0wC,EAAA5gE,KAAAmwB,gBAAA+vC,EAAA,MAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GACA,GAAAlwB,KAAA0pB,GAAAzjB,OAAA,CAGA,IADAD,GADAm6D,EAAA,IAAA/0D,MAAAu1D,EAAA16D,SACAA,OACAH,EAAA,EAA4BA,EAAAE,EAAMF,GAAA,EAClCq6D,EAAAr6D,GAAA66D,EAAA76D,IAAA66D,EAAA76D,GAAA86D,EAAA96D,KAAAo6D,EAAA3tB,GAAA,KAEA,OAAA4tB,EAEA,OAAAQ,KAAAC,IAAAV,EAAA3tB,GAAA,MAEA,OAAAvyC,KAAAmwB,gBAAA8vC,GAAAC,EAAA3tB,GAAA0tB,EAAAC,GAAAlgE,KAAAqtB,KAAAU,WAAAmC,UAAA,GAIA,SAAA6rC,EAAAr8D,EAAAmhE,GACA,IAAA7gE,KAAAsP,EACA,OAAAtP,KAAA0pB,GAIA,GAFAhqB,EAAA,IAAAA,GAAA,KACAmhE,EAAA/7D,KAAAU,MAAAq7D,GAAA,KACA,EACA,OAAA7gE,KAAA0pB,GAEA,IAKAxmB,EAMA49D,EAXAp5D,EAAA1H,KAAAqtB,KAAAC,cAAAttB,KAAAqtB,KAAAU,WAAAmC,UACAhH,EAAAxhB,EAAAhI,EAEAqhE,EAAAF,EAAA,GADAn5D,EAAAhI,EACAwpB,IAAA23C,EAAA,KACA/6D,EAAA,EAAAuJ,EAAA,EAQA,IALAnM,EADAlD,KAAA0pB,GAAAzjB,OACA8E,iBAAA,UAAA/K,KAAA0pB,GAAAzjB,QAEA,EAGAH,EAAA+6D,GAAA,CAEA,GADAC,EAAA9gE,KAAAmwB,eAAAjH,EAAApjB,EAAAi7D,GACA/gE,KAAA0pB,GAAAzjB,OACA,IAAAoJ,EAAA,EAA2BA,EAAArP,KAAA0pB,GAAAzjB,OAAoBoJ,GAAA,EAC/CnM,EAAAmM,IAAAyxD,EAAAzxD,QAGAnM,GAAA49D,EAEAh7D,GAAA,EAEA,GAAA9F,KAAA0pB,GAAAzjB,OACA,IAAAoJ,EAAA,EAAuBA,EAAArP,KAAA0pB,GAAAzjB,OAAoBoJ,GAAA,EAC3CnM,EAAAmM,IAAAwxD,OAGA39D,GAAA29D,EAEA,OAAA39D,EAuBA,IAAAotB,EAAA1B,yBAAA0B,qBACA1B,yBAAA0B,qBAAA,SAAAxC,EAAAnuB,EAAAU,GACA,IAAAwL,EAAAykB,EAAAxC,EAAAnuB,EAAAU,GAOA,OANAwL,EAAAC,kBAAA7F,OACA4F,EAAAskB,eAZA,SAAA+zB,GACA77B,QAAAC,KAAA,oCAWAzd,KAAAgB,GAEAA,EAAAskB,eAVA,SAAA+zB,KAUAr5C,KAAAgB,GAEAA,EAAAi0D,iBAAAN,kBAAAM,iBACAj0D,GAGA,IAAAm1D,EAAA/3C,gBAAAuF,QACAvF,gBAAAuF,QAAA,SAAAV,EAAAnuB,EAAAN,EAAAuuB,EAAAvtB,GACA,IAAAwL,EAAAm1D,EAAAlzC,EAAAnuB,EAAAN,EAAAuuB,EAAAvtB,GAIAwL,EAAAwiB,GACAxiB,EAAAskB,eAAAqvC,kBAAArvC,eAAAtlB,KAAAgB,GAEAA,EAAAskB,eAAAqvC,kBAAAK,qBAAAh1D,KAAAgB,GAEAA,EAAAi0D,iBAAAN,kBAAAM,iBACAj0D,EAAAgwD,UACAhwD,EAAA8vD,SACA9vD,EAAAkwD,SACAlwD,EAAA4xD,kBAAA+B,kBAAA/B,kBAAA5yD,KAAAgB,GACAA,EAAA6zD,eAAAF,kBAAAE,eAAA70D,KAAAgB,GACAA,EAAAkxD,QAAA,IAAAp9D,EAAAQ,EAAAR,EAAA2P,EAAArJ,OAAA,EACA4F,EAAAo1D,cAAAthE,EAAAu7B,GACA,IAAAh4B,EAAA,EAcA,OAbA,IAAA7D,IACA6D,EAAA6H,iBAAA,cAAApL,EAAAQ,EAAAR,EAAA2P,EAAA,GAAAxG,EAAA7C,OAAAtG,EAAA2P,EAAArJ,SAEA4F,EAAA+zD,gBACA10C,UAAA5mB,oBACAylB,UAAA,EACA7mB,SAEAs8D,kBAAAC,kBAAA3xC,EAAAnuB,EAAAkM,GACAA,EAAAyD,GACAjP,EAAAuL,mBAAAC,GAGAA,GAuBA,IAAAq1D,EAAArvC,qBAAAiD,yBACAqsC,EAAAtvC,qBAAAkD,kCAEA,SAAAqsC,KACAA,EAAAh3D,WACAonB,SAAA,SAAA3lB,EAAAq4C,GACAlkD,KAAAsP,GACAtP,KAAAmM,WAEA,IAAAgsB,EAAAn4B,KAAA+I,OACAm/B,IAAAgc,IACA/rB,EAAAn4B,KAAAmwB,eAAA+zB,EAAA,IAEA,IAAAp+C,EAAAE,EAAAmyB,EAAAna,QACAwT,EAAA2G,EAAAtsB,GACAiN,EAAAqf,EAAApvB,EACAoC,EAAA9E,iBAAAL,GACA,IAAAF,EAAA,EAAsBA,EAAAE,EAASF,GAAA,EAE/BqF,EAAArF,GADA,MAAA+F,GAAA,MAAAA,GACA2lB,EAAA1rB,GAAA,GAAAgT,EAAAhT,GAAA,GAAA0rB,EAAA1rB,GAAA,GAAAgT,EAAAhT,GAAA,KAEA0rB,EAAA1rB,GAAA,GAAA0rB,EAAA1rB,GAAA,IAIA,OAAAqF,GAEA2N,OAAA,SAAAorC,GACA,OAAAlkD,KAAAwxB,SAAA,IAAA0yB,IAEAsW,WAAA,SAAAtW,GACA,OAAAlkD,KAAAwxB,SAAA,IAAA0yB,IAEAuW,YAAA,SAAAvW,GACA,OAAAlkD,KAAAwxB,SAAA,IAAA0yB,IAEAmd,SAAA,WACA,OAAArhE,KAAA+I,EAAAoG,GAEAmyD,YAAA,SAAAvlD,EAAAmoC,GACA,IAAA/rB,EAAAn4B,KAAA+I,OACAm/B,IAAAgc,IACA/rB,EAAAn4B,KAAAmwB,eAAA+zB,EAAA,IAEAlkD,KAAAuhE,kBACAvhE,KAAAuhE,gBAAA1gD,IAAArD,kBAAA2a,IASA,IANA,IAKAhlB,EALAuK,EAAA1d,KAAAuhE,gBACA9kD,EAAAiB,EAAAjB,QACAW,EAAAM,EAAAO,YAAAlC,EACAjW,EAAA,EAAAE,EAAAyW,EAAAxW,OAEAu7D,EAAA,EACA17D,EAAAE,GAAA,CACA,GAAAw7D,EAAA/kD,EAAA3W,GAAAoW,YAAAkB,EAAA,CACA,IAAAqkD,EAAA37D,EACA47D,EAAAvpC,EAAAhpB,GAAArJ,IAAAE,EAAA,IAAAF,EAAA,EACAklB,GAAA5N,EAAAokD,GAAA/kD,EAAA3W,GAAAoW,YACA/I,EAAA0N,IAAApB,kBAAA0Y,EAAApvB,EAAA04D,GAAAtpC,EAAApvB,EAAA24D,GAAAvpC,EAAAzoB,EAAA+xD,GAAAtpC,EAAAryB,EAAA47D,GAAA12C,EAAAvO,EAAA3W,IACA,MAEA07D,GAAA/kD,EAAA3W,GAAAoW,YAEApW,GAAA,EAKA,OAHAqN,IACAA,EAAAglB,EAAAhpB,GAAAgpB,EAAApvB,EAAA,MAAAovB,EAAApvB,EAAA,QAAAovB,EAAApvB,EAAAovB,EAAAna,QAAA,MAAAma,EAAApvB,EAAAovB,EAAAna,QAAA,QAEA7K,GAEAwuD,aAAA,SAAA5lD,EAAAmoC,EAAA0d,GAEA7lD,EAAA,GAAAA,EAAA/b,KAAA+I,EAAAoG,EAAA,OAAA4M,EACA,IAAAtI,EAAAzT,KAAAshE,YAAAvlD,EAAAmoC,GACAxwC,EAAA1T,KAAAshE,YAAAvlD,EAAA,KAAAmoC,GACA2d,EAAAnuD,EAAA,GAAAD,EAAA,GACAquD,EAAApuD,EAAA,GAAAD,EAAA,GACAsuD,EAAAj9D,KAAAM,KAAAN,KAAAI,IAAA28D,EAAA,GAAA/8D,KAAAI,IAAA48D,EAAA,IACA,WAAAC,GACA,KAEA,YAAAH,GAAAC,EAAAE,EAAAD,EAAAC,KAAAD,EAAAC,EAAAF,EAAAE,IAGAC,cAAA,SAAAjmD,EAAAmoC,GACA,OAAAlkD,KAAA2hE,aAAA5lD,EAAAmoC,EAAA,YAEA+d,aAAA,SAAAlmD,EAAAmoC,GACA,OAAAlkD,KAAA2hE,aAAA5lD,EAAAmoC,EAAA,WAEA4b,iBAAAN,kBAAAM,iBACA3vC,eAAAqvC,kBAAAK,sBAEArlD,iBAAA4mD,GAAAF,GACA1mD,iBAAA4mD,GAAAD,GACAA,EAAA/2D,UAAA+lB,eApHA,SAAA9G,GAiBA,OAfArpB,KAAA4/D,iBACA5/D,KAAA4/D,gBACAsC,WAAAzvC,WAAAngB,MAAAtS,KAAA0pB,IACAK,UAAA,EACA5J,SAAA7b,sBAIA+kB,GAAArpB,KAAA8tB,KAAAC,WAAAmC,WACA7G,GAAArpB,KAAAwpB,cACAxpB,KAAA4/D,eAAAz/C,WACAngB,KAAA4/D,eAAA71C,UAAA/pB,KAAA4/D,eAAAz/C,SAAAkJ,EAAArpB,KAAAwtB,SAAAzD,UAAA,EACA/pB,KAAA4/D,eAAAz/C,SAAAkJ,EACArpB,KAAA8xB,iBAAAzI,EAAArpB,KAAA4/D,eAAAsC,WAAAliE,KAAA4/D,iBAEA5/D,KAAA4/D,eAAAsC,YAoGAf,EAAA/2D,UAAAywD,mBAAAlD,kBAAAkD,mBAEA,IAAAsH,EAAAtwC,qBAAAgD,aACAhD,qBAAAgD,aAAA,SAAA/G,EAAAnuB,EAAAN,EAAA8L,EAAAi3D,GACA,IAAAv2D,EAAAs2D,EAAAr0C,EAAAnuB,EAAAN,EAAA8L,EAAAi3D,GAWA,OAVAv2D,EAAAo1D,cAAAthE,EAAAu7B,GACArvB,EAAAqiB,MAAA,EACA,IAAA7uB,EACAmgE,kBAAAC,kBAAA3xC,EAAAnuB,EAAAwT,GAAAtH,GACS,IAAAxM,GACTmgE,kBAAAC,kBAAA3xC,EAAAnuB,EAAA2iB,GAAAzW,GAEAA,EAAAyD,GACAwe,EAAAliB,mBAAAC,GAEAA,GAlXA,GAqXA,WAUAk1B,aAAA32B,UAAAi4D,mBAAA,SAAAp8B,EAAAI,GACA,IAAA9c,EAAAvpB,KAAAsiE,oBAAAj8B,GACA,GAAAJ,EAAA38B,IAAAigB,EAAA,CACA,IAAA0e,KAIA,OAHAjoC,KAAAoiC,SAAA6F,EAAAhC,GACAgC,EAAA3+B,EAAAigB,EAAArf,WACA+9B,EAAAjkB,YAAA,EACAikB,EAEA,OAAAhC,GAGAlF,aAAA32B,UAAAi4B,eAAA,WAEA,IAAAkgC,EAAAviE,KAAA8lC,kBACA08B,EAAAxiE,KAAAy/D,oBAEA,OADAz/D,KAAAquB,GAAAk0C,GAAAC,EACAxiE,KAAAquB,IAGA0S,aAAA32B,UAAAq1D,kBA5BA,WACA,GAAAz/D,KAAAL,KAAA6J,EAAAiJ,EAGA,OAFAzS,KAAAsiE,oBAAA3K,kBAAAkD,mBAAAhwD,KAAA7K,KAAA23D,CAAA33D,KAAA8tB,KAAA9tB,KAAAL,KAAA6J,EAAAxJ,MACAA,KAAAsuB,UAAAtuB,KAAAqiE,mBAAAx3D,KAAA7K,QACA,GANA,GAiCA,IAAAkgD,yBAAA,WAEA,SAAAuiB,EAAAzgD,EAAA0gD,EAAA3C,GACA,IACAj6D,EADAqF,KACAnF,EAAAgc,IAAA/b,OAAA,EACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB,MAAAkc,EAAAlc,GAAA+J,GACA1E,EAAAR,KAAAg4D,EAAA3gD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAi4D,EAAA5gD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAk4D,EAAA7gD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAm4D,EAAA9gD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,KAEA,MAAAmS,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAo4D,EAAA/gD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAq4D,EAAAhhD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAs4D,EAAAjhD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAu4D,EAAAlhD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,GACb1E,EAAAR,KAAAw4D,EAAAnhD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,IACa,MAAA/9C,EAAAlc,GAAA+J,IACb1E,EAAAR,KAAAy4D,EAAAphD,EAAAlc,GAAA48D,EAAA58D,GAAAi6D,KAGA,OAAA50D,EAgCA,SAAAw3D,EAAApsC,EAAAmsC,EAAA3C,GACA,IAAAsD,EAAA,SAAAngE,GACA,OAAAA,GACA,yBACA,eACA,OACA,OAAAmgE,EAAAljB,QAIA,QACA,OAAAkjB,EAAAtzD,YAGAszD,EAAAtD,cAAA,SAAA55D,GACA,WAAAA,EACAk9D,EAEAtD,EAAA55D,EAAA,IAGA,IAAAg6C,EAlDA,SAAA5pB,EAAAmsC,EAAA3C,GACA,IAAAuD,EACAD,EAAA,SAAAngE,GAEA,IADA,IAAA4C,EAAA,EAAAE,EAAAs9D,EAAAr9D,OACAH,EAAAE,GAAA,CACA,GAAAs9D,EAAAx9D,GAAAy9D,QAAArgE,GAAAogE,EAAAx9D,GAAA09D,KAAAtgE,GAAAogE,EAAAx9D,GAAAm7D,gBAAA/9D,GAAAogE,EAAAx9D,GAAAo1B,KAAAh4B,GAAAogE,EAAAx9D,GAAAglB,MAAA5nB,EACA,OAAAogE,EAAAx9D,GAEAA,GAAA,EAEA,oBAAA5C,EACA,OAAAogE,EAAApgE,EAAA,IAeA,OAZAmgE,EAAAtD,cAAA,SAAA55D,GACA,WAAAA,EACAk9D,EAEAtD,EAAA55D,EAAA,IAGAm9D,EAAAb,EAAAlsC,EAAAhU,GAAAmgD,EAAAngD,GAAA8gD,EAAAtD,eACAsD,EAAAI,cAAAH,EAAAr9D,OACAo9D,EAAApC,cAAA1qC,EAAAmtC,IACAL,EAAAE,MAAAhtC,EAAA7e,GAEA2rD,EAwBAM,CAAAptC,EAAAmsC,EAAAW,EAAAtD,eACA6D,EAiJA,SAAArtC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GAGAu8D,EAAA3yD,UAAA2rB,OAAAhsB,EAAAowD,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAAtyB,EAAA02D,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAAv7B,EAAA2/D,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAA5yB,EAAAg3D,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAA1yB,EAAA82D,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAAlM,KACAkzC,EAAA3yD,UAAA2rB,OAAAlM,GAAAswC,iBAAA+D,GACAnB,EAAA3yD,UAAA2rB,OAAAjM,GAAAqwC,iBAAA+D,IAIA,SAAAR,EAAAngE,GACA,OAAAqzB,EAAAp2B,EAAA+6B,KAAAh4B,GAAA,iBAAAA,EACAmgE,EAAA/G,YAEA/lC,EAAA7mB,EAAAwrB,KAAAh4B,GAAA,YAAAA,EACAmgE,EAAA/c,QAEA/vB,EAAAntB,EAAA8xB,KAAAh4B,GAAA,aAAAA,EACAmgE,EAAAv8D,SAEAyvB,EAAAvtB,EAAAkyB,KAAAh4B,GAAA,aAAAA,GAAA,yBAAAA,EACAmgE,EAAAhH,SAEA9lC,EAAAztB,EAAAoyB,KAAAh4B,GAAA,UAAAA,EACAmgE,EAAAr0D,MAEAunB,EAAA/G,IAAA+G,EAAA/G,GAAA0L,KAAAh4B,GAAA,SAAAA,EACAmgE,EAAAz0D,KAEA2nB,EAAA9G,IAAA8G,EAAA9G,GAAAyL,KAAAh4B,GAAA,cAAAA,EACAmgE,EAAAS,cADA,EAgCA,OArDApB,EAAA3yD,UAAA4rB,GAAAmkC,iBAAA+D,GA0BAvkE,OAAAykE,iBAAAV,GACA/c,SACArtC,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAAhsB,IAEA5I,UACAmS,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAAtyB,IAEAkzD,aACArjD,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAAv7B,IAEA6O,OACAiK,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAA5yB,IAEAuzD,UACApjD,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAA1yB,IAEA4F,MACAqK,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAAlM,KAEAs0C,UACA7qD,IAAA+qD,4BAAAtB,EAAA3yD,UAAA2rB,OAAAjM,KAEA8zC,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAxzD,GAAA,KACAwzD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAAAtD,gBACAsD,EAvNAY,CAAA1tC,EAAAhU,GAAAgU,EAAAhU,GAAAtc,OAAA,GAAAy8D,EAAAngD,GAAAmgD,EAAAngD,GAAAtc,OAAA,GAAAo9D,EAAAtD,eAaA,OAZAsD,EAAAljB,UACAkjB,EAAAtzD,UAAA6zD,EACAtkE,OAAAg8D,eAAA+H,EAAA,SACApqD,IAAA,WACA,OAAAsd,EAAA7e,MAIA2rD,EAAAI,cAAAltC,EAAA2tC,GACAb,EAAApC,cAAA1qC,EAAA2E,GACAmoC,EAAA3rD,GAAA6e,EAAA7e,GACA2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAT,EAAArsC,EAAAmsC,EAAA3C,GACA,SAAAsD,EAAAl9D,GACA,gBAAAA,GAAA,UAAAA,EACAk9D,EAAA35D,MACa,YAAAvD,GAAA,YAAAA,EACbk9D,EAAA/c,aADa,EAiBb,OAbAhnD,OAAAykE,iBAAAV,GACA35D,OACAuP,IAAA+qD,4BAAAtB,EAAAvzD,IAEAm3C,SACArtC,IAAA+qD,4BAAAtB,EAAAhzD,IAEA6zD,OAAsBrgE,MAAAqzB,EAAA7e,IACtB8rD,IAAmBtgE,MAAAqzB,EAAAitC,MAGnBd,EAAAvzD,EAAA2wD,iBAAAC,GACA2C,EAAAhzD,EAAAowD,iBAAAC,GACAsD,EAGA,SAAAR,EAAAtsC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,WAAAA,EACAqR,GAEAuoD,EAAA55D,EAAA,GAGA,SAAAg+D,EAAAh+D,GACA,WAAAA,EACAi+D,EAEAP,EAAA19D,EAAA,GAGA,SAAAk+D,EAAAv+D,GACAxG,OAAAg8D,eAAA8I,EAAA7tC,EAAA/sB,EAAA1D,GAAA4R,IACAuB,IAAA+qD,4BAAAtB,EAAAl5D,EAAAksB,UAAA5vB,GAAAsD,KAGA,IAAAtD,EAAAE,EAAAuwB,EAAA/sB,EAAA+sB,EAAA/sB,EAAAvD,OAAA,EACAm+D,KACA,IAAAt+D,EAAA,EAAmBA,EAAAE,EAASF,GAAA,EAC5Bu+D,EAAAv+D,GACA48D,EAAAl5D,EAAAksB,UAAA5vB,GAAAsD,EAAA02D,iBAAAqE,GAGA,SAAAd,EAAAl9D,GACA,gBAAAA,GAAA,UAAAA,EACAk9D,EAAA35D,MACa,YAAAvD,GAAA,YAAAA,EACbk9D,EAAA/c,QACa,iBAAAngD,GAAA,iBAAAA,EACbk9D,EAAA9S,iBADa,EA0Bb,OAtBAjxD,OAAAykE,iBAAAV,GACA35D,OACAuP,IAAA+qD,4BAAAtB,EAAAvzD,IAEAm3C,SACArtC,IAAA+qD,4BAAAtB,EAAAhzD,IAEA6gD,aACAt3C,IAAA+qD,4BAAAtB,EAAAr+C,IAEAigD,MACArrD,IAAA,WACA,OAAAmrD,IAGAb,OAAsBrgE,MAAAqzB,EAAA7e,IACtB8rD,IAAmBtgE,MAAAqzB,EAAAitC,MAGnBd,EAAAvzD,EAAA2wD,iBAAA+D,GACAnB,EAAAhzD,EAAAowD,iBAAA+D,GACAnB,EAAAr+C,EAAAy7C,iBAAA+D,GACAR,EAGA,SAAAP,EAAAvsC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GASA,SAAAk9D,EAAAl9D,GACA,OAAAA,IAAAowB,EAAAnnB,EAAA8rB,IAAA,QAAA/0B,GAAA,QAAAA,EACAk9D,EAAA9M,IAEApwD,IAAAowB,EAAAztB,EAAAoyB,GACAmoC,EAAAkB,MAEAp+D,IAAAowB,EAAA7mB,EAAAwrB,GACAmoC,EAAA15D,YADA,EAoBA,OAjCA05D,EAAApC,cAAA1qC,EAAA2E,GAEAwnC,EAAA55D,EAAAg3D,iBAAA+D,GACAnB,EAAAtzD,EAAA0wD,iBAAA+D,GACAnB,EAAAhzD,EAAAowD,iBAAA+D,GAaAR,EAAApC,cAAA1qC,EAAA2E,GACAmoC,EAAAtD,gBAEAzgE,OAAAykE,iBAAAV,GACAkB,OACAtrD,IAAA+qD,4BAAAtB,EAAA55D,IAEAytD,KACAt9C,IAAA+qD,4BAAAtB,EAAAtzD,IAEAzF,QACAsP,IAAA+qD,4BAAAtB,EAAAhzD,IAEA6zD,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EA4EA,SAAAN,EAAAxsC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GAGAk9D,EAAApC,cAAA1qC,EAAA2E,GACA,IAAArvB,EAAA,OAAA62D,EAAA/2C,GAAA9b,GAAA6yD,EAAA/2C,GAAA9f,KAAA62D,EAAA/2C,GAGA,SAAA03C,EAAAngE,GACA,OAAAqzB,EAAAntB,EAAA8xB,KAAAh4B,EACAmgE,EAAAv8D,SAEAyvB,EAAAztB,EAAAoyB,KAAAh4B,EACAmgE,EAAA/+C,UADA,EAeA,OArBAzY,EAAA/C,EAAAg3D,iBAAA+D,GACAh4D,EAAAzC,EAAA02D,iBAAA+D,GAUAvkE,OAAAykE,iBAAAV,GACA/+C,MACArL,IAAA+qD,4BAAAn4D,EAAA/C,IAEAhC,UACAmS,IAAA+qD,4BAAAn4D,EAAAzC,IAEAm6D,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAL,EAAAzsC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GAGA,IAAA0F,EAAA,OAAA62D,EAAA/2C,GAAA9b,GAAA6yD,EAAA/2C,GAAA9f,KAAA62D,EAAA/2C,GAYA,SAAA03C,EAAAngE,GACA,OAAAqzB,EAAAntB,EAAA8xB,KAAAh4B,EACAmgE,EAAAv8D,SAEAyvB,EAAAvtB,EAAAkyB,KAAAh4B,EACAmgE,EAAAhH,SAEA9lC,EAAApjB,GAAA+nB,KAAAh4B,EACAmgE,EAAAvqD,OAEAyd,EAAAhH,GAAA2L,KAAAh4B,GAAA,kCAAAA,EACAmgE,EAAAmB,YAEAjuC,EAAA5C,GAAAuH,KAAAh4B,EACAmgE,EAAAoB,gBAEAluC,EAAAjD,IAAAiD,EAAAjD,GAAA4H,KAAAh4B,GAAA,kCAAAA,EAGAqzB,EAAAhD,IAAAgD,EAAAhD,GAAA2H,KAAAh4B,EACAmgE,EAAAqB,oBADA,EAFArB,EAAAsB,YAiCA,OA7DAtB,EAAApC,cAAA1qC,EAAA2E,GACArvB,EAAA0jB,GAAAuwC,iBAAA+D,GACAh4D,EAAA8nB,GAAAmsC,iBAAA+D,GACAh4D,EAAAsH,GAAA2sD,iBAAA+D,GACAh4D,EAAAzC,EAAA02D,iBAAA+D,GACAh4D,EAAA7C,EAAA82D,iBAAA+D,GACAttC,EAAAjD,KACAznB,EAAAynB,GAAAwsC,iBAAA+D,GACAh4D,EAAA0nB,GAAAusC,iBAAA+D,IA4BAvkE,OAAAykE,iBAAAV,GACAv8D,UACAmS,IAAA+qD,4BAAAn4D,EAAAzC,IAEAizD,UACApjD,IAAA+qD,4BAAAn4D,EAAA7C,IAEA8P,QACAG,IAAA+qD,4BAAAn4D,EAAAsH,KAEAqxD,aACAvrD,IAAA+qD,4BAAAn4D,EAAA0jB,KAEAk1C,gBACAxrD,IAAA+qD,4BAAAn4D,EAAA8nB,KAEAgxC,aACA1rD,IAAA+qD,4BAAAn4D,EAAAynB,KAEAoxC,gBACAzrD,IAAA+qD,4BAAAn4D,EAAA0nB,KAEAgwC,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAH,EAAA3sC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GAGA,IAAA0F,EAAA,OAAA62D,EAAA/2C,GAAA9b,GAAA6yD,EAAA/2C,GAAA9f,KAAA62D,EAAA/2C,GAMA,SAAA03C,EAAAngE,GACA,OAAAqzB,EAAAntB,EAAA8xB,KAAAh4B,EACAmgE,EAAAv8D,SAEAyvB,EAAAvtB,EAAAkyB,KAAAh4B,EACAmgE,EAAAxvC,UAEA0C,EAAAztB,EAAAoyB,KAAAh4B,GAAA,SAAAA,GAAA,0BAAAA,EACAmgE,EAAA/+C,UADA,EAkBA,OA9BA++C,EAAApC,cAAA1qC,EAAA2E,GACArvB,EAAAzC,EAAA02D,iBAAA+D,GACAh4D,EAAA/C,EAAAg3D,iBAAA+D,GACAh4D,EAAA7C,EAAA82D,iBAAA+D,GAcAvkE,OAAAykE,iBAAAV,GACAv8D,UACAmS,IAAA+qD,4BAAAn4D,EAAAzC,IAEAyqB,WACA5a,IAAA+qD,4BAAAn4D,EAAA7C,IAEAsb,MACArL,IAAA+qD,4BAAAn4D,EAAA/C,IAEAy6D,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAF,EAAA5sC,EAAAmsC,EAAA3C,GAQA,IAAAl0D,EAAA62D,EAIA,SAAAW,EAAAngE,GACA,GAAAqzB,EAAAvtB,EAAAkyB,KAAAh4B,GAAA,oBAAAA,EACA,OAAAmgE,EAAAuB,OAWA,OAhBAvB,EAAApC,cAAA1qC,EAAA2E,GACArvB,EAAA6sB,GAAAonC,iBATA,SAAA35D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,KAaA7G,OAAAykE,iBAAAV,GACAuB,QACA3rD,IAAA+qD,4BAAAn4D,EAAA6sB,KAEA6qC,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAD,EAAA7sC,EAAAmsC,EAAA3C,GACA,SAAA8D,EAAA19D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,GAGA,IAAA0F,EAAA62D,EAKA,SAAAW,EAAAngE,GACA,OAAAqzB,EAAApnB,EAAA+rB,KAAAh4B,GAAA,WAAAA,EACAmgE,EAAAtoC,OACaxE,EAAA7mB,EAAAwrB,KAAAh4B,GAAA,WAAAA,EACbmgE,EAAA15D,YADa,EAeb,OAtBA05D,EAAApC,cAAA1qC,EAAA2E,GACArvB,EAAAsD,EAAA2wD,iBAAA+D,GACAh4D,EAAA6D,EAAAowD,iBAAA+D,GAUAvkE,OAAAykE,iBAAAV,GACAtoC,QACA9hB,IAAA+qD,4BAAAn4D,EAAAsD,IAEAxF,QACAsP,IAAA+qD,4BAAAn4D,EAAA6D,IAEA6zD,OAAsBrgE,MAAAqzB,EAAA7e,MAEtB2rD,EAAAG,GAAAjtC,EAAAitC,GACAH,EAGA,SAAAJ,EAAA1sC,EAAAmsC,EAAA3C,GACA,IAAAl0D,EAAA62D,EAAA/2C,GAUA,SAAA03C,EAAAl9D,GACA,aAAAA,GAAA,UAAAA,GAAA,SAAAA,GAAA,SAAAA,GAAA,sBAAAA,GAAA,IAAAA,EACA,OAAAk9D,EAAA7gD,KAyBA,OA7BA3W,EAAAi0D,iBAPA,SAAA35D,GACA,UAAAA,EACAk9D,EAEAtD,IAAA55D,KAUA7G,OAAAykE,iBAAAV,GACA7gD,MACAvJ,IAAA,WAIA,OAHApN,EAAAyD,GACAzD,EAAAM,WAEAN,IAGA0qB,OACAtd,IAAA,WAIA,OAHApN,EAAAyD,GACAzD,EAAAM,WAEAN,IAGA03D,OAAsBrgE,MAAAqzB,EAAA7e,IACtBwjB,IAAmBh4B,MAAAqzB,EAAA2E,IACnB+lC,eAA8B/9D,MAAAqzB,EAAA2E,IAC9BsoC,IAAmBtgE,MAAAqzB,EAAAitC,MAEnBH,EAGA,gBAAArhD,EAAA0gD,EAAA3C,GACA,IAAAuD,EACA,SAAAuB,EAAA3hE,GACA,oBAAAA,EACA,OAAAogE,EAAApgE,EAAA,GAGA,IADA,IAAA4C,EAAA,EAAAE,EAAAs9D,EAAAr9D,OACAH,EAAAE,GAAA,CACA,GAAAs9D,EAAAx9D,GAAAy9D,QAAArgE,EACA,OAAAogE,EAAAx9D,GAEAA,GAAA,GAOA,OAHA++D,EAAA9E,gBACAuD,EAAAb,EAAAzgD,EAAA0gD,EAAAmC,GACAA,EAAApB,cAAAH,EAAAr9D,OACA4+D,GA5jBA,GAgkBAxkB,wBACA,SAAAvyB,GACA,IAAAg3C,EACA,SAAAC,KAeA,OAbAzlE,OAAAg8D,eAAAyJ,EAAA,cACA9rD,IAAA,WACA6U,EAAAgb,aAAA38B,WACA,IAAA64D,EAAAl3C,EAAAgb,aAAA3H,YAAA73B,EAOA,YAbA27D,IAOAD,IACAl3C,EAAAgb,aAAA3H,YAAA73B,OARA27D,GASAH,EAAA,IAAArlE,OAAAulE,IAEA9hE,MAAA8hE,GAAA,IAAAvlE,OAAAulE,IAEAF,KAGAC,GAGAtlB,yBAAA,WACA,SAAAuc,EAAA7wD,EAAA+4C,GACA,IAAAghB,EAAA,IAAA13D,OAWA,GAVA03D,EAAAl3D,QAKAhO,KAAA4/B,MAAAqX,eAAAC,MAIAvnB,cAAAu1C,GACAllE,KAAA4/B,MAAA8Q,WAAA1wC,KAAA4/B,MAAA8Q,UAAAzqC,OAAA,CACA,IAAAH,EAAAE,EAAAhG,KAAA4/B,MAAA8Q,UAAAzqC,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B9F,KAAA4/B,MAAA8Q,UAAA5qC,GAAAmxC,eAAAC,MAAAvnB,cAAAu1C,GAEA,OAAAA,EAAA9xD,kBAAAjI,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAEA,OAAA+5D,EAAA9xD,kBAAAjI,EAAA,GAAAA,EAAA,GAAAA,EAAA,OAEA,SAAA8wD,EAAA9wD,EAAA+4C,GACA,IAAAghB,EAAA,IAAA13D,OAWA,GAVA03D,EAAAl3D,QAKAhO,KAAA4/B,MAAAqX,eAAAC,MAIAvnB,cAAAu1C,GACAllE,KAAA4/B,MAAA8Q,WAAA1wC,KAAA4/B,MAAA8Q,UAAAzqC,OAAA,CACA,IAAAH,EAAAE,EAAAhG,KAAA4/B,MAAA8Q,UAAAzqC,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B9F,KAAA4/B,MAAA8Q,UAAA5qC,GAAAmxC,eAAAC,MAAAvnB,cAAAu1C,GAEA,OAAAA,EAAAhyD,aAAA/H,GAEA,OAAA+5D,EAAAhyD,aAAA/H,GAEA,SAAA+wD,EAAA/wD,GACA,IAAA+5D,EAAA,IAAA13D,OAGA,GAFA03D,EAAAl3D,QACAhO,KAAA4/B,MAAAqX,eAAAC,MAAAvnB,cAAAu1C,GACAllE,KAAA4/B,MAAA8Q,WAAA1wC,KAAA4/B,MAAA8Q,UAAAzqC,OAAA,CACA,IAAAH,EAAAE,EAAAhG,KAAA4/B,MAAA8Q,UAAAzqC,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B9F,KAAA4/B,MAAA8Q,UAAA5qC,GAAAmxC,eAAAC,MAAAvnB,cAAAu1C,GAEA,OAAAA,EAAAhyD,aAAA/H,GAEA,OAAA+5D,EAAAhyD,aAAA/H,GAGA,SAAAg6D,IACA,gBAIA,gBAAAr3C,GAEA,IAAA81C,EASA,SAAAmB,EAAArjE,GACA,OAAAA,GACA,8BACA,eACA,OACA,OAAAqjE,EAAA9kB,eACA,OACA,OACA,gBACA,gBACA,2BACA,OAAA2jB,EACA,OACA,yBACA,cACA,cACA,OAAAmB,EAAA5J,QAGA4J,EAAA/I,UACA+I,EAAA9I,YACA8I,EAAA5I,OAAAH,EACA+I,EAAA7I,WACA6I,EAAAI,cACAJ,EAAAlsB,iBAAA/qB,EAAA+qB,iBAAAhuC,KAAAijB,GACAi3C,EAAAnlC,MAAA9R,EAEA,IAAAs3C,EAAAtqD,cADA8oD,EAAAyB,6BAAAv3C,EAAAmpB,eAAAC,OACA,eAyCA,OAxCA53C,OAAAykE,iBAAAgB,GACA3F,WACAnmD,IAAA,WACA,OAAA6U,EAAA4iB,UAAAzqC,SAGAsf,QACAtM,IAAA,WACA,OAAA6U,EAAA4iB,UAAA,GAAA8O,iBAGA6c,SAAAvhD,cAAA8oD,EAAA,YACA50D,MAAA8L,cAAA8oD,EAAA,SACA98D,SAAAgU,cAAA8oD,EAAA,YACAtd,QAAAxrC,cAAA8oD,EAAA,WACAtH,YAAA8I,EACAE,aAAAF,EACAr1D,WACAkJ,IAAA,WACA,OAAA2qD,IAGA5G,QACA/jD,IAAA,WACA,OAAA6U,EAAAqqB,cAKA4sB,EAAAQ,UAAAz3C,EAAAnuB,KAAA+uB,GACAq2C,EAAAp8C,MAAAmF,EAAAnuB,KAAAmrB,IACAi6C,EAAAS,OAAA13C,EAAAnuB,KAAAmiB,MACAijD,EAAAvlE,OAAA,IAAAsuB,EAAAnuB,KAAAkQ,GAAAie,EAAAnuB,KAAAkJ,EAAA,IACAk8D,EAAArlE,MAAA,IAAAouB,EAAAnuB,KAAAkQ,GAAAie,EAAAnuB,KAAA0kB,EAAA,IACA0gD,EAAAtJ,QAAA3tC,EAAAnuB,KAAAyvC,GAAAthB,EAAAT,KAAAU,WAAAmC,UACA60C,EAAArJ,SAAA5tC,EAAAnuB,KAAAg8B,GAAA7N,EAAAT,KAAAU,WAAAmC,UACA60C,EAAAxB,MAAAz1C,EAAAnuB,KAAA+X,GAEAqtD,EAAArlB,sBAzEA,SAAAld,GACAuiC,EAAAjwD,KAAA,IAAA2wD,qBAAAjjC,EAAA1U,IAyEAi3C,EAAAjlB,yBAvEA,SAAA4lB,GACAX,EAAA5J,OAAAuK,GAuEAX,GA7IA,GAiJA/kB,wBACA,SAAA3yB,GACA,SAAA03C,EAAArjE,GAEA,IADA,IAAAoE,EAAA,EAAAE,EAAAqnB,EAAArM,OAAA/a,OACAH,EAAAE,GAAA,CACA,GAAAqnB,EAAArM,OAAAlb,GAAA4R,KAAAhW,GAAA2rB,EAAArM,OAAAlb,GAAAglB,MAAAppB,EACA,OAAA2rB,EAAAgN,SAAAv0B,GAAA05C,eAEA15C,GAAA,EAEA,YAYA,OATAxG,OAAAg8D,eAAAyJ,EAAA,SAA4D7hE,MAAAmqB,EAAA1tB,KAAA+X,KAC5DqtD,EAAAv1B,MAAAu1B,EACAA,EAAAY,YAAA,EACAZ,EAAAvlE,OAAA6tB,EAAA1tB,KAAAkJ,GAAAwkB,EAAAU,WAAA0jB,SAAA5oC,EACAk8D,EAAArlE,MAAA2tB,EAAA1tB,KAAA0kB,GAAAgJ,EAAAU,WAAA0jB,SAAAptB,EACA0gD,EAAAY,YAAA,EACAZ,EAAAxJ,cAAA,EAAAluC,EAAAU,WAAAmC,UACA60C,EAAAvJ,iBAAA,EACAuJ,EAAAa,UAAAv4C,EAAArM,OAAA/a,OACA8+D,GAGAM,6BACA,SAAAt1D,GACA,SAAA81D,EAAAnkE,GACA,OAAAA,GACA,YACA,YACA,iBACA,OACA,OAAAmkE,EAAA72D,MACA,eACA,eACA,oBACA,oBACA,QACA,OAAA62D,EAAAxJ,SACA,oBACA,OAAAwJ,EAAAC,UACA,oBACA,OAAAD,EAAAE,UACA,eACA,eACA,oBACA,OACA,OAAAF,EAAA/+D,SACA,sBACA,OAAA++D,EAAAG,UACA,sBACA,OAAAH,EAAAI,UACA,sBACA,OAAAJ,EAAAK,UACA,kBACA,kBACA,mBACA,uBACA,OACA,OAAAL,EAAAvJ,YACA,cACA,cACA,QACA,OAAAuJ,EAAAvf,SAuBA,GAnBAhnD,OAAAg8D,eAAAuK,EAAA,YACA5sD,IAAA+qD,4BAAAj0D,EAAA/G,GAAA+G,EAAAuf,MAGAhwB,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAuf,IAAAvf,EAAA/G,KAGA1J,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAqf,MAGA9vB,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAsf,MAEA/vB,OAAAg8D,eAAAuK,EAAA,SACA5sD,IAAA+qD,4BAAAj0D,EAAAjH,KAGAiH,EAAA3G,EACA,IAAA+8D,EAAAnC,4BAAAj0D,EAAA3G,GA4CA,OA1CA9J,OAAAg8D,eAAAuK,EAAA,YACA5sD,IAAA,WACA,OAAAlJ,EAAA3G,EACA+8D,KAEAp2D,EAAAkf,GAAAlmB,EAAAgH,EAAAmf,GAAAnmB,EAAAgH,EAAAof,GAAApf,EAAAof,GAAApmB,EAAA,MAKAzJ,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAkf,MAGA3vB,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAmf,MAGA5vB,OAAAg8D,eAAAuK,EAAA,aACA5sD,IAAA+qD,4BAAAj0D,EAAAof,MAGA7vB,OAAAg8D,eAAAuK,EAAA,eACA5sD,IAAA+qD,4BAAAj0D,EAAA5P,KAGAb,OAAAg8D,eAAAuK,EAAA,WACA5sD,IAAA+qD,4BAAAj0D,EAAAL,KAGApQ,OAAAg8D,eAAAuK,EAAA,QACA5sD,IAAA+qD,4BAAAj0D,EAAAyf,MAGAlwB,OAAAg8D,eAAAuK,EAAA,YACA5sD,IAAA+qD,4BAAAj0D,EAAA0f,MAGAnwB,OAAAg8D,eAAAuK,EAAA,eACA5sD,IAAA+qD,4BAAAj0D,EAAAwf,MAGAs2C,GAGAhgE,iBAAA,WAEA,SAAAorC,EAAA5jB,GACArtB,KAAAomE,aAAAz7D,KAAA0iB,GAGA,kBACA,SAAAg5C,EAAA3kE,GAEA,IADA,IAAAoE,EAAA,EAAAE,EAAAhG,KAAAomE,aAAAngE,OACAH,EAAAE,GAAA,CACA,GAAAhG,KAAAomE,aAAAtgE,GAAAnG,MAAAK,KAAAomE,aAAAtgE,GAAAnG,KAAA+X,KAAAhW,EAIA,OAHA1B,KAAAomE,aAAAtgE,GAAA0sC,cAAAxyC,KAAAomE,aAAAtgE,GAAAnG,KAAAoxC,IACA/wC,KAAAomE,aAAAtgE,GAAA0sC,aAAAxyC,KAAAuyC,cAEAvyC,KAAAomE,aAAAtgE,GAAAi6C,cAEAj6C,GAAA,GAWA,OAPAugE,EAAAD,gBACAC,EAAA9zB,aAAA,EAEA8zB,EAAAp1B,sBAIAo1B,GA3BA,GA8BAzmB,2BAAA,WA2BA,SAAA0mB,EAAA3mE,EAAA06B,EAAA0lC,EAAAjyC,GACA,IACAhoB,EADA63C,KACA33C,EAAArG,EAAAkpD,GAAA5iD,OACA,IAAAH,EAAA,EAAgBA,EAAAE,EAAMF,GAAA,EACtB,IAAAnG,EAAAkpD,GAAA/iD,GAAA+J,GACA8tC,EAAAhzC,KAAA27D,EAAA3mE,EAAAkpD,GAAA/iD,GAAAu0B,EAAAsjB,eAAA73C,GAAAu0B,EAAAsjB,eAAA73C,GAAAi6D,cAAAjyC,IAEA6vB,EAAAhzC,KAAA47D,EAAAlsC,EAAAsjB,eAAA73C,GAAAnG,EAAAkpD,GAAA/iD,GAAA+J,GAAAie,EAAA+1C,IAIA,SAAAA,EAAA19D,GACA,WAAAA,EACAqgE,EAEAzG,EAAA55D,EAAA,GAIA,IAAAqgE,EAAA,SAAA9kE,GAEA,IADA,IAAAgkE,EAAA/lE,EAAAkpD,GAAA/iD,EAAA,EAAAE,EAAA0/D,EAAAz/D,OACAH,EAAAE,GAAA,CACA,GAAAtE,IAAAgkE,EAAA5/D,GAAA4R,IAAAhW,IAAAgkE,EAAA5/D,GAAA09D,IAAA9hE,IAAAgkE,EAAA5/D,GAAAo1B,GACA,WAAAwqC,EAAA5/D,GAAA+J,GACA8tC,EAAA73C,GAEA63C,EAAA73C,KAGAA,GAAA,EAEA,OAAA63C,EAAA,MAkBA,OAfA6oB,EAAAzG,cAAA8D,EAEA,uBAAAlkE,EAAA6jE,IACAlkE,OAAAg8D,eAAAkL,EAAA,SACAvtD,IAAA,WACA,OAAA0kC,EAAA,QAIAr+C,OAAAg8D,eAAAkL,EAAA,iBACAvtD,IAAA,WACA,OAAAtZ,EAAAukE,MAGAsC,EAAAxJ,OAAAwJ,EAAAC,QAAA,IAAA9mE,EAAA+mE,GACAF,EAGA,SAAAD,EAAA1/D,EAAAxH,EAAAyuB,EAAAiyC,GACA,IAAA4G,EAAA3C,4BAAAn9D,EAAAuC,GAYA,OAJAvC,EAAAuC,EAAA02D,kBACAj5D,EAAAuC,EAAA02D,iBAAAC,GARA,WACA,YAAA1gE,EACAyuB,EAAAT,KAAA0yB,cAAAl5C,EAAAuC,EAAAL,GAEA49D,KAUA,OA7FA9mB,uBAGA,SAAA/xB,EAAAiyC,GACA,GAAAjyC,EAAA4yB,eAAA,CAEA,IAEA56C,EAFA63C,KACAipB,EAAA94C,EAAAnuB,KAAAkpD,GACA7iD,EAAA8nB,EAAA4yB,eAAA/C,eAAA13C,OACA,IAAAH,EAAA,EAAoBA,EAAAE,EAAMF,GAAA,EAC1B63C,EAAAhzC,KAAA27D,EAAAM,EAAA9gE,GAAAgoB,EAAA4yB,eAAA/C,eAAA73C,GAAAi6D,EAAAjyC,IAGA,gBAAApsB,GAEA,IADA,IAAAgkE,EAAA53C,EAAAnuB,KAAAkpD,OAAA/iD,EAAA,EAAAE,EAAA0/D,EAAAz/D,OACAH,EAAAE,GAAA,CACA,GAAAtE,IAAAgkE,EAAA5/D,GAAA4R,IAAAhW,IAAAgkE,EAAA5/D,GAAA09D,IAAA9hE,IAAAgkE,EAAA5/D,GAAAo1B,GACA,OAAAyiB,EAAA73C,GAEAA,GAAA,OArBA,GAkGA2/D,qBAAA,WAEA,SAAAoB,EAAA/xD,EAAAnV,GACAK,KAAA8mE,MAAAhyD,EACA9U,KAAA+mE,MAAApnE,EAEAL,OAAAg8D,eAAAuL,EAAAz8D,UAAA,YACA6O,IAAA,WAIA,OAHAjZ,KAAA8mE,MAAAj7D,KAAAyD,GACAtP,KAAA8mE,MAAAj7D,KAAAM,WAEAnM,KAAA8mE,MAAAj7D,QAGAvM,OAAAg8D,eAAAuL,EAAAz8D,UAAA,eACA6O,IAAA,WAIA,OAHAjZ,KAAA8mE,MAAAnrC,GAAArsB,GACAtP,KAAA8mE,MAAAnrC,GAAAxvB,WAEA,IAAAnM,KAAA8mE,MAAAnrC,GAAA5yB,KAwBA,OApBA,SAAAy5B,EAAA1U,GACA,IAGAhoB,EADAkhE,EAAA3gE,iBAAAm8B,EAAA4J,SAAAnmC,QACAD,EAAAw8B,EAAA4J,SAAAnmC,OACA,IAAAH,EAAA,EAAYA,EAAAE,EAASF,GAAA,EACrBkhE,EAAAlhE,GAAA,IAAA+gE,EAAArkC,EAAA4J,SAAAtmC,GAAA08B,EAAA7gB,gBAAA7b,IAYA,OATA,SAAApE,GAEA,IADAoE,EAAA,EACAA,EAAAE,GAAA,CACA,GAAAw8B,EAAA7gB,gBAAA7b,GAAA4R,KAAAhW,EACA,OAAAslE,EAAAlhE,GAEAA,GAAA,KAtCA,GA8CAk+D,4BAAA,WAEA,IAAAiD,GAAsCv9C,GAAA,EAAA3gB,EAAA,EAAA6kB,KAAA,GACtCs5C,GAAwCx9C,IAAA,OAAA3gB,GAAA,OAAA6kB,KAAA,GAExC,SAAAu5C,EAAAC,EAAAtM,EAAAz7D,GACAC,OAAAg8D,eAAA8L,EAAA,YACAnuD,IAAA,WACA,OAAA6hD,EAAA2C,kBAAA3C,EAAAztC,KAAAklB,iBAGA60B,EAAArK,QAAAjC,EAAA9wC,UAAA8wC,EAAA9wC,UAAA/jB,OAAA,EACAmhE,EAAAhyD,IAAA,SAAA0b,GACA,GAAAs2C,EAAArK,QAEa,CACb,IAAA75D,EAAA,GAEAA,EADA,MAAA43D,EAAA9wC,UAAA8G,EAAA,GACAgqC,EAAA9wC,UAAA8G,EAAA,GAAAhoB,EACiB,MAAAgyD,EAAA9wC,UAAA8G,EAAA,GACjBgqC,EAAA9wC,UAAA8G,EAAA,GAAA1hB,EAEA0rD,EAAA9wC,UAAA8G,EAAA,GAAAhoB,EAEA,IAAAu+D,EAAA,mBAAAhoE,EAAA,IAAA04D,OAAA70D,GAAA5D,OAAAgoE,UAAgGpkE,GAEhG,OADAmkE,EAAAnjB,KAAA4W,EAAA9wC,UAAA8G,EAAA,GAAAxnB,EAAAwxD,EAAAhtC,KAAAT,KAAAU,WAAAmC,UACAm3C,EAZA,UAeAD,EAAA/L,YAAAP,EAAA3qC,eACAi3C,EAAAG,YAAAzM,EAAA4E,eACA0H,EAAA3K,eAAA3B,EAAA2C,kBACA2J,EAAArH,cAAAjF,EAAAiF,cAkDA,SAAAyH,IACA,OAAAP,EAGA,gBAAAnM,GACA,OAAAA,EAES,mBAAAA,EAAArxC,SAtDT,SAAAqxC,GACAA,GAAA,OAAAA,IACAA,EAAAmM,GAEA,IAAAr5C,EAAA,EAAAktC,EAAAltC,KACAznB,EAAA20D,EAAApxC,GAAAkE,EACAw5C,EAAA,IAAArP,OAAA5xD,GAIA,OAHAihE,EAAAlkE,MAAAiD,EACAghE,EAAAC,EAAAtM,EAAA,kBAEA,WAUA,OATAA,EAAAxrD,GACAwrD,EAAA3uD,WAEAhG,EAAA20D,EAAA/xD,EAAA6kB,EACAw5C,EAAAlkE,QAAAiD,KACAihE,EAAA,IAAArP,OAAA5xD,IACAjD,MAAAiD,EACAghE,EAAAC,EAAAtM,EAAA,mBAEAsM,GAmCAK,CAAA3M,GA/BA,SAAAA,GACAA,GAAA,OAAAA,IACAA,EAAAoM,GAEA,IAAAt5C,EAAA,EAAAktC,EAAAltC,KACA5nB,EAAA80D,EAAApxC,GAAAzjB,OACAmhE,EAAAr8D,iBAAA,UAAA/E,GACA0hE,EAAA38D,iBAAA,UAAA/E,GAIA,OAHAohE,EAAAlkE,MAAAwkE,EACAP,EAAAC,EAAAtM,EAAA,oBAEA,WACAA,EAAAxrD,GACAwrD,EAAA3uD,WAEA,QAAArG,EAAA,EAA2BA,EAAAE,EAASF,GAAA,EACpCshE,EAAAthE,GAAA4hE,EAAA5hE,GAAAg1D,EAAA/xD,EAAAjD,GAAA8nB,EAEA,OAAAw5C,GAeAO,CAAA7M,GAJA0M,GAxFA,GAmGAI,2BAgCAC,oBASA,SAAAC,aAAAnoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA0nE,YAAApoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA2nE,YAAAroE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA4nE,YAAAtoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA6nE,iBAAAvoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA8nE,gBAAAxoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAA+nE,eAAAzoE,EAAAmuB,EAAAztB,GACAL,KAAAoJ,EAAA6f,gBAAAuF,QAAAV,EAAAnuB,EAAAoJ,EAAA,IAAA1I,GAEA,SAAAgoE,gBACAroE,KAAAoJ,KAEA,SAAAu3C,kBACA,SAAAA,eAAAhhD,EAAAkH,GACA,IAAA6+D,EAAA/lE,EAAAkpD,OACA7oD,KAAA29C,kBACA,IAAA73C,EACAwiE,EADAtiE,EAAA0/D,EAAAz/D,OAEA,IAAAH,EAAA,EAAYA,EAAAE,EAAMF,IAClBwiE,EAAA,IAAAC,YAAA7C,EAAA5/D,GAAAe,GACA7G,KAAA29C,eAAAhzC,KAAA29D,GAIA,SAAAC,YAAA5oE,EAAAkH,GACA7G,KAAA2xB,KAAAhyB,EAAAkH,GA9EA+gE,2BAAA,WAEA,SAAAY,EAAA7/C,EAAA8/C,GAIA,OAHAzoE,KAAA29D,UAAAh1C,EAAA,EACA3oB,KAAA49D,UAAA6K,EACAzoE,KAAA+I,EAAA/I,KAAAmM,WAAAnM,KAAA4tB,KACA5tB,KAAA+I,EAGA,gBAAA+kB,EAAAnuB,GACAK,KAAA0pB,GAAA,EACA1pB,KAAAqtB,KAAAS,EAAAT,KACArtB,KAAA8tB,OACA9tB,KAAA4tB,KAAA,IACA5tB,KAAAypB,SAAA,eACAzpB,KAAA49D,UAAAj+D,EAAAwlC,WACAnlC,KAAA69D,cAAA,IACA79D,KAAAygE,WAAA,OACAzgE,KAAAsP,GAAA,EACAtP,KAAAyS,GAAA,EACAzS,KAAAmM,SAAAwrD,kBAAAkD,mBAAAhwD,KAAA7K,KAAA23D,CAAA7pC,EAAAnuB,EAAAK,MACAA,KAAAilC,QAAAujC,EACAxoE,KAAAy9D,kBAAA+B,kBAAA/B,kBACAz9D,KAAAquB,GACAruB,KAAAmwB,eAAAqvC,kBAAArvC,eAAAtlB,KAAA7K,MAEAA,KAAAmwB,eAAAqvC,kBAAAK,qBAAAh1D,KAAA7K,MAEAA,KAAA8/D,iBAAAN,kBAAAM,kBA5BA,GAgCA+H,oBAAAjnC,iBAAAC,oBACAD,iBAAAC,oBAAA,SAAA/S,EAAAnuB,EAAAwL,GACA,WAAAxL,EAAA2J,EACA,IAAAs+D,2BAAA95C,EAAAnuB,EAAAwL,GAEA08D,oBAAA/5C,EAAAnuB,EAAAwL,IA4CAqP,iBAAA7O,0BAAA48D,aAEAA,YAAAn+D,UAAA+B,SAAAo8D,YAAAn+D,UAAA6B,yBAEAs8D,YAAAn+D,UAAAunB,KAAA,SAAAhyB,EAAAkH,GACA7G,KAAAL,OACAK,KAAA29C,kBACA39C,KAAAoM,6BAAAvF,GACA,IAAAf,EACA4iE,EADA1iE,EAAAhG,KAAAL,KAAAkpD,GAAA5iD,OACAy/D,EAAA1lE,KAAAL,KAAAkpD,GACA,IAAA/iD,EAAA,EAAYA,EAAAE,EAAMF,GAAA,GAElB,OADA4iE,EAAA,KACAhD,EAAA5/D,GAAA+J,IACA,OACA64D,EAAA,IAAAZ,aAAApC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,OACA0oE,EAAA,IAAAX,YAAArC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,OACA0oE,EAAA,IAAAV,YAAAtC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,OACA0oE,EAAA,IAAAT,YAAAvC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,OACA,OACA0oE,EAAA,IAAAN,eAAA1C,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,QACA0oE,EAAA,IAAAR,iBAAAxC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,QACA0oE,EAAA,IAAAP,gBAAAzC,EAAA5/D,GAAAe,EAAA7G,MACA,MACA,OACA0oE,EAAA,IAAA/nB,eAAA+kB,EAAA5/D,GAAAe,EAAA7G,MACA,MAEA,QACA0oE,EAAA,IAAAL,cAAA3C,EAAA5/D,GAAAe,EAAA7G,MAGA0oE,GACA1oE,KAAA29C,eAAAhzC,KAAA+9D,KAKA,IAAA9mE,UAEA8vD,WAAA,EAEA,SAAAiX,gBAAA/gD,GACAvjB,aAAAujB,EAGA,SAAAorC,oBACA,IAAAC,WACA3B,iBAAA0B,iBAAAryD,cAAAsyD,WAAAzyD,UAEA8wD,iBAAA0B,mBAIA,SAAA4V,qBAAAjiE,GACApC,gBAAAoC,EAGA,SAAAvG,cAAAwyD,GAIA,OAHA,IAAAK,aACAL,EAAAjyD,cAAAwhB,KAAAC,MAAAzhB,gBAEA2wD,iBAAAlxD,cAAAwyD,GAGA,SAAAiW,WAAA3lE,GACA,oBAAAA,EACA,OAAAA,GACA,WACAoD,qBAAA,IACA,MACA,aACAA,qBAAA,GACA,MACA,UACAA,qBAAA,QAGKwiE,MAAA5lE,MAAA,IACLoD,qBAAApD,GAGAwD,cADAJ,sBAAA,KAOA,SAAAyiE,YACA,0BAAA7kE,UAGA,SAAA8kE,cAAA3pE,EAAA4pE,GACA,gBAAA5pE,IACAmF,kBAAAykE,GAIA,SAAAC,WAAAxnE,GACA,OAAAA,GACA,sBACA,OAAAunB,gBACA,2BACA,OAAA4I,qBACA,aACA,OAAArkB,QA4BA,SAAA27D,aACA,aAAA59D,SAAA4zB,aACAiqC,cAAAC,yBACArW,oBAIA,SAAAsW,iBAAAC,GAEA,IADA,IAAAC,EAAAC,YAAA5mD,MAAA,KACA/c,EAAA,EAAmBA,EAAA0jE,EAAAvjE,OAAiBH,IAAA,CACpC,IAAA4jE,EAAAF,EAAA1jE,GAAA+c,MAAA,KACA,GAAA8mD,mBAAAD,EAAA,KAAAH,EACA,OAAAI,mBAAAD,EAAA,KApCA9nE,OAAAO,KAAAmvD,iBAAAnvD,KACAP,OAAAQ,MAAAkvD,iBAAAlvD,MACAR,OAAA+mE,gCACA/mE,OAAAmxD,YAAAzB,iBAAAyB,YACAnxD,OAAAU,SAAAgvD,iBAAAhvD,SACAV,OAAAkxD,aAAAxB,iBAAAwB,aACAlxD,OAAAM,KAAAovD,iBAAApvD,KACAN,OAAAoxD,kCACApxD,OAAAqwD,kBAAAX,iBAAAW,kBACArwD,OAAAxB,4BACAwB,OAAAgnE,0CACAhnE,OAAA0xD,OAAAhC,iBAAAgC,OAEA1xD,OAAA2xD,YAAAjC,iBAAAiC,YACA3xD,OAAAi8B,QAAAyzB,iBAAAzzB,QACAj8B,OAAAinE,sBACAjnE,OAAAmnE,oBACAnnE,OAAAonE,4BACApnE,OAAA6xD,OAAAnC,iBAAAmC,OACA7xD,OAAA8xD,SAAApC,iBAAAoC,SACA9xD,OAAA+xD,wBAAArC,iBAAAqC,wBACA/xD,OAAAgoE,aAAAV,WACAtnE,OAAAioE,QAAA,QAkBA,IAAA5W,WAAA,mBACAtyD,cAAA,sBACAH,SAAA,GACA,GAAAyyD,WAAA,CACA,IAAA6W,QAAAv+D,SAAA6nD,qBAAA,UACAzqC,MAAAmhD,QAAA7jE,OAAA,EACA8jE,SAAAD,QAAAnhD,SACAb,IAAA,IAEA2hD,YAAAM,SAAAjiD,IAAAlQ,QAAA,iBACApX,SAAA8oE,iBAAA,YAEA,IAAAD,wBAAAW,YAAAb,WAAA,KAEA,OAAAvnE,aAnscSsmC,KAFDnkC,8BAAA,WACR,OAAAE,QAAAD,OACSqkD,KAAA4hB,QAAA1oE,oBAAA0oE,QAAAC,kBAAAD,QAAAlmE,oDCJTmmE,EAAAD,SAAkBlhE,EAAA,SAAAyoC,GAAA,GAAApC,GAAA,EAAAzT,GAAA,GAAAtX,EAAA,IAAAxb,EAAA,IAAA6O,GAAA,gBAAAy9B,IAAA,EAAAhyB,UAAAnC,SAAwGm0B,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,eAAA+oC,GAAA,EAAAn+B,IAAwD5S,GAAKvP,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBlyB,GAAM7I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,MAAAC,GAAA,OAAwBhD,GAAM+C,GAAA,MAAAC,GAAA,OAAwBjD,GAAA,2BAAAnG,EAAA,EAAAR,GAAA,GAAAsG,GAAA,MAA0D9F,EAAA,KAAO4xB,GAAA,IAAU9xB,GAAMjJ,EAAA,EAAAmP,GAAA,WAAA4rB,GAAA,GAA6B/6B,GAAMA,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,mBAAiDjD,GAAA,iEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,aAAiHtJ,GAAK2M,GAAA,gBAAAC,GAAA,kBAAiDhD,GAAM+C,GAAA,UAAAC,GAAA,QAA8BjD,GAAA,8DAAAnG,EAAA,GAAAR,GAAA,WAAAsG,GAAA,eAA+G9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAAzI,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAA0CrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,iBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAqE5S,GAAKvP,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBlyB,GAAM7I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,KAAAC,GAAA,IAAmBhD,GAAM+C,GAAA,KAAAC,GAAA,IAAmBjD,GAAA,iBAAAnG,EAAA,EAAAR,IAAA,IAAAsG,GAAA,MAAkD9F,EAAA,KAAO4xB,GAAA,IAAU9xB,GAAMjJ,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2B/6B,GAAMA,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,gBAAAC,GAAA,iBAAgDhD,GAAM+C,GAAA,gBAAAC,GAAA,iBAAgDjD,GAAA,+EAAAnG,EAAA,EAAAR,GAAA,WAAAsG,GAAA,aAA6H9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAAzI,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAA0CrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA+oC,GAAA,EAAAn+B,IAAyD5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoB9xB,GAAMjJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyBpyB,GAAM3I,EAAA,EAAAmP,GAAA,aAAA4rB,GAAA,IAAgC2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,kBAAA4J,IAAA,kBAAA3G,KAAA,6BAAAoG,GAAA,GAA8F+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,UAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6Ep+B,GAAA,KAAA/G,GAAe3I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmB9rB,GAAMjP,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,KAAAC,GAAA,IAAmBhD,GAAM+C,GAAA,IAAAC,GAAA,IAAkBjD,GAAA,gBAAAnG,EAAA,KAAAR,GAAA,GAAAsG,GAAA,OAAmD9F,EAAA,OAAS4xB,GAAA,GAASxrB,GAAMvP,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmB1rB,EAAA,EAAA0rB,GAAA,EAAAxjB,GAAA,eAAA8rD,GAAA,4BAAAv1B,IAAA,IAA8EmB,GAAA,KAAAzT,GAAA,MAAAjN,GAAA,KAAA8xB,GAAA,IAA0CrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA+oC,GAAA,EAAAn+B,IAAyD5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,KAAAC,GAAA,IAAmBhD,GAAM+C,GAAA,IAAAC,GAAA,IAAkBjD,GAAA,gBAAAnG,EAAA,KAAAR,GAAA,IAAAsG,GAAA,KAAkD9F,EAAA,OAAS4xB,GAAA,IAAU9xB,GAAMjJ,EAAA,EAAAmP,GAAA,WAAA4rB,GAAA,GAA6B/6B,GAAMA,EAAA,EAAAmP,GAAA,QAAA4rB,GAAA,GAA0BpyB,GAAM3I,EAAA,EAAAmP,GAAA,aAAA4rB,GAAA,IAAgC2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,8CAAA4J,KAAA,6CAAA3G,IAAA,8CAAAoG,GAAA,GAAqK+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,IAAA,gBAAA4rB,GAAA,GAAmC9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,MAAA4rB,GAAA,GAAwB/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA+Ep+B,GAAA,KAAA/G,GAAe3I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmB9rB,GAAMjP,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,KAAAC,GAAA,IAAmBhD,GAAM+C,GAAA,IAAAC,GAAA,IAAkBjD,GAAA,gBAAAnG,EAAA,KAAAR,GAAA,GAAAsG,GAAA,OAAmD9F,EAAA,OAAS4xB,GAAA,GAASxrB,GAAMvP,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmB1rB,EAAA,EAAA0rB,GAAA,EAAAxjB,GAAA,eAAA8rD,GAAA,4BAAAv1B,IAAA,IAA8EmB,GAAA,KAAAzT,GAAA,MAAAjN,GAAA,KAAA8xB,GAAA,IAA0CrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAoE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,EAAA,GAAA4rB,GAAA,IAAqB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,IAAA,kBAAAwb,IAAA,OAAAC,IAAA,SAAkG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,IAAA,kBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAmGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,kBAAiDjD,GAAA,iEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,eAAmHtJ,GAAK2M,GAAA,gBAAAC,GAAA,gBAA+ChD,GAAM+C,GAAA,aAAAC,GAAA,QAAiCjD,GAAA,+DAAAnG,EAAA,GAAAR,GAAA,aAAAsG,GAAA,eAAkH9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAoE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,GAAA,GAAA4rB,GAAA,IAAsB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,mBAAAwb,IAAA,OAAAC,IAAA,SAAkG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,mBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAmGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,GAAA,aAAA4rB,GAAA,IAAgC2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAoE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,GAAA,GAAA4rB,GAAA,IAAsB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,mBAAAwb,IAAA,OAAAC,IAAA,SAAkG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,mBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAmGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,kBAAiDjD,GAAA,iEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,eAAmHtJ,GAAK2M,GAAA,gBAAAC,GAAA,gBAA+ChD,GAAM+C,GAAA,aAAAC,GAAA,QAAiCjD,GAAA,+DAAAnG,EAAA,GAAAR,GAAA,aAAAsG,GAAA,eAAkH9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAoE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,EAAA,GAAA4rB,GAAA,IAAqB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,iBAAAwb,IAAA,OAAAC,IAAA,SAAgG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,iBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAiGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,kBAAiDjD,GAAA,iEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,eAAmHtJ,GAAK2M,GAAA,gBAAAC,GAAA,cAA4ChD,GAAM+C,GAAA,aAAAC,GAAA,QAAiCjD,GAAA,4DAAAnG,EAAA,GAAAR,GAAA,aAAAsG,GAAA,eAA+G9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,EAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAoE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,EAAA,GAAA4rB,GAAA,IAAqB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,iBAAAwb,IAAA,OAAAC,IAAA,SAAgG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,iBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAiGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,iBAAgDjD,GAAA,gEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,eAAkHtJ,GAAK2M,GAAA,gBAAAC,GAAA,gBAA+ChD,GAAM+C,GAAA,aAAAC,GAAA,QAAiCjD,GAAA,+DAAAnG,EAAA,GAAAR,GAAA,aAAAsG,GAAA,eAAkH9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,GAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAqE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,GAAA,GAAA4rB,GAAA,IAAsB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,iBAAAwb,IAAA,OAAAC,IAAA,SAAgG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,iBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAiGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,GAAA,aAAA4rB,GAAA,IAAgC2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,GAAAjb,GAAA,EAAA6H,GAAA,gBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAqE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,GAAA,GAAA4rB,GAAA,IAAsB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,GAAA,iBAAAwb,IAAA,OAAAC,IAAA,SAAgG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,GAAA,iBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAiGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,IAAYxJ,GAAK2M,GAAA,aAAAC,GAAA,QAAiChD,GAAM+C,GAAA,gBAAAC,GAAA,kBAAiDjD,GAAA,iEAAAnG,EAAA,EAAAR,GAAA,aAAAsG,GAAA,eAAmHtJ,GAAK2M,GAAA,gBAAAC,GAAA,gBAA+ChD,GAAM+C,GAAA,aAAAC,GAAA,QAAiCjD,GAAA,+DAAAnG,EAAA,GAAAR,GAAA,aAAAsG,GAAA,eAAkH9F,EAAA,KAAO4xB,GAAA,IAAU2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAoCrL,IAAA,EAAArqB,IAAA,GAAAjb,GAAA,EAAA6H,GAAA,iBAAA6N,OAAA,EAAAk7B,GAAA,EAAAn+B,IAAsE5S,GAAKvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,IAAsBlyB,GAAM7I,EAAA,EAAAmP,EAAA,GAAA4rB,GAAA,IAAqB9xB,GAAMjJ,EAAA,EAAAmP,IAAYxJ,GAAK2M,EAAA,IAAAC,EAAA,GAAehD,GAAM+C,EAAA,KAAAC,EAAA,MAAoBjD,EAAA,qBAAAnG,EAAA,EAAAR,GAAA,SAAAsG,IAAA,kBAAAwb,IAAA,OAAAC,IAAA,SAAkG/kB,GAAK2M,EAAA,KAAAC,EAAA,MAAoBhD,GAAM+C,EAAA,IAAAC,EAAA,GAAejD,EAAA,qBAAAnG,EAAA,GAAAR,IAAA,kBAAAsG,GAAA,SAAAwb,IAAA,OAAAC,IAAA,SAAmGvhB,EAAA,KAAO4xB,GAAA,GAAS/6B,GAAMA,EAAA,EAAAmP,GAAA,kBAAA4rB,GAAA,GAAoCpyB,GAAM3I,EAAA,EAAAmP,GAAA,aAAA4rB,GAAA,IAAgC2c,GAAA,EAAA71B,SAAmBnS,GAAA,KAAA0S,KAAiBuI,IAAA,EAAAjb,GAAA,KAAAqrB,GAAA,EAAA5Y,IAA+BniB,EAAA,EAAAmP,GAAWxJ,IAAA,0CAAA4J,KAAA,yCAAA3G,IAAA,0CAAAoG,GAAA,GAAyJ+rB,GAAA,GAAQxjB,GAAA,SAAA8rD,GAAA,4BAAAv1B,IAAA,IAA6Dp+B,GAAA,KAAAH,GAAevP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB7W,GAAMlkB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,IAAoBjyB,GAAMG,EAAA,EAAAkG,GAAWnP,EAAA,EAAAmP,GAAA,4JAAA4rB,GAAA,IAAwLpyB,GAAM3I,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuB9rB,GAAMjP,EAAA,EAAAmP,GAAA,OAAA4rB,GAAA,GAAyB5xB,EAAA,EAAA47C,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAA1tC,GAAA,oBAAA8rD,GAAA,iCAAAv1B,IAAA,IAAwGp+B,GAAA,KAAAV,GAAehP,EAAA,EAAAmP,GAAA,6CAAA4rB,GAAA,GAAkExrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqBlyB,EAAA,EAAA0O,GAAA,SAAA8rD,GAAA,6BAAAv1B,IAAA,IAAoEp+B,GAAA,KAAAzG,GAAejJ,EAAA,EAAAmP,GAAA,gBAAA4rB,GAAA,GAAkC/6B,GAAMA,EAAA,EAAAmP,GAAA,KAAA4rB,GAAA,GAAuBpyB,GAAM3I,EAAA,EAAAmP,GAAA,SAAA4rB,GAAA,GAA2BlyB,GAAM7I,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxrB,GAAMvP,EAAA,EAAAmP,EAAA,IAAA4rB,GAAA,GAAqB1L,IAAOrvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBzL,IAAOtvB,EAAA,EAAAmP,EAAA,EAAA4rB,GAAA,GAAmBxjB,GAAA,cAAkBA,GAAA,YAAAwsD,GAAA,EAAAR,IAAA,EAAAxoC,GAAA,EAAAsoC,GAAA,oBAAAv1B,IAAA,IAA6EmB,GAAA,EAAAzT,GAAA,MAAAjN,GAAA,EAAA8xB,GAAA,IAAkC2pB","file":"static/js/5.74cf14fc24aae91830fd.js","sourcesContent":["<template>\n    <div :style=\"style\" ref=\"lavContainer\"></div>\n</template>\n\n<script>\n  import lottie from 'lottie-web';\n  export default {\n    props: {\n      options: {\n        type: Object,\n        required: true,\n       \n      },\n      height: String,\n      width: String,\n    },\n    data () {\n      return {\n        style: {\n         \n          overflow: 'hidden',\n          margin: '0 auto'\n        }\n      }\n    },\n    mounted () {\n      this.anim = lottie.loadAnimation({\n          container: this.$refs.lavContainer,\n          renderer: 'svg',\n          loop: this.options.loop !== false,\n          autoplay: this.options.autoplay !== false,\n          animationData: this.options.animationData,\n          rendererSettings: this.options.rendererSettings,\n        }\n      );\n      this.$emit('animCreated', this.anim)\n    }\n  }\n</script>\n\n\n// WEBPACK FOOTER //\n// src/components/Loader/lottie/Lottie.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"lavContainer\",style:(_vm.style)})}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5fe1b98e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Loader/lottie/Lottie.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Lottie.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./Lottie.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5fe1b98e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./Lottie.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Loader/lottie/Lottie.vue\n// module id = null\n// module chunks = ","<template>\n    <div>\n      <div class=\"BxLotties\">\n         <lottie :options=\"defaultOptions\" v-on:animCreated=\"handleAnimation\" class=\"BxLotties__LottieArea\"/>\n      </div>\n       \n        <div style=\"visibility:hidden\">\n          <input type=\"range\" value=\"0.5\" min=\"0\" max=\"3\" step=\"0.5\"\n                   v-on:change=\"onSpeedChange\" v-model=\"animationSpeed\">\n        </div>\n    </div>\n</template>\n\n\n<script>\nimport Lottie from './Lottie';\nimport * as animationData from '../json/circular-spin-loader.json';\n\n  export default {\n    name: 'app',\n    components: {\n      'lottie': Lottie\n    },\n    data() {\n      return {\n        defaultOptions: {animationData: animationData},\n        animationSpeed:  1.2,\n      }\n    },\n\n    methods: {\n      handleAnimation: function (anim) {\n        this.anim = anim;\n      },\n\n      stop: function () {\n        this.anim.stop();\n      },\n\n      play: function () {\n        this.anim.play();\n      },\n\n      pause: function () {\n        this.anim.pause();\n      },\n\n      onSpeedChange: function () {\n        this.anim.setSpeed(this.animationSpeed);\n      },\n\n\n    },\n    mounted() {\n      this.onSpeedChange()\n    },\n  }\n</script>\n\n\n\n// WEBPACK FOOTER //\n// src/components/Loader/lottie/GreenLoader.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"BxLotties\"},[_c('lottie',{staticClass:\"BxLotties__LottieArea\",attrs:{\"options\":_vm.defaultOptions},on:{\"animCreated\":_vm.handleAnimation}})],1),_vm._v(\" \"),_c('div',{staticStyle:{\"visibility\":\"hidden\"}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.animationSpeed),expression:\"animationSpeed\"}],attrs:{\"type\":\"range\",\"value\":\"0.5\",\"min\":\"0\",\"max\":\"3\",\"step\":\"0.5\"},domProps:{\"value\":(_vm.animationSpeed)},on:{\"change\":_vm.onSpeedChange,\"__r\":function($event){_vm.animationSpeed=$event.target.value}}})])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-73f1f134\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/Loader/lottie/GreenLoader.vue\n// module id = null\n// module chunks = ","var normalizeComponent = require(\"!../../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./GreenLoader.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../../node_modules/vue-loader/lib/selector?type=script&index=0!./GreenLoader.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-73f1f134\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../../node_modules/vue-loader/lib/selector?type=template&index=0!./GreenLoader.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = null\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Loader/lottie/GreenLoader.vue\n// module id = null\n// module chunks = ","(typeof navigator !== \"undefined\") && (function(root, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(function() {\n            return factory(root);\n        });\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory(root);\n    } else {\n        root.lottie = factory(root);\n        root.bodymovin = root.lottie;\n    }\n}((window || {}), function(window) {\n\t\"use strict\";\r\nvar svgNS = \"http://www.w3.org/2000/svg\";\r\n\r\nvar locationHref = '';\r\n\r\nvar initialDefaultFrame = -999999;\r\n\r\nvar subframeEnabled = true;\r\nvar expressionsPlugin;\r\nvar isSafari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);\r\nvar cachedColors = {};\r\nvar bm_rounder = Math.round;\r\nvar bm_rnd;\r\nvar bm_pow = Math.pow;\r\nvar bm_sqrt = Math.sqrt;\r\nvar bm_abs = Math.abs;\r\nvar bm_floor = Math.floor;\r\nvar bm_max = Math.max;\r\nvar bm_min = Math.min;\r\nvar blitter = 10;\r\n\r\nvar BMMath = {};\r\n(function(){\r\n    var propertyNames = [\"abs\", \"acos\", \"acosh\", \"asin\", \"asinh\", \"atan\", \"atanh\", \"atan2\", \"ceil\", \"cbrt\", \"expm1\", \"clz32\", \"cos\", \"cosh\", \"exp\", \"floor\", \"fround\", \"hypot\", \"imul\", \"log\", \"log1p\", \"log2\", \"log10\", \"max\", \"min\", \"pow\", \"random\", \"round\", \"sign\", \"sin\", \"sinh\", \"sqrt\", \"tan\", \"tanh\", \"trunc\", \"E\", \"LN10\", \"LN2\", \"LOG10E\", \"LOG2E\", \"PI\", \"SQRT1_2\", \"SQRT2\"];\r\n    var i, len = propertyNames.length;\r\n    for(i=0;i<len;i+=1){\r\n        BMMath[propertyNames[i]] = Math[propertyNames[i]];\r\n    }\r\n}());\r\n\r\nfunction ProjectInterface(){return {};}\r\n\r\nBMMath.random = Math.random;\r\nBMMath.abs = function(val){\r\n    var tOfVal = typeof val;\r\n    if(tOfVal === 'object' && val.length){\r\n        var absArr = createSizedArray(val.length);\r\n        var i, len = val.length;\r\n        for(i=0;i<len;i+=1){\r\n            absArr[i] = Math.abs(val[i]);\r\n        }\r\n        return absArr;\r\n    }\r\n    return Math.abs(val);\r\n\r\n};\r\nvar defaultCurveSegments = 150;\r\nvar degToRads = Math.PI/180;\r\nvar roundCorner = 0.5519;\r\n\r\nfunction roundValues(flag){\r\n    if(flag){\r\n        bm_rnd = Math.round;\r\n    }else{\r\n        bm_rnd = function(val){\r\n            return val;\r\n        };\r\n    }\r\n}\r\nroundValues(false);\r\n\r\nfunction styleDiv(element){\r\n    element.style.position = 'absolute';\r\n    element.style.top = 0;\r\n    element.style.left = 0;\r\n    element.style.display = 'block';\r\n    element.style.transformOrigin = element.style.webkitTransformOrigin = '0 0';\r\n    element.style.backfaceVisibility  = element.style.webkitBackfaceVisibility = 'visible';\r\n    element.style.transformStyle = element.style.webkitTransformStyle = element.style.mozTransformStyle = \"preserve-3d\";\r\n}\r\n\r\nfunction BMEnterFrameEvent(type, currentTime, totalTime, frameMultiplier){\r\n    this.type = type;\r\n    this.currentTime = currentTime;\r\n    this.totalTime = totalTime;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteEvent(type, frameMultiplier){\r\n    this.type = type;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMCompleteLoopEvent(type, totalLoops, currentLoop, frameMultiplier){\r\n    this.type = type;\r\n    this.currentLoop = currentLoop;\r\n    this.totalLoops = totalLoops;\r\n    this.direction = frameMultiplier < 0 ? -1 : 1;\r\n}\r\n\r\nfunction BMSegmentStartEvent(type, firstFrame, totalFrames){\r\n    this.type = type;\r\n    this.firstFrame = firstFrame;\r\n    this.totalFrames = totalFrames;\r\n}\r\n\r\nfunction BMDestroyEvent(type, target){\r\n    this.type = type;\r\n    this.target = target;\r\n}\r\n\r\nfunction BMRenderFrameErrorEvent(nativeError, currentTime) {\r\n    this.type = 'renderFrameError';\r\n    this.nativeError = nativeError;\r\n    this.currentTime = currentTime;\r\n}\r\n\r\nfunction BMConfigErrorEvent(nativeError) {\r\n    this.type = 'configError';\r\n    this.nativeError = nativeError;\r\n}\r\n\r\nfunction BMAnimationConfigErrorEvent(type, nativeError) {\r\n    this.type = type;\r\n    this.nativeError = nativeError;\r\n    this.currentTime = currentTime;\r\n}\r\n\r\nvar createElementID = (function(){\r\n    var _count = 0;\r\n    return function createID() {\r\n        return '__lottie_element_' + ++_count\r\n    }\r\n}())\r\n\r\nfunction HSVtoRGB(h, s, v) {\r\n    var r, g, b, i, f, p, q, t;\r\n    i = Math.floor(h * 6);\r\n    f = h * 6 - i;\r\n    p = v * (1 - s);\r\n    q = v * (1 - f * s);\r\n    t = v * (1 - (1 - f) * s);\r\n    switch (i % 6) {\r\n        case 0: r = v; g = t; b = p; break;\r\n        case 1: r = q; g = v; b = p; break;\r\n        case 2: r = p; g = v; b = t; break;\r\n        case 3: r = p; g = q; b = v; break;\r\n        case 4: r = t; g = p; b = v; break;\r\n        case 5: r = v; g = p; b = q; break;\r\n    }\r\n    return [ r,\r\n        g,\r\n         b ];\r\n}\r\n\r\nfunction RGBtoHSV(r, g, b) {\r\n    var max = Math.max(r, g, b), min = Math.min(r, g, b),\r\n        d = max - min,\r\n        h,\r\n        s = (max === 0 ? 0 : d / max),\r\n        v = max / 255;\r\n\r\n    switch (max) {\r\n        case min: h = 0; break;\r\n        case r: h = (g - b) + d * (g < b ? 6: 0); h /= 6 * d; break;\r\n        case g: h = (b - r) + d * 2; h /= 6 * d; break;\r\n        case b: h = (r - g) + d * 4; h /= 6 * d; break;\r\n    }\r\n\r\n    return [\r\n         h,\r\n         s,\r\n         v\r\n    ];\r\n}\r\n\r\nfunction addSaturationToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[1] += offset;\r\n    if (hsv[1] > 1) {\r\n        hsv[1] = 1;\r\n    }\r\n    else if (hsv[1] <= 0) {\r\n        hsv[1] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addBrightnessToRGB(color,offset){\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[2] += offset;\r\n    if (hsv[2] > 1) {\r\n        hsv[2] = 1;\r\n    }\r\n    else if (hsv[2] < 0) {\r\n        hsv[2] = 0;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nfunction addHueToRGB(color,offset) {\r\n    var hsv = RGBtoHSV(color[0]*255,color[1]*255,color[2]*255);\r\n    hsv[0] += offset/360;\r\n    if (hsv[0] > 1) {\r\n        hsv[0] -= 1;\r\n    }\r\n    else if (hsv[0] < 0) {\r\n        hsv[0] += 1;\r\n    }\r\n    return HSVtoRGB(hsv[0],hsv[1],hsv[2]);\r\n}\r\n\r\nvar rgbToHex = (function(){\r\n    var colorMap = [];\r\n    var i;\r\n    var hex;\r\n    for(i=0;i<256;i+=1){\r\n        hex = i.toString(16);\r\n        colorMap[i] = hex.length == 1 ? '0' + hex : hex;\r\n    }\r\n\r\n    return function(r, g, b) {\r\n        if(r<0){\r\n            r = 0;\r\n        }\r\n        if(g<0){\r\n            g = 0;\r\n        }\r\n        if(b<0){\r\n            b = 0;\r\n        }\r\n        return '#' + colorMap[r] + colorMap[g] + colorMap[b];\r\n    };\r\n}());\r\nfunction BaseEvent(){}\r\nBaseEvent.prototype = {\r\n\ttriggerEvent: function (eventName, args) {\r\n\t    if (this._cbs[eventName]) {\r\n\t        var len = this._cbs[eventName].length;\r\n\t        for (var i = 0; i < len; i++){\r\n\t            this._cbs[eventName][i](args);\r\n\t        }\r\n\t    }\r\n\t},\r\n\taddEventListener: function (eventName, callback) {\r\n\t    if (!this._cbs[eventName]){\r\n\t        this._cbs[eventName] = [];\r\n\t    }\r\n\t    this._cbs[eventName].push(callback);\r\n\r\n\t\treturn function() {\r\n\t\t\tthis.removeEventListener(eventName, callback);\r\n\t\t}.bind(this);\r\n\t},\r\n\tremoveEventListener: function (eventName,callback){\r\n\t    if (!callback){\r\n\t        this._cbs[eventName] = null;\r\n\t    }else if(this._cbs[eventName]){\r\n\t        var i = 0, len = this._cbs[eventName].length;\r\n\t        while(i<len){\r\n\t            if(this._cbs[eventName][i] === callback){\r\n\t                this._cbs[eventName].splice(i,1);\r\n\t                i -=1;\r\n\t                len -= 1;\r\n\t            }\r\n\t            i += 1;\r\n\t        }\r\n\t        if(!this._cbs[eventName].length){\r\n\t            this._cbs[eventName] = null;\r\n\t        }\r\n\t    }\r\n\t}\r\n};\r\nvar createTypedArray = (function(){\r\n\tfunction createRegularArray(type, len){\r\n\t\tvar i = 0, arr = [], value;\r\n\t\tswitch(type) {\r\n\t\t\tcase 'int16':\r\n\t\t\tcase 'uint8c':\r\n\t\t\t\tvalue = 1;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tvalue = 1.1;\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tarr.push(value);\r\n\t\t}\r\n\t\treturn arr;\r\n\t}\r\n\tfunction createTypedArray(type, len){\r\n\t\tif(type === 'float32') {\r\n\t\t\treturn new Float32Array(len);\r\n\t\t} else if(type === 'int16') {\r\n\t\t\treturn new Int16Array(len);\r\n\t\t} else if(type === 'uint8c') {\r\n\t\t\treturn new Uint8ClampedArray(len);\r\n\t\t}\r\n\t}\r\n\tif(typeof Uint8ClampedArray === 'function' && typeof Float32Array === 'function') {\r\n\t\treturn createTypedArray;\r\n\t} else {\r\n\t\treturn createRegularArray;\r\n\t}\r\n}());\r\n\r\nfunction createSizedArray(len) {\r\n\treturn Array.apply(null,{length:len});\r\n}\r\nfunction createNS(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElementNS(svgNS, type);\r\n}\r\nfunction createTag(type) {\r\n\t//return {appendChild:function(){},setAttribute:function(){},style:{}}\r\n\treturn document.createElement(type);\r\n}\r\nfunction DynamicPropertyContainer(){};\r\nDynamicPropertyContainer.prototype = {\r\n\taddDynamicProperty: function(prop) {\r\n\t\tif(this.dynamicProperties.indexOf(prop) === -1) {\r\n\t        this.dynamicProperties.push(prop);\r\n\t        this.container.addDynamicProperty(this);\r\n\t    \tthis._isAnimated = true;\r\n\t    }\r\n\t},\r\n\titerateDynamicProperties: function(){\r\n\t    this._mdf = false;\r\n\t    var i, len = this.dynamicProperties.length;\r\n\t    for(i=0;i<len;i+=1){\r\n\t        this.dynamicProperties[i].getValue();\r\n\t        if(this.dynamicProperties[i]._mdf) {\r\n\t            this._mdf = true;\r\n\t        }\r\n\t    }\r\n\t},\r\n\tinitDynamicPropertyContainer: function(container){\r\n\t    this.container = container;\r\n\t    this.dynamicProperties = [];\r\n\t    this._mdf = false;\r\n\t    this._isAnimated = false;\r\n\t}\r\n}\r\nvar getBlendMode = (function() {\r\n\r\n\tvar blendModeEnums = {\r\n        0:'source-over',\r\n        1:'multiply',\r\n        2:'screen',\r\n        3:'overlay',\r\n        4:'darken',\r\n        5:'lighten',\r\n        6:'color-dodge',\r\n        7:'color-burn',\r\n        8:'hard-light',\r\n        9:'soft-light',\r\n        10:'difference',\r\n        11:'exclusion',\r\n        12:'hue',\r\n        13:'saturation',\r\n        14:'color',\r\n        15:'luminosity'\r\n    }\r\n\r\n\treturn function(mode) {\r\n\t\treturn blendModeEnums[mode] || '';\r\n\t}\r\n}())\r\n/*!\r\n Transformation Matrix v2.0\r\n (c) Epistemex 2014-2015\r\n www.epistemex.com\r\n By Ken Fyrstenberg\r\n Contributions by leeoniya.\r\n License: MIT, header required.\r\n */\r\n\r\n/**\r\n * 2D transformation matrix object initialized with identity matrix.\r\n *\r\n * The matrix can synchronize a canvas context by supplying the context\r\n * as an argument, or later apply current absolute transform to an\r\n * existing context.\r\n *\r\n * All values are handled as floating point values.\r\n *\r\n * @param {CanvasRenderingContext2D} [context] - Optional context to sync with Matrix\r\n * @prop {number} a - scale x\r\n * @prop {number} b - shear y\r\n * @prop {number} c - shear x\r\n * @prop {number} d - scale y\r\n * @prop {number} e - translate x\r\n * @prop {number} f - translate y\r\n * @prop {CanvasRenderingContext2D|null} [context=null] - set or get current canvas context\r\n * @constructor\r\n */\r\n\r\nvar Matrix = (function(){\r\n\r\n    var _cos = Math.cos;\r\n    var _sin = Math.sin;\r\n    var _tan = Math.tan;\r\n    var _rnd = Math.round;\r\n\r\n    function reset(){\r\n        this.props[0] = 1;\r\n        this.props[1] = 0;\r\n        this.props[2] = 0;\r\n        this.props[3] = 0;\r\n        this.props[4] = 0;\r\n        this.props[5] = 1;\r\n        this.props[6] = 0;\r\n        this.props[7] = 0;\r\n        this.props[8] = 0;\r\n        this.props[9] = 0;\r\n        this.props[10] = 1;\r\n        this.props[11] = 0;\r\n        this.props[12] = 0;\r\n        this.props[13] = 0;\r\n        this.props[14] = 0;\r\n        this.props[15] = 1;\r\n        return this;\r\n    }\r\n\r\n    function rotate(angle) {\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateX(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(1, 0, 0, 0, 0, mCos, -mSin, 0, 0, mSin,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateY(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos,  0,  mSin, 0, 0, 1, 0, 0, -mSin,  0,  mCos, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function rotateZ(angle){\r\n        if(angle === 0){\r\n            return this;\r\n        }\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function shear(sx,sy){\r\n        return this._t(1, sy, sx, 1, 0, 0);\r\n    }\r\n\r\n    function skew(ax, ay){\r\n        return this.shear(_tan(ax), _tan(ay));\r\n    }\r\n\r\n    function skewFromAxis(ax, angle){\r\n        var mCos = _cos(angle);\r\n        var mSin = _sin(angle);\r\n        return this._t(mCos, mSin,  0, 0, -mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(1, 0,  0, 0, _tan(ax),  1, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1)\r\n            ._t(mCos, -mSin,  0, 0, mSin,  mCos, 0, 0, 0,  0,  1, 0, 0, 0, 0, 1);\r\n        //return this._t(mCos, mSin, -mSin, mCos, 0, 0)._t(1, 0, _tan(ax), 1, 0, 0)._t(mCos, -mSin, mSin, mCos, 0, 0);\r\n    }\r\n\r\n    function scale(sx, sy, sz) {\r\n        if(!sz && sz !== 0) {\r\n            sz = 1;\r\n        }\r\n        if(sx === 1 && sy === 1 && sz === 1){\r\n            return this;\r\n        }\r\n        return this._t(sx, 0, 0, 0, 0, sy, 0, 0, 0, 0, sz, 0, 0, 0, 0, 1);\r\n    }\r\n\r\n    function setTransform(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {\r\n        this.props[0] = a;\r\n        this.props[1] = b;\r\n        this.props[2] = c;\r\n        this.props[3] = d;\r\n        this.props[4] = e;\r\n        this.props[5] = f;\r\n        this.props[6] = g;\r\n        this.props[7] = h;\r\n        this.props[8] = i;\r\n        this.props[9] = j;\r\n        this.props[10] = k;\r\n        this.props[11] = l;\r\n        this.props[12] = m;\r\n        this.props[13] = n;\r\n        this.props[14] = o;\r\n        this.props[15] = p;\r\n        return this;\r\n    }\r\n\r\n    function translate(tx, ty, tz) {\r\n        tz = tz || 0;\r\n        if(tx !== 0 || ty !== 0 || tz !== 0){\r\n            return this._t(1,0,0,0,0,1,0,0,0,0,1,0,tx,ty,tz,1);\r\n        }\r\n        return this;\r\n    }\r\n\r\n    function transform(a2, b2, c2, d2, e2, f2, g2, h2, i2, j2, k2, l2, m2, n2, o2, p2) {\r\n\r\n        var _p = this.props;\r\n\r\n        if(a2 === 1 && b2 === 0 && c2 === 0 && d2 === 0 && e2 === 0 && f2 === 1 && g2 === 0 && h2 === 0 && i2 === 0 && j2 === 0 && k2 === 1 && l2 === 0){\r\n            //NOTE: commenting this condition because TurboFan deoptimizes code when present\r\n            //if(m2 !== 0 || n2 !== 0 || o2 !== 0){\r\n                _p[12] = _p[12] * a2 + _p[15] * m2;\r\n                _p[13] = _p[13] * f2 + _p[15] * n2;\r\n                _p[14] = _p[14] * k2 + _p[15] * o2;\r\n                _p[15] = _p[15] * p2;\r\n            //}\r\n            this._identityCalculated = false;\r\n            return this;\r\n        }\r\n\r\n        var a1 = _p[0];\r\n        var b1 = _p[1];\r\n        var c1 = _p[2];\r\n        var d1 = _p[3];\r\n        var e1 = _p[4];\r\n        var f1 = _p[5];\r\n        var g1 = _p[6];\r\n        var h1 = _p[7];\r\n        var i1 = _p[8];\r\n        var j1 = _p[9];\r\n        var k1 = _p[10];\r\n        var l1 = _p[11];\r\n        var m1 = _p[12];\r\n        var n1 = _p[13];\r\n        var o1 = _p[14];\r\n        var p1 = _p[15];\r\n\r\n        /* matrix order (canvas compatible):\r\n         * ace\r\n         * bdf\r\n         * 001\r\n         */\r\n        _p[0] = a1 * a2 + b1 * e2 + c1 * i2 + d1 * m2;\r\n        _p[1] = a1 * b2 + b1 * f2 + c1 * j2 + d1 * n2 ;\r\n        _p[2] = a1 * c2 + b1 * g2 + c1 * k2 + d1 * o2 ;\r\n        _p[3] = a1 * d2 + b1 * h2 + c1 * l2 + d1 * p2 ;\r\n\r\n        _p[4] = e1 * a2 + f1 * e2 + g1 * i2 + h1 * m2 ;\r\n        _p[5] = e1 * b2 + f1 * f2 + g1 * j2 + h1 * n2 ;\r\n        _p[6] = e1 * c2 + f1 * g2 + g1 * k2 + h1 * o2 ;\r\n        _p[7] = e1 * d2 + f1 * h2 + g1 * l2 + h1 * p2 ;\r\n\r\n        _p[8] = i1 * a2 + j1 * e2 + k1 * i2 + l1 * m2 ;\r\n        _p[9] = i1 * b2 + j1 * f2 + k1 * j2 + l1 * n2 ;\r\n        _p[10] = i1 * c2 + j1 * g2 + k1 * k2 + l1 * o2 ;\r\n        _p[11] = i1 * d2 + j1 * h2 + k1 * l2 + l1 * p2 ;\r\n\r\n        _p[12] = m1 * a2 + n1 * e2 + o1 * i2 + p1 * m2 ;\r\n        _p[13] = m1 * b2 + n1 * f2 + o1 * j2 + p1 * n2 ;\r\n        _p[14] = m1 * c2 + n1 * g2 + o1 * k2 + p1 * o2 ;\r\n        _p[15] = m1 * d2 + n1 * h2 + o1 * l2 + p1 * p2 ;\r\n\r\n        this._identityCalculated = false;\r\n        return this;\r\n    }\r\n\r\n    function isIdentity() {\r\n        if(!this._identityCalculated){\r\n            this._identity = !(this.props[0] !== 1 || this.props[1] !== 0 || this.props[2] !== 0 || this.props[3] !== 0 || this.props[4] !== 0 || this.props[5] !== 1 || this.props[6] !== 0 || this.props[7] !== 0 || this.props[8] !== 0 || this.props[9] !== 0 || this.props[10] !== 1 || this.props[11] !== 0 || this.props[12] !== 0 || this.props[13] !== 0 || this.props[14] !== 0 || this.props[15] !== 1);\r\n            this._identityCalculated = true;\r\n        }\r\n        return this._identity;\r\n    }\r\n\r\n    function equals(matr){\r\n        var i = 0;\r\n        while (i < 16) {\r\n            if(matr.props[i] !== this.props[i]) {\r\n                return false;\r\n            }\r\n            i+=1;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function clone(matr){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            matr.props[i] = this.props[i];\r\n        }\r\n    }\r\n\r\n    function cloneFromProps(props){\r\n        var i;\r\n        for(i=0;i<16;i+=1){\r\n            this.props[i] = props[i];\r\n        }\r\n    }\r\n\r\n    function applyToPoint(x, y, z) {\r\n\r\n        return {\r\n            x: x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],\r\n            y: x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],\r\n            z: x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]\r\n        };\r\n        /*return {\r\n         x: x * me.a + y * me.c + me.e,\r\n         y: x * me.b + y * me.d + me.f\r\n         };*/\r\n    }\r\n    function applyToX(x, y, z) {\r\n        return x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12];\r\n    }\r\n    function applyToY(x, y, z) {\r\n        return x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13];\r\n    }\r\n    function applyToZ(x, y, z) {\r\n        return x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14];\r\n    }\r\n\r\n    function getInverseMatrix() {\r\n        var determinant = this.props[0] * this.props[5] - this.props[1] * this.props[4];\r\n        var a = this.props[5]/determinant;\r\n        var b = - this.props[1]/determinant;\r\n        var c = - this.props[4]/determinant;\r\n        var d = this.props[0]/determinant;\r\n        var e = (this.props[4] * this.props[13] - this.props[5] * this.props[12])/determinant;\r\n        var f = - (this.props[0] * this.props[13] - this.props[1] * this.props[12])/determinant;\r\n        var inverseMatrix = new Matrix();\r\n        inverseMatrix.props[0] = a;\r\n        inverseMatrix.props[1] = b;\r\n        inverseMatrix.props[4] = c;\r\n        inverseMatrix.props[5] = d;\r\n        inverseMatrix.props[12] = e;\r\n        inverseMatrix.props[13] = f;\r\n        return inverseMatrix;\r\n    }\r\n\r\n    function inversePoint(pt) {\r\n        var inverseMatrix = this.getInverseMatrix();\r\n        return inverseMatrix.applyToPointArray(pt[0], pt[1], pt[2] || 0)\r\n    }\r\n\r\n    function inversePoints(pts){\r\n        var i, len = pts.length, retPts = [];\r\n        for(i=0;i<len;i+=1){\r\n            retPts[i] = inversePoint(pts[i]);\r\n        }\r\n        return retPts;\r\n    }\r\n\r\n    function applyToTriplePoints(pt1, pt2, pt3) {\r\n        var arr = createTypedArray('float32', 6);\r\n        if(this.isIdentity()) {\r\n            arr[0] = pt1[0];\r\n            arr[1] = pt1[1];\r\n            arr[2] = pt2[0];\r\n            arr[3] = pt2[1];\r\n            arr[4] = pt3[0];\r\n            arr[5] = pt3[1];\r\n        } else {\r\n            var p0 = this.props[0], p1 = this.props[1], p4 = this.props[4], p5 = this.props[5], p12 = this.props[12], p13 = this.props[13];\r\n            arr[0] = pt1[0] * p0 + pt1[1] * p4 + p12;\r\n            arr[1] = pt1[0] * p1 + pt1[1] * p5 + p13;\r\n            arr[2] = pt2[0] * p0 + pt2[1] * p4 + p12;\r\n            arr[3] = pt2[0] * p1 + pt2[1] * p5 + p13;\r\n            arr[4] = pt3[0] * p0 + pt3[1] * p4 + p12;\r\n            arr[5] = pt3[0] * p1 + pt3[1] * p5 + p13;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointArray(x,y,z){\r\n        var arr;\r\n        if(this.isIdentity()) {\r\n            arr = [x,y,z];\r\n        } else {\r\n            arr = [x * this.props[0] + y * this.props[4] + z * this.props[8] + this.props[12],x * this.props[1] + y * this.props[5] + z * this.props[9] + this.props[13],x * this.props[2] + y * this.props[6] + z * this.props[10] + this.props[14]];\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function applyToPointStringified(x, y) {\r\n        if(this.isIdentity()) {\r\n            return x + ',' + y;\r\n        }\r\n        var _p = this.props;\r\n        return Math.round((x * _p[0] + y * _p[4] + _p[12]) * 100) / 100+','+ Math.round((x * _p[1] + y * _p[5] + _p[13]) * 100) / 100;\r\n    }\r\n\r\n    function toCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var i = 0;\r\n        var props = this.props;\r\n        var cssValue = 'matrix3d(';\r\n        var v = 10000;\r\n        while(i<16){\r\n            cssValue += _rnd(props[i]*v)/v;\r\n            cssValue += i === 15 ? ')':',';\r\n            i += 1;\r\n        }\r\n        return cssValue;\r\n    }\r\n\r\n    function roundMatrixProperty(val) {\r\n        var v = 10000;\r\n        if((val < 0.000001 && val > 0) || (val > -0.000001 && val < 0)) {\r\n            return _rnd(val * v) / v;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    function to2dCSS() {\r\n        //Doesn't make much sense to add this optimization. If it is an identity matrix, it's very likely this will get called only once since it won't be keyframed.\r\n        /*if(this.isIdentity()) {\r\n            return '';\r\n        }*/\r\n        var props = this.props;\r\n        var _a = roundMatrixProperty(props[0]);\r\n        var _b = roundMatrixProperty(props[1]);\r\n        var _c = roundMatrixProperty(props[4]);\r\n        var _d = roundMatrixProperty(props[5]);\r\n        var _e = roundMatrixProperty(props[12]);\r\n        var _f = roundMatrixProperty(props[13]);\r\n        return \"matrix(\" + _a + ',' + _b + ',' + _c + ',' + _d + ',' + _e + ',' + _f + \")\";\r\n    }\r\n\r\n    return function(){\r\n        this.reset = reset;\r\n        this.rotate = rotate;\r\n        this.rotateX = rotateX;\r\n        this.rotateY = rotateY;\r\n        this.rotateZ = rotateZ;\r\n        this.skew = skew;\r\n        this.skewFromAxis = skewFromAxis;\r\n        this.shear = shear;\r\n        this.scale = scale;\r\n        this.setTransform = setTransform;\r\n        this.translate = translate;\r\n        this.transform = transform;\r\n        this.applyToPoint = applyToPoint;\r\n        this.applyToX = applyToX;\r\n        this.applyToY = applyToY;\r\n        this.applyToZ = applyToZ;\r\n        this.applyToPointArray = applyToPointArray;\r\n        this.applyToTriplePoints = applyToTriplePoints;\r\n        this.applyToPointStringified = applyToPointStringified;\r\n        this.toCSS = toCSS;\r\n        this.to2dCSS = to2dCSS;\r\n        this.clone = clone;\r\n        this.cloneFromProps = cloneFromProps;\r\n        this.equals = equals;\r\n        this.inversePoints = inversePoints;\r\n        this.inversePoint = inversePoint;\r\n        this.getInverseMatrix = getInverseMatrix;\r\n        this._t = this.transform;\r\n        this.isIdentity = isIdentity;\r\n        this._identity = true;\r\n        this._identityCalculated = false;\r\n\r\n        this.props = createTypedArray('float32', 16);\r\n        this.reset();\r\n    };\r\n}());\r\n\r\n/*\r\n Copyright 2014 David Bau.\r\n\r\n Permission is hereby granted, free of charge, to any person obtaining\r\n a copy of this software and associated documentation files (the\r\n \"Software\"), to deal in the Software without restriction, including\r\n without limitation the rights to use, copy, modify, merge, publish,\r\n distribute, sublicense, and/or sell copies of the Software, and to\r\n permit persons to whom the Software is furnished to do so, subject to\r\n the following conditions:\r\n\r\n The above copyright notice and this permission notice shall be\r\n included in all copies or substantial portions of the Software.\r\n\r\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\r\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n */\r\n\r\n(function (pool, math) {\r\n//\r\n// The following constants are related to IEEE 754 limits.\r\n//\r\n    var global = this,\r\n        width = 256,        // each RC4 output is 0 <= x < 256\r\n        chunks = 6,         // at least six RC4 outputs for each double\r\n        digits = 52,        // there are 52 significant digits in a double\r\n        rngname = 'random', // rngname: name for Math.random and Math.seedrandom\r\n        startdenom = math.pow(width, chunks),\r\n        significance = math.pow(2, digits),\r\n        overflow = significance * 2,\r\n        mask = width - 1,\r\n        nodecrypto;         // node.js crypto module, initialized at the bottom.\r\n\r\n//\r\n// seedrandom()\r\n// This is the seedrandom function described above.\r\n//\r\n    function seedrandom(seed, options, callback) {\r\n        var key = [];\r\n        options = (options === true) ? { entropy: true } : (options || {});\r\n\r\n        // Flatten the seed string or build one from local entropy if needed.\r\n        var shortseed = mixkey(flatten(\r\n            options.entropy ? [seed, tostring(pool)] :\r\n                (seed === null) ? autoseed() : seed, 3), key);\r\n\r\n        // Use the seed to initialize an ARC4 generator.\r\n        var arc4 = new ARC4(key);\r\n\r\n        // This function returns a random double in [0, 1) that contains\r\n        // randomness in every bit of the mantissa of the IEEE 754 value.\r\n        var prng = function() {\r\n            var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\r\n                d = startdenom,                 //   and denominator d = 2 ^ 48.\r\n                x = 0;                          //   and no 'extra last byte'.\r\n            while (n < significance) {          // Fill up all significant digits by\r\n                n = (n + x) * width;              //   shifting numerator and\r\n                d *= width;                       //   denominator and generating a\r\n                x = arc4.g(1);                    //   new least-significant-byte.\r\n            }\r\n            while (n >= overflow) {             // To avoid rounding up, before adding\r\n                n /= 2;                           //   last byte, shift everything\r\n                d /= 2;                           //   right using integer math until\r\n                x >>>= 1;                         //   we have exactly the desired bits.\r\n            }\r\n            return (n + x) / d;                 // Form the number within [0, 1).\r\n        };\r\n\r\n        prng.int32 = function() { return arc4.g(4) | 0; };\r\n        prng.quick = function() { return arc4.g(4) / 0x100000000; };\r\n        prng.double = prng;\r\n\r\n        // Mix the randomness into accumulated entropy.\r\n        mixkey(tostring(arc4.S), pool);\r\n\r\n        // Calling convention: what to return as a function of prng, seed, is_math.\r\n        return (options.pass || callback ||\r\n        function(prng, seed, is_math_call, state) {\r\n            if (state) {\r\n                // Load the arc4 state from the given state if it has an S array.\r\n                if (state.S) { copy(state, arc4); }\r\n                // Only provide the .state method if requested via options.state.\r\n                prng.state = function() { return copy(arc4, {}); };\r\n            }\r\n\r\n            // If called as a method of Math (Math.seedrandom()), mutate\r\n            // Math.random because that is how seedrandom.js has worked since v1.0.\r\n            if (is_math_call) { math[rngname] = prng; return seed; }\r\n\r\n            // Otherwise, it is a newer calling convention, so return the\r\n            // prng directly.\r\n            else return prng;\r\n        })(\r\n            prng,\r\n            shortseed,\r\n            'global' in options ? options.global : (this == math),\r\n            options.state);\r\n    }\r\n    math['seed' + rngname] = seedrandom;\r\n\r\n//\r\n// ARC4\r\n//\r\n// An ARC4 implementation.  The constructor takes a key in the form of\r\n// an array of at most (width) integers that should be 0 <= x < (width).\r\n//\r\n// The g(count) method returns a pseudorandom integer that concatenates\r\n// the next (count) outputs from ARC4.  Its return value is a number x\r\n// that is in the range 0 <= x < (width ^ count).\r\n//\r\n    function ARC4(key) {\r\n        var t, keylen = key.length,\r\n            me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\r\n\r\n        // The empty key [] is treated as [0].\r\n        if (!keylen) { key = [keylen++]; }\r\n\r\n        // Set up S using the standard key scheduling algorithm.\r\n        while (i < width) {\r\n            s[i] = i++;\r\n        }\r\n        for (i = 0; i < width; i++) {\r\n            s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\r\n            s[j] = t;\r\n        }\r\n\r\n        // The \"g\" method returns the next (count) outputs as one number.\r\n        me.g = function(count) {\r\n            // Using instance members instead of closure state nearly doubles speed.\r\n            var t, r = 0,\r\n                i = me.i, j = me.j, s = me.S;\r\n            while (count--) {\r\n                t = s[i = mask & (i + 1)];\r\n                r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\r\n            }\r\n            me.i = i; me.j = j;\r\n            return r;\r\n            // For robust unpredictability, the function call below automatically\r\n            // discards an initial batch of values.  This is called RC4-drop[256].\r\n            // See http://google.com/search?q=rsa+fluhrer+response&btnI\r\n        };\r\n    }\r\n\r\n//\r\n// copy()\r\n// Copies internal state of ARC4 to or from a plain object.\r\n//\r\n    function copy(f, t) {\r\n        t.i = f.i;\r\n        t.j = f.j;\r\n        t.S = f.S.slice();\r\n        return t;\r\n    }\r\n\r\n//\r\n// flatten()\r\n// Converts an object tree to nested arrays of strings.\r\n//\r\n    function flatten(obj, depth) {\r\n        var result = [], typ = (typeof obj), prop;\r\n        if (depth && typ == 'object') {\r\n            for (prop in obj) {\r\n                try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\r\n            }\r\n        }\r\n        return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\r\n    }\r\n\r\n//\r\n// mixkey()\r\n// Mixes a string seed into a key that is an array of integers, and\r\n// returns a shortened string seed that is equivalent to the result key.\r\n//\r\n    function mixkey(seed, key) {\r\n        var stringseed = seed + '', smear, j = 0;\r\n        while (j < stringseed.length) {\r\n            key[mask & j] =\r\n                mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\r\n        }\r\n        return tostring(key);\r\n    }\r\n\r\n//\r\n// autoseed()\r\n// Returns an object for autoseeding, using window.crypto and Node crypto\r\n// module if available.\r\n//\r\n    function autoseed() {\r\n        try {\r\n            if (nodecrypto) { return tostring(nodecrypto.randomBytes(width)); }\r\n            var out = new Uint8Array(width);\r\n            (global.crypto || global.msCrypto).getRandomValues(out);\r\n            return tostring(out);\r\n        } catch (e) {\r\n            var browser = global.navigator,\r\n                plugins = browser && browser.plugins;\r\n            return [+new Date(), global, plugins, global.screen, tostring(pool)];\r\n        }\r\n    }\r\n\r\n//\r\n// tostring()\r\n// Converts an array of charcodes to a string\r\n//\r\n    function tostring(a) {\r\n        return String.fromCharCode.apply(0, a);\r\n    }\r\n\r\n//\r\n// When seedrandom.js is loaded, we immediately mix a few bits\r\n// from the built-in RNG into the entropy pool.  Because we do\r\n// not want to interfere with deterministic PRNG state later,\r\n// seedrandom will not call math.random on its own again after\r\n// initialization.\r\n//\r\n    mixkey(math.random(), pool);\r\n\r\n//\r\n// Nodejs and AMD support: export the implementation as a module using\r\n// either convention.\r\n//\r\n\r\n// End anonymous scope, and pass initial values.\r\n})(\r\n    [],     // pool: entropy pool starts empty\r\n    BMMath    // math: package containing random, pow, and seedrandom\r\n);\r\nvar BezierFactory = (function(){\r\n    /**\r\n     * BezierEasing - use bezier curve for transition easing function\r\n     * by Gaëtan Renaudeau 2014 - 2015 – MIT License\r\n     *\r\n     * Credits: is based on Firefox's nsSMILKeySpline.cpp\r\n     * Usage:\r\n     * var spline = BezierEasing([ 0.25, 0.1, 0.25, 1.0 ])\r\n     * spline.get(x) => returns the easing value | x must be in [0, 1] range\r\n     *\r\n     */\r\n\r\n        var ob = {};\r\n    ob.getBezierEasing = getBezierEasing;\r\n    var beziers = {};\r\n\r\n    function getBezierEasing(a,b,c,d,nm){\r\n        var str = nm || ('bez_' + a+'_'+b+'_'+c+'_'+d).replace(/\\./g, 'p');\r\n        if(beziers[str]){\r\n            return beziers[str];\r\n        }\r\n        var bezEasing = new BezierEasing([a,b,c,d]);\r\n        beziers[str] = bezEasing;\r\n        return bezEasing;\r\n    }\r\n\r\n// These values are established by empiricism with tests (tradeoff: performance VS precision)\r\n    var NEWTON_ITERATIONS = 4;\r\n    var NEWTON_MIN_SLOPE = 0.001;\r\n    var SUBDIVISION_PRECISION = 0.0000001;\r\n    var SUBDIVISION_MAX_ITERATIONS = 10;\r\n\r\n    var kSplineTableSize = 11;\r\n    var kSampleStepSize = 1.0 / (kSplineTableSize - 1.0);\r\n\r\n    var float32ArraySupported = typeof Float32Array === \"function\";\r\n\r\n    function A (aA1, aA2) { return 1.0 - 3.0 * aA2 + 3.0 * aA1; }\r\n    function B (aA1, aA2) { return 3.0 * aA2 - 6.0 * aA1; }\r\n    function C (aA1)      { return 3.0 * aA1; }\r\n\r\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\r\n    function calcBezier (aT, aA1, aA2) {\r\n        return ((A(aA1, aA2)*aT + B(aA1, aA2))*aT + C(aA1))*aT;\r\n    }\r\n\r\n// Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\r\n    function getSlope (aT, aA1, aA2) {\r\n        return 3.0 * A(aA1, aA2)*aT*aT + 2.0 * B(aA1, aA2) * aT + C(aA1);\r\n    }\r\n\r\n    function binarySubdivide (aX, aA, aB, mX1, mX2) {\r\n        var currentX, currentT, i = 0;\r\n        do {\r\n            currentT = aA + (aB - aA) / 2.0;\r\n            currentX = calcBezier(currentT, mX1, mX2) - aX;\r\n            if (currentX > 0.0) {\r\n                aB = currentT;\r\n            } else {\r\n                aA = currentT;\r\n            }\r\n        } while (Math.abs(currentX) > SUBDIVISION_PRECISION && ++i < SUBDIVISION_MAX_ITERATIONS);\r\n        return currentT;\r\n    }\r\n\r\n    function newtonRaphsonIterate (aX, aGuessT, mX1, mX2) {\r\n        for (var i = 0; i < NEWTON_ITERATIONS; ++i) {\r\n            var currentSlope = getSlope(aGuessT, mX1, mX2);\r\n            if (currentSlope === 0.0) return aGuessT;\r\n            var currentX = calcBezier(aGuessT, mX1, mX2) - aX;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    }\r\n\r\n    /**\r\n     * points is an array of [ mX1, mY1, mX2, mY2 ]\r\n     */\r\n    function BezierEasing (points) {\r\n        this._p = points;\r\n        this._mSampleValues = float32ArraySupported ? new Float32Array(kSplineTableSize) : new Array(kSplineTableSize);\r\n        this._precomputed = false;\r\n\r\n        this.get = this.get.bind(this);\r\n    }\r\n\r\n    BezierEasing.prototype = {\r\n\r\n        get: function (x) {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            if (!this._precomputed) this._precompute();\r\n            if (mX1 === mY1 && mX2 === mY2) return x; // linear\r\n            // Because JavaScript number are imprecise, we should guarantee the extremes are right.\r\n            if (x === 0) return 0;\r\n            if (x === 1) return 1;\r\n            return calcBezier(this._getTForX(x), mY1, mY2);\r\n        },\r\n\r\n        // Private part\r\n\r\n        _precompute: function () {\r\n            var mX1 = this._p[0],\r\n                mY1 = this._p[1],\r\n                mX2 = this._p[2],\r\n                mY2 = this._p[3];\r\n            this._precomputed = true;\r\n            if (mX1 !== mY1 || mX2 !== mY2)\r\n                this._calcSampleValues();\r\n        },\r\n\r\n        _calcSampleValues: function () {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2];\r\n            for (var i = 0; i < kSplineTableSize; ++i) {\r\n                this._mSampleValues[i] = calcBezier(i * kSampleStepSize, mX1, mX2);\r\n            }\r\n        },\r\n\r\n        /**\r\n         * getTForX chose the fastest heuristic to determine the percentage value precisely from a given X projection.\r\n         */\r\n        _getTForX: function (aX) {\r\n            var mX1 = this._p[0],\r\n                mX2 = this._p[2],\r\n                mSampleValues = this._mSampleValues;\r\n\r\n            var intervalStart = 0.0;\r\n            var currentSample = 1;\r\n            var lastSample = kSplineTableSize - 1;\r\n\r\n            for (; currentSample !== lastSample && mSampleValues[currentSample] <= aX; ++currentSample) {\r\n                intervalStart += kSampleStepSize;\r\n            }\r\n            --currentSample;\r\n\r\n            // Interpolate to provide an initial guess for t\r\n            var dist = (aX - mSampleValues[currentSample]) / (mSampleValues[currentSample+1] - mSampleValues[currentSample]);\r\n            var guessForT = intervalStart + dist * kSampleStepSize;\r\n\r\n            var initialSlope = getSlope(guessForT, mX1, mX2);\r\n            if (initialSlope >= NEWTON_MIN_SLOPE) {\r\n                return newtonRaphsonIterate(aX, guessForT, mX1, mX2);\r\n            } else if (initialSlope === 0.0) {\r\n                return guessForT;\r\n            } else {\r\n                return binarySubdivide(aX, intervalStart, intervalStart + kSampleStepSize, mX1, mX2);\r\n            }\r\n        }\r\n    };\r\n\r\n    return ob;\r\n\r\n}());\r\n(function () {\r\n    var lastTime = 0;\r\n    var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n    for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n        window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n        window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n    }\r\n    if(!window.requestAnimationFrame)\r\n        window.requestAnimationFrame = function (callback, element) {\r\n            var currTime = new Date().getTime();\r\n            var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n            var id = setTimeout(function () {\r\n                    callback(currTime + timeToCall);\r\n                },\r\n                timeToCall);\r\n            lastTime = currTime + timeToCall;\r\n            return id;\r\n        };\r\n    if(!window.cancelAnimationFrame)\r\n        window.cancelAnimationFrame = function (id) {\r\n            clearTimeout(id);\r\n        };\r\n}());\r\n\r\nfunction extendPrototype(sources,destination){\r\n    var i, len = sources.length, sourcePrototype;\r\n    for (i = 0;i < len;i += 1) {\r\n        sourcePrototype = sources[i].prototype;\r\n        for (var attr in sourcePrototype) {\r\n            if (sourcePrototype.hasOwnProperty(attr)) destination.prototype[attr] = sourcePrototype[attr];\r\n        }\r\n    }\r\n}\r\n\r\nfunction getDescriptor(object, prop) {\r\n    return Object.getOwnPropertyDescriptor(object, prop);\r\n}\r\n\r\nfunction createProxyFunction(prototype) {\r\n\tfunction ProxyFunction(){}\r\n\tProxyFunction.prototype = prototype;\r\n\treturn ProxyFunction;\r\n}\r\nfunction bezFunction(){\r\n\r\n    var easingFunctions = [];\r\n    var math = Math;\r\n\r\n    function pointOnLine2D(x1,y1, x2,y2, x3,y3){\r\n        var det1 = (x1*y2) + (y1*x3) + (x2*y3) - (x3*y2) - (y3*x1) - (x2*y1);\r\n        return det1 > -0.001 && det1 < 0.001;\r\n    }\r\n\r\n    function pointOnLine3D(x1,y1,z1, x2,y2,z2, x3,y3,z3){\r\n        if(z1 === 0 && z2 === 0 && z3 === 0) {\r\n            return pointOnLine2D(x1,y1, x2,y2, x3,y3);\r\n        }\r\n        var dist1 = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2) + Math.pow(z2 - z1, 2));\r\n        var dist2 = Math.sqrt(Math.pow(x3 - x1, 2) + Math.pow(y3 - y1, 2) + Math.pow(z3 - z1, 2));\r\n        var dist3 = Math.sqrt(Math.pow(x3 - x2, 2) + Math.pow(y3 - y2, 2) + Math.pow(z3 - z2, 2));\r\n        var diffDist;\r\n        if(dist1 > dist2){\r\n            if(dist1 > dist3){\r\n                diffDist = dist1 - dist2 - dist3;\r\n            } else {\r\n                diffDist = dist3 - dist2 - dist1;\r\n            }\r\n        } else if(dist3 > dist2){\r\n            diffDist = dist3 - dist2 - dist1;\r\n        } else {\r\n            diffDist = dist2 - dist1 - dist3;\r\n        }\r\n        return diffDist > -0.0001 && diffDist < 0.0001;\r\n    }\r\n\r\n    var getBezierLength = (function(){\r\n\r\n        return function(pt1,pt2,pt3,pt4){\r\n            var curveSegments = defaultCurveSegments;\r\n            var k;\r\n            var i, len;\r\n            var ptCoord,perc,addedLength = 0;\r\n            var ptDistance;\r\n            var point = [],lastPoint = [];\r\n            var lengthData = bezier_length_pool.newElement();\r\n            len = pt3.length;\r\n            for(k=0;k<curveSegments;k+=1){\r\n                perc = k/(curveSegments-1);\r\n                ptDistance = 0;\r\n                for(i=0;i<len;i+=1){\r\n                    ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*pt3[i]+3*(1-perc)*bm_pow(perc,2)*pt4[i]+bm_pow(perc,3)*pt2[i];\r\n                    point[i] = ptCoord;\r\n                    if(lastPoint[i] !== null){\r\n                        ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                    }\r\n                    lastPoint[i] = point[i];\r\n                }\r\n                if(ptDistance){\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                }\r\n                lengthData.percents[k] = perc;\r\n                lengthData.lengths[k] = addedLength;\r\n            }\r\n            lengthData.addedLength = addedLength;\r\n            return lengthData;\r\n        };\r\n    }());\r\n\r\n    function getSegmentsLength(shapeData) {\r\n        var segmentsLength = segments_length_pool.newElement();\r\n        var closed = shapeData.c;\r\n        var pathV = shapeData.v;\r\n        var pathO = shapeData.o;\r\n        var pathI = shapeData.i;\r\n        var i, len = shapeData._length;\r\n        var lengths = segmentsLength.lengths;\r\n        var totalLength = 0;\r\n        for(i=0;i<len-1;i+=1){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[i+1],pathO[i],pathI[i+1]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        if(closed && len){\r\n            lengths[i] = getBezierLength(pathV[i],pathV[0],pathO[i],pathI[0]);\r\n            totalLength += lengths[i].addedLength;\r\n        }\r\n        segmentsLength.totalLength = totalLength;\r\n        return segmentsLength;\r\n    }\r\n\r\n    function BezierData(length){\r\n        this.segmentLength = 0;\r\n        this.points = new Array(length);\r\n    }\r\n\r\n    function PointData(partial,point){\r\n        this.partialLength = partial;\r\n        this.point = point;\r\n    }\r\n\r\n    var buildBezierData = (function(){\r\n\r\n        var storedData = {};\r\n\r\n        return function (pt1, pt2, pt3, pt4){\r\n            var bezierName = (pt1[0]+'_'+pt1[1]+'_'+pt2[0]+'_'+pt2[1]+'_'+pt3[0]+'_'+pt3[1]+'_'+pt4[0]+'_'+pt4[1]).replace(/\\./g, 'p');\r\n            if(!storedData[bezierName]){\r\n                var curveSegments = defaultCurveSegments;\r\n                var k, i, len;\r\n                var ptCoord,perc,addedLength = 0;\r\n                var ptDistance;\r\n                var point,lastPoint = null;\r\n                if (pt1.length === 2 && (pt1[0] != pt2[0] || pt1[1] != pt2[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt1[0]+pt3[0],pt1[1]+pt3[1]) && pointOnLine2D(pt1[0],pt1[1],pt2[0],pt2[1],pt2[0]+pt4[0],pt2[1]+pt4[1])){\r\n                    curveSegments = 2;\r\n                }\r\n                var bezierData = new BezierData(curveSegments);\r\n                len = pt3.length;\r\n                for (k = 0; k < curveSegments; k += 1) {\r\n                    point = createSizedArray(len);\r\n                    perc = k / (curveSegments - 1);\r\n                    ptDistance = 0;\r\n                    for (i = 0; i < len; i += 1){\r\n                        ptCoord = bm_pow(1-perc,3)*pt1[i]+3*bm_pow(1-perc,2)*perc*(pt1[i] + pt3[i])+3*(1-perc)*bm_pow(perc,2)*(pt2[i] + pt4[i])+bm_pow(perc,3)*pt2[i];\r\n                        point[i] = ptCoord;\r\n                        if(lastPoint !== null){\r\n                            ptDistance += bm_pow(point[i] - lastPoint[i],2);\r\n                        }\r\n                    }\r\n                    ptDistance = bm_sqrt(ptDistance);\r\n                    addedLength += ptDistance;\r\n                    bezierData.points[k] = new PointData(ptDistance, point);\r\n                    lastPoint = point;\r\n                }\r\n                bezierData.segmentLength = addedLength;\r\n                storedData[bezierName] = bezierData;\r\n            }\r\n            return storedData[bezierName];\r\n        };\r\n    }());\r\n\r\n    function getDistancePerc(perc,bezierData){\r\n        var percents = bezierData.percents;\r\n        var lengths = bezierData.lengths;\r\n        var len = percents.length;\r\n        var initPos = bm_floor((len-1)*perc);\r\n        var lengthPos = perc*bezierData.addedLength;\r\n        var lPerc = 0;\r\n        if(initPos === len - 1 || initPos === 0 || lengthPos === lengths[initPos]){\r\n            return percents[initPos];\r\n        }else{\r\n            var dir = lengths[initPos] > lengthPos ? -1 : 1;\r\n            var flag = true;\r\n            while(flag){\r\n                if(lengths[initPos] <= lengthPos && lengths[initPos+1] > lengthPos){\r\n                    lPerc = (lengthPos - lengths[initPos]) / (lengths[initPos+1] - lengths[initPos]);\r\n                    flag = false;\r\n                }else{\r\n                    initPos += dir;\r\n                }\r\n                if(initPos < 0 || initPos >= len - 1){\r\n                    //FIX for TypedArrays that don't store floating point values with enough accuracy\r\n                    if(initPos === len - 1) {\r\n                        return percents[initPos];\r\n                    }\r\n                    flag = false;\r\n                }\r\n            }\r\n            return percents[initPos] + (percents[initPos+1] - percents[initPos])*lPerc;\r\n        }\r\n    }\r\n\r\n    function getPointInSegment(pt1, pt2, pt3, pt4, percent, bezierData) {\r\n        var t1 = getDistancePerc(percent,bezierData);\r\n        var u0 = 1;\r\n        var u1 = 1 - t1;\r\n        var ptX = Math.round((u1*u1*u1* pt1[0] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[0] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[0] + t1*t1*t1* pt2[0])* 1000) / 1000;\r\n        var ptY = Math.round((u1*u1*u1* pt1[1] + (t1*u1*u1 + u1*t1*u1 + u1*u1*t1)* pt3[1] + (t1*t1*u1 + u1*t1*t1 + t1*u1*t1)*pt4[1] + t1*t1*t1* pt2[1])* 1000) / 1000;\r\n        return [ptX, ptY];\r\n    }\r\n\r\n    function getSegmentArray() {\r\n\r\n    }\r\n\r\n    var bezier_segment_points = createTypedArray('float32', 8);\r\n\r\n    function getNewSegment(pt1,pt2,pt3,pt4,startPerc,endPerc, bezierData){\r\n\r\n        startPerc = startPerc < 0 ? 0 : startPerc > 1 ? 1 : startPerc;\r\n        var t0 = getDistancePerc(startPerc,bezierData);\r\n        endPerc = endPerc > 1 ? 1 : endPerc;\r\n        var t1 = getDistancePerc(endPerc,bezierData);\r\n        var i, len = pt1.length;\r\n        var u0 = 1 - t0;\r\n        var u1 = 1 - t1;\r\n        var u0u0u0 = u0*u0*u0;\r\n        var t0u0u0_3 = t0*u0*u0*3;\r\n        var t0t0u0_3 = t0*t0*u0*3;\r\n        var t0t0t0 = t0*t0*t0;\r\n        //\r\n        var u0u0u1 = u0*u0*u1;\r\n        var t0u0u1_3 = t0*u0*u1 + u0*t0*u1 + u0*u0*t1;\r\n        var t0t0u1_3 = t0*t0*u1 + u0*t0*t1 + t0*u0*t1;\r\n        var t0t0t1 = t0*t0*t1;\r\n        //\r\n        var u0u1u1 = u0*u1*u1;\r\n        var t0u1u1_3 = t0*u1*u1 + u0*t1*u1 + u0*u1*t1;\r\n        var t0t1u1_3 = t0*t1*u1 + u0*t1*t1 + t0*u1*t1;\r\n        var t0t1t1 = t0*t1*t1;\r\n        //\r\n        var u1u1u1 = u1*u1*u1;\r\n        var t1u1u1_3 = t1*u1*u1 + u1*t1*u1 + u1*u1*t1;\r\n        var t1t1u1_3 = t1*t1*u1 + u1*t1*t1 + t1*u1*t1;\r\n        var t1t1t1 = t1*t1*t1;\r\n        for(i=0;i<len;i+=1){\r\n            bezier_segment_points[i * 4] = Math.round((u0u0u0 * pt1[i] + t0u0u0_3 * pt3[i] + t0t0u0_3 * pt4[i] + t0t0t0 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 1] = Math.round((u0u0u1 * pt1[i] + t0u0u1_3 * pt3[i] + t0t0u1_3 * pt4[i] + t0t0t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 2] = Math.round((u0u1u1 * pt1[i] + t0u1u1_3 * pt3[i] + t0t1u1_3 * pt4[i] + t0t1t1 * pt2[i]) * 1000) / 1000;\r\n            bezier_segment_points[i * 4 + 3] = Math.round((u1u1u1 * pt1[i] + t1u1u1_3 * pt3[i] + t1t1u1_3 * pt4[i] + t1t1t1 * pt2[i]) * 1000) / 1000;\r\n        }\r\n\r\n        return bezier_segment_points;\r\n    }\r\n\r\n    return {\r\n        getSegmentsLength : getSegmentsLength,\r\n        getNewSegment : getNewSegment,\r\n        getPointInSegment : getPointInSegment,\r\n        buildBezierData : buildBezierData,\r\n        pointOnLine2D : pointOnLine2D,\r\n        pointOnLine3D : pointOnLine3D\r\n    };\r\n}\r\n\r\nvar bez = bezFunction();\r\nfunction dataFunctionManager(){\r\n\r\n    //var tCanvasHelper = createTag('canvas').getContext('2d');\r\n\r\n    function completeLayers(layers, comps, fontManager){\r\n        var layerData;\r\n        var animArray, lastFrame;\r\n        var i, len = layers.length;\r\n        var j, jLen, k, kLen;\r\n        for(i=0;i<len;i+=1){\r\n            layerData = layers[i];\r\n            if(!('ks' in layerData) || layerData.completed){\r\n                continue;\r\n            }\r\n            layerData.completed = true;\r\n            if(layerData.tt){\r\n                layers[i-1].td = layerData.tt;\r\n            }\r\n            animArray = [];\r\n            lastFrame = -1;\r\n            if(layerData.hasMask){\r\n                var maskProps = layerData.masksProperties;\r\n                jLen = maskProps.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    if(maskProps[j].pt.k.i){\r\n                        convertPathsToAbsoluteValues(maskProps[j].pt.k);\r\n                    }else{\r\n                        kLen = maskProps[j].pt.k.length;\r\n                        for(k=0;k<kLen;k+=1){\r\n                            if(maskProps[j].pt.k[k].s){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].s[0]);\r\n                            }\r\n                            if(maskProps[j].pt.k[k].e){\r\n                                convertPathsToAbsoluteValues(maskProps[j].pt.k[k].e[0]);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(layerData.ty===0){\r\n                layerData.layers = findCompLayers(layerData.refId, comps);\r\n                completeLayers(layerData.layers,comps, fontManager);\r\n            }else if(layerData.ty === 4){\r\n                completeShapes(layerData.shapes);\r\n            }else if(layerData.ty == 5){\r\n                completeText(layerData, fontManager);\r\n            }\r\n        }\r\n    }\r\n\r\n    function findCompLayers(id,comps){\r\n        var i = 0, len = comps.length;\r\n        while(i<len){\r\n            if(comps[i].id === id){\r\n                if(!comps[i].layers.__used) {\r\n                    comps[i].layers.__used = true;\r\n                    return comps[i].layers;\r\n                }\r\n                return JSON.parse(JSON.stringify(comps[i].layers));\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function completeShapes(arr){\r\n        var i, len = arr.length;\r\n        var j, jLen;\r\n        var hasPaths = false;\r\n        for(i=len-1;i>=0;i-=1){\r\n            if(arr[i].ty == 'sh'){\r\n                if(arr[i].ks.k.i){\r\n                    convertPathsToAbsoluteValues(arr[i].ks.k);\r\n                }else{\r\n                    jLen = arr[i].ks.k.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(arr[i].ks.k[j].s){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].s[0]);\r\n                        }\r\n                        if(arr[i].ks.k[j].e){\r\n                            convertPathsToAbsoluteValues(arr[i].ks.k[j].e[0]);\r\n                        }\r\n                    }\r\n                }\r\n                hasPaths = true;\r\n            }else if(arr[i].ty == 'gr'){\r\n                completeShapes(arr[i].it);\r\n            }\r\n        }\r\n        /*if(hasPaths){\r\n            //mx: distance\r\n            //ss: sensitivity\r\n            //dc: decay\r\n            arr.splice(arr.length-1,0,{\r\n                \"ty\": \"ms\",\r\n                \"mx\":20,\r\n                \"ss\":10,\r\n                 \"dc\":0.001,\r\n                \"maxDist\":200\r\n            });\r\n        }*/\r\n    }\r\n\r\n    function convertPathsToAbsoluteValues(path){\r\n        var i, len = path.i.length;\r\n        for(i=0;i<len;i+=1){\r\n            path.i[i][0] += path.v[i][0];\r\n            path.i[i][1] += path.v[i][1];\r\n            path.o[i][0] += path.v[i][0];\r\n            path.o[i][1] += path.v[i][1];\r\n        }\r\n    }\r\n\r\n    function checkVersion(minimum,animVersionString){\r\n        var animVersion = animVersionString ? animVersionString.split('.') : [100,100,100];\r\n        if(minimum[0]>animVersion[0]){\r\n            return true;\r\n        } else if(animVersion[0] > minimum[0]){\r\n            return false;\r\n        }\r\n        if(minimum[1]>animVersion[1]){\r\n            return true;\r\n        } else if(animVersion[1] > minimum[1]){\r\n            return false;\r\n        }\r\n        if(minimum[2]>animVersion[2]){\r\n            return true;\r\n        } else if(animVersion[2] > minimum[2]){\r\n            return false;\r\n        }\r\n    }\r\n\r\n    var checkText = (function(){\r\n        var minimumVersion = [4,4,14];\r\n\r\n        function updateTextLayer(textLayer){\r\n            var documentData = textLayer.t.d;\r\n            textLayer.t.d = {\r\n                k: [\r\n                    {\r\n                        s:documentData,\r\n                        t:0\r\n                    }\r\n                ]\r\n            };\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 5){\r\n                    updateTextLayer(layers[i]);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkChars = (function() {\r\n        var minimumVersion = [4,7,99];\r\n        return function (animationData){\r\n            if(animationData.chars && !checkVersion(minimumVersion,animationData.v)){\r\n                var i, len = animationData.chars.length, j, jLen, k, kLen;\r\n                var pathData, paths;\r\n                for(i = 0; i < len; i += 1) {\r\n                    if(animationData.chars[i].data && animationData.chars[i].data.shapes) {\r\n                        paths = animationData.chars[i].data.shapes[0].it;\r\n                        jLen = paths.length;\r\n\r\n                        for(j = 0; j < jLen; j += 1) {\r\n                            pathData = paths[j].ks.k;\r\n                            if(!pathData.__converted) {\r\n                                convertPathsToAbsoluteValues(paths[j].ks.k);\r\n                                pathData.__converted = true;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkColors = (function(){\r\n        var minimumVersion = [4,1,9];\r\n\r\n        function iterateShapes(shapes){\r\n            var i, len = shapes.length;\r\n            var j, jLen;\r\n            for(i=0;i<len;i+=1){\r\n                if(shapes[i].ty === 'gr'){\r\n                    iterateShapes(shapes[i].it);\r\n                }else if(shapes[i].ty === 'fl' || shapes[i].ty === 'st'){\r\n                    if(shapes[i].c.k && shapes[i].c.k[0].i){\r\n                        jLen = shapes[i].c.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(shapes[i].c.k[j].s){\r\n                                shapes[i].c.k[j].s[0] /= 255;\r\n                                shapes[i].c.k[j].s[1] /= 255;\r\n                                shapes[i].c.k[j].s[2] /= 255;\r\n                                shapes[i].c.k[j].s[3] /= 255;\r\n                            }\r\n                            if(shapes[i].c.k[j].e){\r\n                                shapes[i].c.k[j].e[0] /= 255;\r\n                                shapes[i].c.k[j].e[1] /= 255;\r\n                                shapes[i].c.k[j].e[2] /= 255;\r\n                                shapes[i].c.k[j].e[3] /= 255;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        shapes[i].c.k[0] /= 255;\r\n                        shapes[i].c.k[1] /= 255;\r\n                        shapes[i].c.k[2] /= 255;\r\n                        shapes[i].c.k[3] /= 255;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var i, len = layers.length;\r\n            for(i=0;i<len;i+=1){\r\n                if(layers[i].ty === 4){\r\n                    iterateShapes(layers[i].shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    var checkShapes = (function(){\r\n        var minimumVersion = [4,4,18];\r\n\r\n\r\n\r\n        function completeShapes(arr){\r\n            var i, len = arr.length;\r\n            var j, jLen;\r\n            var hasPaths = false;\r\n            for(i=len-1;i>=0;i-=1){\r\n                if(arr[i].ty == 'sh'){\r\n                    if(arr[i].ks.k.i){\r\n                        arr[i].ks.k.c = arr[i].closed;\r\n                    }else{\r\n                        jLen = arr[i].ks.k.length;\r\n                        for(j=0;j<jLen;j+=1){\r\n                            if(arr[i].ks.k[j].s){\r\n                                arr[i].ks.k[j].s[0].c = arr[i].closed;\r\n                            }\r\n                            if(arr[i].ks.k[j].e){\r\n                                arr[i].ks.k[j].e[0].c = arr[i].closed;\r\n                            }\r\n                        }\r\n                    }\r\n                    hasPaths = true;\r\n                }else if(arr[i].ty == 'gr'){\r\n                    completeShapes(arr[i].it);\r\n                }\r\n            }\r\n        }\r\n\r\n        function iterateLayers(layers){\r\n            var layerData;\r\n            var i, len = layers.length;\r\n            var j, jLen, k, kLen;\r\n            for(i=0;i<len;i+=1){\r\n                layerData = layers[i];\r\n                if(layerData.hasMask){\r\n                    var maskProps = layerData.masksProperties;\r\n                    jLen = maskProps.length;\r\n                    for(j=0;j<jLen;j+=1){\r\n                        if(maskProps[j].pt.k.i){\r\n                            maskProps[j].pt.k.c = maskProps[j].cl;\r\n                        }else{\r\n                            kLen = maskProps[j].pt.k.length;\r\n                            for(k=0;k<kLen;k+=1){\r\n                                if(maskProps[j].pt.k[k].s){\r\n                                    maskProps[j].pt.k[k].s[0].c = maskProps[j].cl;\r\n                                }\r\n                                if(maskProps[j].pt.k[k].e){\r\n                                    maskProps[j].pt.k[k].e[0].c = maskProps[j].cl;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                if(layerData.ty === 4){\r\n                    completeShapes(layerData.shapes);\r\n                }\r\n            }\r\n        }\r\n\r\n        return function (animationData){\r\n            if(checkVersion(minimumVersion,animationData.v)){\r\n                iterateLayers(animationData.layers);\r\n                if(animationData.assets){\r\n                    var i, len = animationData.assets.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        if(animationData.assets[i].layers){\r\n                            iterateLayers(animationData.assets[i].layers);\r\n\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n    }());\r\n\r\n    function completeData(animationData, fontManager){\r\n        if(animationData.__complete){\r\n            return;\r\n        }\r\n        checkColors(animationData);\r\n        checkText(animationData);\r\n        checkChars(animationData);\r\n        checkShapes(animationData);\r\n        completeLayers(animationData.layers, animationData.assets, fontManager);\r\n        animationData.__complete = true;\r\n        //blitAnimation(animationData, animationData.assets, fontManager);\r\n    }\r\n\r\n    function completeText(data, fontManager){\r\n        if(data.t.a.length === 0 && !('m' in data.t.p)){\r\n            data.singleShape = true;\r\n        }\r\n    }\r\n\r\n    var moduleOb = {};\r\n    moduleOb.completeData = completeData;\r\n    moduleOb.checkColors = checkColors;\r\n    moduleOb.checkChars = checkChars;\r\n    moduleOb.checkShapes = checkShapes;\r\n    moduleOb.completeLayers = completeLayers;\r\n\r\n    return moduleOb;\r\n}\r\n\r\nvar dataManager = dataFunctionManager();\r\n\r\nvar FontManager = (function(){\r\n\r\n    var maxWaitingTime = 5000;\r\n    var emptyChar = {\r\n        w: 0,\r\n        size:0,\r\n        shapes:[]\r\n    };\r\n    var combinedCharacters = [];\r\n    //Hindi characters\r\n    combinedCharacters = combinedCharacters.concat([2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366\r\n    , 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379\r\n    , 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390, 2391, 2402, 2403]);\r\n\r\n    function setUpNode(font, family){\r\n        var parentNode = createTag('span');\r\n        parentNode.style.fontFamily    = family;\r\n        var node = createTag('span');\r\n        // Characters that vary significantly among different fonts\r\n        node.innerHTML = 'giItT1WQy@!-/#';\r\n        // Visible - so we can measure it - but not on the screen\r\n        parentNode.style.position      = 'absolute';\r\n        parentNode.style.left          = '-10000px';\r\n        parentNode.style.top           = '-10000px';\r\n        // Large font size makes even subtle changes obvious\r\n        parentNode.style.fontSize      = '300px';\r\n        // Reset any font properties\r\n        parentNode.style.fontVariant   = 'normal';\r\n        parentNode.style.fontStyle     = 'normal';\r\n        parentNode.style.fontWeight    = 'normal';\r\n        parentNode.style.letterSpacing = '0';\r\n        parentNode.appendChild(node);\r\n        document.body.appendChild(parentNode);\r\n\r\n        // Remember width with no applied web font\r\n        var width = node.offsetWidth;\r\n        node.style.fontFamily = font + ', '+family;\r\n        return {node:node, w:width, parent:parentNode};\r\n    }\r\n\r\n    function checkLoadedFonts() {\r\n        var i, len = this.fonts.length;\r\n        var node, w;\r\n        var loadedCount = len;\r\n        for(i=0;i<len; i+= 1){\r\n            if(this.fonts[i].loaded){\r\n                loadedCount -= 1;\r\n                continue;\r\n            }\r\n            if(this.fonts[i].fOrigin === 'n' || this.fonts[i].origin === 0){\r\n                this.fonts[i].loaded = true;\r\n            } else{\r\n                node = this.fonts[i].monoCase.node;\r\n                w = this.fonts[i].monoCase.w;\r\n                if(node.offsetWidth !== w){\r\n                    loadedCount -= 1;\r\n                    this.fonts[i].loaded = true;\r\n                }else{\r\n                    node = this.fonts[i].sansCase.node;\r\n                    w = this.fonts[i].sansCase.w;\r\n                    if(node.offsetWidth !== w){\r\n                        loadedCount -= 1;\r\n                        this.fonts[i].loaded = true;\r\n                    }\r\n                }\r\n                if(this.fonts[i].loaded){\r\n                    this.fonts[i].sansCase.parent.parentNode.removeChild(this.fonts[i].sansCase.parent);\r\n                    this.fonts[i].monoCase.parent.parentNode.removeChild(this.fonts[i].monoCase.parent);\r\n                }\r\n            }\r\n        }\r\n\r\n        if(loadedCount !== 0 && Date.now() - this.initTime < maxWaitingTime){\r\n            setTimeout(this.checkLoadedFonts.bind(this),20);\r\n        }else{\r\n            setTimeout(function(){this.isLoaded = true;}.bind(this),0);\r\n\r\n        }\r\n    }\r\n\r\n    function createHelper(def, fontData){\r\n        var tHelper = createNS('text');\r\n        tHelper.style.fontSize = '100px';\r\n        //tHelper.style.fontFamily = fontData.fFamily;\r\n        tHelper.setAttribute('font-family', fontData.fFamily);\r\n        tHelper.setAttribute('font-style', fontData.fStyle);\r\n        tHelper.setAttribute('font-weight', fontData.fWeight);\r\n        tHelper.textContent = '1';\r\n        if(fontData.fClass){\r\n            tHelper.style.fontFamily = 'inherit';\r\n            tHelper.setAttribute('class', fontData.fClass);\r\n        } else {\r\n            tHelper.style.fontFamily = fontData.fFamily;\r\n        }\r\n        def.appendChild(tHelper);\r\n        var tCanvasHelper = createTag('canvas').getContext('2d');\r\n        tCanvasHelper.font = fontData.fWeight + ' ' + fontData.fStyle + ' 100px '+ fontData.fFamily;\r\n        //tCanvasHelper.font = ' 100px '+ fontData.fFamily;\r\n        return tHelper;\r\n    }\r\n\r\n    function addFonts(fontData, defs){\r\n        if(!fontData){\r\n            this.isLoaded = true;\r\n            return;\r\n        }\r\n        if(this.chars){\r\n            this.isLoaded = true;\r\n            this.fonts = fontData.list;\r\n            return;\r\n        }\r\n\r\n\r\n        var fontArr = fontData.list;\r\n        var i, len = fontArr.length;\r\n        var _pendingFonts = len;\r\n        for(i=0; i<len; i+= 1){\r\n            var shouldLoadFont = true;\r\n            var loadedSelector;\r\n            var j;\r\n            fontArr[i].loaded = false;\r\n            fontArr[i].monoCase = setUpNode(fontArr[i].fFamily,'monospace');\r\n            fontArr[i].sansCase = setUpNode(fontArr[i].fFamily,'sans-serif');\r\n            if(!fontArr[i].fPath) {\r\n                fontArr[i].loaded = true;\r\n                _pendingFonts -= 1;\r\n            }else if(fontArr[i].fOrigin === 'p' || fontArr[i].origin === 3){\r\n                loadedSelector = document.querySelectorAll('style[f-forigin=\"p\"][f-family=\"'+ fontArr[i].fFamily +'\"], style[f-origin=\"3\"][f-family=\"'+ fontArr[i].fFamily +'\"]');\r\n\r\n                if (loadedSelector.length > 0) {\r\n                    shouldLoadFont = false;\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var s = createTag('style');\r\n                    s.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    s.setAttribute('f-origin', fontArr[i].origin);\r\n                    s.setAttribute('f-family', fontArr[i].fFamily);\r\n                    s.type = \"text/css\";\r\n                    s.innerHTML = \"@font-face {\" + \"font-family: \"+fontArr[i].fFamily+\"; font-style: normal; src: url('\"+fontArr[i].fPath+\"');}\";\r\n                    defs.appendChild(s);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 'g' || fontArr[i].origin === 1){\r\n                loadedSelector = document.querySelectorAll('link[f-forigin=\"g\"], link[f-origin=\"1\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (loadedSelector[j].href.indexOf(fontArr[i].fPath) !== -1) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var l = createTag('link');\r\n                    l.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    l.setAttribute('f-origin', fontArr[i].origin);\r\n                    l.type = \"text/css\";\r\n                    l.rel = \"stylesheet\";\r\n                    l.href = fontArr[i].fPath;\r\n                    document.body.appendChild(l);\r\n                }\r\n            } else if(fontArr[i].fOrigin === 't' || fontArr[i].origin === 2){\r\n                loadedSelector = document.querySelectorAll('script[f-forigin=\"t\"], script[f-origin=\"2\"]');\r\n\r\n                for (j = 0; j < loadedSelector.length; j++) {\r\n                    if (fontArr[i].fPath === loadedSelector[j].src) {\r\n                        // Font is already loaded\r\n                        shouldLoadFont = false;\r\n                    }\r\n                }\r\n\r\n                if (shouldLoadFont) {\r\n                    var sc = createTag('link');\r\n                    sc.setAttribute('f-forigin', fontArr[i].fOrigin);\r\n                    sc.setAttribute('f-origin', fontArr[i].origin);\r\n                    sc.setAttribute('rel','stylesheet');\r\n                    sc.setAttribute('href',fontArr[i].fPath);\r\n                    defs.appendChild(sc);\r\n                }\r\n            }\r\n            fontArr[i].helper = createHelper(defs,fontArr[i]);\r\n            fontArr[i].cache = {};\r\n            this.fonts.push(fontArr[i]);\r\n        }\r\n        if (_pendingFonts === 0) {\r\n            this.isLoaded = true;\r\n        } else {\r\n            //On some cases even if the font is loaded, it won't load correctly when measuring text on canvas.\r\n            //Adding this timeout seems to fix it\r\n           setTimeout(this.checkLoadedFonts.bind(this), 100);\r\n        }\r\n    }\r\n\r\n    function addChars(chars){\r\n        if(!chars){\r\n            return;\r\n        }\r\n        if(!this.chars){\r\n            this.chars = [];\r\n        }\r\n        var i, len = chars.length;\r\n        var j, jLen = this.chars.length, found;\r\n        for(i=0;i<len;i+=1){\r\n            j = 0;\r\n            found = false;\r\n            while(j<jLen){\r\n                if(this.chars[j].style === chars[i].style && this.chars[j].fFamily === chars[i].fFamily && this.chars[j].ch === chars[i].ch){\r\n                    found = true;\r\n                }\r\n                j += 1;\r\n            }\r\n            if(!found){\r\n                this.chars.push(chars[i]);\r\n                jLen += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function getCharData(char, style, font){\r\n        var i = 0, len = this.chars.length;\r\n        while( i < len) {\r\n            if(this.chars[i].ch === char && this.chars[i].style === style && this.chars[i].fFamily === font){\r\n\r\n                return this.chars[i];\r\n            }\r\n            i+= 1;\r\n        }\r\n        if((typeof char === 'string' && char.charCodeAt(0) !== 13 || !char) && console && console.warn) {\r\n            console.warn('Missing character from exported characters list: ', char, style, font);\r\n        }\r\n        return emptyChar;\r\n    }\r\n\r\n    function measureText(char, fontName, size) {\r\n        var fontData = this.getFontByName(fontName);\r\n        var index = char.charCodeAt(0);\r\n        if(!fontData.cache[index + 1]) {\r\n            var tHelper = fontData.helper;\r\n            //Canvas version\r\n            //fontData.cache[index] = tHelper.measureText(char).width / 100;\r\n            //SVG version\r\n            //console.log(tHelper.getBBox().width)\r\n            if (char === ' ') {\r\n                tHelper.textContent = '|' + char + '|';\r\n                var doubleSize = tHelper.getComputedTextLength();\r\n                tHelper.textContent = '||';\r\n                var singleSize = tHelper.getComputedTextLength();\r\n                fontData.cache[index + 1] = (doubleSize - singleSize)/100;\r\n            } else {\r\n                tHelper.textContent = char;\r\n                fontData.cache[index + 1] = (tHelper.getComputedTextLength())/100;\r\n            }\r\n        }\r\n        return fontData.cache[index + 1] * size;\r\n    }\r\n\r\n    function getFontByName(name){\r\n        var i = 0, len = this.fonts.length;\r\n        while(i<len){\r\n            if(this.fonts[i].fName === name) {\r\n                return this.fonts[i];\r\n            }\r\n            i += 1;\r\n        }\r\n        return this.fonts[0];\r\n    }\r\n\r\n    function getCombinedCharacterCodes() {\r\n        return combinedCharacters;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.isLoaded;\r\n    }\r\n\r\n    var Font = function(){\r\n        this.fonts = [];\r\n        this.chars = null;\r\n        this.typekitLoaded = 0;\r\n        this.isLoaded = false;\r\n        this.initTime = Date.now();\r\n    };\r\n    //TODO: for now I'm adding these methods to the Class and not the prototype. Think of a better way to implement it. \r\n    Font.getCombinedCharacterCodes = getCombinedCharacterCodes;\r\n\r\n    Font.prototype.addChars = addChars;\r\n    Font.prototype.addFonts = addFonts;\r\n    Font.prototype.getCharData = getCharData;\r\n    Font.prototype.getFontByName = getFontByName;\r\n    Font.prototype.measureText = measureText;\r\n    Font.prototype.checkLoadedFonts = checkLoadedFonts;\r\n    Font.prototype.loaded = loaded;\r\n\r\n    return Font;\r\n\r\n}());\r\nvar PropertyFactory = (function(){\r\n\r\n    var initFrame = initialDefaultFrame;\r\n    var math_abs = Math.abs;\r\n\r\n    function interpolateValue(frameNum, caching) {\r\n        var offsetTime = this.offsetTime;\r\n        var newValue;\r\n        if (this.propType === 'multidimensional') {\r\n            newValue = createTypedArray('float32', this.pv.length);\r\n        }\r\n        var iterationIndex = caching.lastIndex;\r\n        var i = iterationIndex;\r\n        var len = this.keyframes.length - 1, flag = true;\r\n        var keyData, nextKeyData;\r\n\r\n        while (flag) {\r\n            keyData = this.keyframes[i];\r\n            nextKeyData = this.keyframes[i + 1];\r\n            if (i === len - 1 && frameNum >= nextKeyData.t - offsetTime){\r\n                if(keyData.h){\r\n                    keyData = nextKeyData;\r\n                }\r\n                iterationIndex = 0;\r\n                break;\r\n            }\r\n            if ((nextKeyData.t - offsetTime) > frameNum){\r\n                iterationIndex = i;\r\n                break;\r\n            }\r\n            if (i < len - 1){\r\n                i += 1;\r\n            } else {\r\n                iterationIndex = 0;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n        var k, kLen, perc, jLen, j, fnc;\r\n        var nextKeyTime = nextKeyData.t - offsetTime;\r\n        var keyTime = keyData.t - offsetTime;\r\n        var endValue;\r\n        if (keyData.to) {\r\n            if (!keyData.bezierData) {\r\n                keyData.bezierData = bez.buildBezierData(keyData.s, nextKeyData.s || keyData.e, keyData.to, keyData.ti);\r\n            }\r\n            var bezierData = keyData.bezierData;\r\n            if (frameNum >= nextKeyTime || frameNum < keyTime) {\r\n                var ind = frameNum >= nextKeyTime ? bezierData.points.length - 1 : 0;\r\n                kLen = bezierData.points[ind].point.length;\r\n                for (k = 0; k < kLen; k += 1) {\r\n                    newValue[k] = bezierData.points[ind].point[k];\r\n                }\r\n                // caching._lastKeyframeIndex = -1;\r\n            } else {\r\n                if (keyData.__fnct) {\r\n                    fnc = keyData.__fnct;\r\n                } else {\r\n                    fnc = BezierFactory.getBezierEasing(keyData.o.x, keyData.o.y, keyData.i.x, keyData.i.y, keyData.n).get;\r\n                    keyData.__fnct = fnc;\r\n                }\r\n                perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime));\r\n                var distanceInLine = bezierData.segmentLength*perc;\r\n\r\n                var segmentPerc;\r\n                var addedLength =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastAddedLength : 0;\r\n                j =  (caching.lastFrame < frameNum && caching._lastKeyframeIndex === i) ? caching._lastPoint : 0;\r\n                flag = true;\r\n                jLen = bezierData.points.length;\r\n                while (flag) {\r\n                    addedLength += bezierData.points[j].partialLength;\r\n                    if (distanceInLine === 0 || perc === 0 || j === bezierData.points.length - 1) {\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k];\r\n                        }\r\n                        break;\r\n                    } else if (distanceInLine >= addedLength && distanceInLine < addedLength + bezierData.points[j + 1].partialLength) {\r\n                        segmentPerc = (distanceInLine - addedLength) / bezierData.points[j + 1].partialLength;\r\n                        kLen = bezierData.points[j].point.length;\r\n                        for (k = 0; k < kLen; k += 1) {\r\n                            newValue[k] = bezierData.points[j].point[k] + (bezierData.points[j + 1].point[k] - bezierData.points[j].point[k]) * segmentPerc;\r\n                        }\r\n                        break;\r\n                    }\r\n                    if (j < jLen - 1){\r\n                        j += 1;\r\n                    } else {\r\n                        flag = false;\r\n                    }\r\n                }\r\n                caching._lastPoint = j;\r\n                caching._lastAddedLength = addedLength - bezierData.points[j].partialLength;\r\n                caching._lastKeyframeIndex = i;\r\n            }\r\n        } else {\r\n            var outX, outY, inX, inY, keyValue;\r\n            len = keyData.s.length;\r\n            endValue = nextKeyData.s || keyData.e;\r\n            if (this.sh && keyData.h !== 1) {\r\n                if (frameNum >= nextKeyTime) {\r\n                    newValue[0] = endValue[0];\r\n                    newValue[1] = endValue[1];\r\n                    newValue[2] = endValue[2];\r\n                } else if (frameNum <= keyTime) {\r\n                    newValue[0] = keyData.s[0];\r\n                    newValue[1] = keyData.s[1];\r\n                    newValue[2] = keyData.s[2];\r\n                } else {\r\n                    var quatStart = createQuaternion(keyData.s);\r\n                    var quatEnd = createQuaternion(endValue);\r\n                    var time = (frameNum - keyTime) / (nextKeyTime - keyTime);\r\n                    quaternionToEuler(newValue, slerp(quatStart, quatEnd, time));\r\n                }\r\n                \r\n            } else {\r\n                for(i = 0; i < len; i += 1) {\r\n                    if (keyData.h !== 1) {\r\n                        if (frameNum >= nextKeyTime) {\r\n                            perc = 1;\r\n                        } else if(frameNum < keyTime) {\r\n                            perc = 0;\r\n                        } else {\r\n                            if(keyData.o.x.constructor === Array) {\r\n                                if (!keyData.__fnct) {\r\n                                    keyData.__fnct = [];\r\n                                }\r\n                                if (!keyData.__fnct[i]) {\r\n                                    outX = (typeof keyData.o.x[i] === 'undefined') ? keyData.o.x[0] : keyData.o.x[i];\r\n                                    outY = (typeof keyData.o.y[i] === 'undefined') ? keyData.o.y[0] : keyData.o.y[i];\r\n                                    inX = (typeof keyData.i.x[i] === 'undefined') ? keyData.i.x[0] : keyData.i.x[i];\r\n                                    inY = (typeof keyData.i.y[i] === 'undefined') ? keyData.i.y[0] : keyData.i.y[i];\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct[i] = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct[i];\r\n                                }\r\n                            } else {\r\n                                if (!keyData.__fnct) {\r\n                                    outX = keyData.o.x;\r\n                                    outY = keyData.o.y;\r\n                                    inX = keyData.i.x;\r\n                                    inY = keyData.i.y;\r\n                                    fnc = BezierFactory.getBezierEasing(outX, outY, inX, inY).get;\r\n                                    keyData.__fnct = fnc;\r\n                                } else {\r\n                                    fnc = keyData.__fnct;\r\n                                }\r\n                            }\r\n                            perc = fnc((frameNum - keyTime) / (nextKeyTime - keyTime ));\r\n                        }\r\n                    }\r\n\r\n                    endValue = nextKeyData.s || keyData.e;\r\n                    keyValue = keyData.h === 1 ? keyData.s[i] : keyData.s[i] + (endValue[i] - keyData.s[i]) * perc;\r\n\r\n                    if (this.propType === 'multidimensional') {\r\n                        newValue[i] = keyValue;\r\n                    } else {\r\n                        newValue = keyValue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        caching.lastIndex = iterationIndex;\r\n        return newValue;\r\n    }\r\n\r\n    //based on @Toji's https://github.com/toji/gl-matrix/\r\n    function slerp(a, b, t) {\r\n        var out = [];\r\n        var ax = a[0], ay = a[1], az = a[2], aw = a[3],\r\n        bx = b[0], by = b[1], bz = b[2], bw = b[3]\r\n\r\n        var omega, cosom, sinom, scale0, scale1;\r\n\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        if ((1.0 - cosom) > 0.000001) {\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    function quaternionToEuler(out, quat) {\r\n        var qx = quat[0];\r\n        var qy = quat[1];\r\n        var qz = quat[2];\r\n        var qw = quat[3];\r\n        var heading = Math.atan2(2*qy*qw-2*qx*qz , 1 - 2*qy*qy - 2*qz*qz)\r\n        var attitude = Math.asin(2*qx*qy + 2*qz*qw) \r\n        var bank = Math.atan2(2*qx*qw-2*qy*qz , 1 - 2*qx*qx - 2*qz*qz);\r\n        out[0] = heading/degToRads;\r\n        out[1] = attitude/degToRads;\r\n        out[2] = bank/degToRads;\r\n    }\r\n\r\n    function createQuaternion(values) {\r\n        var heading = values[0] * degToRads;\r\n        var attitude = values[1] * degToRads;\r\n        var bank = values[2] * degToRads;\r\n        var c1 = Math.cos(heading / 2);\r\n        var c2 = Math.cos(attitude / 2);\r\n        var c3 = Math.cos(bank / 2);\r\n        var s1 = Math.sin(heading / 2);\r\n        var s2 = Math.sin(attitude / 2);\r\n        var s3 = Math.sin(bank / 2);\r\n        var w = c1 * c2 * c3 - s1 * s2 * s3;\r\n        var x = s1 * s2 * c3 + c1 * c2 * s3;\r\n        var y = s1 * c2 * c3 + c1 * s2 * s3;\r\n        var z = c1 * s2 * c3 - s1 * c2 * s3;\r\n\r\n        return [x,y,z,w];\r\n    }\r\n\r\n    function getValueAtCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length- 1].t-this.offsetTime;\r\n        if(!(frameNum === this._caching.lastFrame || (this._caching.lastFrame !== initFrame && ((this._caching.lastFrame >= endTime && frameNum >= endTime) || (this._caching.lastFrame < initTime && frameNum < initTime))))){\r\n            if(this._caching.lastFrame >= frameNum) {\r\n                this._caching._lastKeyframeIndex = -1;\r\n                this._caching.lastIndex = 0;\r\n            }\r\n\r\n            var renderResult = this.interpolateValue(frameNum, this._caching);\r\n            this.pv = renderResult;\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function setVValue(val) {\r\n        var multipliedValue;\r\n        if(this.propType === 'unidimensional') {\r\n            multipliedValue = val * this.mult;\r\n            if(math_abs(this.v - multipliedValue) > 0.00001) {\r\n                this.v = multipliedValue;\r\n                this._mdf = true;\r\n            }\r\n        } else {\r\n            var i = 0, len = this.v.length;\r\n            while (i < len) {\r\n                multipliedValue = val[i] * this.mult;\r\n                if (math_abs(this.v[i] - multipliedValue) > 0.00001) {\r\n                    this.v[i] = multipliedValue;\r\n                    this._mdf = true;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if (this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) {\r\n            return;\r\n        }\r\n        if(this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = this._isFirstFrame;\r\n        var multipliedValue;\r\n        var i, len = this.effectsSequence.length;\r\n        var finalValue = this.kf ? this.pv : this.data.k;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this._isFirstFrame = false;\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    function ValueProperty(elem, data, mult, container){\r\n        this.propType = 'unidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this.v = mult ? data.k * mult : data.k;\r\n        this.pv = data.k;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.vel = 0;\r\n        this.effectsSequence = [];\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function MultiDimensionalProperty(elem, data, mult, container) {\r\n        this.propType = 'multidimensional';\r\n        this.mult = mult || 1;\r\n        this.data = data;\r\n        this._mdf = false;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this.frameId = -1;\r\n        var i, len = data.k.length;\r\n        this.v = createTypedArray('float32', len);\r\n        this.pv = createTypedArray('float32', len);\r\n        var arr = createTypedArray('float32', len);\r\n        this.vel = createTypedArray('float32', len);\r\n        for (i = 0; i < len; i += 1) {\r\n            this.v[i] = data.k[i] * this.mult;\r\n            this.pv[i] = data.k[i];\r\n        }\r\n        this._isFirstFrame = true;\r\n        this.effectsSequence = [];\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedValueProperty(elem, data, mult, container) {\r\n        this.propType = 'unidimensional';\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.frameId = -1;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0, value: 0, _lastKeyframeIndex: -1};\r\n        this.k = true;\r\n        this.kf = true;\r\n        this.data = data;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.v = initFrame;\r\n        this.pv = initFrame;\r\n        this._isFirstFrame = true;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function KeyframedMultidimensionalProperty(elem, data, mult, container){\r\n        this.propType = 'multidimensional';\r\n        var i, len = data.k.length;\r\n        var s, e,to,ti;\r\n        for (i = 0; i < len - 1; i += 1) {\r\n            if (data.k[i].to && data.k[i].s && data.k[i + 1] && data.k[i + 1].s) {\r\n                s = data.k[i].s;\r\n                e = data.k[i + 1].s;\r\n                to = data.k[i].to;\r\n                ti = data.k[i].ti;\r\n                if((s.length === 2 && !(s[0] === e[0] && s[1] === e[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],s[0] + to[0],s[1] + to[1]) && bez.pointOnLine2D(s[0],s[1],e[0],e[1],e[0] + ti[0],e[1] + ti[1])) || (s.length === 3 && !(s[0] === e[0] && s[1] === e[1] && s[2] === e[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],s[0] + to[0],s[1] + to[1],s[2] + to[2]) && bez.pointOnLine3D(s[0],s[1],s[2],e[0],e[1],e[2],e[0] + ti[0],e[1] + ti[1],e[2] + ti[2]))){\r\n                    data.k[i].to = null;\r\n                    data.k[i].ti = null;\r\n                }\r\n                if(s[0] === e[0] && s[1] === e[1] && to[0] === 0 && to[1] === 0 && ti[0] === 0 && ti[1] === 0) {\r\n                    if(s.length === 2 || (s[2] === e[2] && to[2] === 0 && ti[2] === 0)) {\r\n                        data.k[i].to = null;\r\n                        data.k[i].ti = null;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        this.effectsSequence = [getValueAtCurrentTime.bind(this)];\r\n        this.keyframes = data.k;\r\n        this.offsetTime = elem.data.st;\r\n        this.k = true;\r\n        this.kf = true;\r\n        this._isFirstFrame = true;\r\n        this.mult = mult || 1;\r\n        this.elem = elem;\r\n        this.container = container;\r\n        this.comp = elem.comp;\r\n        this.getValue = processEffectsSequence;\r\n        this.setVValue = setVValue;\r\n        this.interpolateValue = interpolateValue;\r\n        this.frameId = -1;\r\n        var arrLen = data.k[0].s.length;\r\n        this.v = createTypedArray('float32', arrLen);\r\n        this.pv = createTypedArray('float32', arrLen);\r\n        for (i = 0; i < arrLen; i += 1) {\r\n            this.v[i] = initFrame;\r\n            this.pv[i] = initFrame;\r\n        }\r\n        this._caching={lastFrame:initFrame,lastIndex:0,value:createTypedArray('float32', arrLen)};\r\n        this.addEffect = addEffect;\r\n    }\r\n\r\n    function getProp(elem,data,type, mult, container) {\r\n        var p;\r\n        if(!data.k.length){\r\n            p = new ValueProperty(elem,data, mult, container);\r\n        }else if(typeof(data.k[0]) === 'number'){\r\n            p = new MultiDimensionalProperty(elem,data, mult, container);\r\n        }else{\r\n            switch(type){\r\n                case 0:\r\n                    p = new KeyframedValueProperty(elem,data,mult, container);\r\n                    break;\r\n                case 1:\r\n                    p = new KeyframedMultidimensionalProperty(elem,data,mult, container);\r\n                    break;\r\n            }\r\n        }\r\n        if(p.effectsSequence.length){\r\n            container.addDynamicProperty(p);\r\n        }\r\n        return p;\r\n    }\r\n\r\n    var ob = {\r\n        getProp: getProp\r\n    };\r\n    return ob;\r\n}());\r\nvar TransformPropertyFactory = (function() {\r\n\r\n    var defaultVector = [0,0]\r\n\r\n    function applyToMatrix(mat) {\r\n        var _mdf = this._mdf;\r\n        this.iterateDynamicProperties();\r\n        this._mdf = this._mdf || _mdf;\r\n        if (this.a) {\r\n            mat.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n        }\r\n        if (this.s) {\r\n            mat.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n        }\r\n        if (this.sk) {\r\n            mat.skewFromAxis(-this.sk.v, this.sa.v);\r\n        }\r\n        if (this.r) {\r\n            mat.rotate(-this.r.v);\r\n        } else {\r\n            mat.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n        }\r\n        if (this.data.p.s) {\r\n            if (this.data.p.z) {\r\n                mat.translate(this.px.v, this.py.v, -this.pz.v);\r\n            } else {\r\n                mat.translate(this.px.v, this.py.v, 0);\r\n            }\r\n        } else {\r\n            mat.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);\r\n        }\r\n    }\r\n    function processKeys(forceRender){\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        }\r\n        if(this._isDirty) {\r\n            this.precalculateMatrix();\r\n            this._isDirty = false;\r\n        }\r\n\r\n        this.iterateDynamicProperties();\r\n\r\n        if (this._mdf || forceRender) {\r\n            this.v.cloneFromProps(this.pre.props);\r\n            if (this.appliedTransformations < 1) {\r\n                this.v.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            }\r\n            if(this.appliedTransformations < 2) {\r\n                this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            }\r\n            if (this.sk && this.appliedTransformations < 3) {\r\n                this.v.skewFromAxis(-this.sk.v, this.sa.v);\r\n            }\r\n            if (this.r && this.appliedTransformations < 4) {\r\n                this.v.rotate(-this.r.v);\r\n            } else if (!this.r && this.appliedTransformations < 4){\r\n                this.v.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            }\r\n            if (this.autoOriented) {\r\n                var v1,v2, frameRate = this.elem.globalData.frameRate;\r\n                if(this.p && this.p.keyframes && this.p.getValueAtTime) {\r\n                    if (this.p._caching.lastFrame+this.p.offsetTime <= this.p.keyframes[0].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2 = this.p.getValueAtTime(this.p.keyframes[0].t / frameRate, 0);\r\n                    } else if(this.p._caching.lastFrame+this.p.offsetTime >= this.p.keyframes[this.p.keyframes.length - 1].t) {\r\n                        v1 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t / frameRate), 0);\r\n                        v2 = this.p.getValueAtTime((this.p.keyframes[this.p.keyframes.length - 1].t - 0.05) / frameRate, 0);\r\n                    } else {\r\n                        v1 = this.p.pv;\r\n                        v2 = this.p.getValueAtTime((this.p._caching.lastFrame+this.p.offsetTime - 0.01) / frameRate, this.p.offsetTime);\r\n                    }\r\n                } else if(this.px && this.px.keyframes && this.py.keyframes && this.px.getValueAtTime && this.py.getValueAtTime) {\r\n                    v1 = [];\r\n                    v2 = [];\r\n                    var px = this.px, py = this.py, frameRate;\r\n                    if (px._caching.lastFrame+px.offsetTime <= px.keyframes[0].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[0].t + 0.01) / frameRate,0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[0].t) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[0].t) / frameRate,0);\r\n                    } else if(px._caching.lastFrame+px.offsetTime >= px.keyframes[px.keyframes.length - 1].t) {\r\n                        v1[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t / frameRate),0);\r\n                        v1[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t / frameRate),0);\r\n                        v2[0] = px.getValueAtTime((px.keyframes[px.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                        v2[1] = py.getValueAtTime((py.keyframes[py.keyframes.length - 1].t - 0.01) / frameRate,0);\r\n                    } else {\r\n                        v1 = [px.pv, py.pv];\r\n                        v2[0] = px.getValueAtTime((px._caching.lastFrame+px.offsetTime - 0.01) / frameRate,px.offsetTime);\r\n                        v2[1] = py.getValueAtTime((py._caching.lastFrame+py.offsetTime - 0.01) / frameRate,py.offsetTime);\r\n                    }\r\n                } else {\r\n                    v1 = v2 = defaultVector\r\n                }\r\n                this.v.rotate(-Math.atan2(v1[1] - v2[1], v1[0] - v2[0]));\r\n            }\r\n            if(this.data.p && this.data.p.s){\r\n                if(this.data.p.z) {\r\n                    this.v.translate(this.px.v, this.py.v, -this.pz.v);\r\n                } else {\r\n                    this.v.translate(this.px.v, this.py.v, 0);\r\n                }\r\n            }else{\r\n                this.v.translate(this.p.v[0],this.p.v[1],-this.p.v[2]);\r\n            }\r\n        }\r\n        this.frameId = this.elem.globalData.frameId;\r\n    }\r\n\r\n    function precalculateMatrix() {\r\n        if(!this.a.k) {\r\n            this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]);\r\n            this.appliedTransformations = 1;\r\n        } else {\r\n            return;\r\n        }\r\n        if(!this.s.effectsSequence.length) {\r\n            this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]);\r\n            this.appliedTransformations = 2;\r\n        } else {\r\n            return;\r\n        }\r\n        if(this.sk) {\r\n            if(!this.sk.effectsSequence.length && !this.sa.effectsSequence.length) {\r\n                this.pre.skewFromAxis(-this.sk.v, this.sa.v);\r\n            this.appliedTransformations = 3;\r\n            } else {\r\n                return;\r\n            }\r\n        }\r\n        if (this.r) {\r\n            if(!this.r.effectsSequence.length) {\r\n                this.pre.rotate(-this.r.v);\r\n                this.appliedTransformations = 4;\r\n            } else {\r\n                return;\r\n            }\r\n        } else if(!this.rz.effectsSequence.length && !this.ry.effectsSequence.length && !this.rx.effectsSequence.length && !this.or.effectsSequence.length) {\r\n            this.pre.rotateZ(-this.rz.v).rotateY(this.ry.v).rotateX(this.rx.v).rotateZ(-this.or.v[2]).rotateY(this.or.v[1]).rotateX(this.or.v[0]);\r\n            this.appliedTransformations = 4;\r\n        }\r\n    }\r\n\r\n    function autoOrient(){\r\n        //\r\n        //var prevP = this.getValueAtTime();\r\n    }\r\n\r\n    function addDynamicProperty(prop) {\r\n        this._addDynamicProperty(prop);\r\n        this.elem.addDynamicProperty(prop);\r\n        this._isDirty = true;\r\n    }\r\n\r\n    function TransformProperty(elem,data,container){\r\n        this.elem = elem;\r\n        this.frameId = -1;\r\n        this.propType = 'transform';\r\n        this.data = data;\r\n        this.v = new Matrix();\r\n        //Precalculated matrix with non animated properties\r\n        this.pre = new Matrix();\r\n        this.appliedTransformations = 0;\r\n        this.initDynamicPropertyContainer(container || elem);\r\n        if(data.p && data.p.s){\r\n            this.px = PropertyFactory.getProp(elem,data.p.x,0,0,this);\r\n            this.py = PropertyFactory.getProp(elem,data.p.y,0,0,this);\r\n            if(data.p.z){\r\n                this.pz = PropertyFactory.getProp(elem,data.p.z,0,0,this);\r\n            }\r\n        }else{\r\n            this.p = PropertyFactory.getProp(elem,data.p || {k:[0,0,0]},1,0,this);\r\n        }\r\n        if(data.rx) {\r\n            this.rx = PropertyFactory.getProp(elem, data.rx, 0, degToRads, this);\r\n            this.ry = PropertyFactory.getProp(elem, data.ry, 0, degToRads, this);\r\n            this.rz = PropertyFactory.getProp(elem, data.rz, 0, degToRads, this);\r\n            if(data.or.k[0].ti) {\r\n                var i, len = data.or.k.length;\r\n                for(i=0;i<len;i+=1) {\r\n                    data.or.k[i].to = data.or.k[i].ti = null;\r\n                }\r\n            }\r\n            this.or = PropertyFactory.getProp(elem, data.or, 1, degToRads, this);\r\n            //sh Indicates it needs to be capped between -180 and 180\r\n            this.or.sh = true;\r\n        } else {\r\n            this.r = PropertyFactory.getProp(elem, data.r || {k: 0}, 0, degToRads, this);\r\n        }\r\n        if(data.sk){\r\n            this.sk = PropertyFactory.getProp(elem, data.sk, 0, degToRads, this);\r\n            this.sa = PropertyFactory.getProp(elem, data.sa, 0, degToRads, this);\r\n        }\r\n        this.a = PropertyFactory.getProp(elem,data.a || {k:[0,0,0]},1,0,this);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:[100,100,100]},1,0.01,this);\r\n        // Opacity is not part of the transform properties, that's why it won't use this.dynamicProperties. That way transforms won't get updated if opacity changes.\r\n        if(data.o){\r\n            this.o = PropertyFactory.getProp(elem,data.o,0,0.01,elem);\r\n        } else {\r\n            this.o = {_mdf:false,v:1};\r\n        }\r\n        this._isDirty = true;\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue(true);\r\n        }\r\n    }\r\n\r\n    TransformProperty.prototype = {\r\n        applyToMatrix: applyToMatrix,\r\n        getValue: processKeys,\r\n        precalculateMatrix: precalculateMatrix,\r\n        autoOrient: autoOrient\r\n    }\r\n\r\n    extendPrototype([DynamicPropertyContainer], TransformProperty);\r\n    TransformProperty.prototype.addDynamicProperty = addDynamicProperty;\r\n    TransformProperty.prototype._addDynamicProperty = DynamicPropertyContainer.prototype.addDynamicProperty;\r\n\r\n    function getTransformProperty(elem,data,container){\r\n        return new TransformProperty(elem,data,container);\r\n    }\r\n\r\n    return {\r\n        getTransformProperty: getTransformProperty\r\n    };\r\n\r\n}());\r\nfunction ShapePath(){\r\n\tthis.c = false;\r\n\tthis._length = 0;\r\n\tthis._maxLength = 8;\r\n\tthis.v = createSizedArray(this._maxLength);\r\n\tthis.o = createSizedArray(this._maxLength);\r\n\tthis.i = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapePath.prototype.setPathData = function(closed, len) {\r\n\tthis.c = closed;\r\n\tthis.setLength(len);\r\n\tvar i = 0;\r\n\twhile(i < len){\r\n\t\tthis.v[i] = point_pool.newElement();\r\n\t\tthis.o[i] = point_pool.newElement();\r\n\t\tthis.i[i] = point_pool.newElement();\r\n\t\ti += 1;\r\n\t}\r\n};\r\n\r\nShapePath.prototype.setLength = function(len) {\r\n\twhile(this._maxLength < len) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tthis._length = len;\r\n};\r\n\r\nShapePath.prototype.doubleArrayLength = function() {\r\n\tthis.v = this.v.concat(createSizedArray(this._maxLength));\r\n\tthis.i = this.i.concat(createSizedArray(this._maxLength));\r\n\tthis.o = this.o.concat(createSizedArray(this._maxLength));\r\n\tthis._maxLength *= 2;\r\n};\r\n\r\nShapePath.prototype.setXYAt = function(x, y, type, pos, replace) {\r\n\tvar arr;\r\n\tthis._length = Math.max(this._length, pos + 1);\r\n\tif(this._length >= this._maxLength) {\r\n\t\tthis.doubleArrayLength();\r\n\t}\r\n\tswitch(type){\r\n\t\tcase 'v':\r\n\t\t\tarr = this.v;\r\n\t\t\tbreak;\r\n\t\tcase 'i':\r\n\t\t\tarr = this.i;\r\n\t\t\tbreak;\r\n\t\tcase 'o':\r\n\t\t\tarr = this.o;\r\n\t\t\tbreak;\r\n\t}\r\n\tif(!arr[pos] || (arr[pos] && !replace)){\r\n\t\tarr[pos] = point_pool.newElement();\r\n\t}\r\n\tarr[pos][0] = x;\r\n\tarr[pos][1] = y;\r\n};\r\n\r\nShapePath.prototype.setTripleAt = function(vX,vY,oX,oY,iX,iY,pos, replace) {\r\n\tthis.setXYAt(vX,vY,'v',pos, replace);\r\n\tthis.setXYAt(oX,oY,'o',pos, replace);\r\n\tthis.setXYAt(iX,iY,'i',pos, replace);\r\n};\r\n\r\nShapePath.prototype.reverse = function() {\r\n\tvar newPath = new ShapePath();\r\n\tnewPath.setPathData(this.c, this._length);\r\n\tvar vertices = this.v, outPoints = this.o, inPoints = this.i;\r\n\tvar init = 0;\r\n\tif (this.c) {\r\n\t\tnewPath.setTripleAt(vertices[0][0], vertices[0][1], inPoints[0][0], inPoints[0][1], outPoints[0][0], outPoints[0][1], 0, false);\r\n        init = 1;\r\n    }\r\n    var cnt = this._length - 1;\r\n    var len = this._length;\r\n\r\n    var i;\r\n    for (i = init; i < len; i += 1) {\r\n    \tnewPath.setTripleAt(vertices[cnt][0], vertices[cnt][1], inPoints[cnt][0], inPoints[cnt][1], outPoints[cnt][0], outPoints[cnt][1], i, false);\r\n        cnt -= 1;\r\n    }\r\n    return newPath;\r\n};\r\nvar ShapePropertyFactory = (function(){\r\n\r\n    var initFrame = -999999;\r\n\r\n    function interpolateShape(frameNum, previousValue, caching) {\r\n        var iterationIndex = caching.lastIndex;\r\n        var keyPropS,keyPropE,isHold, j, k, jLen, kLen, perc, vertexValue;\r\n        var kf = this.keyframes;\r\n        if(frameNum < kf[0].t-this.offsetTime){\r\n            keyPropS = kf[0].s[0];\r\n            isHold = true;\r\n            iterationIndex = 0;\r\n        }else if(frameNum >= kf[kf.length - 1].t-this.offsetTime){\r\n            keyPropS = kf[kf.length - 1].s ? kf[kf.length - 1].s[0] : kf[kf.length - 2].e[0];\r\n            /*if(kf[kf.length - 1].s){\r\n                keyPropS = kf[kf.length - 1].s[0];\r\n            }else{\r\n                keyPropS = kf[kf.length - 2].e[0];\r\n            }*/\r\n            isHold = true;\r\n        }else{\r\n            var i = iterationIndex;\r\n            var len = kf.length- 1,flag = true,keyData,nextKeyData;\r\n            while(flag){\r\n                keyData = kf[i];\r\n                nextKeyData = kf[i+1];\r\n                if((nextKeyData.t - this.offsetTime) > frameNum){\r\n                    break;\r\n                }\r\n                if(i < len - 1){\r\n                    i += 1;\r\n                }else{\r\n                    flag = false;\r\n                }\r\n            }\r\n            isHold = keyData.h === 1;\r\n            iterationIndex = i;\r\n            if(!isHold){\r\n                if(frameNum >= nextKeyData.t-this.offsetTime){\r\n                    perc = 1;\r\n                }else if(frameNum < keyData.t-this.offsetTime){\r\n                    perc = 0;\r\n                }else{\r\n                    var fnc;\r\n                    if(keyData.__fnct){\r\n                        fnc = keyData.__fnct;\r\n                    }else{\r\n                        fnc = BezierFactory.getBezierEasing(keyData.o.x,keyData.o.y,keyData.i.x,keyData.i.y).get;\r\n                        keyData.__fnct = fnc;\r\n                    }\r\n                    perc = fnc((frameNum-(keyData.t-this.offsetTime))/((nextKeyData.t-this.offsetTime)-(keyData.t-this.offsetTime)));\r\n                }\r\n                keyPropE = nextKeyData.s ? nextKeyData.s[0] : keyData.e[0];\r\n            }\r\n            keyPropS = keyData.s[0];\r\n        }\r\n        jLen = previousValue._length;\r\n        kLen = keyPropS.i[0].length;\r\n        caching.lastIndex = iterationIndex;\r\n\r\n        for(j=0;j<jLen;j+=1){\r\n            for(k=0;k<kLen;k+=1){\r\n                vertexValue = isHold ? keyPropS.i[j][k] :  keyPropS.i[j][k]+(keyPropE.i[j][k]-keyPropS.i[j][k])*perc;\r\n                previousValue.i[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.o[j][k] :  keyPropS.o[j][k]+(keyPropE.o[j][k]-keyPropS.o[j][k])*perc;\r\n                previousValue.o[j][k] = vertexValue;\r\n                vertexValue = isHold ? keyPropS.v[j][k] :  keyPropS.v[j][k]+(keyPropE.v[j][k]-keyPropS.v[j][k])*perc;\r\n                previousValue.v[j][k] = vertexValue;\r\n            }\r\n        }\r\n    }\r\n\r\n    function interpolateShapeCurrentTime(){\r\n        var frameNum = this.comp.renderedFrame - this.offsetTime;\r\n        var initTime = this.keyframes[0].t - this.offsetTime;\r\n        var endTime = this.keyframes[this.keyframes.length - 1].t - this.offsetTime;\r\n        var lastFrame = this._caching.lastFrame;\r\n        if(!(lastFrame !== initFrame && ((lastFrame < initTime && frameNum < initTime) || (lastFrame > endTime && frameNum > endTime)))){\r\n            ////\r\n            this._caching.lastIndex = lastFrame < frameNum ? this._caching.lastIndex : 0;\r\n            this.interpolateShape(frameNum, this.pv, this._caching);\r\n            ////\r\n        }\r\n        this._caching.lastFrame = frameNum;\r\n        return this.pv;\r\n    }\r\n\r\n    function resetShape(){\r\n        this.paths = this.localShapeCollection;\r\n    }\r\n\r\n    function shapesEqual(shape1, shape2) {\r\n        if(shape1._length !== shape2._length || shape1.c !== shape2.c){\r\n            return false;\r\n        }\r\n        var i, len = shape1._length;\r\n        for(i = 0; i < len; i += 1) {\r\n            if(shape1.v[i][0] !== shape2.v[i][0] \r\n            || shape1.v[i][1] !== shape2.v[i][1] \r\n            || shape1.o[i][0] !== shape2.o[i][0] \r\n            || shape1.o[i][1] !== shape2.o[i][1] \r\n            || shape1.i[i][0] !== shape2.i[i][0] \r\n            || shape1.i[i][1] !== shape2.i[i][1]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    function setVValue(newPath) {\r\n        if(!shapesEqual(this.v, newPath)) {\r\n            this.v = shape_pool.clone(newPath);\r\n            this.localShapeCollection.releaseShapes();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this._mdf = true;\r\n            this.paths = this.localShapeCollection;\r\n        }\r\n    }\r\n\r\n    function processEffectsSequence() {\r\n        if (this.elem.globalData.frameId === this.frameId) {\r\n            return;\r\n        } else if (!this.effectsSequence.length) {\r\n            this._mdf = false;\r\n            return;\r\n        }\r\n        if (this.lock) {\r\n            this.setVValue(this.pv);\r\n            return;\r\n        }\r\n        this.lock = true;\r\n        this._mdf = false;\r\n        var finalValue = this.kf ? this.pv : this.data.ks ? this.data.ks.k : this.data.pt.k;\r\n        var i, len = this.effectsSequence.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            finalValue = this.effectsSequence[i](finalValue);\r\n        }\r\n        this.setVValue(finalValue);\r\n        this.lock = false;\r\n        this.frameId = this.elem.globalData.frameId;\r\n    };\r\n\r\n    function ShapeProperty(elem, data, type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.container = elem;\r\n        this.elem = elem;\r\n        this.data = data;\r\n        this.k = false;\r\n        this.kf = false;\r\n        this._mdf = false;\r\n        var pathData = type === 3 ? data.pt.k : data.ks.k;\r\n        this.v = shape_pool.clone(pathData);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.reset = resetShape;\r\n        this.effectsSequence = [];\r\n    }\r\n\r\n    function addEffect(effectFunction) {\r\n        this.effectsSequence.push(effectFunction);\r\n        this.container.addDynamicProperty(this);\r\n    }\r\n\r\n    ShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    ShapeProperty.prototype.getValue = processEffectsSequence;\r\n    ShapeProperty.prototype.setVValue = setVValue;\r\n    ShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    function KeyframedShapeProperty(elem,data,type){\r\n        this.propType = 'shape';\r\n        this.comp = elem.comp;\r\n        this.elem = elem;\r\n        this.container = elem;\r\n        this.offsetTime = elem.data.st;\r\n        this.keyframes = type === 3 ? data.pt.k : data.ks.k;\r\n        this.k = true;\r\n        this.kf = true;\r\n        var i, len = this.keyframes[0].s[0].i.length;\r\n        var jLen = this.keyframes[0].s[0].i[0].length;\r\n        this.v = shape_pool.newElement();\r\n        this.v.setPathData(this.keyframes[0].s[0].c, len);\r\n        this.pv = shape_pool.clone(this.v);\r\n        this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n        this.paths = this.localShapeCollection;\r\n        this.paths.addShape(this.v);\r\n        this.lastFrame = initFrame;\r\n        this.reset = resetShape;\r\n        this._caching = {lastFrame: initFrame, lastIndex: 0};\r\n        this.effectsSequence = [interpolateShapeCurrentTime.bind(this)];\r\n    }\r\n    KeyframedShapeProperty.prototype.getValue = processEffectsSequence;\r\n    KeyframedShapeProperty.prototype.interpolateShape = interpolateShape;\r\n    KeyframedShapeProperty.prototype.setVValue = setVValue;\r\n    KeyframedShapeProperty.prototype.addEffect = addEffect;\r\n\r\n    var EllShapeProperty = (function(){\r\n\r\n        var cPoint = roundCorner;\r\n\r\n        function EllShapeProperty(elem,data) {\r\n            /*this.v = {\r\n                v: createSizedArray(4),\r\n                i: createSizedArray(4),\r\n                o: createSizedArray(4),\r\n                c: true\r\n            };*/\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 4);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.paths = this.localShapeCollection;\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.d = data.d;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertEllToPath();\r\n            }\r\n        };\r\n\r\n        EllShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function (){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n\r\n                if(this._mdf){\r\n                    this.convertEllToPath();\r\n                }\r\n            },\r\n            convertEllToPath: function() {\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], s0 = this.s.v[0]/2, s1 = this.s.v[1]/2;\r\n                var _cw = this.d !== 3;\r\n                var _v = this.v;\r\n                _v.v[0][0] = p0;\r\n                _v.v[0][1] = p1 - s1;\r\n                _v.v[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.v[1][1] = p1;\r\n                _v.v[2][0] = p0;\r\n                _v.v[2][1] = p1 + s1;\r\n                _v.v[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.v[3][1] = p1;\r\n                _v.i[0][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.i[0][1] = p1 - s1;\r\n                _v.i[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.i[1][1] = p1 - s1 * cPoint;\r\n                _v.i[2][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.i[2][1] = p1 + s1;\r\n                _v.i[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.i[3][1] = p1 + s1 * cPoint;\r\n                _v.o[0][0] = _cw ? p0 + s0 * cPoint : p0 - s0 * cPoint;\r\n                _v.o[0][1] = p1 - s1;\r\n                _v.o[1][0] = _cw ? p0 + s0 : p0 - s0;\r\n                _v.o[1][1] = p1 + s1 * cPoint;\r\n                _v.o[2][0] = _cw ? p0 - s0 * cPoint : p0 + s0 * cPoint;\r\n                _v.o[2][1] = p1 + s1;\r\n                _v.o[3][0] = _cw ? p0 - s0 : p0 + s0;\r\n                _v.o[3][1] = p1 - s1 * cPoint;\r\n            }\r\n        }\r\n\r\n        extendPrototype([DynamicPropertyContainer], EllShapeProperty);\r\n\r\n        return EllShapeProperty;\r\n    }());\r\n\r\n    var StarShapeProperty = (function() {\r\n\r\n        function StarShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.setPathData(true, 0);\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.data = data;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            if(data.sy === 1){\r\n                this.ir = PropertyFactory.getProp(elem,data.ir,0,0,this);\r\n                this.is = PropertyFactory.getProp(elem,data.is,0,0.01,this);\r\n                this.convertToPath = this.convertStarToPath;\r\n            } else {\r\n                this.convertToPath = this.convertPolygonToPath;\r\n            }\r\n            this.pt = PropertyFactory.getProp(elem,data.pt,0,0,this);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,degToRads,this);\r\n            this.or = PropertyFactory.getProp(elem,data.or,0,0,this);\r\n            this.os = PropertyFactory.getProp(elem,data.os,0,0.01,this);\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertToPath();\r\n            }\r\n        };\r\n\r\n        StarShapeProperty.prototype = {\r\n            reset: resetShape,\r\n            getValue: function() {\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertToPath();\r\n                }\r\n            },\r\n            convertStarToPath: function() {\r\n                var numPts = Math.floor(this.pt.v)*2;\r\n                var angle = Math.PI*2/numPts;\r\n                /*this.v.v.length = numPts;\r\n                this.v.i.length = numPts;\r\n                this.v.o.length = numPts;*/\r\n                var longFlag = true;\r\n                var longRad = this.or.v;\r\n                var shortRad = this.ir.v;\r\n                var longRound = this.os.v;\r\n                var shortRound = this.is.v;\r\n                var longPerimSegment = 2*Math.PI*longRad/(numPts*2);\r\n                var shortPerimSegment = 2*Math.PI*shortRad/(numPts*2);\r\n                var i, rad,roundness,perimSegment, currentAng = -Math.PI/ 2;\r\n                currentAng += this.r.v;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    rad = longFlag ? longRad : shortRad;\r\n                    roundness = longFlag ? longRound : shortRound;\r\n                    perimSegment = longFlag ? longPerimSegment : shortPerimSegment;\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n\r\n                    /*this.v.v[i] = [x,y];\r\n                    this.v.i[i] = [x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir];\r\n                    this.v.o[i] = [x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir];\r\n                    this.v._length = numPts;*/\r\n                    longFlag = !longFlag;\r\n                    currentAng += angle*dir;\r\n                }\r\n            },\r\n            convertPolygonToPath: function() {\r\n                var numPts = Math.floor(this.pt.v);\r\n                var angle = Math.PI*2/numPts;\r\n                var rad = this.or.v;\r\n                var roundness = this.os.v;\r\n                var perimSegment = 2*Math.PI*rad/(numPts*4);\r\n                var i, currentAng = -Math.PI/ 2;\r\n                var dir = this.data.d === 3 ? -1 : 1;\r\n                currentAng += this.r.v;\r\n                this.v._length = 0;\r\n                for(i=0;i<numPts;i+=1){\r\n                    var x = rad * Math.cos(currentAng);\r\n                    var y = rad * Math.sin(currentAng);\r\n                    var ox = x === 0 && y === 0 ? 0 : y/Math.sqrt(x*x + y*y);\r\n                    var oy = x === 0 && y === 0 ? 0 : -x/Math.sqrt(x*x + y*y);\r\n                    x +=  + this.p.v[0];\r\n                    y +=  + this.p.v[1];\r\n                    this.v.setTripleAt(x,y,x-ox*perimSegment*roundness*dir,y-oy*perimSegment*roundness*dir,x+ox*perimSegment*roundness*dir,y+oy*perimSegment*roundness*dir, i, true);\r\n                    currentAng += angle*dir;\r\n                }\r\n                this.paths.length = 0;\r\n                this.paths[0] = this.v;\r\n            }\r\n\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], StarShapeProperty);\r\n\r\n        return StarShapeProperty;\r\n    }());\r\n\r\n    var RectShapeProperty = (function() {\r\n\r\n         function RectShapeProperty(elem,data) {\r\n            this.v = shape_pool.newElement();\r\n            this.v.c = true;\r\n            this.localShapeCollection = shapeCollection_pool.newShapeCollection();\r\n            this.localShapeCollection.addShape(this.v);\r\n            this.paths = this.localShapeCollection;\r\n            this.elem = elem;\r\n            this.comp = elem.comp;\r\n            this.frameId = -1;\r\n            this.d = data.d;\r\n            this.initDynamicPropertyContainer(elem);\r\n            this.p = PropertyFactory.getProp(elem,data.p,1,0,this);\r\n            this.s = PropertyFactory.getProp(elem,data.s,1,0,this);\r\n            this.r = PropertyFactory.getProp(elem,data.r,0,0,this);\r\n            if(this.dynamicProperties.length){\r\n                this.k = true;\r\n            }else{\r\n                this.k = false;\r\n                this.convertRectToPath();\r\n            }\r\n        };\r\n\r\n        RectShapeProperty.prototype = {\r\n            convertRectToPath: function (){\r\n                var p0 = this.p.v[0], p1 = this.p.v[1], v0 = this.s.v[0]/2, v1 = this.s.v[1]/2;\r\n                var round = bm_min(v0,v1,this.r.v);\r\n                var cPoint = round*(1-roundCorner);\r\n                this.v._length = 0;\r\n\r\n                if(this.d === 2 || this.d === 1) {\r\n                    this.v.setTripleAt(p0+v0, p1-v1+round,p0+v0, p1-v1+round,p0+v0,p1-v1+cPoint,0, true);\r\n                    this.v.setTripleAt(p0+v0, p1+v1-round,p0+v0, p1+v1-cPoint,p0+v0, p1+v1-round,1, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round, p1+v1,p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,p0-v0+round,p1+v1,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,4, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,p0-v0,p1-v1+round,5, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,6, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,p0+v0-round,p1-v1,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0+cPoint,p1+v1,p0-v0,p1+v1,2);\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0,p1-v1+cPoint,p0-v0,p1-v1,3);\r\n                    }\r\n                }else{\r\n                    this.v.setTripleAt(p0+v0,p1-v1+round,p0+v0,p1-v1+cPoint,p0+v0,p1-v1+round,0, true);\r\n                    if(round!== 0){\r\n                        this.v.setTripleAt(p0+v0-round,p1-v1,p0+v0-round,p1-v1,p0+v0-cPoint,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1-v1,p0-v0+cPoint,p1-v1,p0-v0+round,p1-v1,2, true);\r\n                        this.v.setTripleAt(p0-v0,p1-v1+round,p0-v0,p1-v1+round,p0-v0,p1-v1+cPoint,3, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1-round,p0-v0,p1+v1-cPoint,p0-v0,p1+v1-round,4, true);\r\n                        this.v.setTripleAt(p0-v0+round,p1+v1,p0-v0+round,p1+v1,p0-v0+cPoint,p1+v1,5, true);\r\n                        this.v.setTripleAt(p0+v0-round,p1+v1,p0+v0-cPoint,p1+v1,p0+v0-round,p1+v1,6, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1-round,p0+v0,p1+v1-round,p0+v0,p1+v1-cPoint,7, true);\r\n                    } else {\r\n                        this.v.setTripleAt(p0-v0,p1-v1,p0-v0+cPoint,p1-v1,p0-v0,p1-v1,1, true);\r\n                        this.v.setTripleAt(p0-v0,p1+v1,p0-v0,p1+v1-cPoint,p0-v0,p1+v1,2, true);\r\n                        this.v.setTripleAt(p0+v0,p1+v1,p0+v0-cPoint,p1+v1,p0+v0,p1+v1,3, true);\r\n\r\n                    }\r\n                }\r\n            },\r\n            getValue: function(frameNum){\r\n                if(this.elem.globalData.frameId === this.frameId){\r\n                    return;\r\n                }\r\n                this.frameId = this.elem.globalData.frameId;\r\n                this.iterateDynamicProperties();\r\n                if(this._mdf){\r\n                    this.convertRectToPath();\r\n                }\r\n\r\n            },\r\n            reset: resetShape\r\n        }\r\n        extendPrototype([DynamicPropertyContainer], RectShapeProperty);\r\n\r\n        return RectShapeProperty;\r\n    }());\r\n\r\n    function getShapeProp(elem,data,type){\r\n        var prop;\r\n        if(type === 3 || type === 4){\r\n            var dataProp = type === 3 ? data.pt : data.ks;\r\n            var keys = dataProp.k;\r\n            if(keys.length){\r\n                prop = new KeyframedShapeProperty(elem, data, type);\r\n            }else{\r\n                prop = new ShapeProperty(elem, data, type);\r\n            }\r\n        }else if(type === 5){\r\n            prop = new RectShapeProperty(elem, data);\r\n        }else if(type === 6){\r\n            prop = new EllShapeProperty(elem, data);\r\n        }else if(type === 7){\r\n            prop = new StarShapeProperty(elem, data);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    }\r\n\r\n    function getConstructorFunction() {\r\n        return ShapeProperty;\r\n    }\r\n\r\n    function getKeyframedConstructorFunction() {\r\n        return KeyframedShapeProperty;\r\n    }\r\n\r\n    var ob = {};\r\n    ob.getShapeProp = getShapeProp;\r\n    ob.getConstructorFunction = getConstructorFunction;\r\n    ob.getKeyframedConstructorFunction = getKeyframedConstructorFunction;\r\n    return ob;\r\n}());\r\nvar ShapeModifiers = (function(){\r\n    var ob = {};\r\n    var modifiers = {};\r\n    ob.registerModifier = registerModifier;\r\n    ob.getModifier = getModifier;\r\n\r\n    function registerModifier(nm,factory){\r\n        if(!modifiers[nm]){\r\n            modifiers[nm] = factory;\r\n        }\r\n    }\r\n\r\n    function getModifier(nm,elem, data){\r\n        return new modifiers[nm](elem, data);\r\n    }\r\n\r\n    return ob;\r\n}());\r\n\r\nfunction ShapeModifier(){}\r\nShapeModifier.prototype.initModifierProperties = function(){};\r\nShapeModifier.prototype.addShapeToModifier = function(){};\r\nShapeModifier.prototype.addShape = function(data){\r\n    if (!this.closed) {\r\n        // Adding shape to dynamic properties. It covers the case where a shape has no effects applied, to reset it's _mdf state on every tick.\r\n        data.sh.container.addDynamicProperty(data.sh);\r\n        var shapeData = {shape:data.sh, data: data, localShapeCollection:shapeCollection_pool.newShapeCollection()};\r\n        this.shapes.push(shapeData);\r\n        this.addShapeToModifier(shapeData);\r\n        if (this._isAnimated) {\r\n            data.setAsAnimated();\r\n        }\r\n    }\r\n};\r\nShapeModifier.prototype.init = function(elem,data){\r\n    this.shapes = [];\r\n    this.elem = elem;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,data);\r\n    this.frameId = initialDefaultFrame;\r\n    this.closed = false;\r\n    this.k = false;\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\nShapeModifier.prototype.processKeys = function(){\r\n    if(this.elem.globalData.frameId === this.frameId){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], ShapeModifier);\r\nfunction TrimModifier(){\r\n}\r\nextendPrototype([ShapeModifier], TrimModifier);\r\nTrimModifier.prototype.initModifierProperties = function(elem, data) {\r\n    this.s = PropertyFactory.getProp(elem, data.s, 0, 0.01, this);\r\n    this.e = PropertyFactory.getProp(elem, data.e, 0, 0.01, this);\r\n    this.o = PropertyFactory.getProp(elem, data.o, 0, 0, this);\r\n    this.sValue = 0;\r\n    this.eValue = 0;\r\n    this.getValue = this.processKeys;\r\n    this.m = data.m;\r\n    this._isAnimated = !!this.s.effectsSequence.length || !!this.e.effectsSequence.length || !!this.o.effectsSequence.length;\r\n};\r\n\r\nTrimModifier.prototype.addShapeToModifier = function(shapeData){\r\n    shapeData.pathsData = [];\r\n};\r\n\r\nTrimModifier.prototype.calculateShapeEdges = function(s, e, shapeLength, addedLength, totalModifierLength) {\r\n    var segments = [];\r\n    if (e <= 1) {\r\n        segments.push({\r\n            s: s,\r\n            e: e\r\n        });\r\n    } else if (s >= 1) {\r\n        segments.push({\r\n            s: s - 1,\r\n            e: e - 1\r\n        });\r\n    } else {\r\n        segments.push({\r\n            s: s,\r\n            e: 1\r\n        });\r\n        segments.push({\r\n            s: 0,\r\n            e: e - 1\r\n        });\r\n    }\r\n    var shapeSegments = [];\r\n    var i, len = segments.length, segmentOb;\r\n    for (i = 0; i < len; i += 1) {\r\n        segmentOb = segments[i];\r\n        if (segmentOb.e * totalModifierLength < addedLength || segmentOb.s * totalModifierLength > addedLength + shapeLength) {\r\n            \r\n        } else {\r\n            var shapeS, shapeE;\r\n            if (segmentOb.s * totalModifierLength <= addedLength) {\r\n                shapeS = 0;\r\n            } else {\r\n                shapeS = (segmentOb.s * totalModifierLength - addedLength) / shapeLength;\r\n            }\r\n            if(segmentOb.e * totalModifierLength >= addedLength + shapeLength) {\r\n                shapeE = 1;\r\n            } else {\r\n                shapeE = ((segmentOb.e * totalModifierLength - addedLength) / shapeLength);\r\n            }\r\n            shapeSegments.push([shapeS, shapeE]);\r\n        }\r\n    }\r\n    if (!shapeSegments.length) {\r\n        shapeSegments.push([0, 0]);\r\n    }\r\n    return shapeSegments;\r\n};\r\n\r\nTrimModifier.prototype.releasePathsData = function(pathsData) {\r\n    var i, len = pathsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        segments_length_pool.release(pathsData[i]);\r\n    }\r\n    pathsData.length = 0;\r\n    return pathsData;\r\n};\r\n\r\nTrimModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var s, e;\r\n    if (this._mdf || _isFirstFrame) {\r\n        var o = (this.o.v % 360) / 360;\r\n        if (o < 0) {\r\n            o += 1;\r\n        }\r\n        s = (this.s.v > 1 ? 1 : this.s.v < 0 ? 0 : this.s.v) + o;\r\n        e = (this.e.v > 1 ? 1 : this.e.v < 0 ? 0 : this.e.v) + o;\r\n        if (s === e) {\r\n\r\n        }\r\n        if (s > e) {\r\n            var _s = s;\r\n            s = e;\r\n            e = _s;\r\n        }\r\n        s = Math.round(s * 10000) * 0.0001;\r\n        e = Math.round(e * 10000) * 0.0001;\r\n        this.sValue = s;\r\n        this.eValue = e;\r\n    } else {\r\n        s = this.sValue;\r\n        e = this.eValue;\r\n    }\r\n    var shapePaths;\r\n    var i, len = this.shapes.length, j, jLen;\r\n    var pathsData, pathData, totalShapeLength, totalModifierLength = 0;\r\n\r\n    if (e === s) {\r\n        for (i = 0; i < len; i += 1) {\r\n            this.shapes[i].localShapeCollection.releaseShapes();\r\n            this.shapes[i].shape._mdf = true;\r\n            this.shapes[i].shape.paths = this.shapes[i].localShapeCollection;\r\n        }\r\n    } else if (!((e === 1 && s === 0) || (e===0 && s === 1))){\r\n        var segments = [], shapeData, localShapeCollection;\r\n        for (i = 0; i < len; i += 1) {\r\n            shapeData = this.shapes[i];\r\n            // if shape hasn't changed and trim properties haven't changed, cached previous path can be used\r\n            if (!shapeData.shape._mdf && !this._mdf && !_isFirstFrame && this.m !== 2) {\r\n                shapeData.shape.paths = shapeData.localShapeCollection;\r\n            } else {\r\n                shapePaths = shapeData.shape.paths;\r\n                jLen = shapePaths._length;\r\n                totalShapeLength = 0;\r\n                if (!shapeData.shape._mdf && shapeData.pathsData.length) {\r\n                    totalShapeLength = shapeData.totalShapeLength;\r\n                } else {\r\n                    pathsData = this.releasePathsData(shapeData.pathsData);\r\n                    for (j = 0; j < jLen; j += 1) {\r\n                        pathData = bez.getSegmentsLength(shapePaths.shapes[j]);\r\n                        pathsData.push(pathData);\r\n                        totalShapeLength += pathData.totalLength;\r\n                    }\r\n                    shapeData.totalShapeLength = totalShapeLength;\r\n                    shapeData.pathsData = pathsData;\r\n                }\r\n\r\n                totalModifierLength += totalShapeLength;\r\n                shapeData.shape._mdf = true;\r\n            }\r\n        }\r\n        var shapeS = s, shapeE = e, addedLength = 0, edges;\r\n        for (i = len - 1; i >= 0; i -= 1) {\r\n            shapeData = this.shapes[i];\r\n            if (shapeData.shape._mdf) {\r\n                localShapeCollection = shapeData.localShapeCollection;\r\n                localShapeCollection.releaseShapes();\r\n                //if m === 2 means paths are trimmed individually so edges need to be found for this specific shape relative to whoel group\r\n                if (this.m === 2 && len > 1) {\r\n                    edges = this.calculateShapeEdges(s, e, shapeData.totalShapeLength, addedLength, totalModifierLength);\r\n                    addedLength += shapeData.totalShapeLength;\r\n                } else {\r\n                    edges = [[shapeS, shapeE]];\r\n                }\r\n                jLen = edges.length;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    shapeS = edges[j][0];\r\n                    shapeE = edges[j][1];\r\n                    segments.length = 0;\r\n                    if (shapeE <= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength * shapeE\r\n                        });\r\n                    } else if (shapeS >= 1) {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * (shapeS - 1),\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    } else {\r\n                        segments.push({\r\n                            s:shapeData.totalShapeLength * shapeS,\r\n                            e:shapeData.totalShapeLength\r\n                        });\r\n                        segments.push({\r\n                            s:0,\r\n                            e:shapeData.totalShapeLength * (shapeE - 1)\r\n                        });\r\n                    }\r\n                    var newShapesData = this.addShapes(shapeData,segments[0]);\r\n                    if (segments[0].s !== segments[0].e) {\r\n                        if (segments.length > 1) {\r\n                            var lastShapeInCollection = shapeData.shape.paths.shapes[shapeData.shape.paths._length - 1];\r\n                            if (lastShapeInCollection.c) {\r\n                                var lastShape = newShapesData.pop();\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1], lastShape);\r\n                            } else {\r\n                                this.addPaths(newShapesData, localShapeCollection);\r\n                                newShapesData = this.addShapes(shapeData, segments[1]);\r\n                            }\r\n                        } \r\n                        this.addPaths(newShapesData, localShapeCollection);\r\n                    }\r\n                    \r\n                }\r\n                shapeData.shape.paths = localShapeCollection;\r\n            }\r\n        }\r\n    } else if (this._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            //Releasign Trim Cached paths data when no trim applied in case shapes are modified inbetween.\r\n            //Don't remove this even if it's losing cached info.\r\n            this.shapes[i].pathsData.length = 0;\r\n            this.shapes[i].shape._mdf = true;\r\n        }\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addPaths = function(newPaths, localShapeCollection) {\r\n    var i, len = newPaths.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        localShapeCollection.addShape(newPaths[i]);\r\n    }\r\n};\r\n\r\nTrimModifier.prototype.addSegment = function(pt1, pt2, pt3, pt4, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(pt2[0], pt2[1], 'o', pos);\r\n    shapePath.setXYAt(pt3[0], pt3[1], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(pt1[0], pt1[1], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(pt4[0], pt4[1], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addSegmentFromArray = function(points, shapePath, pos, newShape) {\r\n    shapePath.setXYAt(points[1], points[5], 'o', pos);\r\n    shapePath.setXYAt(points[2], points[6], 'i', pos + 1);\r\n    if(newShape){\r\n        shapePath.setXYAt(points[0], points[4], 'v', pos);\r\n    }\r\n    shapePath.setXYAt(points[3], points[7], 'v', pos + 1);\r\n};\r\n\r\nTrimModifier.prototype.addShapes = function(shapeData, shapeSegment, shapePath) {\r\n    var pathsData = shapeData.pathsData;\r\n    var shapePaths = shapeData.shape.paths.shapes;\r\n    var i, len = shapeData.shape.paths._length, j, jLen;\r\n    var addedLength = 0;\r\n    var currentLengthData,segmentCount;\r\n    var lengths;\r\n    var segment;\r\n    var shapes = [];\r\n    var initPos;\r\n    var newShape = true;\r\n    if (!shapePath) {\r\n        shapePath = shape_pool.newElement();\r\n        segmentCount = 0;\r\n        initPos = 0;\r\n    } else {\r\n        segmentCount = shapePath._length;\r\n        initPos = shapePath._length;\r\n    }\r\n    shapes.push(shapePath);\r\n    for (i = 0; i < len; i += 1) {\r\n        lengths = pathsData[i].lengths;\r\n        shapePath.c = shapePaths[i].c;\r\n        jLen = shapePaths[i].c ? lengths.length : lengths.length + 1;\r\n        for (j = 1; j < jLen; j +=1) {\r\n            currentLengthData = lengths[j-1];\r\n            if (addedLength + currentLengthData.addedLength < shapeSegment.s) {\r\n                addedLength += currentLengthData.addedLength;\r\n                shapePath.c = false;\r\n            } else if(addedLength > shapeSegment.e) {\r\n                shapePath.c = false;\r\n                break;\r\n            } else {\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + currentLengthData.addedLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[j], shapePaths[i].v[j], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[j], shapePaths[i].o[j - 1], shapePaths[i].i[j], (shapeSegment.s - addedLength)/currentLengthData.addedLength,(shapeSegment.e - addedLength)/currentLengthData.addedLength, lengths[j-1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n                addedLength += currentLengthData.addedLength;\r\n                segmentCount += 1;\r\n            }\r\n        }\r\n        if (shapePaths[i].c && lengths.length) {\r\n            currentLengthData = lengths[j - 1];\r\n            if (addedLength <= shapeSegment.e) {\r\n                var segmentLength = lengths[j - 1].addedLength;\r\n                if (shapeSegment.s <= addedLength && shapeSegment.e >= addedLength + segmentLength) {\r\n                    this.addSegment(shapePaths[i].v[j - 1], shapePaths[i].o[j - 1], shapePaths[i].i[0], shapePaths[i].v[0], shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                } else {\r\n                    segment = bez.getNewSegment(shapePaths[i].v[j - 1], shapePaths[i].v[0], shapePaths[i].o[j - 1], shapePaths[i].i[0], (shapeSegment.s - addedLength) / segmentLength, (shapeSegment.e - addedLength) / segmentLength, lengths[j - 1]);\r\n                    this.addSegmentFromArray(segment, shapePath, segmentCount, newShape);\r\n                    // this.addSegment(segment.pt1, segment.pt3, segment.pt4, segment.pt2, shapePath, segmentCount, newShape);\r\n                    newShape = false;\r\n                    shapePath.c = false;\r\n                }\r\n            } else {\r\n                shapePath.c = false;\r\n            }\r\n            addedLength += currentLengthData.addedLength;\r\n            segmentCount += 1;\r\n        }\r\n        if (shapePath._length) {\r\n            shapePath.setXYAt(shapePath.v[initPos][0], shapePath.v[initPos][1], 'i', initPos);\r\n            shapePath.setXYAt(shapePath.v[shapePath._length - 1][0], shapePath.v[shapePath._length - 1][1],'o', shapePath._length - 1);\r\n        }\r\n        if (addedLength > shapeSegment.e) {\r\n            break;\r\n        }\r\n        if (i < len - 1) {\r\n            shapePath = shape_pool.newElement();\r\n            newShape = true;\r\n            shapes.push(shapePath);\r\n            segmentCount = 0;\r\n        }\r\n    }\r\n    return shapes;\r\n};\r\n\r\n\r\nShapeModifiers.registerModifier('tm', TrimModifier);\r\nfunction RoundCornersModifier(){}\r\nextendPrototype([ShapeModifier],RoundCornersModifier);\r\nRoundCornersModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.rd = PropertyFactory.getProp(elem,data.r,0,null,this);\r\n    this._isAnimated = !!this.rd.effectsSequence.length;\r\n};\r\n\r\nRoundCornersModifier.prototype.processPath = function(path, round){\r\n    var cloned_path = shape_pool.newElement();\r\n    cloned_path.c = path.c;\r\n    var i, len = path._length;\r\n    var currentV,currentI,currentO,closerV, newV,newO,newI,distance,newPosPerc,index = 0;\r\n    var vX,vY,oX,oY,iX,iY;\r\n    for(i=0;i<len;i+=1){\r\n        currentV = path.v[i];\r\n        currentO = path.o[i];\r\n        currentI = path.i[i];\r\n        if(currentV[0]===currentO[0] && currentV[1]===currentO[1] && currentV[0]===currentI[0] && currentV[1]===currentI[1]){\r\n            if((i===0 || i === len - 1) && !path.c){\r\n                cloned_path.setTripleAt(currentV[0],currentV[1],currentO[0],currentO[1],currentI[0],currentI[1],index);\r\n                /*cloned_path.v[index] = currentV;\r\n                cloned_path.o[index] = currentO;\r\n                cloned_path.i[index] = currentI;*/\r\n                index += 1;\r\n            } else {\r\n                if(i===0){\r\n                    closerV = path.v[len-1];\r\n                } else {\r\n                    closerV = path.v[i-1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = iX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = iY = currentV[1]-(currentV[1]-closerV[1])*newPosPerc;\r\n                oX = vX-(vX-currentV[0])*roundCorner;\r\n                oY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n\r\n                if(i === len - 1){\r\n                    closerV = path.v[0];\r\n                } else {\r\n                    closerV = path.v[i+1];\r\n                }\r\n                distance = Math.sqrt(Math.pow(currentV[0]-closerV[0],2)+Math.pow(currentV[1]-closerV[1],2));\r\n                newPosPerc = distance ? Math.min(distance/2,round)/distance : 0;\r\n                vX = oX = currentV[0]+(closerV[0]-currentV[0])*newPosPerc;\r\n                vY = oY = currentV[1]+(closerV[1]-currentV[1])*newPosPerc;\r\n                iX = vX-(vX-currentV[0])*roundCorner;\r\n                iY = vY-(vY-currentV[1])*roundCorner;\r\n                cloned_path.setTripleAt(vX,vY,oX,oY,iX,iY,index);\r\n                index += 1;\r\n            }\r\n        } else {\r\n            cloned_path.setTripleAt(path.v[i][0],path.v[i][1],path.o[i][0],path.o[i][1],path.i[i][0],path.i[i][1],index);\r\n            index += 1;\r\n        }\r\n    }\r\n    return cloned_path;\r\n};\r\n\r\nRoundCornersModifier.prototype.processShapes = function(_isFirstFrame){\r\n    var shapePaths;\r\n    var i, len = this.shapes.length;\r\n    var j, jLen;\r\n    var rd = this.rd.v;\r\n\r\n    if(rd !== 0){\r\n        var shapeData, newPaths, localShapeCollection;\r\n        for(i=0;i<len;i+=1){\r\n            shapeData = this.shapes[i];\r\n            newPaths = shapeData.shape.paths;\r\n            localShapeCollection = shapeData.localShapeCollection;\r\n            if(!(!shapeData.shape._mdf && !this._mdf && !_isFirstFrame)){\r\n                localShapeCollection.releaseShapes();\r\n                shapeData.shape._mdf = true;\r\n                shapePaths = shapeData.shape.paths.shapes;\r\n                jLen = shapeData.shape.paths._length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    localShapeCollection.addShape(this.processPath(shapePaths[j],rd));\r\n                }\r\n            }\r\n            shapeData.shape.paths = shapeData.localShapeCollection;\r\n        }\r\n\r\n    }\r\n    if(!this.dynamicProperties.length){\r\n        this._mdf = false;\r\n    }\r\n};\r\n\r\nShapeModifiers.registerModifier('rd',RoundCornersModifier);\r\nfunction RepeaterModifier(){}\r\nextendPrototype([ShapeModifier], RepeaterModifier);\r\n\r\nRepeaterModifier.prototype.initModifierProperties = function(elem,data){\r\n    this.getValue = this.processKeys;\r\n    this.c = PropertyFactory.getProp(elem,data.c,0,null,this);\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,null,this);\r\n    this.tr = TransformPropertyFactory.getTransformProperty(elem,data.tr,this);\r\n    this.so = PropertyFactory.getProp(elem,data.tr.so,0,0.01,this);\r\n    this.eo = PropertyFactory.getProp(elem,data.tr.eo,0,0.01,this);\r\n    this.data = data;\r\n    if(!this.dynamicProperties.length){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = !!this.dynamicProperties.length;\r\n    this.pMatrix = new Matrix();\r\n    this.rMatrix = new Matrix();\r\n    this.sMatrix = new Matrix();\r\n    this.tMatrix = new Matrix();\r\n    this.matrix = new Matrix();\r\n};\r\n\r\nRepeaterModifier.prototype.applyTransforms = function(pMatrix, rMatrix, sMatrix, transform, perc, inv){\r\n    var dir = inv ? -1 : 1;\r\n    var scaleX = transform.s.v[0] + (1 - transform.s.v[0]) * (1 - perc);\r\n    var scaleY = transform.s.v[1] + (1 - transform.s.v[1]) * (1 - perc);\r\n    pMatrix.translate(transform.p.v[0] * dir * perc, transform.p.v[1] * dir * perc, transform.p.v[2]);\r\n    rMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    rMatrix.rotate(-transform.r.v * dir * perc);\r\n    rMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.translate(-transform.a.v[0], -transform.a.v[1], transform.a.v[2]);\r\n    sMatrix.scale(inv ? 1/scaleX : scaleX, inv ? 1/scaleY : scaleY);\r\n    sMatrix.translate(transform.a.v[0], transform.a.v[1], transform.a.v[2]);\r\n};\r\n\r\nRepeaterModifier.prototype.init = function(elem, arr, pos, elemsData) {\r\n    this.elem = elem;\r\n    this.arr = arr;\r\n    this.pos = pos;\r\n    this.elemsData = elemsData;\r\n    this._currentCopies = 0;\r\n    this._elements = [];\r\n    this._groups = [];\r\n    this.frameId = -1;\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.initModifierProperties(elem,arr[pos]);\r\n    var cont = 0;\r\n    while(pos>0){\r\n        pos -= 1;\r\n        //this._elements.unshift(arr.splice(pos,1)[0]);\r\n        this._elements.unshift(arr[pos]);\r\n        cont += 1;\r\n    }\r\n    if(this.dynamicProperties.length){\r\n        this.k = true;\r\n    }else{\r\n        this.getValue(true);\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.resetElements = function(elements){\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._processed = false;\r\n        if(elements[i].ty === 'gr'){\r\n            this.resetElements(elements[i].it);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.cloneElements = function(elements){\r\n    var i, len = elements.length;\r\n    var newElements = JSON.parse(JSON.stringify(elements));\r\n    this.resetElements(newElements);\r\n    return newElements;\r\n};\r\n\r\nRepeaterModifier.prototype.changeGroupRender = function(elements, renderFlag) {\r\n    var i, len = elements.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        elements[i]._render = renderFlag;\r\n        if(elements[i].ty === 'gr') {\r\n            this.changeGroupRender(elements[i].it, renderFlag);\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.processShapes = function(_isFirstFrame) {\r\n    var items, itemsTransform, i, dir, cont;\r\n    if(this._mdf || _isFirstFrame){\r\n        var copies = Math.ceil(this.c.v);\r\n        if(this._groups.length < copies){\r\n            while(this._groups.length < copies){\r\n                var group = {\r\n                    it:this.cloneElements(this._elements),\r\n                    ty:'gr'\r\n                };\r\n                group.it.push({\"a\":{\"a\":0,\"ix\":1,\"k\":[0,0]},\"nm\":\"Transform\",\"o\":{\"a\":0,\"ix\":7,\"k\":100},\"p\":{\"a\":0,\"ix\":2,\"k\":[0,0]},\"r\":{\"a\":1,\"ix\":6,\"k\":[{s:0,e:0,t:0},{s:0,e:0,t:1}]},\"s\":{\"a\":0,\"ix\":3,\"k\":[100,100]},\"sa\":{\"a\":0,\"ix\":5,\"k\":0},\"sk\":{\"a\":0,\"ix\":4,\"k\":0},\"ty\":\"tr\"});\r\n                \r\n                this.arr.splice(0,0,group);\r\n                this._groups.splice(0,0,group);\r\n                this._currentCopies += 1;\r\n            }\r\n            this.elem.reloadShapes();\r\n        }\r\n        cont = 0;\r\n        var renderFlag;\r\n        for(i = 0; i  <= this._groups.length - 1; i += 1){\r\n            renderFlag = cont < copies;\r\n            this._groups[i]._render = renderFlag;\r\n            this.changeGroupRender(this._groups[i].it, renderFlag);\r\n            cont += 1;\r\n        }\r\n        \r\n        this._currentCopies = copies;\r\n        ////\r\n\r\n        var offset = this.o.v;\r\n        var offsetModulo = offset%1;\r\n        var roundOffset = offset > 0 ? Math.floor(offset) : Math.ceil(offset);\r\n        var k;\r\n        var tMat = this.tr.v.props;\r\n        var pProps = this.pMatrix.props;\r\n        var rProps = this.rMatrix.props;\r\n        var sProps = this.sMatrix.props;\r\n        this.pMatrix.reset();\r\n        this.rMatrix.reset();\r\n        this.sMatrix.reset();\r\n        this.tMatrix.reset();\r\n        this.matrix.reset();\r\n        var iteration = 0;\r\n\r\n        if(offset > 0) {\r\n            while(iteration<roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                iteration += 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, offsetModulo, false);\r\n                iteration += offsetModulo;\r\n            }\r\n        } else if(offset < 0) {\r\n            while(iteration>roundOffset){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, true);\r\n                iteration -= 1;\r\n            }\r\n            if(offsetModulo){\r\n                this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, - offsetModulo, true);\r\n                iteration -= offsetModulo;\r\n            }\r\n        }\r\n        i = this.data.m === 1 ? 0 : this._currentCopies - 1;\r\n        dir = this.data.m === 1 ? 1 : -1;\r\n        cont = this._currentCopies;\r\n        var j, jLen;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            jLen = itemsTransform.length;\r\n            items[items.length - 1].transform.mProps._mdf = true;\r\n            items[items.length - 1].transform.op._mdf = true;\r\n            items[items.length - 1].transform.op.v = this.so.v + (this.eo.v - this.so.v) * (i / (this._currentCopies - 1));\r\n            if(iteration !== 0){\r\n                if((i !== 0 && dir === 1) || (i !== this._currentCopies - 1 && dir === -1)){\r\n                    this.applyTransforms(this.pMatrix, this.rMatrix, this.sMatrix, this.tr, 1, false);\r\n                }\r\n                this.matrix.transform(rProps[0],rProps[1],rProps[2],rProps[3],rProps[4],rProps[5],rProps[6],rProps[7],rProps[8],rProps[9],rProps[10],rProps[11],rProps[12],rProps[13],rProps[14],rProps[15]);\r\n                this.matrix.transform(sProps[0],sProps[1],sProps[2],sProps[3],sProps[4],sProps[5],sProps[6],sProps[7],sProps[8],sProps[9],sProps[10],sProps[11],sProps[12],sProps[13],sProps[14],sProps[15]);\r\n                this.matrix.transform(pProps[0],pProps[1],pProps[2],pProps[3],pProps[4],pProps[5],pProps[6],pProps[7],pProps[8],pProps[9],pProps[10],pProps[11],pProps[12],pProps[13],pProps[14],pProps[15]);\r\n                \r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n                this.matrix.reset();\r\n            } else {\r\n                this.matrix.reset();\r\n                for(j=0;j<jLen;j+=1) {\r\n                    itemsTransform[j] = this.matrix.props[j];\r\n                }\r\n            }\r\n            iteration += 1;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    } else {\r\n        cont = this._currentCopies;\r\n        i = 0;\r\n        dir = 1;\r\n        while(cont){\r\n            items = this.elemsData[i].it;\r\n            itemsTransform = items[items.length - 1].transform.mProps.v.props;\r\n            items[items.length - 1].transform.mProps._mdf = false;\r\n            items[items.length - 1].transform.op._mdf = false;\r\n            cont -= 1;\r\n            i += dir;\r\n        }\r\n    }\r\n};\r\n\r\nRepeaterModifier.prototype.addShape = function(){};\r\n\r\nShapeModifiers.registerModifier('rp',RepeaterModifier);\r\nfunction ShapeCollection(){\r\n\tthis._length = 0;\r\n\tthis._maxLength = 4;\r\n\tthis.shapes = createSizedArray(this._maxLength);\r\n}\r\n\r\nShapeCollection.prototype.addShape = function(shapeData){\r\n\tif(this._length === this._maxLength){\r\n\t\tthis.shapes = this.shapes.concat(createSizedArray(this._maxLength));\r\n\t\tthis._maxLength *= 2;\r\n\t}\r\n\tthis.shapes[this._length] = shapeData;\r\n\tthis._length += 1;\r\n};\r\n\r\nShapeCollection.prototype.releaseShapes = function(){\r\n\tvar i;\r\n\tfor(i = 0; i < this._length; i += 1) {\r\n\t\tshape_pool.release(this.shapes[i]);\r\n\t}\r\n\tthis._length = 0;\r\n};\r\nfunction DashProperty(elem, data, renderer, container) {\r\n    this.elem = elem;\r\n    this.frameId = -1;\r\n    this.dataProps = createSizedArray(data.length);\r\n    this.renderer = renderer;\r\n    this.k = false;\r\n    this.dashStr = '';\r\n    this.dashArray = createTypedArray('float32',  data.length ? data.length - 1 : 0);\r\n    this.dashoffset = createTypedArray('float32',  1);\r\n    this.initDynamicPropertyContainer(container);\r\n    var i, len = data.length || 0, prop;\r\n    for(i = 0; i < len; i += 1) {\r\n        prop = PropertyFactory.getProp(elem,data[i].v,0, 0, this);\r\n        this.k = prop.k || this.k;\r\n        this.dataProps[i] = {n:data[i].n,p:prop};\r\n    }\r\n    if(!this.k){\r\n        this.getValue(true);\r\n    }\r\n    this._isAnimated = this.k;\r\n}\r\n\r\nDashProperty.prototype.getValue = function(forceRender) {\r\n    if(this.elem.globalData.frameId === this.frameId && !forceRender){\r\n        return;\r\n    }\r\n    this.frameId = this.elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n    this._mdf = this._mdf || forceRender;\r\n    if (this._mdf) {\r\n        var i = 0, len = this.dataProps.length;\r\n        if(this.renderer === 'svg') {\r\n            this.dashStr = '';\r\n        }\r\n        for(i=0;i<len;i+=1){\r\n            if(this.dataProps[i].n != 'o'){\r\n                if(this.renderer === 'svg') {\r\n                    this.dashStr += ' ' + this.dataProps[i].p.v;\r\n                }else{\r\n                    this.dashArray[i] = this.dataProps[i].p.v;\r\n                }\r\n            }else{\r\n                this.dashoffset[0] = this.dataProps[i].p.v;\r\n            }\r\n        }\r\n    }\r\n};\r\nextendPrototype([DynamicPropertyContainer], DashProperty);\r\nfunction GradientProperty(elem,data,container){\r\n    this.data = data;\r\n    this.c = createTypedArray('uint8c', data.p*4);\r\n    var cLength = data.k.k[0].s ? (data.k.k[0].s.length - data.p*4) : data.k.k.length - data.p*4;\r\n    this.o = createTypedArray('float32', cLength);\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    this._collapsable = this.checkCollapsable();\r\n    this._hasOpacity = cLength;\r\n    this.initDynamicPropertyContainer(container);\r\n    this.prop = PropertyFactory.getProp(elem,data.k,1,null,this);\r\n    this.k = this.prop.k;\r\n    this.getValue(true);\r\n}\r\n\r\nGradientProperty.prototype.comparePoints = function(values, points) {\r\n    var i = 0, len = this.o.length/2, diff;\r\n    while(i < len) {\r\n        diff = Math.abs(values[i*4] - values[points*4 + i*2]);\r\n        if(diff > 0.01){\r\n            return false;\r\n        }\r\n        i += 1;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.checkCollapsable = function() {\r\n    if (this.o.length/2 !== this.c.length/4) {\r\n        return false;\r\n    }\r\n    if (this.data.k.k[0].s) {\r\n        var i = 0, len = this.data.k.k.length;\r\n        while (i < len) {\r\n            if (!this.comparePoints(this.data.k.k[i].s, this.data.p)) {\r\n                return false;\r\n            }\r\n            i += 1;\r\n        }\r\n    } else if(!this.comparePoints(this.data.k.k, this.data.p)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nGradientProperty.prototype.getValue = function(forceRender){\r\n    this.prop.getValue();\r\n    this._mdf = false;\r\n    this._cmdf = false;\r\n    this._omdf = false;\r\n    if(this.prop._mdf || forceRender){\r\n        var i, len = this.data.p*4;\r\n        var mult, val;\r\n        for(i=0;i<len;i+=1){\r\n            mult = i%4 === 0 ? 100 : 255;\r\n            val = Math.round(this.prop.v[i]*mult);\r\n            if(this.c[i] !== val){\r\n                this.c[i] = val;\r\n                this._cmdf = !forceRender;\r\n            }\r\n        }\r\n        if(this.o.length){\r\n            len = this.prop.v.length;\r\n            for(i=this.data.p*4;i<len;i+=1){\r\n                mult = i%2 === 0 ? 100 : 1;\r\n                val = i%2 === 0 ?  Math.round(this.prop.v[i]*100):this.prop.v[i];\r\n                if(this.o[i-this.data.p*4] !== val){\r\n                    this.o[i-this.data.p*4] = val;\r\n                    this._omdf = !forceRender;\r\n                }\r\n            }\r\n        }\r\n        this._mdf = !forceRender;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], GradientProperty);\r\nvar buildShapeString = function(pathNodes, length, closed, mat) {\r\n\tif(length === 0) {\r\n            return '';\r\n        }\r\n        var _o = pathNodes.o;\r\n        var _i = pathNodes.i;\r\n        var _v = pathNodes.v;\r\n        var i, shapeString = \" M\" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n        for(i = 1; i < length; i += 1) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[i][0], _i[i][1]) + \" \" + mat.applyToPointStringified(_v[i][0], _v[i][1]);\r\n        }\r\n        if (closed && length) {\r\n            shapeString += \" C\" + mat.applyToPointStringified(_o[i - 1][0], _o[i - 1][1]) + \" \" + mat.applyToPointStringified(_i[0][0], _i[0][1]) + \" \" + mat.applyToPointStringified(_v[0][0], _v[0][1]);\r\n            shapeString += 'z';\r\n        }\r\n        return shapeString;\r\n}\r\nvar ImagePreloader = (function(){\r\n\r\n    var proxyImage = (function(){\r\n        var canvas = createTag('canvas');\r\n        canvas.width = 1;\r\n        canvas.height = 1;\r\n        var ctx = canvas.getContext('2d');\r\n        ctx.fillStyle = 'rgba(0,0,0,0)';\r\n        ctx.fillRect(0, 0, 1, 1);\r\n        return canvas;\r\n    }())\r\n\r\n    function imageLoaded(){\r\n        this.loadedAssets += 1;\r\n        if(this.loadedAssets === this.totalImages){\r\n            if(this.imagesLoadedCb) {\r\n                this.imagesLoadedCb(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    function getAssetsPath(assetData, assetsPath, original_path) {\r\n        var path = '';\r\n        if (assetData.e) {\r\n            path = assetData.p;\r\n        } else if(assetsPath) {\r\n            var imagePath = assetData.p;\r\n            if (imagePath.indexOf('images/') !== -1) {\r\n                imagePath = imagePath.split('/')[1];\r\n            }\r\n            path = assetsPath + imagePath;\r\n        } else {\r\n            path = original_path;\r\n            path += assetData.u ? assetData.u : '';\r\n            path += assetData.p;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function createImageData(assetData) {\r\n        var path = getAssetsPath(assetData, this.assetsPath, this.path);\r\n        var img = createTag('img');\r\n        img.crossOrigin = 'anonymous';\r\n        img.addEventListener('load', this._imageLoaded.bind(this), false);\r\n        img.addEventListener('error', function() {\r\n            ob.img = proxyImage;\r\n            this._imageLoaded();\r\n        }.bind(this), false);\r\n        img.src = path;\r\n        var ob = {\r\n            img: img,\r\n            assetData: assetData\r\n        }\r\n        return ob;\r\n    }\r\n\r\n    function loadAssets(assets, cb){\r\n        this.imagesLoadedCb = cb;\r\n        var i, len = assets.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!assets[i].layers){\r\n                this.totalImages += 1;\r\n                this.images.push(this._createImageData(assets[i]));\r\n            }\r\n        }\r\n    }\r\n\r\n    function setPath(path){\r\n        this.path = path || '';\r\n    }\r\n\r\n    function setAssetsPath(path){\r\n        this.assetsPath = path || '';\r\n    }\r\n\r\n    function getImage(assetData) {\r\n        var i = 0, len = this.images.length;\r\n        while (i < len) {\r\n            if (this.images[i].assetData === assetData) {\r\n                return this.images[i].img;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function destroy() {\r\n        this.imagesLoadedCb = null;\r\n        this.images.length = 0;\r\n    }\r\n\r\n    function loaded() {\r\n        return this.totalImages === this.loadedAssets;\r\n    }\r\n\r\n    return function ImagePreloader(){\r\n        this.loadAssets = loadAssets;\r\n        this.setAssetsPath = setAssetsPath;\r\n        this.setPath = setPath;\r\n        this.loaded = loaded;\r\n        this.destroy = destroy;\r\n        this.getImage = getImage;\r\n        this._createImageData = createImageData;\r\n        this._imageLoaded = imageLoaded;\r\n        this.assetsPath = '';\r\n        this.path = '';\r\n        this.totalImages = 0;\r\n        this.loadedAssets = 0;\r\n        this.imagesLoadedCb = null;\r\n        this.images = [];\r\n    };\r\n}());\r\nvar featureSupport = (function(){\r\n\tvar ob = {\r\n\t\tmaskType: true\r\n\t};\r\n\tif (/MSIE 10/i.test(navigator.userAgent) || /MSIE 9/i.test(navigator.userAgent) || /rv:11.0/i.test(navigator.userAgent) || /Edge\\/\\d./i.test(navigator.userAgent)) {\r\n\t   ob.maskType = false;\r\n\t}\r\n\treturn ob;\r\n}());\r\nvar filtersFactory = (function(){\r\n\tvar ob = {};\r\n\tob.createFilter = createFilter;\r\n\tob.createAlphaToLuminanceFilter = createAlphaToLuminanceFilter;\r\n\r\n\tfunction createFilter(filId){\r\n        \tvar fil = createNS('filter');\r\n        \tfil.setAttribute('id',filId);\r\n                fil.setAttribute('filterUnits','objectBoundingBox');\r\n                fil.setAttribute('x','0%');\r\n                fil.setAttribute('y','0%');\r\n                fil.setAttribute('width','100%');\r\n                fil.setAttribute('height','100%');\r\n                return fil;\r\n\t}\r\n\r\n\tfunction createAlphaToLuminanceFilter(){\r\n                var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type','matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n                feColorMatrix.setAttribute('values','0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1');\r\n                return feColorMatrix;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar assetLoader = (function(){\r\n\r\n\tfunction formatResponse(xhr) {\r\n\t\tif(xhr.response && typeof xhr.response === 'object') {\r\n\t\t\treturn xhr.response;\r\n\t\t} else if(xhr.response && typeof xhr.response === 'string') {\r\n\t\t\treturn JSON.parse(xhr.response);\r\n\t\t} else if(xhr.responseText) {\r\n\t\t\treturn JSON.parse(xhr.responseText);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loadAsset(path, callback, errorCallback) {\r\n\t\tvar response;\r\n\t\tvar xhr = new XMLHttpRequest();\r\n\t\txhr.open('GET', path, true);\r\n\t\t// set responseType after calling open or IE will break.\r\n\t\ttry {\r\n\t\t    // This crashes on Android WebView prior to KitKat\r\n\t\t    xhr.responseType = \"json\";\r\n\t\t} catch (err) {}\r\n\t    xhr.send();\r\n\t    xhr.onreadystatechange = function () {\r\n\t        if (xhr.readyState == 4) {\r\n\t            if(xhr.status == 200){\r\n\t            \tresponse = formatResponse(xhr);\r\n\t            \tcallback(response);\r\n\t            }else{\r\n\t                try{\r\n\t            \t\tresponse = formatResponse(xhr);\r\n\t            \t\tcallback(response);\r\n\t                }catch(err){\r\n\t                \tif(errorCallback) {\r\n\t                \t\terrorCallback(err);\r\n\t                \t}\r\n\t                }\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t}\r\n\treturn {\r\n\t\tload: loadAsset\r\n\t}\r\n}())\r\n\r\nfunction TextAnimatorProperty(textData, renderType, elem){\r\n    this._isFirstFrame = true;\r\n\tthis._hasMaskedPath = false;\r\n\tthis._frameId = -1;\r\n\tthis._textData = textData;\r\n\tthis._renderType = renderType;\r\n    this._elem = elem;\r\n\tthis._animatorsData = createSizedArray(this._textData.a.length);\r\n\tthis._pathData = {};\r\n\tthis._moreOptions = {\r\n\t\talignment: {}\r\n\t};\r\n\tthis.renderedLetters = [];\r\n    this.lettersChangedFlag = false;\r\n    this.initDynamicPropertyContainer(elem);\r\n\r\n}\r\n\r\nTextAnimatorProperty.prototype.searchProperties = function(){\r\n    var i, len = this._textData.a.length, animatorProps;\r\n    var getProp = PropertyFactory.getProp;\r\n    for(i=0;i<len;i+=1){\r\n        animatorProps = this._textData.a[i];\r\n        this._animatorsData[i] = new TextAnimatorDataProperty(this._elem, animatorProps, this);\r\n    }\r\n    if(this._textData.p && 'm' in this._textData.p){\r\n        this._pathData = {\r\n            f: getProp(this._elem,this._textData.p.f,0,0,this),\r\n            l: getProp(this._elem,this._textData.p.l,0,0,this),\r\n            r: this._textData.p.r,\r\n            m: this._elem.maskManager.getMaskProperty(this._textData.p.m)\r\n        };\r\n        this._hasMaskedPath = true;\r\n    } else {\r\n        this._hasMaskedPath = false;\r\n    }\r\n    this._moreOptions.alignment = getProp(this._elem,this._textData.m.a,1,0,this);\r\n};\r\n\r\nTextAnimatorProperty.prototype.getMeasures = function(documentData, lettersChangedFlag){\r\n    this.lettersChangedFlag = lettersChangedFlag;\r\n    if(!this._mdf && !this._isFirstFrame && !lettersChangedFlag && (!this._hasMaskedPath || !this._pathData.m._mdf)) {\r\n        return;\r\n    }\r\n    this._isFirstFrame = false;\r\n    var alignment = this._moreOptions.alignment.v;\r\n    var animators = this._animatorsData;\r\n    var textData = this._textData;\r\n    var matrixHelper = this.mHelper;\r\n    var renderType = this._renderType;\r\n    var renderedLettersCount = this.renderedLetters.length;\r\n    var data = this.data;\r\n    var xPos,yPos;\r\n    var i, len;\r\n    var letters = documentData.l, pathInfo, currentLength, currentPoint, segmentLength, flag, pointInd, segmentInd, prevPoint, points, segments, partialLength, totalLength, perc, tanAngle, mask;\r\n    if(this._hasMaskedPath) {\r\n        mask = this._pathData.m;\r\n        if(!this._pathData.n || this._pathData._mdf){\r\n            var paths = mask.v;\r\n            if(this._pathData.r){\r\n                paths = paths.reverse();\r\n            }\r\n            // TODO: release bezier data cached from previous pathInfo: this._pathData.pi\r\n            pathInfo = {\r\n                tLength: 0,\r\n                segments: []\r\n            };\r\n            len = paths._length - 1;\r\n            var bezierData;\r\n            totalLength = 0;\r\n            for (i = 0; i < len; i += 1) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[i + 1]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[i + 1][0] - paths.v[i + 1][0], paths.i[i + 1][1] - paths.v[i + 1][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            i = len;\r\n            if (mask.v.c) {\r\n                bezierData = bez.buildBezierData(paths.v[i]\r\n                    , paths.v[0]\r\n                    , [paths.o[i][0] - paths.v[i][0], paths.o[i][1] - paths.v[i][1]]\r\n                    , [paths.i[0][0] - paths.v[0][0], paths.i[0][1] - paths.v[0][1]]);\r\n                pathInfo.tLength += bezierData.segmentLength;\r\n                pathInfo.segments.push(bezierData);\r\n                totalLength += bezierData.segmentLength;\r\n            }\r\n            this._pathData.pi = pathInfo;\r\n        }\r\n        pathInfo = this._pathData.pi;\r\n\r\n        currentLength = this._pathData.f.v;\r\n        segmentInd = 0;\r\n        pointInd = 1;\r\n        segmentLength = 0;\r\n        flag = true;\r\n        segments = pathInfo.segments;\r\n        if (currentLength < 0 && mask.v.c) {\r\n            if (pathInfo.tLength < Math.abs(currentLength)) {\r\n                currentLength = -Math.abs(currentLength) % pathInfo.tLength;\r\n            }\r\n            segmentInd = segments.length - 1;\r\n            points = segments[segmentInd].points;\r\n            pointInd = points.length - 1;\r\n            while (currentLength < 0) {\r\n                currentLength += points[pointInd].partialLength;\r\n                pointInd -= 1;\r\n                if (pointInd < 0) {\r\n                    segmentInd -= 1;\r\n                    points = segments[segmentInd].points;\r\n                    pointInd = points.length - 1;\r\n                }\r\n            }\r\n\r\n        }\r\n        points = segments[segmentInd].points;\r\n        prevPoint = points[pointInd - 1];\r\n        currentPoint = points[pointInd];\r\n        partialLength = currentPoint.partialLength;\r\n    }\r\n\r\n\r\n    len = letters.length;\r\n    xPos = 0;\r\n    yPos = 0;\r\n    var yOff = documentData.finalSize * 1.2 * 0.714;\r\n    var firstLine = true;\r\n    var animatorProps, animatorSelector;\r\n    var j, jLen;\r\n    var letterValue;\r\n\r\n    jLen = animators.length;\r\n    var lastLetter;\r\n\r\n    var mult, ind = -1, offf, xPathPos, yPathPos;\r\n    var initPathPos = currentLength,initSegmentInd = segmentInd, initPointInd = pointInd, currentLine = -1;\r\n    var elemOpacity;\r\n    var sc,sw,fc,k;\r\n    var lineLength = 0;\r\n    var letterSw, letterSc, letterFc, letterM = '', letterP = this.defaultPropsArray, letterO;\r\n\r\n    //\r\n    if(documentData.j === 2 || documentData.j === 1) {\r\n        var animatorJustifyOffset = 0;\r\n        var animatorFirstCharOffset = 0;\r\n        var justifyOffsetMult = documentData.j === 2 ? -0.5 : -1;\r\n        var lastIndex = 0;\r\n        var isNewLine = true;\r\n\r\n        for (i = 0; i < len; i += 1) {\r\n            if (letters[i].n) {\r\n                if(animatorJustifyOffset) {\r\n                    animatorJustifyOffset += animatorFirstCharOffset;\r\n                }\r\n                while (lastIndex < i) {\r\n                    letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n                    lastIndex += 1;\r\n                }\r\n                animatorJustifyOffset = 0;\r\n                isNewLine = true;\r\n            } else {\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.t.propType) {\r\n                        if (isNewLine && documentData.j === 2) {\r\n                            animatorFirstCharOffset += animatorProps.t.v * justifyOffsetMult;\r\n                        }\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j], textData.a[j].s.totalChars);\r\n                        if (mult.length) {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult[0] * justifyOffsetMult;\r\n                        } else {\r\n                            animatorJustifyOffset += animatorProps.t.v*mult * justifyOffsetMult;\r\n                        }\r\n                    }\r\n                }\r\n                isNewLine = false;\r\n            }\r\n        }\r\n        if(animatorJustifyOffset) {\r\n            animatorJustifyOffset += animatorFirstCharOffset;\r\n        }\r\n        while(lastIndex < i) {\r\n            letters[lastIndex].animatorJustifyOffset = animatorJustifyOffset;\r\n            lastIndex += 1;\r\n        }\r\n    }\r\n    //\r\n\r\n    for( i = 0; i < len; i += 1) {\r\n\r\n        matrixHelper.reset();\r\n        elemOpacity = 1;\r\n        if(letters[i].n) {\r\n            xPos = 0;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            currentLength = initPathPos ;\r\n            firstLine = false;\r\n            lineLength = 0;\r\n            if(this._hasMaskedPath) {\r\n                segmentInd = initSegmentInd;\r\n                pointInd = initPointInd;\r\n                points = segments[segmentInd].points;\r\n                prevPoint = points[pointInd - 1];\r\n                currentPoint = points[pointInd];\r\n                partialLength = currentPoint.partialLength;\r\n                segmentLength = 0;\r\n            }\r\n            letterO = letterSw = letterFc = letterM = '';\r\n            letterP = this.defaultPropsArray;\r\n        }else{\r\n            if(this._hasMaskedPath) {\r\n                if(currentLine !== letters[i].line){\r\n                    switch(documentData.j){\r\n                        case 1:\r\n                            currentLength += totalLength - documentData.lineWidths[letters[i].line];\r\n                            break;\r\n                        case 2:\r\n                            currentLength += (totalLength - documentData.lineWidths[letters[i].line])/2;\r\n                            break;\r\n                    }\r\n                    currentLine = letters[i].line;\r\n                }\r\n                if (ind !== letters[i].ind) {\r\n                    if (letters[ind]) {\r\n                        currentLength += letters[ind].extra;\r\n                    }\r\n                    currentLength += letters[i].an / 2;\r\n                    ind = letters[i].ind;\r\n                }\r\n                currentLength += alignment[0] * letters[i].an / 200;\r\n                var animatorOffset = 0;\r\n                for (j = 0; j < jLen; j += 1) {\r\n                    animatorProps = animators[j].a;\r\n                    if (animatorProps.p.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.p.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.p.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                    if (animatorProps.a.propType) {\r\n                        animatorSelector = animators[j].s;\r\n                        mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                        if(mult.length){\r\n                            animatorOffset += animatorProps.a.v[0] * mult[0];\r\n                        } else{\r\n                            animatorOffset += animatorProps.a.v[0] * mult;\r\n                        }\r\n\r\n                    }\r\n                }\r\n                flag = true;\r\n                while (flag) {\r\n                    if (segmentLength + partialLength >= currentLength + animatorOffset || !points) {\r\n                        perc = (currentLength + animatorOffset - segmentLength) / currentPoint.partialLength;\r\n                        xPathPos = prevPoint.point[0] + (currentPoint.point[0] - prevPoint.point[0]) * perc;\r\n                        yPathPos = prevPoint.point[1] + (currentPoint.point[1] - prevPoint.point[1]) * perc;\r\n                        matrixHelper.translate(-alignment[0]*letters[i].an/200, -(alignment[1] * yOff / 100));\r\n                        flag = false;\r\n                    } else if (points) {\r\n                        segmentLength += currentPoint.partialLength;\r\n                        pointInd += 1;\r\n                        if (pointInd >= points.length) {\r\n                            pointInd = 0;\r\n                            segmentInd += 1;\r\n                            if (!segments[segmentInd]) {\r\n                                if (mask.v.c) {\r\n                                    pointInd = 0;\r\n                                    segmentInd = 0;\r\n                                    points = segments[segmentInd].points;\r\n                                } else {\r\n                                    segmentLength -= currentPoint.partialLength;\r\n                                    points = null;\r\n                                }\r\n                            } else {\r\n                                points = segments[segmentInd].points;\r\n                            }\r\n                        }\r\n                        if (points) {\r\n                            prevPoint = currentPoint;\r\n                            currentPoint = points[pointInd];\r\n                            partialLength = currentPoint.partialLength;\r\n                        }\r\n                    }\r\n                }\r\n                offf = letters[i].an / 2 - letters[i].add;\r\n                matrixHelper.translate(-offf, 0, 0);\r\n            } else {\r\n                offf = letters[i].an/2 - letters[i].add;\r\n                matrixHelper.translate(-offf,0,0);\r\n\r\n                // Grouping alignment\r\n                matrixHelper.translate(-alignment[0]*letters[i].an/200, -alignment[1]*yOff/100, 0);\r\n            }\r\n\r\n            lineLength += letters[i].l/2;\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.t.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    //This condition is to prevent applying tracking to first character in each line. Might be better to use a boolean \"isNewLine\"\r\n                    if(xPos !== 0 || documentData.j !== 0) {\r\n                        if(this._hasMaskedPath) {\r\n                            if(mult.length) {\r\n                                currentLength += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                currentLength += animatorProps.t.v*mult;\r\n                            }\r\n                        }else{\r\n                            if(mult.length) {\r\n                                xPos += animatorProps.t.v*mult[0];\r\n                            } else {\r\n                                xPos += animatorProps.t.v*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            lineLength += letters[i].l/2;\r\n            if(documentData.strokeWidthAnim) {\r\n                sw = documentData.sw || 0;\r\n            }\r\n            if(documentData.strokeColorAnim) {\r\n                if(documentData.sc){\r\n                    sc = [documentData.sc[0], documentData.sc[1], documentData.sc[2]];\r\n                }else{\r\n                    sc = [0,0,0];\r\n                }\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc) {\r\n                fc = [documentData.fc[0], documentData.fc[1], documentData.fc[2]];\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.a.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n\r\n                    if(mult.length){\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult[0], -animatorProps.a.v[1]*mult[1], animatorProps.a.v[2]*mult[2]);\r\n                    } else {\r\n                        matrixHelper.translate(-animatorProps.a.v[0]*mult, -animatorProps.a.v[1]*mult, animatorProps.a.v[2]*mult);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n                if (animatorProps.s.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(mult.length){\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult[0]),1+((animatorProps.s.v[1]-1)*mult[1]),1);\r\n                    } else {\r\n                        matrixHelper.scale(1+((animatorProps.s.v[0]-1)*mult),1+((animatorProps.s.v[1]-1)*mult),1);\r\n                    }\r\n                }\r\n            }\r\n            for(j=0;j<jLen;j+=1) {\r\n                animatorProps = animators[j].a;\r\n                animatorSelector = animators[j].s;\r\n                mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                if (animatorProps.sk.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult[0], animatorProps.sa.v * mult[1]);\r\n                    } else {\r\n                        matrixHelper.skewFromAxis(-animatorProps.sk.v * mult, animatorProps.sa.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.r.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult[2]);\r\n                    } else {\r\n                        matrixHelper.rotateZ(-animatorProps.r.v * mult);\r\n                    }\r\n                }\r\n                if (animatorProps.ry.propType) {\r\n\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult[1]);\r\n                    }else{\r\n                        matrixHelper.rotateY(animatorProps.ry.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.rx.propType) {\r\n                    if(mult.length) {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult[0]);\r\n                    } else {\r\n                        matrixHelper.rotateX(animatorProps.rx.v*mult);\r\n                    }\r\n                }\r\n                if (animatorProps.o.propType) {\r\n                    if(mult.length) {\r\n                        elemOpacity += ((animatorProps.o.v)*mult[0] - elemOpacity)*mult[0];\r\n                    } else {\r\n                        elemOpacity += ((animatorProps.o.v)*mult - elemOpacity)*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeWidthAnim && animatorProps.sw.propType) {\r\n                    if(mult.length) {\r\n                        sw += animatorProps.sw.v*mult[0];\r\n                    } else {\r\n                        sw += animatorProps.sw.v*mult;\r\n                    }\r\n                }\r\n                if (documentData.strokeColorAnim && animatorProps.sc.propType) {\r\n                    for(k=0;k<3;k+=1){\r\n                        if(mult.length) {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult[0];\r\n                        } else {\r\n                            sc[k] = sc[k] + (animatorProps.sc.v[k] - sc[k])*mult;\r\n                        }\r\n                    }\r\n                }\r\n                if (documentData.fillColorAnim && documentData.fc) {\r\n                    if(animatorProps.fc.propType){\r\n                        for(k=0;k<3;k+=1){\r\n                            if(mult.length) {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult[0];\r\n                            } else {\r\n                                fc[k] = fc[k] + (animatorProps.fc.v[k] - fc[k])*mult;\r\n                            }\r\n                        }\r\n                    }\r\n                    if(animatorProps.fh.propType){\r\n                        if(mult.length) {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult[0]);\r\n                        } else {\r\n                            fc = addHueToRGB(fc,animatorProps.fh.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fs.propType){\r\n                        if(mult.length) {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult[0]);\r\n                        } else {\r\n                            fc = addSaturationToRGB(fc,animatorProps.fs.v*mult);\r\n                        }\r\n                    }\r\n                    if(animatorProps.fb.propType){\r\n                        if(mult.length) {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult[0]);\r\n                        } else {\r\n                            fc = addBrightnessToRGB(fc,animatorProps.fb.v*mult);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            for(j=0;j<jLen;j+=1){\r\n                animatorProps = animators[j].a;\r\n\r\n                if (animatorProps.p.propType) {\r\n                    animatorSelector = animators[j].s;\r\n                    mult = animatorSelector.getMult(letters[i].anIndexes[j],textData.a[j].s.totalChars);\r\n                    if(this._hasMaskedPath) {\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult[0], -animatorProps.p.v[2] * mult[1]);\r\n                        } else {\r\n                            matrixHelper.translate(0, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        }\r\n                    }else{\r\n                        if(mult.length) {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult[0], animatorProps.p.v[1] * mult[1], -animatorProps.p.v[2] * mult[2]);\r\n                        } else {\r\n                            matrixHelper.translate(animatorProps.p.v[0] * mult, animatorProps.p.v[1] * mult, -animatorProps.p.v[2] * mult);\r\n                        \r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if(documentData.strokeWidthAnim){\r\n                letterSw = sw < 0 ? 0 : sw;\r\n            }\r\n            if(documentData.strokeColorAnim){\r\n                letterSc = 'rgb('+Math.round(sc[0]*255)+','+Math.round(sc[1]*255)+','+Math.round(sc[2]*255)+')';\r\n            }\r\n            if(documentData.fillColorAnim && documentData.fc){\r\n                letterFc = 'rgb('+Math.round(fc[0]*255)+','+Math.round(fc[1]*255)+','+Math.round(fc[2]*255)+')';\r\n            }\r\n\r\n            if(this._hasMaskedPath) {\r\n                matrixHelper.translate(0,-documentData.ls);\r\n\r\n                matrixHelper.translate(0, alignment[1]*yOff/100 + yPos,0);\r\n                if (textData.p.p) {\r\n                    tanAngle = (currentPoint.point[1] - prevPoint.point[1]) / (currentPoint.point[0] - prevPoint.point[0]);\r\n                    var rot = Math.atan(tanAngle) * 180 / Math.PI;\r\n                    if (currentPoint.point[0] < prevPoint.point[0]) {\r\n                        rot += 180;\r\n                    }\r\n                    matrixHelper.rotate(-rot * Math.PI / 180);\r\n                }\r\n                matrixHelper.translate(xPathPos, yPathPos, 0);\r\n                currentLength -= alignment[0]*letters[i].an/200;\r\n                if(letters[i+1] && ind !== letters[i+1].ind){\r\n                    currentLength += letters[i].an / 2;\r\n                    currentLength += documentData.tr/1000*documentData.finalSize;\r\n                }\r\n            }else{\r\n\r\n                matrixHelper.translate(xPos,yPos,0);\r\n\r\n                if(documentData.ps){\r\n                    //matrixHelper.translate(documentData.ps[0],documentData.ps[1],0);\r\n                    matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n                }\r\n                switch(documentData.j){\r\n                    case 1:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line]),0,0);\r\n                        break;\r\n                    case 2:\r\n                        matrixHelper.translate(letters[i].animatorJustifyOffset + documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[letters[i].line])/2,0,0);\r\n                        break;\r\n                }\r\n                matrixHelper.translate(0,-documentData.ls);\r\n                matrixHelper.translate(offf,0,0);\r\n                matrixHelper.translate(alignment[0]*letters[i].an/200,alignment[1]*yOff/100,0);\r\n                xPos += letters[i].l + documentData.tr/1000*documentData.finalSize;\r\n            }\r\n            if(renderType === 'html'){\r\n                letterM = matrixHelper.toCSS();\r\n            }else if(renderType === 'svg'){\r\n                letterM = matrixHelper.to2dCSS();\r\n            }else{\r\n                letterP = [matrixHelper.props[0],matrixHelper.props[1],matrixHelper.props[2],matrixHelper.props[3],matrixHelper.props[4],matrixHelper.props[5],matrixHelper.props[6],matrixHelper.props[7],matrixHelper.props[8],matrixHelper.props[9],matrixHelper.props[10],matrixHelper.props[11],matrixHelper.props[12],matrixHelper.props[13],matrixHelper.props[14],matrixHelper.props[15]];\r\n            }\r\n            letterO = elemOpacity;\r\n        }\r\n\r\n        if(renderedLettersCount <= i) {\r\n            letterValue = new LetterProps(letterO,letterSw,letterSc,letterFc,letterM,letterP);\r\n            this.renderedLetters.push(letterValue);\r\n            renderedLettersCount += 1;\r\n            this.lettersChangedFlag = true;\r\n        } else {\r\n            letterValue = this.renderedLetters[i];\r\n            this.lettersChangedFlag = letterValue.update(letterO, letterSw, letterSc, letterFc, letterM, letterP) || this.lettersChangedFlag;\r\n        }\r\n    }\r\n};\r\n\r\nTextAnimatorProperty.prototype.getValue = function(){\r\n\tif(this._elem.globalData.frameId === this._frameId){\r\n        return;\r\n    }\r\n    this._frameId = this._elem.globalData.frameId;\r\n    this.iterateDynamicProperties();\r\n};\r\n\r\nTextAnimatorProperty.prototype.mHelper = new Matrix();\r\nTextAnimatorProperty.prototype.defaultPropsArray = [];\r\nextendPrototype([DynamicPropertyContainer], TextAnimatorProperty);\r\nfunction TextAnimatorDataProperty(elem, animatorProps, container) {\r\n\tvar defaultData = {propType:false};\r\n\tvar getProp = PropertyFactory.getProp;\r\n\tvar textAnimator_animatables = animatorProps.a;\r\n\tthis.a = {\r\n\t\tr: textAnimator_animatables.r ? getProp(elem, textAnimator_animatables.r, 0, degToRads, container) : defaultData,\r\n\t\trx: textAnimator_animatables.rx ? getProp(elem, textAnimator_animatables.rx, 0, degToRads, container) : defaultData,\r\n\t\try: textAnimator_animatables.ry ? getProp(elem, textAnimator_animatables.ry, 0, degToRads, container) : defaultData,\r\n\t\tsk: textAnimator_animatables.sk ? getProp(elem, textAnimator_animatables.sk, 0, degToRads, container) : defaultData,\r\n\t\tsa: textAnimator_animatables.sa ? getProp(elem, textAnimator_animatables.sa, 0, degToRads, container) : defaultData,\r\n\t\ts: textAnimator_animatables.s ? getProp(elem, textAnimator_animatables.s, 1, 0.01, container) : defaultData,\r\n\t\ta: textAnimator_animatables.a ? getProp(elem, textAnimator_animatables.a, 1, 0, container) : defaultData,\r\n\t\to: textAnimator_animatables.o ? getProp(elem, textAnimator_animatables.o, 0, 0.01, container) : defaultData,\r\n\t\tp: textAnimator_animatables.p ? getProp(elem,textAnimator_animatables.p, 1, 0, container) : defaultData,\r\n\t\tsw: textAnimator_animatables.sw ? getProp(elem, textAnimator_animatables.sw, 0, 0, container) : defaultData,\r\n\t\tsc: textAnimator_animatables.sc ? getProp(elem, textAnimator_animatables.sc, 1, 0, container) : defaultData,\r\n\t\tfc: textAnimator_animatables.fc ? getProp(elem, textAnimator_animatables.fc, 1, 0, container) : defaultData,\r\n\t\tfh: textAnimator_animatables.fh ? getProp(elem, textAnimator_animatables.fh, 0, 0, container) : defaultData,\r\n\t\tfs: textAnimator_animatables.fs ? getProp(elem, textAnimator_animatables.fs, 0, 0.01, container) : defaultData,\r\n\t\tfb: textAnimator_animatables.fb ? getProp(elem, textAnimator_animatables.fb, 0, 0.01, container) : defaultData,\r\n\t\tt: textAnimator_animatables.t ? getProp(elem, textAnimator_animatables.t, 0, 0, container) : defaultData\r\n\t};\r\n\r\n\tthis.s = TextSelectorProp.getTextSelectorProp(elem,animatorProps.s, container);\r\n    this.s.t = animatorProps.s.t;\r\n}\r\nfunction LetterProps(o, sw, sc, fc, m, p){\r\n    this.o = o;\r\n    this.sw = sw;\r\n    this.sc = sc;\r\n    this.fc = fc;\r\n    this.m = m;\r\n    this.p = p;\r\n    this._mdf = {\r\n    \to: true,\r\n    \tsw: !!sw,\r\n    \tsc: !!sc,\r\n    \tfc: !!fc,\r\n    \tm: true,\r\n    \tp: true\r\n    };\r\n}\r\n\r\nLetterProps.prototype.update = function(o, sw, sc, fc, m, p) {\r\n\tthis._mdf.o = false;\r\n\tthis._mdf.sw = false;\r\n\tthis._mdf.sc = false;\r\n\tthis._mdf.fc = false;\r\n\tthis._mdf.m = false;\r\n\tthis._mdf.p = false;\r\n\tvar updated = false;\r\n\r\n\tif(this.o !== o) {\r\n\t\tthis.o = o;\r\n\t\tthis._mdf.o = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sw !== sw) {\r\n\t\tthis.sw = sw;\r\n\t\tthis._mdf.sw = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.sc !== sc) {\r\n\t\tthis.sc = sc;\r\n\t\tthis._mdf.sc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.fc !== fc) {\r\n\t\tthis.fc = fc;\r\n\t\tthis._mdf.fc = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(this.m !== m) {\r\n\t\tthis.m = m;\r\n\t\tthis._mdf.m = true;\r\n\t\tupdated = true;\r\n\t}\r\n\tif(p.length && (this.p[0] !== p[0] || this.p[1] !== p[1] || this.p[4] !== p[4] || this.p[5] !== p[5] || this.p[12] !== p[12] || this.p[13] !== p[13])) {\r\n\t\tthis.p = p;\r\n\t\tthis._mdf.p = true;\r\n\t\tupdated = true;\r\n\t}\r\n\treturn updated;\r\n};\r\nfunction TextProperty(elem, data){\r\n\tthis._frameId = initialDefaultFrame;\r\n\tthis.pv = '';\r\n\tthis.v = '';\r\n\tthis.kf = false;\r\n\tthis._isFirstFrame = true;\r\n\tthis._mdf = false;\r\n    this.data = data;\r\n\tthis.elem = elem;\r\n    this.comp = this.elem.comp;\r\n\tthis.keysIndex = 0;\r\n    this.canResize = false;\r\n    this.minimumFontSize = 1;\r\n    this.effectsSequence = [];\r\n\tthis.currentData = {\r\n\t\tascent: 0,\r\n        boxWidth: this.defaultBoxWidth,\r\n        f: '',\r\n        fStyle: '',\r\n        fWeight: '',\r\n        fc: '',\r\n        j: '',\r\n        justifyOffset: '',\r\n        l: [],\r\n        lh: 0,\r\n        lineWidths: [],\r\n        ls: '',\r\n        of: '',\r\n        s: '',\r\n        sc: '',\r\n        sw: 0,\r\n        t: 0,\r\n        tr: 0,\r\n        sz:0,\r\n        ps:null,\r\n        fillColorAnim: false,\r\n        strokeColorAnim: false,\r\n        strokeWidthAnim: false,\r\n        yOffset: 0,\r\n        finalSize:0,\r\n        finalText:[],\r\n        finalLineHeight: 0,\r\n        __complete: false\r\n\r\n\t};\r\n    this.copyData(this.currentData, this.data.d.k[0].s);\r\n\r\n    if(!this.searchProperty()) {\r\n        this.completeTextData(this.currentData);\r\n    }\r\n}\r\n\r\nTextProperty.prototype.defaultBoxWidth = [0,0];\r\n\r\nTextProperty.prototype.copyData = function(obj, data) {\r\n    for(var s in data) {\r\n        if(data.hasOwnProperty(s)) {\r\n            obj[s] = data[s];\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n\r\nTextProperty.prototype.setCurrentData = function(data){\r\n    if(!data.__complete) {\r\n        this.completeTextData(data);\r\n    }\r\n    this.currentData = data;\r\n    this.currentData.boxWidth = this.currentData.boxWidth || this.defaultBoxWidth;\r\n    this._mdf = true;\r\n};\r\n\r\nTextProperty.prototype.searchProperty = function() {\r\n    return this.searchKeyframes();\r\n};\r\n\r\nTextProperty.prototype.searchKeyframes = function() {\r\n    this.kf = this.data.d.k.length > 1;\r\n    if(this.kf) {\r\n        this.addEffect(this.getKeyframeValue.bind(this));\r\n    }\r\n    return this.kf;\r\n}\r\n\r\nTextProperty.prototype.addEffect = function(effectFunction) {\r\n\tthis.effectsSequence.push(effectFunction);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.getValue = function(_finalValue) {\r\n    if((this.elem.globalData.frameId === this.frameId || !this.effectsSequence.length) && !_finalValue) {\r\n        return;\r\n    }\r\n    this.currentData.t = this.data.d.k[this.keysIndex].s.t;\r\n    var currentValue = this.currentData;\r\n    var currentIndex = this.keysIndex;\r\n    if(this.lock) {\r\n        this.setCurrentData(this.currentData);\r\n        return;\r\n    }\r\n    this.lock = true;\r\n    this._mdf = false;\r\n    var multipliedValue;\r\n    var i, len = this.effectsSequence.length;\r\n    var finalValue = _finalValue || this.data.d.k[this.keysIndex].s;\r\n    for(i = 0; i < len; i += 1) {\r\n        //Checking if index changed to prevent creating a new object every time the expression updates.\r\n        if(currentIndex !== this.keysIndex) {\r\n            finalValue = this.effectsSequence[i](finalValue, finalValue.t);\r\n        } else {\r\n            finalValue = this.effectsSequence[i](this.currentData, finalValue.t);\r\n        }\r\n    }\r\n    if(currentValue !== finalValue) {\r\n        this.setCurrentData(finalValue);\r\n    }\r\n    this.pv = this.v = this.currentData;\r\n    this.lock = false;\r\n    this.frameId = this.elem.globalData.frameId;\r\n}\r\n\r\nTextProperty.prototype.getKeyframeValue = function() {\r\n    var textKeys = this.data.d.k, textDocumentData;\r\n    var frameNum = this.elem.comp.renderedFrame;\r\n    var i = 0, len = textKeys.length;\r\n    while(i <= len - 1) {\r\n        textDocumentData = textKeys[i].s;\r\n        if(i === len - 1 || textKeys[i+1].t > frameNum){\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    if(this.keysIndex !== i) {\r\n        this.keysIndex = i;\r\n    }\r\n    return this.data.d.k[this.keysIndex].s;\r\n};\r\n\r\nTextProperty.prototype.buildFinalText = function(text) {\r\n    var combinedCharacters = FontManager.getCombinedCharacterCodes();\r\n    var charactersArray = [];\r\n    var i = 0, len = text.length;\r\n    var charCode;\r\n    while (i < len) {\r\n        charCode = text.charCodeAt(i);\r\n        if (combinedCharacters.indexOf(charCode) !== -1) {\r\n            charactersArray[charactersArray.length - 1] += text.charAt(i);\r\n        } else {\r\n            if (charCode >= 0xD800 && charCode <= 0xDBFF) {\r\n                charCode = text.charCodeAt(i + 1);\r\n                if (charCode >= 0xDC00 && charCode <= 0xDFFF) {\r\n                    charactersArray.push(text.substr(i, 2));\r\n                    ++i;\r\n                } else {\r\n                    charactersArray.push(text.charAt(i));\r\n                }\r\n            } else {\r\n                charactersArray.push(text.charAt(i));\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n    return charactersArray;\r\n}\r\n\r\nTextProperty.prototype.completeTextData = function(documentData) {\r\n    documentData.__complete = true;\r\n    var fontManager = this.elem.globalData.fontManager;\r\n    var data = this.data;\r\n    var letters = [];\r\n    var i, len;\r\n    var newLineFlag, index = 0, val;\r\n    var anchorGrouping = data.m.g;\r\n    var currentSize = 0, currentPos = 0, currentLine = 0, lineWidths = [];\r\n    var lineWidth = 0;\r\n    var maxLineWidth = 0;\r\n    var j, jLen;\r\n    var fontData = fontManager.getFontByName(documentData.f);\r\n    var charData, cLength = 0;\r\n    var styles = fontData.fStyle ? fontData.fStyle.split(' ') : [];\r\n\r\n    var fWeight = 'normal', fStyle = 'normal';\r\n    len = styles.length;\r\n    var styleName;\r\n    for(i=0;i<len;i+=1){\r\n        styleName = styles[i].toLowerCase();\r\n        switch(styleName) {\r\n            case 'italic':\r\n            fStyle = 'italic';\r\n            break;\r\n            case 'bold':\r\n            fWeight = '700';\r\n            break;\r\n            case 'black':\r\n            fWeight = '900';\r\n            break;\r\n            case 'medium':\r\n            fWeight = '500';\r\n            break;\r\n            case 'regular':\r\n            case 'normal':\r\n            fWeight = '400';\r\n            break;\r\n            case 'light':\r\n            case 'thin':\r\n            fWeight = '200';\r\n            break;\r\n        }\r\n    }\r\n    documentData.fWeight = fontData.fWeight || fWeight;\r\n    documentData.fStyle = fStyle;\r\n    documentData.finalSize = documentData.s;\r\n    documentData.finalText = this.buildFinalText(documentData.t);\r\n    len = documentData.finalText.length;\r\n    documentData.finalLineHeight = documentData.lh;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var charCode;\r\n    if(documentData.sz){\r\n        var flag = true;\r\n        var boxWidth = documentData.sz[0];\r\n        var boxHeight = documentData.sz[1];\r\n        var currentHeight, finalText;\r\n        while(flag) {\r\n            finalText = this.buildFinalText(documentData.t);\r\n            currentHeight = 0;\r\n            lineWidth = 0;\r\n            len = finalText.length;\r\n            trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n            var lastSpaceIndex = -1;\r\n            for(i=0;i<len;i+=1){\r\n                charCode = finalText[i].charCodeAt(0);\r\n                newLineFlag = false;\r\n                if(finalText[i] === ' '){\r\n                    lastSpaceIndex = i;\r\n                }else if(charCode === 13 || charCode === 3){\r\n                    lineWidth = 0;\r\n                    newLineFlag = true;\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                }\r\n                if(fontManager.chars){\r\n                    charData = fontManager.getCharData(finalText[i], fontData.fStyle, fontData.fFamily);\r\n                    cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n                }else{\r\n                    //tCanvasHelper.font = documentData.s + 'px '+ fontData.fFamily;\r\n                    cLength = fontManager.measureText(finalText[i], documentData.f, documentData.finalSize);\r\n                }\r\n                if(lineWidth + cLength > boxWidth && finalText[i] !== ' '){\r\n                    if(lastSpaceIndex === -1){\r\n                        len += 1;\r\n                    } else {\r\n                        i = lastSpaceIndex;\r\n                    }\r\n                    currentHeight += documentData.finalLineHeight || documentData.finalSize*1.2;\r\n                    finalText.splice(i, lastSpaceIndex === i ? 1 : 0,\"\\r\");\r\n                    //finalText = finalText.substr(0,i) + \"\\r\" + finalText.substr(i === lastSpaceIndex ? i + 1 : i);\r\n                    lastSpaceIndex = -1;\r\n                    lineWidth = 0;\r\n                }else {\r\n                    lineWidth += cLength;\r\n                    lineWidth += trackingOffset;\r\n                }\r\n            }\r\n            currentHeight += fontData.ascent*documentData.finalSize/100;\r\n            if(this.canResize && documentData.finalSize > this.minimumFontSize && boxHeight < currentHeight) {\r\n                documentData.finalSize -= 1;\r\n                documentData.finalLineHeight = documentData.finalSize * documentData.lh / documentData.s;\r\n            } else {\r\n                documentData.finalText = finalText;\r\n                len = documentData.finalText.length;\r\n                flag = false;\r\n            }\r\n        }\r\n\r\n    }\r\n    lineWidth = - trackingOffset;\r\n    cLength = 0;\r\n    var uncollapsedSpaces = 0;\r\n    var currentChar;\r\n    for (i = 0;i < len ;i += 1) {\r\n        newLineFlag = false;\r\n        currentChar = documentData.finalText[i];\r\n        charCode = currentChar.charCodeAt(0);\r\n        if (currentChar === ' '){\r\n            val = '\\u00A0';\r\n        } else if (charCode === 13 || charCode === 3) {\r\n            uncollapsedSpaces = 0;\r\n            lineWidths.push(lineWidth);\r\n            maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n            lineWidth = - 2 * trackingOffset;\r\n            val = '';\r\n            newLineFlag = true;\r\n            currentLine += 1;\r\n        }else{\r\n            val = documentData.finalText[i];\r\n        }\r\n        if(fontManager.chars){\r\n            charData = fontManager.getCharData(currentChar, fontData.fStyle, fontManager.getFontByName(documentData.f).fFamily);\r\n            cLength = newLineFlag ? 0 : charData.w*documentData.finalSize/100;\r\n        }else{\r\n            //var charWidth = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n            //tCanvasHelper.font = documentData.finalSize + 'px '+ fontManager.getFontByName(documentData.f).fFamily;\r\n            cLength = fontManager.measureText(val, documentData.f, documentData.finalSize);\r\n        }\r\n\r\n        //\r\n        if(currentChar === ' '){\r\n            uncollapsedSpaces += cLength + trackingOffset;\r\n        } else {\r\n            lineWidth += cLength + trackingOffset + uncollapsedSpaces;\r\n            uncollapsedSpaces = 0;\r\n        }\r\n        letters.push({l:cLength,an:cLength,add:currentSize,n:newLineFlag, anIndexes:[], val: val, line: currentLine, animatorJustifyOffset: 0});\r\n        if(anchorGrouping == 2){\r\n            currentSize += cLength;\r\n            if(val === '' || val === '\\u00A0' || i === len - 1){\r\n                if(val === '' || val === '\\u00A0'){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                index += 1;\r\n                currentSize = 0;\r\n            }\r\n        }else if(anchorGrouping == 3){\r\n            currentSize += cLength;\r\n            if(val === '' || i === len - 1){\r\n                if(val === ''){\r\n                    currentSize -= cLength;\r\n                }\r\n                while(currentPos<=i){\r\n                    letters[currentPos].an = currentSize;\r\n                    letters[currentPos].ind = index;\r\n                    letters[currentPos].extra = cLength;\r\n                    currentPos += 1;\r\n                }\r\n                currentSize = 0;\r\n                index += 1;\r\n            }\r\n        }else{\r\n            letters[index].ind = index;\r\n            letters[index].extra = 0;\r\n            index += 1;\r\n        }\r\n    }\r\n    documentData.l = letters;\r\n    maxLineWidth = lineWidth > maxLineWidth ? lineWidth : maxLineWidth;\r\n    lineWidths.push(lineWidth);\r\n    if(documentData.sz){\r\n        documentData.boxWidth = documentData.sz[0];\r\n        documentData.justifyOffset = 0;\r\n    }else{\r\n        documentData.boxWidth = maxLineWidth;\r\n        switch(documentData.j){\r\n            case 1:\r\n                documentData.justifyOffset = - documentData.boxWidth;\r\n                break;\r\n            case 2:\r\n                documentData.justifyOffset = - documentData.boxWidth/2;\r\n                break;\r\n            default:\r\n                documentData.justifyOffset = 0;\r\n        }\r\n    }\r\n    documentData.lineWidths = lineWidths;\r\n\r\n    var animators = data.a, animatorData, letterData;\r\n    jLen = animators.length;\r\n    var based, ind, indexes = [];\r\n    for(j=0;j<jLen;j+=1){\r\n        animatorData = animators[j];\r\n        if(animatorData.a.sc){\r\n            documentData.strokeColorAnim = true;\r\n        }\r\n        if(animatorData.a.sw){\r\n            documentData.strokeWidthAnim = true;\r\n        }\r\n        if(animatorData.a.fc || animatorData.a.fh || animatorData.a.fs || animatorData.a.fb){\r\n            documentData.fillColorAnim = true;\r\n        }\r\n        ind = 0;\r\n        based = animatorData.s.b;\r\n        for(i=0;i<len;i+=1){\r\n            letterData = letters[i];\r\n            letterData.anIndexes[j] = ind;\r\n            if((based == 1 && letterData.val !== '') || (based == 2 && letterData.val !== '' && letterData.val !== '\\u00A0') || (based == 3 && (letterData.n || letterData.val == '\\u00A0' || i == len - 1)) || (based == 4 && (letterData.n || i == len - 1))){\r\n                if(animatorData.s.rn === 1){\r\n                    indexes.push(ind);\r\n                }\r\n                ind += 1;\r\n            }\r\n        }\r\n        data.a[j].s.totalChars = ind;\r\n        var currentInd = -1, newInd;\r\n        if(animatorData.s.rn === 1){\r\n            for(i = 0; i < len; i += 1){\r\n                letterData = letters[i];\r\n                if(currentInd != letterData.anIndexes[j]){\r\n                    currentInd = letterData.anIndexes[j];\r\n                    newInd = indexes.splice(Math.floor(Math.random()*indexes.length),1)[0];\r\n                }\r\n                letterData.anIndexes[j] = newInd;\r\n            }\r\n        }\r\n    }\r\n    documentData.yOffset = documentData.finalLineHeight || documentData.finalSize*1.2;\r\n    documentData.ls = documentData.ls || 0;\r\n    documentData.ascent = fontData.ascent*documentData.finalSize/100;\r\n};\r\n\r\nTextProperty.prototype.updateDocumentData = function(newData, index) {\r\n\tindex = index === undefined ? this.keysIndex : index;\r\n    var dData = this.copyData({}, this.data.d.k[index].s);\r\n    dData = this.copyData(dData, newData);\r\n    this.data.d.k[index].s = dData;\r\n    this.recalculate(index);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.recalculate = function(index) {\r\n    var dData = this.data.d.k[index].s;\r\n    dData.__complete = false;\r\n    this.keysIndex = 0;\r\n    this._isFirstFrame = true;\r\n    this.getValue(dData);\r\n}\r\n\r\nTextProperty.prototype.canResizeFont = function(_canResize) {\r\n    this.canResize = _canResize;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nTextProperty.prototype.setMinimumFontSize = function(_fontValue) {\r\n    this.minimumFontSize = Math.floor(_fontValue) || 1;\r\n    this.recalculate(this.keysIndex);\r\n    this.elem.addDynamicProperty(this);\r\n};\r\n\r\nvar TextSelectorProp = (function(){\r\n    var max = Math.max;\r\n    var min = Math.min;\r\n    var floor = Math.floor;\r\n\r\n    function TextSelectorProp(elem,data){\r\n        this._currentTextLength = -1;\r\n        this.k = false;\r\n        this.data = data;\r\n        this.elem = elem;\r\n        this.comp = elem.comp;\r\n        this.finalS = 0;\r\n        this.finalE = 0;\r\n        this.initDynamicPropertyContainer(elem);\r\n        this.s = PropertyFactory.getProp(elem,data.s || {k:0},0,0,this);\r\n        if('e' in data){\r\n            this.e = PropertyFactory.getProp(elem,data.e,0,0,this);\r\n        }else{\r\n            this.e = {v:100};\r\n        }\r\n        this.o = PropertyFactory.getProp(elem,data.o || {k:0},0,0,this);\r\n        this.xe = PropertyFactory.getProp(elem,data.xe || {k:0},0,0,this);\r\n        this.ne = PropertyFactory.getProp(elem,data.ne || {k:0},0,0,this);\r\n        this.a = PropertyFactory.getProp(elem,data.a,0,0.01,this);\r\n        if(!this.dynamicProperties.length){\r\n            this.getValue();\r\n        }\r\n    }\r\n\r\n    TextSelectorProp.prototype = {\r\n        getMult: function(ind) {\r\n            if(this._currentTextLength !== this.elem.textProperty.currentData.l.length) {\r\n                this.getValue();\r\n            }\r\n            //var easer = bez.getEasingCurve(this.ne.v/100,0,1-this.xe.v/100,1);\r\n            var x1 = 0;\r\n            var y1 = 0;\r\n            var x2 = 1;\r\n            var y2 = 1;\r\n            if(this.ne.v > 0) {\r\n                x1 = this.ne.v / 100.0;\r\n            }\r\n            else {\r\n                y1 = -this.ne.v / 100.0;\r\n            }\r\n            if(this.xe.v > 0) {\r\n                x2 = 1.0 - this.xe.v / 100.0;\r\n            }\r\n            else {\r\n                y2 = 1.0 + this.xe.v / 100.0;\r\n            }\r\n            var easer = BezierFactory.getBezierEasing(x1, y1, x2, y2).get;\r\n\r\n            var mult = 0;\r\n            var s = this.finalS;\r\n            var e = this.finalE;\r\n            var type = this.data.sh;\r\n            if (type === 2){\r\n                if (e === s) {\r\n                    mult = ind >= e ? 1 : 0;\r\n                } else {\r\n                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n                }\r\n                mult = easer(mult);\r\n            } else if(type === 3) {\r\n                if (e === s) {\r\n                    mult = ind >= e ? 0 : 1;\r\n                }else{\r\n                    mult = 1 - max(0, min(0.5 / (e - s) + (ind - s) / (e - s),1));\r\n                }\r\n\r\n                mult = easer(mult);\r\n            } else if (type === 4) {\r\n                if (e === s) {\r\n                    mult = 0;\r\n                } else {\r\n                    mult = max(0, min(0.5 / (e - s) + (ind - s) / (e - s), 1));\r\n                    if (mult < 0.5) {\r\n                        mult *= 2;\r\n                    } else {\r\n                        mult = 1 - 2 * (mult - 0.5);\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            } else if (type === 5) {\r\n                if (e === s){\r\n                    mult = 0;\r\n                } else {\r\n                    var tot = e - s;\r\n                    /*ind += 0.5;\r\n                    mult = -4/(tot*tot)*(ind*ind)+(4/tot)*ind;*/\r\n                    ind = min(max(0, ind + 0.5 - s), e - s);\r\n                    var x = -tot/2+ind;\r\n                    var a = tot/2;\r\n                    mult = Math.sqrt(1 - (x * x) / (a * a));\r\n                }\r\n                mult = easer(mult);\r\n            } else if (type === 6) {\r\n                if (e === s){\r\n                    mult = 0;\r\n                } else {\r\n                    ind = min(max(0, ind + 0.5 - s), e - s);\r\n                    mult = (1 + (Math.cos((Math.PI + Math.PI * 2 * (ind) / (e - s))))) / 2;\r\n                }\r\n                mult = easer(mult);\r\n            } else {\r\n                if (ind >= floor(s)) {\r\n                    if (ind - s < 0) {\r\n                        mult = max(0, min(min(e, 1) - (s - ind), 1));\r\n                    } else {\r\n                        mult = max(0, min(e - ind, 1));\r\n                    }\r\n                }\r\n                mult = easer(mult);\r\n            }\r\n            return mult*this.a.v;\r\n        },\r\n        getValue: function(newCharsFlag) {\r\n            this.iterateDynamicProperties();\r\n            this._mdf = newCharsFlag || this._mdf;\r\n            this._currentTextLength = this.elem.textProperty.currentData.l.length || 0;\r\n            if(newCharsFlag && this.data.r === 2) {\r\n                this.e.v = this._currentTextLength;\r\n            }\r\n            var divisor = this.data.r === 2 ? 1 : 100 / this.data.totalChars;\r\n            var o = this.o.v/divisor;\r\n            var s = this.s.v/divisor + o;\r\n            var e = (this.e.v/divisor) + o;\r\n            if(s>e){\r\n                var _s = s;\r\n                s = e;\r\n                e = _s;\r\n            }\r\n            this.finalS = s;\r\n            this.finalE = e;\r\n        }\r\n    }\r\n    extendPrototype([DynamicPropertyContainer], TextSelectorProp);\r\n\r\n    function getTextSelectorProp(elem, data,arr) {\r\n        return new TextSelectorProp(elem, data, arr);\r\n    }\r\n\r\n    return {\r\n        getTextSelectorProp: getTextSelectorProp\r\n    };\r\n}());\r\n\r\n    \r\nvar pool_factory = (function() {\r\n\treturn function(initialLength, _create, _release, _clone) {\r\n\r\n\t\tvar _length = 0;\r\n\t\tvar _maxLength = initialLength;\r\n\t\tvar pool = createSizedArray(_maxLength);\r\n\r\n\t\tvar ob = {\r\n\t\t\tnewElement: newElement,\r\n\t\t\trelease: release\r\n\t\t};\r\n\r\n\t\tfunction newElement(){\r\n\t\t\tvar element;\r\n\t\t\tif(_length){\r\n\t\t\t\t_length -= 1;\r\n\t\t\t\telement = pool[_length];\r\n\t\t\t} else {\r\n\t\t\t\telement = _create();\r\n\t\t\t}\r\n\t\t\treturn element;\r\n\t\t}\r\n\r\n\t\tfunction release(element) {\r\n\t\t\tif(_length === _maxLength) {\r\n\t\t\t\tpool = pooling.double(pool);\r\n\t\t\t\t_maxLength = _maxLength*2;\r\n\t\t\t}\r\n\t\t\tif (_release) {\r\n\t\t\t\t_release(element);\r\n\t\t\t}\r\n\t\t\tpool[_length] = element;\r\n\t\t\t_length += 1;\r\n\t\t}\r\n\r\n\t\tfunction clone() {\r\n\t\t\tvar clonedElement = newElement();\r\n\t\t\treturn _clone(clonedElement);\r\n\t\t}\r\n\r\n\t\treturn ob;\r\n\t};\r\n}());\r\n\r\nvar pooling = (function(){\r\n\r\n\tfunction double(arr){\r\n\t\treturn arr.concat(createSizedArray(arr.length));\r\n\t}\r\n\r\n\treturn {\r\n\t\tdouble: double\r\n\t};\r\n}());\r\nvar point_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn createTypedArray('float32', 2);\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nvar shape_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn new ShapePath();\r\n\t}\r\n\r\n\tfunction release(shapePath) {\r\n\t\tvar len = shapePath._length, i;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tpoint_pool.release(shapePath.v[i]);\r\n\t\t\tpoint_pool.release(shapePath.i[i]);\r\n\t\t\tpoint_pool.release(shapePath.o[i]);\r\n\t\t\tshapePath.v[i] = null;\r\n\t\t\tshapePath.i[i] = null;\r\n\t\t\tshapePath.o[i] = null;\r\n\t\t}\r\n\t\tshapePath._length = 0;\r\n\t\tshapePath.c = false;\r\n\t}\r\n\r\n\tfunction clone(shape) {\r\n\t\tvar cloned = factory.newElement();\r\n\t\tvar i, len = shape._length === undefined ? shape.v.length : shape._length;\r\n\t\tcloned.setLength(len);\r\n\t\tcloned.c = shape.c;\r\n\t\tvar pt;\r\n\t\t\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tcloned.setTripleAt(shape.v[i][0],shape.v[i][1],shape.o[i][0],shape.o[i][1],shape.i[i][0],shape.i[i][1], i);\r\n\t\t}\r\n\t\treturn cloned;\r\n\t}\r\n\r\n\tvar factory = pool_factory(4, create, release);\r\n\tfactory.clone = clone;\r\n\r\n\treturn factory;\r\n}());\r\nvar shapeCollection_pool = (function(){\r\n\tvar ob = {\r\n\t\tnewShapeCollection: newShapeCollection,\r\n\t\trelease: release\r\n\t};\r\n\r\n\tvar _length = 0;\r\n\tvar _maxLength = 4;\r\n\tvar pool = createSizedArray(_maxLength);\r\n\r\n\tfunction newShapeCollection(){\r\n\t\tvar shapeCollection;\r\n\t\tif(_length){\r\n\t\t\t_length -= 1;\r\n\t\t\tshapeCollection = pool[_length];\r\n\t\t} else {\r\n\t\t\tshapeCollection = new ShapeCollection();\r\n\t\t}\r\n\t\treturn shapeCollection;\r\n\t}\r\n\r\n\tfunction release(shapeCollection) {\r\n\t\tvar i, len = shapeCollection._length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tshape_pool.release(shapeCollection.shapes[i]);\r\n\t\t}\r\n\t\tshapeCollection._length = 0;\r\n\r\n\t\tif(_length === _maxLength) {\r\n\t\t\tpool = pooling.double(pool);\r\n\t\t\t_maxLength = _maxLength*2;\r\n\t\t}\r\n\t\tpool[_length] = shapeCollection;\r\n\t\t_length += 1;\r\n\t}\r\n\r\n\treturn ob;\r\n}());\r\nvar segments_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n\t\t\tlengths: [],\r\n\t\t\ttotalLength: 0\r\n\t\t};\r\n\t}\r\n\r\n\tfunction release(element) {\r\n\t\tvar i, len = element.lengths.length;\r\n\t\tfor(i=0;i<len;i+=1) {\r\n\t\t\tbezier_length_pool.release(element.lengths[i]);\r\n\t\t}\r\n\t\telement.lengths.length = 0;\r\n\t}\r\n\r\n\treturn pool_factory(8, create, release);\r\n}());\r\nvar bezier_length_pool = (function(){\r\n\r\n\tfunction create() {\r\n\t\treturn {\r\n            addedLength: 0,\r\n            percents: createTypedArray('float32', defaultCurveSegments),\r\n            lengths: createTypedArray('float32', defaultCurveSegments),\r\n        };\r\n\t}\r\n\treturn pool_factory(8, create);\r\n}());\r\nfunction BaseRenderer(){}\r\nBaseRenderer.prototype.checkLayers = function(num){\r\n    var i, len = this.layers.length, data;\r\n    this.completeLayers = true;\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if (!this.elements[i]) {\r\n            data = this.layers[i];\r\n            if(data.ip - data.st <= (num - this.layers[i].st) && data.op - data.st > (num - this.layers[i].st))\r\n            {\r\n                this.buildItem(i);\r\n            }\r\n        }\r\n        this.completeLayers = this.elements[i] ? this.completeLayers:false;\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.createItem = function(layer){\r\n    switch(layer.ty){\r\n        case 2:\r\n            return this.createImage(layer);\r\n        case 0:\r\n            return this.createComp(layer);\r\n        case 1:\r\n            return this.createSolid(layer);\r\n        case 3:\r\n            return this.createNull(layer);\r\n        case 4:\r\n            return this.createShape(layer);\r\n        case 5:\r\n            return this.createText(layer);\r\n        case 13:\r\n            return this.createCamera(layer);\r\n    }\r\n    return this.createNull(layer);\r\n};\r\n\r\nBaseRenderer.prototype.createCamera = function(){\r\n    throw new Error('You\\'re using a 3d camera. Try the html renderer.');\r\n};\r\n\r\nBaseRenderer.prototype.buildAllItems = function(){\r\n    var i, len = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.buildItem(i);\r\n    }\r\n    this.checkPendingElements();\r\n};\r\n\r\nBaseRenderer.prototype.includeLayers = function(newLayers){\r\n    this.completeLayers = false;\r\n    var i, len = newLayers.length;\r\n    var j, jLen = this.layers.length;\r\n    for(i=0;i<len;i+=1){\r\n        j = 0;\r\n        while(j<jLen){\r\n            if(this.layers[j].id == newLayers[i].id){\r\n                this.layers[j] = newLayers[i];\r\n                break;\r\n            }\r\n            j += 1;\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setProjectInterface = function(pInterface){\r\n    this.globalData.projectInterface = pInterface;\r\n};\r\n\r\nBaseRenderer.prototype.initItems = function(){\r\n    if(!this.globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n};\r\nBaseRenderer.prototype.buildElementParenting = function(element, parentName, hierarchy) {\r\n    var elements = this.elements;\r\n    var layers = this.layers;\r\n    var i=0, len = layers.length;\r\n    while (i < len) {\r\n        if (layers[i].ind == parentName) {\r\n            if (!elements[i] || elements[i] === true) {\r\n                this.buildItem(i);\r\n                this.addPendingElement(element);\r\n            } else {\r\n                hierarchy.push(elements[i]);\r\n                elements[i].setAsParent();\r\n                if(layers[i].parent !== undefined) {\r\n                    this.buildElementParenting(element, layers[i].parent, hierarchy);\r\n                } else {\r\n                    element.setHierarchy(hierarchy);\r\n                }\r\n            }\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.addPendingElement = function(element){\r\n    this.pendingElements.push(element);\r\n};\r\n\r\nBaseRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i]);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nBaseRenderer.prototype.setupGlobalData = function(animData, fontsContainer) {\r\n    this.globalData.fontManager = new FontManager();\r\n    this.globalData.fontManager.addChars(animData.chars);\r\n    this.globalData.fontManager.addFonts(animData.fonts, fontsContainer);\r\n    this.globalData.getAssetData = this.animationItem.getAssetData.bind(this.animationItem);\r\n    this.globalData.getAssetsPath = this.animationItem.getAssetsPath.bind(this.animationItem);\r\n    this.globalData.imageLoader = this.animationItem.imagePreloader;\r\n    this.globalData.frameId = 0;\r\n    this.globalData.frameRate = animData.fr;\r\n    this.globalData.nm = animData.nm;\r\n    this.globalData.compSize = {\r\n        w: animData.w,\r\n        h: animData.h\r\n    }\r\n}\r\nfunction SVGRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.svgElement = createNS('svg');\r\n    var ariaLabel = '';\r\n    if (config && config.title) {\r\n        var titleElement = createNS('title');\r\n        var titleId = createElementID();\r\n        titleElement.setAttribute('id', titleId);\r\n        titleElement.textContent = config.title;\r\n        this.svgElement.appendChild(titleElement);\r\n        ariaLabel += titleId;\r\n    }\r\n    if (config && config.description) {\r\n        var descElement = createNS('desc');\r\n        var descId = createElementID();\r\n        descElement.setAttribute('id', descId);\r\n        descElement.textContent = config.description;\r\n        this.svgElement.appendChild(descElement);\r\n        ariaLabel += ' ' + descId;\r\n    }\r\n    if (ariaLabel) {\r\n        this.svgElement.setAttribute('aria-labelledby', ariaLabel)\r\n    }\r\n    var defs = createNS( 'defs');\r\n    this.svgElement.appendChild(defs);\r\n    var maskElement = createNS('g');\r\n    this.svgElement.appendChild(maskElement);\r\n    this.layerElement = maskElement;\r\n    this.renderConfig = {\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true,\r\n        viewBoxOnly: (config && config.viewBoxOnly) || false,\r\n        viewBoxSize: (config && config.viewBoxSize) || false,\r\n        className: (config && config.className) || '',\r\n        id: (config && config.id) || '',\r\n        focusable: config && config.focusable\r\n    };\r\n\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        defs: defs,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.destroyed = false;\r\n    this.rendererType = 'svg';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],SVGRenderer);\r\n\r\nSVGRenderer.prototype.createNull = function (data) {\r\n    return new NullElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createShape = function (data) {\r\n    return new SVGShapeElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createText = function (data) {\r\n    return new SVGTextElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createImage = function (data) {\r\n    return new IImageElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.createComp = function (data) {\r\n    return new SVGCompElement(data,this.globalData,this);\r\n\r\n};\r\n\r\nSVGRenderer.prototype.createSolid = function (data) {\r\n    return new ISolidElement(data,this.globalData,this);\r\n};\r\n\r\nSVGRenderer.prototype.configAnimation = function(animData){\r\n    this.svgElement.setAttribute('xmlns','http://www.w3.org/2000/svg');\r\n    if(this.renderConfig.viewBoxSize) {\r\n        this.svgElement.setAttribute('viewBox',this.renderConfig.viewBoxSize);\r\n    } else {\r\n        this.svgElement.setAttribute('viewBox','0 0 '+animData.w+' '+animData.h);\r\n    }\r\n\r\n    if(!this.renderConfig.viewBoxOnly) {\r\n        this.svgElement.setAttribute('width',animData.w);\r\n        this.svgElement.setAttribute('height',animData.h);\r\n        this.svgElement.style.width = '100%';\r\n        this.svgElement.style.height = '100%';\r\n        this.svgElement.style.transform = 'translate3d(0,0,0)';\r\n    }\r\n    if (this.renderConfig.className) {\r\n        this.svgElement.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    if (this.renderConfig.id) {\r\n        this.svgElement.setAttribute('id', this.renderConfig.id);\r\n    }\r\n    if (this.renderConfig.focusable !== undefined) {\r\n        this.svgElement.setAttribute('focusable', this.renderConfig.focusable);\r\n    }\r\n    this.svgElement.setAttribute('preserveAspectRatio',this.renderConfig.preserveAspectRatio);\r\n    //this.layerElement.style.transform = 'translate3d(0,0,0)';\r\n    //this.layerElement.style.transformOrigin = this.layerElement.style.mozTransformOrigin = this.layerElement.style.webkitTransformOrigin = this.layerElement.style['-webkit-transform'] = \"0px 0px 0px\";\r\n    this.animationItem.wrapper.appendChild(this.svgElement);\r\n    //Mask animation\r\n    var defs = this.globalData.defs;\r\n\r\n    this.setupGlobalData(animData, defs);\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.data = animData;\r\n\r\n    var maskElement = createNS( 'clipPath');\r\n    var rect = createNS('rect');\r\n    rect.setAttribute('width',animData.w);\r\n    rect.setAttribute('height',animData.h);\r\n    rect.setAttribute('x',0);\r\n    rect.setAttribute('y',0);\r\n    var maskId = createElementID();\r\n    maskElement.setAttribute('id', maskId);\r\n    maskElement.appendChild(rect);\r\n    this.layerElement.setAttribute(\"clip-path\", \"url(\" + locationHref + \"#\"+maskId+\")\");\r\n\r\n    defs.appendChild(maskElement);\r\n    this.layers = animData.layers;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n};\r\n\r\n\r\nSVGRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.layerElement = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nSVGRenderer.prototype.updateContainerSize = function () {\r\n};\r\n\r\nSVGRenderer.prototype.buildItem  = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    elements[pos] = true;\r\n    var element = this.createItem(this.layers[pos]);\r\n\r\n    elements[pos] = element;\r\n    if(expressionsPlugin){\r\n        if(this.layers[pos].ty === 0){\r\n            this.globalData.projectInterface.registerComposition(element);\r\n        }\r\n        element.initExpressions();\r\n    }\r\n    this.appendElementInPos(element,pos);\r\n    if(this.layers[pos].tt){\r\n        if(!this.elements[pos - 1] || this.elements[pos - 1] === true){\r\n            this.buildItem(pos - 1);\r\n            this.addPendingElement(element);\r\n        } else {\r\n            element.setMatte(elements[pos - 1].layerId);\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n        if(element.data.tt){\r\n            var i = 0, len = this.elements.length;\r\n            while(i<len){\r\n                if(this.elements[i] === element){\r\n                    element.setMatte(this.elements[i - 1].layerId);\r\n                    break;\r\n                }\r\n                i += 1;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.renderFrame = function(num){\r\n    if(this.renderedFrame === num || this.destroyed){\r\n        return;\r\n    }\r\n    if(num === null){\r\n        num = this.renderedFrame;\r\n    }else{\r\n        this.renderedFrame = num;\r\n    }\r\n    // console.log('-------');\r\n    // console.log('FRAME ',num);\r\n    this.globalData.frameNum = num;\r\n    this.globalData.frameId += 1;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n    this.globalData._mdf = false;\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n    for (i = len - 1; i >= 0; i--) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        for (i = 0; i < len; i += 1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newElement = element.getBaseElement();\r\n    if(!newElement){\r\n        return;\r\n    }\r\n    var i = 0;\r\n    var nextElement;\r\n    while(i<pos){\r\n        if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement()){\r\n            nextElement = this.elements[i].getBaseElement();\r\n        }\r\n        i += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(newElement, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(newElement);\r\n    }\r\n};\r\n\r\nSVGRenderer.prototype.hide = function(){\r\n    this.layerElement.style.display = 'none';\r\n};\r\n\r\nSVGRenderer.prototype.show = function(){\r\n    this.layerElement.style.display = 'block';\r\n};\r\n\r\nfunction CanvasRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.renderConfig = {\r\n        clearCanvas: (config && config.clearCanvas !== undefined) ? config.clearCanvas : true,\r\n        context: (config && config.context) || null,\r\n        progressiveLoad: (config && config.progressiveLoad) || false,\r\n        preserveAspectRatio: (config && config.preserveAspectRatio) || 'xMidYMid meet',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        className: (config && config.className) || '',\r\n        id: (config && config.id) || '',\r\n    };\r\n    this.renderConfig.dpr = (config && config.dpr) || 1;\r\n    if (this.animationItem.wrapper) {\r\n        this.renderConfig.dpr = (config && config.dpr) || window.devicePixelRatio || 1;\r\n    }\r\n    this.renderedFrame = -1;\r\n    this.globalData = {\r\n        frameNum: -1,\r\n        _mdf: false,\r\n        renderConfig: this.renderConfig,\r\n        currentGlobalAlpha: -1\r\n    };\r\n    this.contextData = new CVContextData();\r\n    this.elements = [];\r\n    this.pendingElements = [];\r\n    this.transformMat = new Matrix();\r\n    this.completeLayers = false;\r\n    this.rendererType = 'canvas';\r\n}\r\nextendPrototype([BaseRenderer],CanvasRenderer);\r\n\r\nCanvasRenderer.prototype.createShape = function (data) {\r\n    return new CVShapeElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createText = function (data) {\r\n    return new CVTextElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createImage = function (data) {\r\n    return new CVImageElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createComp = function (data) {\r\n    return new CVCompElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createSolid = function (data) {\r\n    return new CVSolidElement(data, this.globalData, this);\r\n};\r\n\r\nCanvasRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nCanvasRenderer.prototype.ctxTransform = function(props){\r\n    if(props[0] === 1 && props[1] === 0 && props[4] === 0 && props[5] === 1 && props[12] === 0 && props[13] === 0){\r\n        return;\r\n    }\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.transform(props[0],props[1],props[4],props[5],props[12],props[13]);\r\n        return;\r\n    }\r\n    this.transformMat.cloneFromProps(props);\r\n    var cProps = this.contextData.cTr.props;\r\n    this.transformMat.transform(cProps[0],cProps[1],cProps[2],cProps[3],cProps[4],cProps[5],cProps[6],cProps[7],cProps[8],cProps[9],cProps[10],cProps[11],cProps[12],cProps[13],cProps[14],cProps[15]);\r\n    //this.contextData.cTr.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n    this.contextData.cTr.cloneFromProps(this.transformMat.props);\r\n    var trProps = this.contextData.cTr.props;\r\n    this.canvasContext.setTransform(trProps[0],trProps[1],trProps[4],trProps[5],trProps[12],trProps[13]);\r\n};\r\n\r\nCanvasRenderer.prototype.ctxOpacity = function(op){\r\n    /*if(op === 1){\r\n        return;\r\n    }*/\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.globalAlpha *= op < 0 ? 0 : op;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n        return;\r\n    }\r\n    this.contextData.cO *= op < 0 ? 0 : op;\r\n    if(this.globalData.currentGlobalAlpha !== this.contextData.cO) {\r\n        this.canvasContext.globalAlpha = this.contextData.cO;\r\n        this.globalData.currentGlobalAlpha = this.contextData.cO;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.reset = function(){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    this.contextData.reset();\r\n};\r\n\r\nCanvasRenderer.prototype.save = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.save();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.save();\r\n    }\r\n    var props = this.contextData.cTr.props;\r\n    if(this.contextData._length <= this.contextData.cArrPos) {\r\n        this.contextData.duplicate();\r\n    }\r\n    var i, arr = this.contextData.saved[this.contextData.cArrPos];\r\n    for (i = 0; i < 16; i += 1) {\r\n        arr[i] = props[i];\r\n    }\r\n    this.contextData.savedOp[this.contextData.cArrPos] = this.contextData.cO;\r\n    this.contextData.cArrPos += 1;\r\n};\r\n\r\nCanvasRenderer.prototype.restore = function(actionFlag){\r\n    if(!this.renderConfig.clearCanvas){\r\n        this.canvasContext.restore();\r\n        return;\r\n    }\r\n    if(actionFlag){\r\n        this.canvasContext.restore();\r\n        this.globalData.blendMode = 'source-over';\r\n    }\r\n    this.contextData.cArrPos -= 1;\r\n    var popped = this.contextData.saved[this.contextData.cArrPos];\r\n    var i,arr = this.contextData.cTr.props;\r\n    for(i=0;i<16;i+=1){\r\n        arr[i] = popped[i];\r\n    }\r\n    this.canvasContext.setTransform(popped[0],popped[1],popped[4],popped[5],popped[12],popped[13]);\r\n    popped = this.contextData.savedOp[this.contextData.cArrPos];\r\n    this.contextData.cO = popped;\r\n    if(this.globalData.currentGlobalAlpha !== popped) {\r\n        this.canvasContext.globalAlpha = popped;\r\n        this.globalData.currentGlobalAlpha = popped;\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.configAnimation = function(animData){\r\n    if(this.animationItem.wrapper){\r\n        this.animationItem.container = createTag('canvas');\r\n        this.animationItem.container.style.width = '100%';\r\n        this.animationItem.container.style.height = '100%';\r\n        //this.animationItem.container.style.transform = 'translate3d(0,0,0)';\r\n        //this.animationItem.container.style.webkitTransform = 'translate3d(0,0,0)';\r\n        this.animationItem.container.style.transformOrigin = this.animationItem.container.style.mozTransformOrigin = this.animationItem.container.style.webkitTransformOrigin = this.animationItem.container.style['-webkit-transform'] = \"0px 0px 0px\";\r\n        this.animationItem.wrapper.appendChild(this.animationItem.container);\r\n        this.canvasContext = this.animationItem.container.getContext('2d');\r\n        if(this.renderConfig.className) {\r\n            this.animationItem.container.setAttribute('class', this.renderConfig.className);\r\n        }\r\n        if(this.renderConfig.id) {\r\n            this.animationItem.container.setAttribute('id', this.renderConfig.id);\r\n        }\r\n    }else{\r\n        this.canvasContext = this.renderConfig.context;\r\n    }\r\n    this.data = animData;\r\n    this.layers = animData.layers;\r\n    this.transformCanvas = {\r\n        w: animData.w,\r\n        h:animData.h,\r\n        sx:0,\r\n        sy:0,\r\n        tx:0,\r\n        ty:0\r\n    };\r\n    this.setupGlobalData(animData, document.body);\r\n    this.globalData.canvasContext = this.canvasContext;\r\n    this.globalData.renderer = this;\r\n    this.globalData.isDashed = false;\r\n    this.globalData.progressiveLoad = this.renderConfig.progressiveLoad;\r\n    this.globalData.transformCanvas = this.transformCanvas;\r\n    this.elements = createSizedArray(animData.layers.length);\r\n\r\n    this.updateContainerSize();\r\n};\r\n\r\nCanvasRenderer.prototype.updateContainerSize = function () {\r\n    this.reset();\r\n    var elementWidth,elementHeight;\r\n    if(this.animationItem.wrapper && this.animationItem.container){\r\n        elementWidth = this.animationItem.wrapper.offsetWidth;\r\n        elementHeight = this.animationItem.wrapper.offsetHeight;\r\n        this.animationItem.container.setAttribute('width',elementWidth * this.renderConfig.dpr );\r\n        this.animationItem.container.setAttribute('height',elementHeight * this.renderConfig.dpr);\r\n    }else{\r\n        elementWidth = this.canvasContext.canvas.width * this.renderConfig.dpr;\r\n        elementHeight = this.canvasContext.canvas.height * this.renderConfig.dpr;\r\n    }\r\n    var elementRel,animationRel;\r\n    if(this.renderConfig.preserveAspectRatio.indexOf('meet') !== -1 || this.renderConfig.preserveAspectRatio.indexOf('slice') !== -1){\r\n        var par = this.renderConfig.preserveAspectRatio.split(' ');\r\n        var fillType = par[1] || 'meet';\r\n        var pos = par[0] || 'xMidYMid';\r\n        var xPos = pos.substr(0,4);\r\n        var yPos = pos.substr(4);\r\n        elementRel = elementWidth/elementHeight;\r\n        animationRel = this.transformCanvas.w/this.transformCanvas.h;\r\n        if(animationRel>elementRel && fillType === 'meet' || animationRel<elementRel && fillType === 'slice'){\r\n            this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        }else{\r\n            this.transformCanvas.sx = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n            this.transformCanvas.sy = elementHeight/(this.transformCanvas.h / this.renderConfig.dpr);\r\n        }\r\n\r\n        if(xPos === 'xMid' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))/2*this.renderConfig.dpr;\r\n        } else if(xPos === 'xMax' && ((animationRel<elementRel && fillType==='meet') || (animationRel>elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.tx = (elementWidth-this.transformCanvas.w*(elementHeight/this.transformCanvas.h))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.tx = 0;\r\n        }\r\n        if(yPos === 'YMid' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w))/2)*this.renderConfig.dpr;\r\n        } else if(yPos === 'YMax' && ((animationRel>elementRel && fillType==='meet') || (animationRel<elementRel && fillType === 'slice'))){\r\n            this.transformCanvas.ty = ((elementHeight-this.transformCanvas.h*(elementWidth/this.transformCanvas.w)))*this.renderConfig.dpr;\r\n        } else {\r\n            this.transformCanvas.ty = 0;\r\n        }\r\n\r\n    }else if(this.renderConfig.preserveAspectRatio == 'none'){\r\n        this.transformCanvas.sx = elementWidth/(this.transformCanvas.w/this.renderConfig.dpr);\r\n        this.transformCanvas.sy = elementHeight/(this.transformCanvas.h/this.renderConfig.dpr);\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }else{\r\n        this.transformCanvas.sx = this.renderConfig.dpr;\r\n        this.transformCanvas.sy = this.renderConfig.dpr;\r\n        this.transformCanvas.tx = 0;\r\n        this.transformCanvas.ty = 0;\r\n    }\r\n    this.transformCanvas.props = [this.transformCanvas.sx,0,0,0,0,this.transformCanvas.sy,0,0,0,0,1,0,this.transformCanvas.tx,this.transformCanvas.ty,0,1];\r\n    /*var i, len = this.elements.length;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.elements[i] && this.elements[i].data.ty === 0){\r\n            this.elements[i].resize(this.globalData.transformCanvas);\r\n        }\r\n    }*/\r\n    this.ctxTransform(this.transformCanvas.props);\r\n    this.canvasContext.beginPath();\r\n    this.canvasContext.rect(0,0,this.transformCanvas.w,this.transformCanvas.h);\r\n    this.canvasContext.closePath();\r\n    this.canvasContext.clip();\r\n\r\n    this.renderFrame(this.renderedFrame, true);\r\n};\r\n\r\nCanvasRenderer.prototype.destroy = function () {\r\n    if(this.renderConfig.clearCanvas) {\r\n        this.animationItem.wrapper.innerHTML = '';\r\n    }\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = len - 1; i >= 0; i-=1) {\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.elements.length = 0;\r\n    this.globalData.canvasContext = null;\r\n    this.animationItem.container = null;\r\n    this.destroyed = true;\r\n};\r\n\r\nCanvasRenderer.prototype.renderFrame = function(num, forceRender){\r\n    if((this.renderedFrame === num && this.renderConfig.clearCanvas === true && !forceRender) || this.destroyed || num === -1){\r\n        return;\r\n    }\r\n    this.renderedFrame = num;\r\n    this.globalData.frameNum = num - this.animationItem._isFirstFrame;\r\n    this.globalData.frameId += 1;\r\n    this.globalData._mdf = !this.renderConfig.clearCanvas || forceRender;\r\n    this.globalData.projectInterface.currentFrame = num;\r\n\r\n     // console.log('--------');\r\n     // console.log('NEW: ',num);\r\n    var i, len = this.layers.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(num);\r\n    }\r\n\r\n    for (i = 0; i < len; i++) {\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(num - this.layers[i].st);\r\n        }\r\n    }\r\n    if(this.globalData._mdf) {\r\n        if(this.renderConfig.clearCanvas === true){\r\n            this.canvasContext.clearRect(0, 0, this.transformCanvas.w, this.transformCanvas.h);\r\n        }else{\r\n            this.save();\r\n        }\r\n        for (i = len - 1; i >= 0; i-=1) {\r\n            if(this.completeLayers || this.elements[i]){\r\n                this.elements[i].renderFrame();\r\n            }\r\n        }\r\n        if(this.renderConfig.clearCanvas !== true){\r\n            this.restore();\r\n        }\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.buildItem = function(pos){\r\n    var elements = this.elements;\r\n    if(elements[pos] || this.layers[pos].ty == 99){\r\n        return;\r\n    }\r\n    var element = this.createItem(this.layers[pos], this,this.globalData);\r\n    elements[pos] = element;\r\n    element.initExpressions();\r\n    /*if(this.layers[pos].ty === 0){\r\n        element.resize(this.globalData.transformCanvas);\r\n    }*/\r\n};\r\n\r\nCanvasRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nCanvasRenderer.prototype.hide = function(){\r\n    this.animationItem.container.style.display = 'none';\r\n};\r\n\r\nCanvasRenderer.prototype.show = function(){\r\n    this.animationItem.container.style.display = 'block';\r\n};\r\n\r\nfunction HybridRenderer(animationItem, config){\r\n    this.animationItem = animationItem;\r\n    this.layers = null;\r\n    this.renderedFrame = -1;\r\n    this.renderConfig = {\r\n        className: (config && config.className) || '',\r\n        imagePreserveAspectRatio: (config && config.imagePreserveAspectRatio) || 'xMidYMid slice',\r\n        hideOnTransparent: (config && config.hideOnTransparent === false) ? false : true\r\n    };\r\n    this.globalData = {\r\n        _mdf: false,\r\n        frameNum: -1,\r\n        renderConfig: this.renderConfig\r\n    };\r\n    this.pendingElements = [];\r\n    this.elements = [];\r\n    this.threeDElements = [];\r\n    this.destroyed = false;\r\n    this.camera = null;\r\n    this.supports3d = true;\r\n    this.rendererType = 'html';\r\n\r\n}\r\n\r\nextendPrototype([BaseRenderer],HybridRenderer);\r\n\r\nHybridRenderer.prototype.buildItem = SVGRenderer.prototype.buildItem;\r\n\r\nHybridRenderer.prototype.checkPendingElements  = function(){\r\n    while(this.pendingElements.length){\r\n        var element = this.pendingElements.pop();\r\n        element.checkParenting();\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.appendElementInPos = function(element, pos){\r\n    var newDOMElement = element.getBaseElement();\r\n    if(!newDOMElement){\r\n        return;\r\n    }\r\n    var layer = this.layers[pos];\r\n    if(!layer.ddd || !this.supports3d){\r\n        if(this.threeDElements) {\r\n            this.addTo3dContainer(newDOMElement,pos);\r\n        } else {\r\n            var i = 0;\r\n            var nextDOMElement, nextLayer, tmpDOMElement;\r\n            while(i<pos){\r\n                if(this.elements[i] && this.elements[i]!== true && this.elements[i].getBaseElement){\r\n                    nextLayer = this.elements[i];\r\n                    tmpDOMElement = this.layers[i].ddd ? this.getThreeDContainerByPos(i) : nextLayer.getBaseElement();\r\n                    nextDOMElement = tmpDOMElement || nextDOMElement;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(nextDOMElement){\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.insertBefore(newDOMElement, nextDOMElement);\r\n                }\r\n            } else {\r\n                if(!layer.ddd || !this.supports3d){\r\n                    this.layerElement.appendChild(newDOMElement);\r\n                }\r\n            }\r\n        }\r\n        \r\n    } else {\r\n        this.addTo3dContainer(newDOMElement,pos);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createShape = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGShapeElement(data, this.globalData, this);\r\n    }\r\n    return new HShapeElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createText = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGTextElement(data, this.globalData, this);\r\n    }\r\n    return new HTextElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createCamera = function (data) {\r\n    this.camera = new HCameraElement(data, this.globalData, this);\r\n    return this.camera;\r\n};\r\n\r\nHybridRenderer.prototype.createImage = function (data) {\r\n    if(!this.supports3d){\r\n        return new IImageElement(data, this.globalData, this);\r\n    }\r\n    return new HImageElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createComp = function (data) {\r\n    if(!this.supports3d){\r\n        return new SVGCompElement(data, this.globalData, this);\r\n    }\r\n    return new HCompElement(data, this.globalData, this);\r\n\r\n};\r\n\r\nHybridRenderer.prototype.createSolid = function (data) {\r\n    if(!this.supports3d){\r\n        return new ISolidElement(data, this.globalData, this);\r\n    }\r\n    return new HSolidElement(data, this.globalData, this);\r\n};\r\n\r\nHybridRenderer.prototype.createNull = SVGRenderer.prototype.createNull;\r\n\r\nHybridRenderer.prototype.getThreeDContainerByPos = function(pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len) {\r\n        if(this.threeDElements[i].startPos <= pos && this.threeDElements[i].endPos >= pos) {\r\n            return this.threeDElements[i].perspectiveElem;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.createThreeDContainer = function(pos, type){\r\n    var perspectiveElem = createTag('div');\r\n    styleDiv(perspectiveElem);\r\n    var container = createTag('div');\r\n    styleDiv(container);\r\n    if(type === '3d') {\r\n        perspectiveElem.style.width = this.globalData.compSize.w+'px';\r\n        perspectiveElem.style.height = this.globalData.compSize.h+'px';\r\n        perspectiveElem.style.transformOrigin = perspectiveElem.style.mozTransformOrigin = perspectiveElem.style.webkitTransformOrigin = \"50% 50%\";\r\n        container.style.transform = container.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n    }\r\n    \r\n    perspectiveElem.appendChild(container);\r\n    //this.resizerElem.appendChild(perspectiveElem);\r\n    var threeDContainerData = {\r\n        container:container,\r\n        perspectiveElem:perspectiveElem,\r\n        startPos: pos,\r\n        endPos: pos,\r\n        type: type\r\n    };\r\n    this.threeDElements.push(threeDContainerData);\r\n    return threeDContainerData;\r\n};\r\n\r\nHybridRenderer.prototype.build3dContainers = function(){\r\n    var i, len = this.layers.length;\r\n    var lastThreeDContainerData;\r\n    var currentContainer = '';\r\n    for(i=0;i<len;i+=1){\r\n        if(this.layers[i].ddd && this.layers[i].ty !== 3){\r\n            if(currentContainer !== '3d'){\r\n                currentContainer = '3d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'3d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        } else {\r\n            if(currentContainer !== '2d'){\r\n                currentContainer = '2d';\r\n                lastThreeDContainerData = this.createThreeDContainer(i,'2d');\r\n            }\r\n            lastThreeDContainerData.endPos = Math.max(lastThreeDContainerData.endPos,i);\r\n        }\r\n    }\r\n    len = this.threeDElements.length;\r\n    for(i = len - 1; i >= 0; i --) {\r\n        this.resizerElem.appendChild(this.threeDElements[i].perspectiveElem);\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.addTo3dContainer = function(elem,pos){\r\n    var i = 0, len = this.threeDElements.length;\r\n    while(i<len){\r\n        if(pos <= this.threeDElements[i].endPos){\r\n            var j = this.threeDElements[i].startPos;\r\n            var nextElement;\r\n            while(j<pos){\r\n                if(this.elements[j] && this.elements[j].getBaseElement){\r\n                    nextElement = this.elements[j].getBaseElement();\r\n                }\r\n                j += 1;\r\n            }\r\n            if(nextElement){\r\n                this.threeDElements[i].container.insertBefore(elem, nextElement);\r\n            } else {\r\n                this.threeDElements[i].container.appendChild(elem);\r\n            }\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.configAnimation = function(animData){\r\n    var resizerElem = createTag('div');\r\n    var wrapper = this.animationItem.wrapper;\r\n    resizerElem.style.width = animData.w+'px';\r\n    resizerElem.style.height = animData.h+'px';\r\n    this.resizerElem = resizerElem;\r\n    styleDiv(resizerElem);\r\n    resizerElem.style.transformStyle = resizerElem.style.webkitTransformStyle = resizerElem.style.mozTransformStyle = \"flat\";\r\n    if(this.renderConfig.className) {\r\n      resizerElem.setAttribute('class', this.renderConfig.className);\r\n    }\r\n    wrapper.appendChild(resizerElem);\r\n\r\n    resizerElem.style.overflow = 'hidden';\r\n    var svg = createNS('svg');\r\n    svg.setAttribute('width','1');\r\n    svg.setAttribute('height','1');\r\n    styleDiv(svg);\r\n    this.resizerElem.appendChild(svg);\r\n    var defs = createNS('defs');\r\n    svg.appendChild(defs);\r\n    this.data = animData;\r\n    //Mask animation\r\n    this.setupGlobalData(animData, svg);\r\n    this.globalData.defs = defs;\r\n    this.layers = animData.layers;\r\n    this.layerElement = this.resizerElem;\r\n    this.build3dContainers();\r\n    this.updateContainerSize();\r\n};\r\n\r\nHybridRenderer.prototype.destroy = function () {\r\n    this.animationItem.wrapper.innerHTML = '';\r\n    this.animationItem.container = null;\r\n    this.globalData.defs = null;\r\n    var i, len = this.layers ? this.layers.length : 0;\r\n    for (i = 0; i < len; i++) {\r\n        this.elements[i].destroy();\r\n    }\r\n    this.elements.length = 0;\r\n    this.destroyed = true;\r\n    this.animationItem = null;\r\n};\r\n\r\nHybridRenderer.prototype.updateContainerSize = function () {\r\n    var elementWidth = this.animationItem.wrapper.offsetWidth;\r\n    var elementHeight = this.animationItem.wrapper.offsetHeight;\r\n    var elementRel = elementWidth/elementHeight;\r\n    var animationRel = this.globalData.compSize.w/this.globalData.compSize.h;\r\n    var sx,sy,tx,ty;\r\n    if(animationRel>elementRel){\r\n        sx = elementWidth/(this.globalData.compSize.w);\r\n        sy = elementWidth/(this.globalData.compSize.w);\r\n        tx = 0;\r\n        ty = ((elementHeight-this.globalData.compSize.h*(elementWidth/this.globalData.compSize.w))/2);\r\n    }else{\r\n        sx = elementHeight/(this.globalData.compSize.h);\r\n        sy = elementHeight/(this.globalData.compSize.h);\r\n        tx = (elementWidth-this.globalData.compSize.w*(elementHeight/this.globalData.compSize.h))/2;\r\n        ty = 0;\r\n    }\r\n    this.resizerElem.style.transform = this.resizerElem.style.webkitTransform = 'matrix3d(' + sx + ',0,0,0,0,'+sy+',0,0,0,0,1,0,'+tx+','+ty+',0,1)';\r\n};\r\n\r\nHybridRenderer.prototype.renderFrame = SVGRenderer.prototype.renderFrame;\r\n\r\nHybridRenderer.prototype.hide = function(){\r\n    this.resizerElem.style.display = 'none';\r\n};\r\n\r\nHybridRenderer.prototype.show = function(){\r\n    this.resizerElem.style.display = 'block';\r\n};\r\n\r\nHybridRenderer.prototype.initItems = function(){\r\n    this.buildAllItems();\r\n    if(this.camera){\r\n        this.camera.setup();\r\n    } else {\r\n        var cWidth = this.globalData.compSize.w;\r\n        var cHeight = this.globalData.compSize.h;\r\n        var i, len = this.threeDElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.threeDElements[i].perspectiveElem.style.perspective = this.threeDElements[i].perspectiveElem.style.webkitPerspective = Math.sqrt(Math.pow(cWidth,2) + Math.pow(cHeight,2)) + 'px';\r\n        }\r\n    }\r\n};\r\n\r\nHybridRenderer.prototype.searchExtraCompositions = function(assets){\r\n    var i, len = assets.length;\r\n    var floatingContainer = createTag('div');\r\n    for(i=0;i<len;i+=1){\r\n        if(assets[i].xt){\r\n            var comp = this.createComp(assets[i],floatingContainer,this.globalData.comp,null);\r\n            comp.initExpressions();\r\n            this.globalData.projectInterface.registerComposition(comp);\r\n        }\r\n    }\r\n};\r\n\r\nfunction MaskElement(data,element,globalData) {\r\n    this.data = data;\r\n    this.element = element;\r\n    this.globalData = globalData;\r\n    this.storedData = [];\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.maskElement = null;\r\n    var defs = this.globalData.defs;\r\n    var i, len = this.masksProperties ? this.masksProperties.length : 0;\r\n    this.viewData = createSizedArray(len);\r\n    this.solidPath = '';\r\n\r\n\r\n    var path, properties = this.masksProperties;\r\n    var count = 0;\r\n    var currentMasks = [];\r\n    var j, jLen;\r\n    var layerId = createElementID();\r\n    var rect, expansor, feMorph,x;\r\n    var maskType = 'clipPath', maskRef = 'clip-path';\r\n    for (i = 0; i < len; i++) {\r\n        if((properties[i].mode !== 'a' && properties[i].mode !== 'n')|| properties[i].inv || properties[i].o.k !== 100 || properties[i].o.x){\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n        }\r\n\r\n        if((properties[i].mode == 's' || properties[i].mode == 'i') && count === 0){\r\n            rect = createNS( 'rect');\r\n            rect.setAttribute('fill', '#ffffff');\r\n            rect.setAttribute('width', this.element.comp.data.w || 0);\r\n            rect.setAttribute('height', this.element.comp.data.h || 0);\r\n            currentMasks.push(rect);\r\n        } else {\r\n            rect = null;\r\n        }\r\n\r\n        path = createNS( 'path');\r\n        if(properties[i].mode == 'n') {\r\n            // TODO move this to a factory or to a constructor\r\n            this.viewData[i] = {\r\n                op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n                prop: ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n                elem: path,\r\n                lastPath: ''\r\n            };\r\n            defs.appendChild(path);\r\n            continue;\r\n        }\r\n        count += 1;\r\n\r\n        path.setAttribute('fill', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        path.setAttribute('clip-rule','nonzero');\r\n        var filterID;\r\n\r\n        if (properties[i].x.k !== 0) {\r\n            maskType = 'mask';\r\n            maskRef = 'mask';\r\n            x = PropertyFactory.getProp(this.element,properties[i].x,0,null,this.element);\r\n            filterID = createElementID();\r\n            expansor = createNS('filter');\r\n            expansor.setAttribute('id',filterID);\r\n            feMorph = createNS('feMorphology');\r\n            feMorph.setAttribute('operator','erode');\r\n            feMorph.setAttribute('in','SourceGraphic');\r\n            feMorph.setAttribute('radius','0');\r\n            expansor.appendChild(feMorph);\r\n            defs.appendChild(expansor);\r\n            path.setAttribute('stroke', properties[i].mode === 's' ? '#000000':'#ffffff');\r\n        } else {\r\n            feMorph = null;\r\n            x = null;\r\n        }\r\n\r\n        // TODO move this to a factory or to a constructor\r\n        this.storedData[i] = {\r\n             elem: path,\r\n             x: x,\r\n             expan: feMorph,\r\n            lastPath: '',\r\n            lastOperator:'',\r\n            filterId:filterID,\r\n            lastRadius:0\r\n        };\r\n        if(properties[i].mode == 'i'){\r\n            jLen = currentMasks.length;\r\n            var g = createNS('g');\r\n            for(j=0;j<jLen;j+=1){\r\n                g.appendChild(currentMasks[j]);\r\n            }\r\n            var mask = createNS('mask');\r\n            mask.setAttribute('mask-type','alpha');\r\n            mask.setAttribute('id',layerId+'_'+count);\r\n            mask.appendChild(path);\r\n            defs.appendChild(mask);\r\n            g.setAttribute('mask','url(' + locationHref + '#'+layerId+'_'+count+')');\r\n\r\n            currentMasks.length = 0;\r\n            currentMasks.push(g);\r\n        }else{\r\n            currentMasks.push(path);\r\n        }\r\n        if(properties[i].inv && !this.solidPath){\r\n            this.solidPath = this.createLayerSolidPath();\r\n        }\r\n        // TODO move this to a factory or to a constructor\r\n        this.viewData[i] = {\r\n            elem: path,\r\n            lastPath: '',\r\n            op: PropertyFactory.getProp(this.element,properties[i].o,0,0.01,this.element),\r\n            prop:ShapePropertyFactory.getShapeProp(this.element,properties[i],3),\r\n            invRect: rect\r\n        };\r\n        if(!this.viewData[i].prop.k){\r\n            this.drawPath(properties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n    }\r\n\r\n    this.maskElement = createNS( maskType);\r\n\r\n    len = currentMasks.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.maskElement.appendChild(currentMasks[i]);\r\n    }\r\n\r\n    if(count > 0){\r\n        this.maskElement.setAttribute('id', layerId);\r\n        this.element.maskedElement.setAttribute(maskRef, \"url(\" + locationHref + \"#\" + layerId + \")\");\r\n        defs.appendChild(this.maskElement);\r\n    }\r\n    if (this.viewData.length) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n\r\n}\r\n\r\nMaskElement.prototype.getMaskProperty = function(pos){\r\n    return this.viewData[pos].prop;\r\n};\r\n\r\nMaskElement.prototype.renderFrame = function (isFirstFrame) {\r\n    var finalMat = this.element.finalTransform.mat;\r\n    var i, len = this.masksProperties.length;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.viewData[i].prop._mdf || isFirstFrame){\r\n            this.drawPath(this.masksProperties[i],this.viewData[i].prop.v,this.viewData[i]);\r\n        }\r\n        if(this.viewData[i].op._mdf || isFirstFrame){\r\n            this.viewData[i].elem.setAttribute('fill-opacity',this.viewData[i].op.v);\r\n        }\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if(this.viewData[i].invRect && (this.element.finalTransform.mProp._mdf || isFirstFrame)){\r\n                this.viewData[i].invRect.setAttribute('transform', finalMat.getInverseMatrix().to2dCSS())\r\n            }\r\n            if(this.storedData[i].x && (this.storedData[i].x._mdf || isFirstFrame)){\r\n                var feMorph = this.storedData[i].expan;\r\n                if(this.storedData[i].x.v < 0){\r\n                    if(this.storedData[i].lastOperator !== 'erode'){\r\n                        this.storedData[i].lastOperator = 'erode';\r\n                        this.storedData[i].elem.setAttribute('filter','url(' + locationHref + '#'+this.storedData[i].filterId+')');\r\n                    }\r\n                    feMorph.setAttribute('radius',-this.storedData[i].x.v);\r\n                }else{\r\n                    if(this.storedData[i].lastOperator !== 'dilate'){\r\n                        this.storedData[i].lastOperator = 'dilate';\r\n                        this.storedData[i].elem.setAttribute('filter',null);\r\n                    }\r\n                    this.storedData[i].elem.setAttribute('stroke-width', this.storedData[i].x.v*2);\r\n\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nMaskElement.prototype.getMaskelement = function () {\r\n    return this.maskElement;\r\n};\r\n\r\nMaskElement.prototype.createLayerSolidPath = function(){\r\n    var path = 'M0,0 ';\r\n    path += ' h' + this.globalData.compSize.w ;\r\n    path += ' v' + this.globalData.compSize.h ;\r\n    path += ' h-' + this.globalData.compSize.w ;\r\n    path += ' v-' + this.globalData.compSize.h + ' ';\r\n    return path;\r\n};\r\n\r\nMaskElement.prototype.drawPath = function(pathData,pathNodes,viewData){\r\n    var pathString = \" M\"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    var i, len;\r\n    len = pathNodes._length;\r\n    for(i=1;i<len;i+=1){\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[i][0]+','+pathNodes.i[i][1] + \" \"+pathNodes.v[i][0]+','+pathNodes.v[i][1];\r\n    }\r\n        //pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    if(pathNodes.c && len > 1){\r\n        pathString += \" C\"+pathNodes.o[i-1][0]+','+pathNodes.o[i-1][1] + \" \"+pathNodes.i[0][0]+','+pathNodes.i[0][1] + \" \"+pathNodes.v[0][0]+','+pathNodes.v[0][1];\r\n    }\r\n    //pathNodes.__renderedString = pathString;\r\n\r\n    if(viewData.lastPath !== pathString){\r\n        var pathShapeValue = '';\r\n        if(viewData.elem){\r\n            if(pathNodes.c){\r\n                pathShapeValue = pathData.inv ? this.solidPath + pathString : pathString;\r\n            }\r\n            viewData.elem.setAttribute('d',pathShapeValue);\r\n        }\r\n        viewData.lastPath = pathString;\r\n    }\r\n};\r\n\r\nMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n    this.globalData = null;\r\n    this.maskElement = null;\r\n    this.data = null;\r\n    this.masksProperties = null;\r\n};\r\n\r\n/**\r\n * @file \r\n * Handles AE's layer parenting property.\r\n *\r\n */\r\n\r\nfunction HierarchyElement(){}\r\n\r\nHierarchyElement.prototype = {\r\n\t/**\r\n     * @function \r\n     * Initializes hierarchy properties\r\n     *\r\n     */\r\n\tinitHierarchy: function() {\r\n\t\t//element's parent list\r\n\t    this.hierarchy = [];\r\n\t    //if element is parent of another layer _isParent will be true\r\n\t    this._isParent = false;\r\n\t    this.checkParenting();\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer's hierarchy.\r\n     * @param {array} hierarch\r\n     * layer's parent list\r\n     *\r\n     */ \r\n\tsetHierarchy: function(hierarchy){\r\n\t    this.hierarchy = hierarchy;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Sets layer as parent.\r\n     *\r\n     */ \r\n\tsetAsParent: function() {\r\n\t    this._isParent = true;\r\n\t},\r\n\t/**\r\n     * @function \r\n     * Searches layer's parenting chain\r\n     *\r\n     */ \r\n\tcheckParenting: function(){\r\n\t    if (this.data.parent !== undefined){\r\n\t        this.comp.buildElementParenting(this, this.data.parent, []);\r\n\t    }\r\n\t}\r\n};\r\n/**\r\n * @file \r\n * Handles element's layer frame update.\r\n * Checks layer in point and out point\r\n *\r\n */\r\n\r\nfunction FrameElement(){}\r\n\r\nFrameElement.prototype = {\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     */\r\n    initFrame: function(){\r\n        //set to true when inpoint is rendered\r\n        this._isFirstFrame = false;\r\n        //list of animated properties\r\n        this.dynamicProperties = [];\r\n        // If layer has been modified in current tick this will be true\r\n        this._mdf = false;\r\n    },\r\n    /**\r\n     * @function \r\n     * Calculates all dynamic values\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * @param {boolean} isVisible\r\n     * if layers is currently in range\r\n     * \r\n     */\r\n    prepareProperties: function(num, isVisible) {\r\n        var i, len = this.dynamicProperties.length;\r\n        for (i = 0;i < len; i += 1) {\r\n            if (isVisible || (this._isParent && this.dynamicProperties[i].propType === 'transform')) {\r\n                this.dynamicProperties[i].getValue();\r\n                if (this.dynamicProperties[i]._mdf) {\r\n                    this.globalData._mdf = true;\r\n                    this._mdf = true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    addDynamicProperty: function(prop) {\r\n        if(this.dynamicProperties.indexOf(prop) === -1) {\r\n            this.dynamicProperties.push(prop);\r\n        }\r\n    }\r\n};\r\nfunction TransformElement(){}\r\n\r\nTransformElement.prototype = {\r\n    initTransform: function() {\r\n        this.finalTransform = {\r\n            mProp: this.data.ks ? TransformPropertyFactory.getTransformProperty(this, this.data.ks, this) : {o:0},\r\n            _matMdf: false,\r\n            _opMdf: false,\r\n            mat: new Matrix()\r\n        };\r\n        if (this.data.ao) {\r\n            this.finalTransform.mProp.autoOriented = true;\r\n        }\r\n\r\n        //TODO: check TYPE 11: Guided elements\r\n        if (this.data.ty !== 11) {\r\n            //this.createElements();\r\n        }\r\n    },\r\n    renderTransform: function() {\r\n\r\n        this.finalTransform._opMdf = this.finalTransform.mProp.o._mdf || this._isFirstFrame;\r\n        this.finalTransform._matMdf = this.finalTransform.mProp._mdf || this._isFirstFrame;\r\n\r\n        if (this.hierarchy) {\r\n            var mat;\r\n            var finalMat = this.finalTransform.mat;\r\n            var i = 0, len = this.hierarchy.length;\r\n            //Checking if any of the transformation matrices in the hierarchy chain has changed.\r\n            if (!this.finalTransform._matMdf) {\r\n                while (i < len) {\r\n                    if (this.hierarchy[i].finalTransform.mProp._mdf) {\r\n                        this.finalTransform._matMdf = true;\r\n                        break;\r\n                    }\r\n                    i += 1;\r\n                }\r\n            }\r\n            \r\n            if (this.finalTransform._matMdf) {\r\n                mat = this.finalTransform.mProp.v.props;\r\n                finalMat.cloneFromProps(mat);\r\n                for (i = 0; i < len; i += 1) {\r\n                    mat = this.hierarchy[i].finalTransform.mProp.v.props;\r\n                    finalMat.transform(mat[0], mat[1], mat[2], mat[3], mat[4], mat[5], mat[6], mat[7], mat[8], mat[9], mat[10], mat[11], mat[12], mat[13], mat[14], mat[15]);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    globalToLocal: function(pt) {\r\n        var transforms = [];\r\n        transforms.push(this.finalTransform);\r\n        var flag = true;\r\n        var comp = this.comp;\r\n        while (flag) {\r\n            if (comp.finalTransform) {\r\n                if (comp.data.hasMask) {\r\n                    transforms.splice(0, 0, comp.finalTransform);\r\n                }\r\n                comp = comp.comp;\r\n            } else {\r\n                flag = false;\r\n            }\r\n        }\r\n        var i, len = transforms.length,ptNew;\r\n        for (i = 0; i < len; i += 1) {\r\n            ptNew = transforms[i].mat.applyToPointArray(0, 0, 0);\r\n            //ptNew = transforms[i].mat.applyToPointArray(pt[0],pt[1],pt[2]);\r\n            pt = [pt[0] - ptNew[0], pt[1] - ptNew[1], 0];\r\n        }\r\n        return pt;\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nfunction RenderableElement(){\r\n\r\n}\r\n\r\nRenderableElement.prototype = {\r\n    initRenderable: function() {\r\n        //layer's visibility related to inpoint and outpoint. Rename isVisible to isInRange\r\n        this.isInRange = false;\r\n        //layer's display state\r\n        this.hidden = false;\r\n        // If layer's transparency equals 0, it can be hidden\r\n        this.isTransparent = false;\r\n        //list of animated components\r\n        this.renderableComponents = [];\r\n    },\r\n    addRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) === -1) {\r\n            this.renderableComponents.push(component);\r\n        }\r\n    },\r\n    removeRenderableComponent: function(component) {\r\n        if(this.renderableComponents.indexOf(component) !== -1) {\r\n            this.renderableComponents.splice(this.renderableComponents.indexOf(component), 1);\r\n        }\r\n    },\r\n    prepareRenderableFrame: function(num) {\r\n        this.checkLayerLimits(num);\r\n    },\r\n    checkTransparency: function(){\r\n        if(this.finalTransform.mProp.o.v <= 0) {\r\n            if(!this.isTransparent && this.globalData.renderConfig.hideOnTransparent){\r\n                this.isTransparent = true;\r\n                this.hide();\r\n            }\r\n        } else if(this.isTransparent) {\r\n            this.isTransparent = false;\r\n            this.show();\r\n        }\r\n    },\r\n    /**\r\n     * @function \r\n     * Initializes frame related properties.\r\n     *\r\n     * @param {number} num\r\n     * current frame number in Layer's time\r\n     * \r\n     */\r\n    checkLayerLimits: function(num) {\r\n        if(this.data.ip - this.data.st <= num && this.data.op - this.data.st > num)\r\n        {\r\n            if(this.isInRange !== true){\r\n                this.globalData._mdf = true;\r\n                this._mdf = true;\r\n                this.isInRange = true;\r\n                this.show();\r\n            }\r\n        } else {\r\n            if(this.isInRange !== false){\r\n                this.globalData._mdf = true;\r\n                this.isInRange = false;\r\n                this.hide();\r\n            }\r\n        }\r\n    },\r\n    renderRenderable: function() {\r\n        var i, len = this.renderableComponents.length;\r\n        for(i = 0; i < len; i += 1) {\r\n            this.renderableComponents[i].renderFrame(this._isFirstFrame);\r\n        }\r\n        /*this.maskManager.renderFrame(this.finalTransform.mat);\r\n        this.renderableEffectsManager.renderFrame(this._isFirstFrame);*/\r\n    },\r\n    sourceRectAtTime: function(){\r\n        return {\r\n            top:0,\r\n            left:0,\r\n            width:100,\r\n            height:100\r\n        };\r\n    },\r\n    getLayerSize: function(){\r\n        if(this.data.ty === 5){\r\n            return {w:this.data.textData.width,h:this.data.textData.height};\r\n        }else{\r\n            return {w:this.data.width,h:this.data.height};\r\n        }\r\n    }\r\n};\r\nfunction RenderableDOMElement() {}\r\n\r\n(function(){\r\n    var _prototype = {\r\n        initElement: function(data,globalData,comp) {\r\n            this.initFrame();\r\n            this.initBaseData(data, globalData, comp);\r\n            this.initTransform(data, globalData, comp);\r\n            this.initHierarchy();\r\n            this.initRenderable();\r\n            this.initRendererElement();\r\n            this.createContainerElements();\r\n            this.createRenderableComponents();\r\n            this.createContent();\r\n            this.hide();\r\n        },\r\n        hide: function(){\r\n            if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n                var elem = this.baseElement || this.layerElement;\r\n                elem.style.display = 'none';\r\n                this.hidden = true;\r\n            }\r\n        },\r\n        show: function(){\r\n            if (this.isInRange && !this.isTransparent){\r\n                if (!this.data.hd) {\r\n                    var elem = this.baseElement || this.layerElement;\r\n                    elem.style.display = 'block';\r\n                }\r\n                this.hidden = false;\r\n                this._isFirstFrame = true;\r\n            }\r\n        },\r\n        renderFrame: function() {\r\n            //If it is exported as hidden (data.hd === true) no need to render\r\n            //If it is not visible no need to render\r\n            if (this.data.hd || this.hidden) {\r\n                return;\r\n            }\r\n            this.renderTransform();\r\n            this.renderRenderable();\r\n            this.renderElement();\r\n            this.renderInnerContent();\r\n            if (this._isFirstFrame) {\r\n                this._isFirstFrame = false;\r\n            }\r\n        },\r\n        renderInnerContent: function() {},\r\n        prepareFrame: function(num) {\r\n            this._mdf = false;\r\n            this.prepareRenderableFrame(num);\r\n            this.prepareProperties(num, this.isInRange);\r\n            this.checkTransparency();\r\n        },\r\n        destroy: function(){\r\n            this.innerElem =  null;\r\n            this.destroyBaseElement();\r\n        }\r\n    };\r\n    extendPrototype([RenderableElement, createProxyFunction(_prototype)], RenderableDOMElement);\r\n}());\r\nfunction ProcessedElement(element, position) {\r\n\tthis.elem = element;\r\n\tthis.pos = position;\r\n}\r\nfunction SVGStyleData(data, level) {\r\n\tthis.data = data;\r\n\tthis.type = data.ty;\r\n\tthis.d = '';\r\n\tthis.lvl = level;\r\n\tthis._mdf = false;\r\n\tthis.closed = data.hd === true;\r\n\tthis.pElem = createNS('path');\r\n\tthis.msElem = null;\r\n}\r\n\r\nSVGStyleData.prototype.reset = function() {\r\n\tthis.d = '';\r\n\tthis._mdf = false;\r\n};\r\nfunction SVGShapeData(transformers, level, shape) {\r\n    this.caches = [];\r\n    this.styles = [];\r\n    this.transformers = transformers;\r\n    this.lStr = '';\r\n    this.sh = shape;\r\n    this.lvl = level;\r\n    //TODO find if there are some cases where _isAnimated can be false. \r\n    // For now, since shapes add up with other shapes. They have to be calculated every time.\r\n    // One way of finding out is checking if all styles associated to this shape depend only of this shape\r\n    this._isAnimated = !!shape.k;\r\n    // TODO: commenting this for now since all shapes are animated\r\n    var i = 0, len = transformers.length;\r\n    while(i < len) {\r\n    \tif(transformers[i].mProps.dynamicProperties.length) {\r\n    \t\tthis._isAnimated = true;\r\n    \t\tbreak;\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n}\r\n\r\nSVGShapeData.prototype.setAsAnimated = function() {\r\n    this._isAnimated = true;\r\n}\r\nfunction SVGTransformData(mProps, op, container) {\r\n\tthis.transform = {\r\n\t\tmProps: mProps,\r\n\t\top: op,\r\n\t\tcontainer: container\r\n\t};\r\n\tthis.elements = [];\r\n    this._isAnimated = this.transform.mProps.dynamicProperties.length || this.transform.op.effectsSequence.length;\r\n}\r\nfunction SVGStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);\r\nfunction SVGFillStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n\tthis.c = PropertyFactory.getProp(elem,data.c,1,255,this);\r\n\tthis.style = styleOb;\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGFillStyleData);\r\nfunction SVGGradientFillStyleData(elem, data, styleOb){\r\n    this.initDynamicPropertyContainer(elem);\r\n    this.getValue = this.iterateDynamicProperties;\r\n    this.initGradientData(elem, data, styleOb);\r\n}\r\n\r\nSVGGradientFillStyleData.prototype.initGradientData = function(elem, data, styleOb){\r\n    this.o = PropertyFactory.getProp(elem,data.o,0,0.01,this);\r\n    this.s = PropertyFactory.getProp(elem,data.s,1,null,this);\r\n    this.e = PropertyFactory.getProp(elem,data.e,1,null,this);\r\n    this.h = PropertyFactory.getProp(elem,data.h||{k:0},0,0.01,this);\r\n    this.a = PropertyFactory.getProp(elem,data.a||{k:0},0,degToRads,this);\r\n    this.g = new GradientProperty(elem,data.g,this);\r\n    this.style = styleOb;\r\n    this.stops = [];\r\n    this.setGradientData(styleOb.pElem, data);\r\n    this.setGradientOpacity(data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientData = function(pathElement,data){\r\n\r\n    var gradientId = createElementID();\r\n    var gfill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n    gfill.setAttribute('id',gradientId);\r\n    gfill.setAttribute('spreadMethod','pad');\r\n    gfill.setAttribute('gradientUnits','userSpaceOnUse');\r\n    var stops = [];\r\n    var stop, j, jLen;\r\n    jLen = data.g.p*4;\r\n    for(j=0;j<jLen;j+=4){\r\n        stop = createNS('stop');\r\n        gfill.appendChild(stop);\r\n        stops.push(stop);\r\n    }\r\n    pathElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+gradientId+')');\r\n    \r\n    this.gf = gfill;\r\n    this.cst = stops;\r\n};\r\n\r\nSVGGradientFillStyleData.prototype.setGradientOpacity = function(data, styleOb){\r\n    if(this.g._hasOpacity && !this.g._collapsable){\r\n        var stop, j, jLen;\r\n        var mask = createNS(\"mask\");\r\n        var maskElement = createNS( 'path');\r\n        mask.appendChild(maskElement);\r\n        var opacityId = createElementID();\r\n        var maskId = createElementID();\r\n        mask.setAttribute('id',maskId);\r\n        var opFill = createNS(data.t === 1 ? 'linearGradient' : 'radialGradient');\r\n        opFill.setAttribute('id',opacityId);\r\n        opFill.setAttribute('spreadMethod','pad');\r\n        opFill.setAttribute('gradientUnits','userSpaceOnUse');\r\n        jLen = data.g.k.k[0].s ? data.g.k.k[0].s.length : data.g.k.k.length;\r\n        var stops = this.stops;\r\n        for(j=data.g.p*4;j<jLen;j+=2){\r\n            stop = createNS('stop');\r\n            stop.setAttribute('stop-color','rgb(255,255,255)');\r\n            opFill.appendChild(stop);\r\n            stops.push(stop);\r\n        }\r\n        maskElement.setAttribute( data.ty === 'gf' ? 'fill':'stroke','url(' + locationHref + '#'+opacityId+')');\r\n        this.of = opFill;\r\n        this.ms = mask;\r\n        this.ost = stops;\r\n        this.maskId = maskId;\r\n        styleOb.msElem = maskElement;\r\n    }\r\n};\r\n\r\nextendPrototype([DynamicPropertyContainer], SVGGradientFillStyleData);\r\nfunction SVGGradientStrokeStyleData(elem, data, styleOb){\r\n\tthis.initDynamicPropertyContainer(elem);\r\n\tthis.getValue = this.iterateDynamicProperties;\r\n\tthis.w = PropertyFactory.getProp(elem,data.w,0,null,this);\r\n\tthis.d = new DashProperty(elem,data.d||{},'svg',this);\r\n    this.initGradientData(elem, data, styleOb);\r\n    this._isAnimated = !!this._isAnimated;\r\n}\r\n\r\nextendPrototype([SVGGradientFillStyleData, DynamicPropertyContainer], SVGGradientStrokeStyleData);\r\nfunction ShapeGroupData() {\r\n\tthis.it = [];\r\n    this.prevViewData = [];\r\n    this.gr = createNS('g');\r\n}\r\nvar SVGElementsRenderer = (function() {\r\n\tvar _identityMatrix = new Matrix();\r\n\tvar _matrixHelper = new Matrix();\r\n\r\n\tvar ob = {\r\n\t\tcreateRenderFunction: createRenderFunction\r\n\t}\r\n\r\n\tfunction createRenderFunction(data) {\r\n\t    var ty = data.ty;\r\n\t    switch(data.ty) {\r\n\t        case 'fl':\r\n\t        return renderFill;\r\n\t        case 'gf':\r\n\t        return renderGradient;\r\n\t        case 'gs':\r\n\t        return renderGradientStroke;\r\n\t        case 'st':\r\n\t        return renderStroke;\r\n\t        case 'sh':\r\n\t        case 'el':\r\n\t        case 'rc':\r\n\t        case 'sr':\r\n\t        return renderPath;\r\n\t        case 'tr':\r\n\t        return renderContentTransform;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderContentTransform(styleData, itemData, isFirstFrame) {\r\n\t    if(isFirstFrame || itemData.transform.op._mdf){\r\n\t        itemData.transform.container.setAttribute('opacity',itemData.transform.op.v);\r\n\t    }\r\n\t    if(isFirstFrame || itemData.transform.mProps._mdf){\r\n\t        itemData.transform.container.setAttribute('transform',itemData.transform.mProps.v.to2dCSS());\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderPath(styleData, itemData, isFirstFrame) {\r\n\t    var j, jLen,pathStringTransformed,redraw,pathNodes,l, lLen = itemData.styles.length;\r\n\t    var lvl = itemData.lvl;\r\n\t    var paths, mat, props, iterations, k;\r\n\t    for(l=0;l<lLen;l+=1){\r\n\t        redraw = itemData.sh._mdf || isFirstFrame;\r\n\t        if(itemData.styles[l].lvl < lvl){\r\n\t            mat = _matrixHelper.reset();\r\n\t            iterations = lvl - itemData.styles[l].lvl;\r\n\t            k = itemData.transformers.length-1;\r\n\t            while(!redraw && iterations > 0) {\r\n\t                redraw = itemData.transformers[k].mProps._mdf || redraw;\r\n\t                iterations --;\r\n\t                k --;\r\n\t            }\r\n\t            if(redraw) {\r\n\t                iterations = lvl - itemData.styles[l].lvl;\r\n\t                k = itemData.transformers.length-1;\r\n\t                while(iterations > 0) {\r\n\t                    props = itemData.transformers[k].mProps.v.props;\r\n\t                    mat.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t                    iterations --;\r\n\t                    k --;\r\n\t                }\r\n\t            }\r\n\t        } else {\r\n\t            mat = _identityMatrix;\r\n\t        }\r\n\t        paths = itemData.sh.paths;\r\n\t        jLen = paths._length;\r\n\t        if(redraw){\r\n\t            pathStringTransformed = '';\r\n\t            for(j=0;j<jLen;j+=1){\r\n\t                pathNodes = paths.shapes[j];\r\n\t                if(pathNodes && pathNodes._length){\r\n\t                    pathStringTransformed += buildShapeString(pathNodes, pathNodes._length, pathNodes.c, mat);\r\n\t                }\r\n\t            }\r\n\t            itemData.caches[l] = pathStringTransformed;\r\n\t        } else {\r\n\t            pathStringTransformed = itemData.caches[l];\r\n\t        }\r\n\t        itemData.styles[l].d += styleData.hd === true ? '' : pathStringTransformed;\r\n\t        itemData.styles[l]._mdf = redraw || itemData.styles[l]._mdf;\r\n\t    }\r\n\t}\r\n\r\n\tfunction renderFill (styleData,itemData, isFirstFrame){\r\n\t    var styleElem = itemData.style;\r\n\r\n\t    if(itemData.c._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill','rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('fill-opacity',itemData.o.v);\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderGradientStroke (styleData, itemData, isFirstFrame) {\r\n\t    renderGradient(styleData, itemData, isFirstFrame);\r\n\t    renderStroke(styleData, itemData, isFirstFrame);\r\n\t}\r\n\r\n\tfunction renderGradient(styleData, itemData, isFirstFrame) {\r\n\t    var gfill = itemData.gf;\r\n\t    var hasOpacity = itemData.g._hasOpacity;\r\n\t    var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n\r\n\t    if (itemData.o._mdf || isFirstFrame) {\r\n\t        var attr = styleData.ty === 'gf' ? 'fill-opacity' : 'stroke-opacity';\r\n\t        itemData.style.pElem.setAttribute(attr, itemData.o.v);\r\n\t    }\r\n\t    if (itemData.s._mdf || isFirstFrame) {\r\n\t        var attr1 = styleData.t === 1 ? 'x1' : 'cx';\r\n\t        var attr2 = attr1 === 'x1' ? 'y1' : 'cy';\r\n\t        gfill.setAttribute(attr1, pt1[0]);\r\n\t        gfill.setAttribute(attr2, pt1[1]);\r\n\t        if (hasOpacity && !itemData.g._collapsable) {\r\n\t            itemData.of.setAttribute(attr1, pt1[0]);\r\n\t            itemData.of.setAttribute(attr2, pt1[1]);\r\n\t        }\r\n\t    }\r\n\t    var stops, i, len, stop;\r\n\t    if (itemData.g._cmdf || isFirstFrame) {\r\n\t        stops = itemData.cst;\r\n\t        var cValues = itemData.g.c;\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1){\r\n\t            stop = stops[i];\r\n\t            stop.setAttribute('offset', cValues[i * 4] + '%');\r\n\t            stop.setAttribute('stop-color','rgb('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ')');\r\n\t        }\r\n\t    }\r\n\t    if (hasOpacity && (itemData.g._omdf || isFirstFrame)) {\r\n\t        var oValues = itemData.g.o;\r\n\t        if(itemData.g._collapsable) {\r\n\t            stops = itemData.cst;\r\n\t        } else {\r\n\t            stops = itemData.ost;\r\n\t        }\r\n\t        len = stops.length;\r\n\t        for (i = 0; i < len; i += 1) {\r\n\t            stop = stops[i];\r\n\t            if(!itemData.g._collapsable) {\r\n\t                stop.setAttribute('offset', oValues[i * 2] + '%');\r\n\t            }\r\n\t            stop.setAttribute('stop-opacity', oValues[i * 2 + 1]);\r\n\t        }\r\n\t    }\r\n\t    if (styleData.t === 1) {\r\n\t        if (itemData.e._mdf  || isFirstFrame) {\r\n\t            gfill.setAttribute('x2', pt2[0]);\r\n\t            gfill.setAttribute('y2', pt2[1]);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('x2', pt2[0]);\r\n\t                itemData.of.setAttribute('y2', pt2[1]);\r\n\t            }\r\n\t        }\r\n\t    } else {\r\n\t        var rad;\r\n\t        if (itemData.s._mdf || itemData.e._mdf || isFirstFrame) {\r\n\t            rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            gfill.setAttribute('r', rad);\r\n\t            if(hasOpacity && !itemData.g._collapsable){\r\n\t                itemData.of.setAttribute('r', rad);\r\n\t            }\r\n\t        }\r\n\t        if (itemData.e._mdf || itemData.h._mdf || itemData.a._mdf || isFirstFrame) {\r\n\t            if (!rad) {\r\n\t                rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n\t            }\r\n\t            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n\t            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n\t            var dist = rad * percent;\r\n\t            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n\t            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n\t            gfill.setAttribute('fx', x);\r\n\t            gfill.setAttribute('fy', y);\r\n\t            if (hasOpacity && !itemData.g._collapsable) {\r\n\t                itemData.of.setAttribute('fx', x);\r\n\t                itemData.of.setAttribute('fy', y);\r\n\t            }\r\n\t        }\r\n\t        //gfill.setAttribute('fy','200');\r\n\t    }\r\n\t};\r\n\r\n\tfunction renderStroke(styleData, itemData, isFirstFrame) {\r\n\t    var styleElem = itemData.style;\r\n\t    var d = itemData.d;\r\n\t    if (d && (d._mdf || isFirstFrame) && d.dashStr) {\r\n\t        styleElem.pElem.setAttribute('stroke-dasharray', d.dashStr);\r\n\t        styleElem.pElem.setAttribute('stroke-dashoffset', d.dashoffset[0]);\r\n\t    }\r\n\t    if(itemData.c && (itemData.c._mdf || isFirstFrame)){\r\n\t        styleElem.pElem.setAttribute('stroke','rgb(' + bm_floor(itemData.c.v[0]) + ',' + bm_floor(itemData.c.v[1]) + ',' + bm_floor(itemData.c.v[2]) + ')');\r\n\t    }\r\n\t    if(itemData.o._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-opacity', itemData.o.v);\r\n\t    }\r\n\t    if(itemData.w._mdf || isFirstFrame){\r\n\t        styleElem.pElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        if(styleElem.msElem){\r\n\t            styleElem.msElem.setAttribute('stroke-width', itemData.w.v);\r\n\t        }\r\n\t    }\r\n\t};\r\n\r\n\treturn ob;\r\n}())\r\nfunction ShapeTransformManager() {\r\n\tthis.sequences = {};\r\n\tthis.sequenceList = [];\r\n    this.transform_key_count = 0;\r\n}\r\n\r\nShapeTransformManager.prototype = {\r\n\taddTransformSequence: function(transforms) {\r\n\t\tvar i, len = transforms.length;\r\n\t\tvar key = '_';\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\tkey += transforms[i].transform.key + '_';\r\n\t\t}\r\n\t\tvar sequence = this.sequences[key];\r\n\t\tif(!sequence) {\r\n\t\t\tsequence = {\r\n\t\t\t\ttransforms: [].concat(transforms),\r\n\t\t\t\tfinalTransform: new Matrix(),\r\n\t\t\t\t_mdf: false\r\n\t\t\t};\r\n\t\t\tthis.sequences[key] = sequence;\r\n\t\t\tthis.sequenceList.push(sequence);\r\n\t\t}\r\n\t\treturn sequence;\r\n\t},\r\n\tprocessSequence: function(sequence, isFirstFrame) {\r\n\t\tvar i = 0, len = sequence.transforms.length, _mdf = isFirstFrame;\r\n\t\twhile (i < len && !isFirstFrame) {\r\n\t\t\tif (sequence.transforms[i].transform.mProps._mdf) {\r\n\t\t\t\t_mdf = true;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t\ti += 1\r\n\t\t}\r\n\t\tif (_mdf) {\r\n\t\t\tvar props;\r\n\t\t\tsequence.finalTransform.reset();\r\n\t\t\tfor (i = len - 1; i >= 0; i -= 1) {\r\n\t\t        props = sequence.transforms[i].transform.mProps.v.props;\r\n\t\t        sequence.finalTransform.transform(props[0],props[1],props[2],props[3],props[4],props[5],props[6],props[7],props[8],props[9],props[10],props[11],props[12],props[13],props[14],props[15]);\r\n\t\t\t}\r\n\t\t}\r\n\t\tsequence._mdf = _mdf;\r\n\t\t\r\n\t},\r\n\tprocessSequences: function(isFirstFrame) {\r\n\t\tvar i, len = this.sequenceList.length;\r\n\t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\tthis.processSequence(this.sequenceList[i], isFirstFrame);\r\n\t\t}\r\n\r\n\t},\r\n\tgetNewKey: function() {\r\n\t\treturn '_' + this.transform_key_count++;\r\n\t}\r\n}\r\nfunction CVShapeData(element, data, styles, transformsManager) {\r\n    this.styledShapes = [];\r\n    this.tr = [0,0,0,0,0,0];\r\n    var ty = 4;\r\n    if(data.ty == 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty == 'el'){\r\n        ty = 6;\r\n    }else if(data.ty == 'sr'){\r\n        ty = 7;\r\n    }\r\n    this.sh = ShapePropertyFactory.getShapeProp(element,data,ty,element);\r\n    var i , len = styles.length,styledShape;\r\n    for (i = 0; i < len; i += 1) {\r\n        if (!styles[i].closed) {\r\n            styledShape = {\r\n                transforms: transformsManager.addTransformSequence(styles[i].transforms),\r\n                trNodes: []\r\n            }\r\n            this.styledShapes.push(styledShape);\r\n            styles[i].elements.push(styledShape);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeData.prototype.setAsAnimated = SVGShapeData.prototype.setAsAnimated;\r\nfunction BaseElement(){\r\n}\r\n\r\nBaseElement.prototype = {\r\n    checkMasks: function(){\r\n        if(!this.data.hasMask){\r\n            return false;\r\n        }\r\n        var i = 0, len = this.data.masksProperties.length;\r\n        while(i<len) {\r\n            if((this.data.masksProperties[i].mode !== 'n' && this.data.masksProperties[i].cl !== false)) {\r\n                return true;\r\n            }\r\n            i += 1;\r\n        }\r\n        return false;\r\n    },\r\n    initExpressions: function(){\r\n        this.layerInterface = LayerExpressionInterface(this);\r\n        if(this.data.hasMask && this.maskManager) {\r\n            this.layerInterface.registerMaskInterface(this.maskManager);\r\n        }\r\n        var effectsInterface = EffectsExpressionInterface.createEffectsInterface(this,this.layerInterface);\r\n        this.layerInterface.registerEffectsInterface(effectsInterface);\r\n\r\n        if(this.data.ty === 0 || this.data.xt){\r\n            this.compInterface = CompExpressionInterface(this);\r\n        } else if(this.data.ty === 4){\r\n            this.layerInterface.shapeInterface = ShapeExpressionInterface(this.shapesData,this.itemsData,this.layerInterface);\r\n            this.layerInterface.content = this.layerInterface.shapeInterface;\r\n        } else if(this.data.ty === 5){\r\n            this.layerInterface.textInterface = TextExpressionInterface(this);\r\n            this.layerInterface.text = this.layerInterface.textInterface;\r\n        }\r\n    },\r\n    setBlendMode: function(){\r\n        var blendModeValue = getBlendMode(this.data.bm);\r\n        var elem = this.baseElement || this.layerElement;\r\n\r\n        elem.style['mix-blend-mode'] = blendModeValue;\r\n    },\r\n    initBaseData: function(data, globalData, comp){\r\n        this.globalData = globalData;\r\n        this.comp = comp;\r\n        this.data = data;\r\n        this.layerId = createElementID();\r\n        \r\n        //Stretch factor for old animations missing this property.\r\n        if(!this.data.sr){\r\n            this.data.sr = 1;\r\n        }\r\n        // effects manager\r\n        this.effectsManager = new EffectsManager(this.data,this,this.dynamicProperties);\r\n        \r\n    },\r\n    getType: function(){\r\n        return this.type;\r\n    }\r\n    ,sourceRectAtTime: function(){}\r\n}\r\nfunction NullElement(data,globalData,comp){\r\n    this.initFrame();\r\n\tthis.initBaseData(data, globalData, comp);\r\n    this.initFrame();\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n}\r\n\r\nNullElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nNullElement.prototype.renderFrame = function() {\r\n};\r\n\r\nNullElement.prototype.getBaseElement = function() {\r\n\treturn null;\r\n};\r\n\r\nNullElement.prototype.destroy = function() {\r\n};\r\n\r\nNullElement.prototype.sourceRectAtTime = function() {\r\n};\r\n\r\nNullElement.prototype.hide = function() {\r\n};\r\n\r\nextendPrototype([BaseElement,TransformElement,HierarchyElement,FrameElement], NullElement);\r\n\r\nfunction SVGBaseElement(){\r\n}\r\n\r\nSVGBaseElement.prototype = {\r\n    initRendererElement: function() {\r\n        this.layerElement = createNS('g');\r\n    },\r\n    createContainerElements: function(){\r\n        this.matteElement = createNS('g');\r\n        this.transformedElement = this.layerElement;\r\n        this.maskedElement = this.layerElement;\r\n        this._sizeChanged = false;\r\n        var layerElementParent = null;\r\n        //If this layer acts as a mask for the following layer\r\n        var filId, fil, gg;\r\n        if (this.data.td) {\r\n            if (this.data.td == 3 || this.data.td == 1) {\r\n                var masker = createNS('mask');\r\n                masker.setAttribute('id', this.layerId);\r\n                masker.setAttribute('mask-type', this.data.td == 3 ? 'luminance' : 'alpha');\r\n                masker.appendChild(this.layerElement);\r\n                layerElementParent = masker;\r\n                this.globalData.defs.appendChild(masker);\r\n                // This is only for IE and Edge when mask if of type alpha\r\n                if (!featureSupport.maskType && this.data.td == 1) {\r\n                    masker.setAttribute('mask-type', 'luminance');\r\n                    filId = createElementID();\r\n                    fil = filtersFactory.createFilter(filId);\r\n                    this.globalData.defs.appendChild(fil);\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    masker.appendChild(gg);\r\n                    gg.setAttribute('filter','url(' + locationHref + '#' + filId + ')');\r\n                }\r\n            } else if(this.data.td == 2) {\r\n                var maskGroup = createNS('mask');\r\n                maskGroup.setAttribute('id', this.layerId);\r\n                maskGroup.setAttribute('mask-type','alpha');\r\n                var maskGrouper = createNS('g');\r\n                maskGroup.appendChild(maskGrouper);\r\n                filId = createElementID();\r\n                fil = filtersFactory.createFilter(filId);\r\n                ////\r\n\r\n                // This solution doesn't work on Android when meta tag with viewport attribute is set\r\n                /*var feColorMatrix = createNS('feColorMatrix');\r\n                feColorMatrix.setAttribute('type', 'matrix');\r\n                feColorMatrix.setAttribute('color-interpolation-filters', 'sRGB');\r\n                feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 -1 1');\r\n                fil.appendChild(feColorMatrix);*/\r\n                ////\r\n                var feCTr = createNS('feComponentTransfer');\r\n                feCTr.setAttribute('in','SourceGraphic');\r\n                fil.appendChild(feCTr);\r\n                var feFunc = createNS('feFuncA');\r\n                feFunc.setAttribute('type','table');\r\n                feFunc.setAttribute('tableValues','1.0 0.0');\r\n                feCTr.appendChild(feFunc);\r\n                ////\r\n                this.globalData.defs.appendChild(fil);\r\n                var alphaRect = createNS('rect');\r\n                alphaRect.setAttribute('width',  this.comp.data.w);\r\n                alphaRect.setAttribute('height', this.comp.data.h);\r\n                alphaRect.setAttribute('x','0');\r\n                alphaRect.setAttribute('y','0');\r\n                alphaRect.setAttribute('fill','#ffffff');\r\n                alphaRect.setAttribute('opacity','0');\r\n                maskGrouper.setAttribute('filter', 'url(' + locationHref + '#'+filId+')');\r\n                maskGrouper.appendChild(alphaRect);\r\n                maskGrouper.appendChild(this.layerElement);\r\n                layerElementParent = maskGrouper;\r\n                if (!featureSupport.maskType) {\r\n                    maskGroup.setAttribute('mask-type', 'luminance');\r\n                    fil.appendChild(filtersFactory.createAlphaToLuminanceFilter());\r\n                    gg = createNS('g');\r\n                    maskGrouper.appendChild(alphaRect);\r\n                    gg.appendChild(this.layerElement);\r\n                    layerElementParent = gg;\r\n                    maskGrouper.appendChild(gg);\r\n                }\r\n                this.globalData.defs.appendChild(maskGroup);\r\n            }\r\n        } else if (this.data.tt) {\r\n            this.matteElement.appendChild(this.layerElement);\r\n            layerElementParent = this.matteElement;\r\n            this.baseElement = this.matteElement;\r\n        } else {\r\n            this.baseElement = this.layerElement;\r\n        }\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id', this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        //Clipping compositions to hide content that exceeds boundaries. If collapsed transformations is on, component should not be clipped\r\n        if (this.data.ty === 0 && !this.data.hd) {\r\n            var cp = createNS( 'clipPath');\r\n            var pt = createNS('path');\r\n            pt.setAttribute('d','M0,0 L' + this.data.w + ',0' + ' L' + this.data.w + ',' + this.data.h + ' L0,' + this.data.h + 'z');\r\n            var clipId = createElementID();\r\n            cp.setAttribute('id',clipId);\r\n            cp.appendChild(pt);\r\n            this.globalData.defs.appendChild(cp);\r\n\r\n            if (this.checkMasks()) {\r\n                var cpGroup = createNS('g');\r\n                cpGroup.setAttribute('clip-path','url(' + locationHref + '#'+clipId + ')');\r\n                cpGroup.appendChild(this.layerElement);\r\n                this.transformedElement = cpGroup;\r\n                if (layerElementParent) {\r\n                    layerElementParent.appendChild(this.transformedElement);\r\n                } else {\r\n                    this.baseElement = this.transformedElement;\r\n                }\r\n            } else {\r\n                this.layerElement.setAttribute('clip-path','url(' + locationHref + '#'+clipId+')');\r\n            }\r\n            \r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n\r\n    },\r\n    renderElement: function() {\r\n        if (this.finalTransform._matMdf) {\r\n            this.transformedElement.setAttribute('transform', this.finalTransform.mat.to2dCSS());\r\n        }\r\n        if (this.finalTransform._opMdf) {\r\n            this.transformedElement.setAttribute('opacity', this.finalTransform.mProp.o.v);\r\n        }\r\n    },\r\n    destroyBaseElement: function() {\r\n        this.layerElement = null;\r\n        this.matteElement = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    getBaseElement: function() {\r\n        if (this.data.hd) {\r\n            return null;\r\n        }\r\n        return this.baseElement;\r\n    },\r\n    createRenderableComponents: function() {\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n        this.renderableEffectsManager = new SVGEffects(this);\r\n    },\r\n    setMatte: function(id) {\r\n        if (!this.matteElement) {\r\n            return;\r\n        }\r\n        this.matteElement.setAttribute(\"mask\", \"url(\" + locationHref + \"#\" + id + \")\");\r\n    }\r\n};\r\nfunction IShapeElement(){\r\n}\r\n\r\nIShapeElement.prototype = {\r\n    addShapeToModifiers: function(data) {\r\n        var i, len = this.shapeModifiers.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapeModifiers[i].addShape(data);\r\n        }\r\n    },\r\n    isShapeInAnimatedModifiers: function(data) {\r\n        var i = 0, len = this.shapeModifiers.length;\r\n        while(i < len) {\r\n            if(this.shapeModifiers[i].isAnimatedWithShape(data)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    renderModifiers: function() {\r\n        if(!this.shapeModifiers.length){\r\n            return;\r\n        }\r\n        var i, len = this.shapes.length;\r\n        for(i=0;i<len;i+=1){\r\n            this.shapes[i].sh.reset();\r\n        }\r\n\r\n        len = this.shapeModifiers.length;\r\n        for(i=len-1;i>=0;i-=1){\r\n            this.shapeModifiers[i].processShapes(this._isFirstFrame);\r\n        }\r\n    },\r\n    lcEnum: {\r\n        '1': 'butt',\r\n        '2': 'round',\r\n        '3': 'square'\r\n    },\r\n    ljEnum: {\r\n        '1': 'miter',\r\n        '2': 'round',\r\n        '3': 'bevel'\r\n    },\r\n    searchProcessedElement: function(elem){\r\n        var elements = this.processedElements;\r\n        var i = 0, len = elements.length;\r\n        while (i < len) {\r\n            if (elements[i].elem === elem) {\r\n                return elements[i].pos;\r\n            }\r\n            i += 1;\r\n        }\r\n        return 0;\r\n    },\r\n    addProcessedElement: function(elem, pos){\r\n        var elements = this.processedElements;\r\n        var i = elements.length;\r\n        while(i) {\r\n            i -= 1;\r\n            if (elements[i].elem === elem) {\r\n                elements[i].pos = pos;\r\n                return;\r\n            }\r\n        }\r\n        elements.push(new ProcessedElement(elem, pos));\r\n    },\r\n    prepareFrame: function(num) {\r\n        this.prepareRenderableFrame(num);\r\n        this.prepareProperties(num, this.isInRange);\r\n    }\r\n};\r\nfunction ITextElement(){\r\n}\r\n\r\nITextElement.prototype.initElement = function(data,globalData,comp){\r\n    this.lettersChangedFlag = true;\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.textProperty = new TextProperty(this, data.t, this.dynamicProperties);\r\n    this.textAnimator = new TextAnimatorProperty(data.t, this.renderType, this);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initHierarchy();\r\n    this.initRenderable();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    this.createContent();\r\n    this.hide();\r\n    this.textAnimator.searchProperties(this.dynamicProperties);\r\n};\r\n\r\nITextElement.prototype.prepareFrame = function(num) {\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(this.textProperty._mdf || this.textProperty._isFirstFrame) {\r\n        this.buildNewText();\r\n        this.textProperty._isFirstFrame = false;\r\n        this.textProperty._mdf = false;\r\n    }\r\n};\r\n\r\nITextElement.prototype.createPathShape = function(matrixHelper, shapes) {\r\n    var j,jLen = shapes.length;\r\n    var k, kLen, pathNodes;\r\n    var shapeStr = '';\r\n    for(j=0;j<jLen;j+=1){\r\n        pathNodes = shapes[j].ks.k;\r\n        shapeStr += buildShapeString(pathNodes, pathNodes.i.length, true, matrixHelper);\r\n    }\r\n    return shapeStr;\r\n};\r\n\r\nITextElement.prototype.updateDocumentData = function(newData, index) {\r\n    this.textProperty.updateDocumentData(newData, index);\r\n};\r\n\r\nITextElement.prototype.canResizeFont = function(_canResize) {\r\n    this.textProperty.canResizeFont(_canResize);\r\n};\r\n\r\nITextElement.prototype.setMinimumFontSize = function(_fontSize) {\r\n    this.textProperty.setMinimumFontSize(_fontSize);\r\n};\r\n\r\nITextElement.prototype.applyTextPropertiesToMatrix = function(documentData, matrixHelper, lineNumber, xPos, yPos) {\r\n    if(documentData.ps){\r\n        matrixHelper.translate(documentData.ps[0],documentData.ps[1] + documentData.ascent,0);\r\n    }\r\n    matrixHelper.translate(0,-documentData.ls,0);\r\n    switch(documentData.j){\r\n        case 1:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber]),0,0);\r\n            break;\r\n        case 2:\r\n            matrixHelper.translate(documentData.justifyOffset + (documentData.boxWidth - documentData.lineWidths[lineNumber] )/2,0,0);\r\n            break;\r\n    }\r\n    matrixHelper.translate(xPos, yPos, 0);\r\n};\r\n\r\n\r\nITextElement.prototype.buildColor = function(colorData) {\r\n    return 'rgb(' + Math.round(colorData[0]*255) + ',' + Math.round(colorData[1]*255) + ',' + Math.round(colorData[2]*255) + ')';\r\n};\r\n\r\nITextElement.prototype.emptyProp = new LetterProps();\r\n\r\nITextElement.prototype.destroy = function(){\r\n    \r\n};\r\nfunction ICompElement(){}\r\n\r\nextendPrototype([BaseElement, TransformElement, HierarchyElement, FrameElement, RenderableDOMElement], ICompElement);\r\n\r\nICompElement.prototype.initElement = function(data,globalData,comp) {\r\n    this.initFrame();\r\n    this.initBaseData(data, globalData, comp);\r\n    this.initTransform(data, globalData, comp);\r\n    this.initRenderable();\r\n    this.initHierarchy();\r\n    this.initRendererElement();\r\n    this.createContainerElements();\r\n    this.createRenderableComponents();\r\n    if(this.data.xt || !globalData.progressiveLoad){\r\n        this.buildAllItems();\r\n    }\r\n    this.hide();\r\n};\r\n\r\n/*ICompElement.prototype.hide = function(){\r\n    if(!this.hidden){\r\n        this.hideElement();\r\n        var i,len = this.elements.length;\r\n        for( i = 0; i < len; i+=1 ){\r\n            if(this.elements[i]){\r\n                this.elements[i].hide();\r\n            }\r\n        }\r\n    }\r\n};*/\r\n\r\nICompElement.prototype.prepareFrame = function(num){\r\n    this._mdf = false;\r\n    this.prepareRenderableFrame(num);\r\n    this.prepareProperties(num, this.isInRange);\r\n    if(!this.isInRange && !this.data.xt){\r\n        return;\r\n    }\r\n\r\n    if (!this.tm._placeholder) {\r\n        var timeRemapped = this.tm.v;\r\n        if(timeRemapped === this.data.op){\r\n            timeRemapped = this.data.op - 1;\r\n        }\r\n        this.renderedFrame = timeRemapped;\r\n    } else {\r\n        this.renderedFrame = num/this.data.sr;\r\n    }\r\n    var i,len = this.elements.length;\r\n    if(!this.completeLayers){\r\n        this.checkLayers(this.renderedFrame);\r\n    }\r\n    //This iteration needs to be backwards because of how expressions connect between each other\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].prepareFrame(this.renderedFrame - this.layers[i].st);\r\n            if(this.elements[i]._mdf) {\r\n                this._mdf = true;\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.renderInnerContent = function() {\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i += 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.setElements = function(elems){\r\n    this.elements = elems;\r\n};\r\n\r\nICompElement.prototype.getElements = function(){\r\n    return this.elements;\r\n};\r\n\r\nICompElement.prototype.destroyElements = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = 0; i < len; i+=1 ){\r\n        if(this.elements[i]){\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n};\r\n\r\nICompElement.prototype.destroy = function(){\r\n    this.destroyElements();\r\n    this.destroyBaseElement();\r\n};\r\n\r\nfunction IImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n    this.sourceRect = {top:0,left:0,width:this.assetData.w,height:this.assetData.h};\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], IImageElement);\r\n\r\nIImageElement.prototype.createContent = function(){\r\n\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n\r\n    this.innerElem = createNS('image');\r\n    this.innerElem.setAttribute('width',this.assetData.w+\"px\");\r\n    this.innerElem.setAttribute('height',this.assetData.h+\"px\");\r\n    this.innerElem.setAttribute('preserveAspectRatio',this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio);\r\n    this.innerElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n    \r\n    this.layerElement.appendChild(this.innerElem);\r\n};\r\n\r\nIImageElement.prototype.sourceRectAtTime = function() {\r\n\treturn this.sourceRect;\r\n}\r\nfunction ISolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([IImageElement], ISolidElement);\r\n\r\nISolidElement.prototype.createContent = function(){\r\n\r\n    var rect = createNS('rect');\r\n    ////rect.style.width = this.data.sw;\r\n    ////rect.style.height = this.data.sh;\r\n    ////rect.style.fill = this.data.sc;\r\n    rect.setAttribute('width',this.data.sw);\r\n    rect.setAttribute('height',this.data.sh);\r\n    rect.setAttribute('fill',this.data.sc);\r\n    this.layerElement.appendChild(rect);\r\n};\r\nfunction SVGCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = true;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    //this.layerElement = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([SVGRenderer, ICompElement, SVGBaseElement], SVGCompElement);\r\nfunction SVGTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.renderType = 'svg';\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], SVGTextElement);\r\n\r\nSVGTextElement.prototype.createContent = function(){\r\n\r\n    if (this.data.singleShape && !this.globalData.fontManager.chars) {\r\n        this.textContainer = createNS('text');\r\n    }\r\n};\r\n\r\nSVGTextElement.prototype.buildTextContents = function(textArray) {\r\n    var i = 0, len = textArray.length;\r\n    var textContents = [], currentTextContent = '';\r\n    while (i < len) {\r\n        if(textArray[i] === String.fromCharCode(13) || textArray[i] === String.fromCharCode(3)) {\r\n            textContents.push(currentTextContent);\r\n            currentTextContent = '';\r\n        } else {\r\n            currentTextContent += textArray[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    textContents.push(currentTextContent);\r\n    return textContents;\r\n}\r\n\r\nSVGTextElement.prototype.buildNewText = function(){\r\n    var i, len;\r\n\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData ? documentData.l.length : 0);\r\n    if(documentData.fc) {\r\n        this.layerElement.setAttribute('fill', this.buildColor(documentData.fc));\r\n    }else{\r\n        this.layerElement.setAttribute('fill', 'rgba(0,0,0,0)');\r\n    }\r\n    if(documentData.sc){\r\n        this.layerElement.setAttribute('stroke', this.buildColor(documentData.sc));\r\n        this.layerElement.setAttribute('stroke-width', documentData.sw);\r\n    }\r\n    this.layerElement.setAttribute('font-size', documentData.finalSize);\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(fontData.fClass){\r\n        this.layerElement.setAttribute('class',fontData.fClass);\r\n    } else {\r\n        this.layerElement.setAttribute('font-family', fontData.fFamily);\r\n        var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n        this.layerElement.setAttribute('font-style', fStyle);\r\n        this.layerElement.setAttribute('font-weight', fWeight);\r\n    }\r\n    this.layerElement.setAttribute('aria-label', documentData.t);\r\n\r\n    var letters = documentData.l || [];\r\n    var usesGlyphs = !!this.globalData.fontManager.chars;\r\n    len = letters.length;\r\n\r\n    var tSpan;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '', singleShape = this.data.singleShape;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    if(singleShape && !usesGlyphs && !documentData.sz) {\r\n        var tElement = this.textContainer;\r\n        var justify = 'start';\r\n        switch(documentData.j) {\r\n            case 1:\r\n                justify = 'end';\r\n                break;\r\n            case 2:\r\n                justify = 'middle';\r\n                break;\r\n        }\r\n        tElement.setAttribute('text-anchor',justify);\r\n        tElement.setAttribute('letter-spacing',trackingOffset);\r\n        var textContent = this.buildTextContents(documentData.finalText);\r\n        len = textContent.length;\r\n        yPos = documentData.ps ? documentData.ps[1] + documentData.ascent : 0;\r\n        for ( i = 0; i < len; i += 1) {\r\n            tSpan = this.textSpans[i] || createNS('tspan');\r\n            tSpan.textContent = textContent[i];\r\n            tSpan.setAttribute('x', 0);\r\n            tSpan.setAttribute('y', yPos);\r\n            tSpan.style.display = 'inherit';\r\n            tElement.appendChild(tSpan);\r\n            this.textSpans[i] = tSpan;\r\n            yPos += documentData.finalLineHeight;\r\n        }\r\n        \r\n        this.layerElement.appendChild(tElement);\r\n    } else {\r\n        var cachedSpansLength = this.textSpans.length;\r\n        var shapeData, charData;\r\n        for (i = 0; i < len; i += 1) {\r\n            if(!usesGlyphs || !singleShape || i === 0){\r\n                tSpan = cachedSpansLength > i ? this.textSpans[i] : createNS(usesGlyphs?'path':'text');\r\n                if (cachedSpansLength <= i) {\r\n                    tSpan.setAttribute('stroke-linecap', 'butt');\r\n                    tSpan.setAttribute('stroke-linejoin','round');\r\n                    tSpan.setAttribute('stroke-miterlimit','4');\r\n                    this.textSpans[i] = tSpan;\r\n                    this.layerElement.appendChild(tSpan);\r\n                }\r\n                tSpan.style.display = 'inherit';\r\n            }\r\n            \r\n            matrixHelper.reset();\r\n            matrixHelper.scale(documentData.finalSize / 100, documentData.finalSize / 100);\r\n            if (singleShape) {\r\n                if(letters[i].n) {\r\n                    xPos = -trackingOffset;\r\n                    yPos += documentData.yOffset;\r\n                    yPos += firstLine ? 1 : 0;\r\n                    firstLine = false;\r\n                }\r\n                this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n                xPos += letters[i].l || 0;\r\n                //xPos += letters[i].val === ' ' ? 0 : trackingOffset;\r\n                xPos += trackingOffset;\r\n            }\r\n            if(usesGlyphs) {\r\n                charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n                shapeData = charData && charData.data || {};\r\n                shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n                if(!singleShape){\r\n                    tSpan.setAttribute('d',this.createPathShape(matrixHelper,shapes));\r\n                } else {\r\n                    shapeStr += this.createPathShape(matrixHelper,shapes);\r\n                }\r\n            } else {\r\n                if(singleShape) {\r\n                    tSpan.setAttribute(\"transform\", \"translate(\" + matrixHelper.props[12] + \",\" + matrixHelper.props[13] + \")\");\r\n                }\r\n                tSpan.textContent = letters[i].val;\r\n                tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            }\r\n            //\r\n        }\r\n        if (singleShape && tSpan) {\r\n            tSpan.setAttribute('d',shapeStr);\r\n        }\r\n    }\r\n    while (i < this.textSpans.length){\r\n        this.textSpans[i].style.display = 'none';\r\n        i += 1;\r\n    }\r\n    \r\n    this._sizeChanged = true;\r\n};\r\n\r\nSVGTextElement.prototype.sourceRectAtTime = function(time){\r\n    this.prepareFrame(this.comp.renderedFrame - this.data.st);\r\n    this.renderInnerContent();\r\n    if(this._sizeChanged){\r\n        this._sizeChanged = false;\r\n        var textBox = this.layerElement.getBBox();\r\n        this.bbox = {\r\n            top: textBox.y,\r\n            left: textBox.x,\r\n            width: textBox.width,\r\n            height: textBox.height\r\n        };\r\n    }\r\n    return this.bbox;\r\n};\r\n\r\nSVGTextElement.prototype.renderInnerContent = function(){\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n        if(this.lettersChangedFlag || this.textAnimator.lettersChangedFlag){\r\n            this._sizeChanged = true;\r\n            var  i,len;\r\n            var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n            var letters = this.textProperty.currentData.l;\r\n\r\n            len = letters.length;\r\n            var renderedLetter, textSpan;\r\n            for(i=0;i<len;i+=1){\r\n                if(letters[i].n){\r\n                    continue;\r\n                }\r\n                renderedLetter = renderedLetters[i];\r\n                textSpan = this.textSpans[i];\r\n                if(renderedLetter._mdf.m) {\r\n                    textSpan.setAttribute('transform',renderedLetter.m);\r\n                }\r\n                if(renderedLetter._mdf.o) {\r\n                    textSpan.setAttribute('opacity',renderedLetter.o);\r\n                }\r\n                if(renderedLetter._mdf.sw){\r\n                    textSpan.setAttribute('stroke-width',renderedLetter.sw);\r\n                }\r\n                if(renderedLetter._mdf.sc){\r\n                    textSpan.setAttribute('stroke',renderedLetter.sc);\r\n                }\r\n                if(renderedLetter._mdf.fc){\r\n                    textSpan.setAttribute('fill',renderedLetter.fc);\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nfunction SVGShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,SVGBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableDOMElement], SVGShapeElement);\r\n\r\nSVGShapeElement.prototype.initSecondaryElement = function() {\r\n};\r\n\r\nSVGShapeElement.prototype.identityMatrix = new Matrix();\r\n\r\nSVGShapeElement.prototype.buildExpressionInterface = function(){};\r\n\r\nSVGShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n};\r\n\r\n/*\r\nThis method searches for multiple shapes that affect a single element and one of them is animated\r\n*/\r\nSVGShapeElement.prototype.filterUniqueShapes = function(){\r\n    var i, len = this.shapes.length, shape;\r\n    var j, jLen = this.stylesList.length;\r\n    var style, count = 0;\r\n    var tempShapes = [];\r\n    var areAnimated = false;\r\n    for(j = 0; j < jLen; j += 1) {\r\n        style = this.stylesList[j];\r\n        areAnimated = false;\r\n        tempShapes.length = 0;\r\n        for(i = 0; i < len; i += 1) {\r\n            shape = this.shapes[i];\r\n            if(shape.styles.indexOf(style) !== -1) {\r\n                tempShapes.push(shape);\r\n                areAnimated = shape._isAnimated || areAnimated;\r\n            }\r\n        }\r\n        if(tempShapes.length > 1 && areAnimated) {\r\n            this.setShapesAsAnimated(tempShapes);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.setShapesAsAnimated = function(shapes){\r\n    var i, len = shapes.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        shapes[i].setAsAnimated();\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.createStyleElement = function(data, level){\r\n    //TODO: prevent drawing of hidden styles\r\n    var elementData;\r\n    var styleOb = new SVGStyleData(data, level);\r\n\r\n    var pathElement = styleOb.pElem;\r\n    if(data.ty === 'st') {\r\n        elementData = new SVGStrokeStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'fl') {\r\n        elementData = new SVGFillStyleData(this, data, styleOb);\r\n    } else if(data.ty === 'gf' || data.ty === 'gs') {\r\n        var gradientConstructor = data.ty === 'gf' ? SVGGradientFillStyleData : SVGGradientStrokeStyleData;\r\n        elementData = new gradientConstructor(this, data, styleOb);\r\n        this.globalData.defs.appendChild(elementData.gf);\r\n        if (elementData.maskId) {\r\n            this.globalData.defs.appendChild(elementData.ms);\r\n            this.globalData.defs.appendChild(elementData.of);\r\n            pathElement.setAttribute('mask','url(' + locationHref + '#' + elementData.maskId + ')');\r\n        }\r\n    }\r\n    \r\n    if(data.ty === 'st' || data.ty === 'gs') {\r\n        pathElement.setAttribute('stroke-linecap', this.lcEnum[data.lc] || 'round');\r\n        pathElement.setAttribute('stroke-linejoin',this.ljEnum[data.lj] || 'round');\r\n        pathElement.setAttribute('fill-opacity','0');\r\n        if(data.lj === 1) {\r\n            pathElement.setAttribute('stroke-miterlimit',data.ml);\r\n        }\r\n    }\r\n\r\n    if(data.r === 2) {\r\n        pathElement.setAttribute('fill-rule', 'evenodd');\r\n    }\r\n\r\n    if(data.ln){\r\n        pathElement.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        pathElement.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        pathElement.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    this.stylesList.push(styleOb);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = new ShapeGroupData();\r\n    if(data.ln){\r\n        elementData.gr.setAttribute('id',data.ln);\r\n    }\r\n    if(data.cl){\r\n        elementData.gr.setAttribute('class',data.cl);\r\n    }\r\n    if(data.bm){\r\n        elementData.gr.style['mix-blend-mode'] = getBlendMode(data.bm);\r\n    }\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createTransformElement = function(data, container) {\r\n    var transformProperty = TransformPropertyFactory.getTransformProperty(this,data,this);\r\n    var elementData = new SVGTransformData(transformProperty, transformProperty.o, container);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.createShapeElement = function(data, ownTransformers, level) {\r\n    var ty = 4;\r\n    if(data.ty === 'rc'){\r\n        ty = 5;\r\n    }else if(data.ty === 'el'){\r\n        ty = 6;\r\n    }else if(data.ty === 'sr'){\r\n        ty = 7;\r\n    }\r\n    var shapeProperty = ShapePropertyFactory.getShapeProp(this,data,ty,this);\r\n    var elementData = new SVGShapeData(ownTransformers, level, shapeProperty);\r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    this.addToAnimatedContents(data, elementData);\r\n    return elementData;\r\n};\r\n\r\nSVGShapeElement.prototype.addToAnimatedContents = function(data, element) {\r\n    var i = 0, len = this.animatedContents.length;\r\n    while(i < len) {\r\n        if(this.animatedContents[i].element === element) {\r\n            return;\r\n        }\r\n        i += 1;\r\n    }\r\n    this.animatedContents.push({\r\n        fn: SVGElementsRenderer.createRenderFunction(data),\r\n        element: element,\r\n        data: data\r\n    });\r\n};\r\n\r\nSVGShapeElement.prototype.setElementStyles = function(elementData){\r\n    var arr = elementData.styles;\r\n    var j, jLen = this.stylesList.length;\r\n    for (j = 0; j < jLen; j += 1) {\r\n        if (!this.stylesList[j].closed) {\r\n            arr.push(this.stylesList[j]);\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.reloadShapes = function(){\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for( i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.layerElement, 0, [], true);\r\n    this.filterUniqueShapes();\r\n    len = this.dynamicProperties.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n};\r\n\r\nSVGShapeElement.prototype.searchShapes = function(arr,itemsData,prevViewData,container, level, transformers, render){\r\n    var ownTransformers = [].concat(transformers);\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], styleOb, currentTransform, modifier, processedPos;\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._render = render;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st' || arr[i].ty == 'gf' || arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], level);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].style.pElem);\r\n            }\r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData,itemsData[i].gr, level + 1, ownTransformers, render);\r\n            if(arr[i]._render){\r\n                container.appendChild(itemsData[i].gr);\r\n            }\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createTransformElement(arr[i], container);\r\n            }\r\n            currentTransform = itemsData[i].transform;\r\n            ownTransformers.push(currentTransform);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i], ownTransformers, level);\r\n            }\r\n            this.setElementStyles(itemsData[i]);\r\n\r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd' || arr[i].ty == 'ms'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                render = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    len = ownStyles.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownStyles[i].closed = true;\r\n    }\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderInnerContent = function() {\r\n    this.renderModifiers();\r\n    var i, len = this.stylesList.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.stylesList[i].reset();\r\n    }\r\n    this.renderShape();\r\n\r\n    for (i = 0; i < len; i += 1) {\r\n        if (this.stylesList[i]._mdf || this._isFirstFrame) {\r\n            if(this.stylesList[i].msElem){\r\n                this.stylesList[i].msElem.setAttribute('d', this.stylesList[i].d);\r\n                //Adding M0 0 fixes same mask bug on all browsers\r\n                this.stylesList[i].d = 'M0 0' + this.stylesList[i].d;\r\n            }\r\n            this.stylesList[i].pElem.setAttribute('d', this.stylesList[i].d || 'M0 0');\r\n        }\r\n    }\r\n};\r\n\r\nSVGShapeElement.prototype.renderShape = function() {\r\n    var i, len = this.animatedContents.length;\r\n    var animatedContent;\r\n    for(i = 0; i < len; i += 1) {\r\n        animatedContent = this.animatedContents[i];\r\n        if((this._isFirstFrame || animatedContent.element._isAnimated) && animatedContent.data !== true) {\r\n            animatedContent.fn(animatedContent.data, animatedContent.element, this._isFirstFrame);\r\n        }\r\n    }\r\n}\r\n\r\nSVGShapeElement.prototype.destroy = function(){\r\n    this.destroyBaseElement();\r\n    this.shapesData = null;\r\n    this.itemsData = null;\r\n};\r\n\r\nfunction SVGTintFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f2');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n    if(filterManager.effectElements[2].p.v !== 100 || filterManager.effectElements[2].p.k){\r\n        var feMerge = createNS('feMerge');\r\n        filter.appendChild(feMerge);\r\n        var feMergeNode;\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','SourceGraphic');\r\n        feMerge.appendChild(feMergeNode);\r\n        feMergeNode = createNS('feMergeNode');\r\n        feMergeNode.setAttribute('in','f2');\r\n        feMerge.appendChild(feMergeNode);\r\n    }\r\n}\r\n\r\nSVGTintFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var colorBlack = this.filterManager.effectElements[0].p.v;\r\n        var colorWhite = this.filterManager.effectElements[1].p.v;\r\n        var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGFillFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','sRGB');\r\n    feColorMatrix.setAttribute('values','1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0');\r\n    filter.appendChild(feColorMatrix);\r\n    this.matrixFilter = feColorMatrix;\r\n}\r\nSVGFillFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color = this.filterManager.effectElements[2].p.v;\r\n        var opacity = this.filterManager.effectElements[6].p.v;\r\n        this.matrixFilter.setAttribute('values','0 0 0 0 '+color[0]+' 0 0 0 0 '+color[1]+' 0 0 0 0 '+color[2]+' 0 0 0 '+opacity+' 0');\r\n    }\r\n};\r\nfunction SVGGaussianBlurEffect(filter, filterManager){\r\n    // Outset the filter region by 100% on all sides to accommodate blur expansion.\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','300%');\r\n    filter.setAttribute('height','300%');\r\n\r\n    this.filterManager = filterManager;\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    filter.appendChild(feGaussianBlur);\r\n    this.feGaussianBlur = feGaussianBlur;\r\n}\r\n\r\nSVGGaussianBlurEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        // Empirical value, matching AE's blur appearance.\r\n        var kBlurrinessToSigma = 0.3;\r\n        var sigma = this.filterManager.effectElements[0].p.v * kBlurrinessToSigma;\r\n\r\n        // Dimensions mapping:\r\n        //\r\n        //   1 -> horizontal & vertical\r\n        //   2 -> horizontal only\r\n        //   3 -> vertical only\r\n        //\r\n        var dimensions = this.filterManager.effectElements[1].p.v;\r\n        var sigmaX = (dimensions == 3) ? 0 : sigma;\r\n        var sigmaY = (dimensions == 2) ? 0 : sigma;\r\n\r\n        this.feGaussianBlur.setAttribute('stdDeviation', sigmaX + \" \" + sigmaY);\r\n\r\n        // Repeat edges mapping:\r\n        //\r\n        //   0 -> off -> duplicate\r\n        //   1 -> on  -> wrap\r\n        var edgeMode = (this.filterManager.effectElements[2].p.v == 1) ? 'wrap' : 'duplicate';\r\n        this.feGaussianBlur.setAttribute('edgeMode', edgeMode);\r\n    }\r\n}\r\nfunction SVGStrokeEffect(elem, filterManager){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.elem = elem;\r\n    this.paths = [];\r\n}\r\n\r\nSVGStrokeEffect.prototype.initialize = function(){\r\n\r\n    var elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n    var path,groupPath, i, len;\r\n    if(this.filterManager.effectElements[1].p.v === 1){\r\n        len = this.elem.maskManager.masksProperties.length;\r\n        i = 0;\r\n    } else {\r\n        i = this.filterManager.effectElements[0].p.v - 1;\r\n        len = i + 1;\r\n    }\r\n    groupPath = createNS('g'); \r\n    groupPath.setAttribute('fill','none');\r\n    groupPath.setAttribute('stroke-linecap','round');\r\n    groupPath.setAttribute('stroke-dashoffset',1);\r\n    for(i;i<len;i+=1){\r\n        path = createNS('path');\r\n        groupPath.appendChild(path);\r\n        this.paths.push({p:path,m:i});\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 3){\r\n        var mask = createNS('mask');\r\n        var id = createElementID();\r\n        mask.setAttribute('id',id);\r\n        mask.setAttribute('mask-type','alpha');\r\n        mask.appendChild(groupPath);\r\n        this.elem.globalData.defs.appendChild(mask);\r\n        var g = createNS('g');\r\n        g.setAttribute('mask','url(' + locationHref + '#'+id+')');\r\n        while (elemChildren[0]) {\r\n            g.appendChild(elemChildren[0]);\r\n        }\r\n        this.elem.layerElement.appendChild(g);\r\n        this.masker = mask;\r\n        groupPath.setAttribute('stroke','#fff');\r\n    } else if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(this.filterManager.effectElements[10].p.v === 2){\r\n            elemChildren = this.elem.layerElement.children || this.elem.layerElement.childNodes;\r\n            while(elemChildren.length){\r\n                this.elem.layerElement.removeChild(elemChildren[0]);\r\n            }\r\n        }\r\n        this.elem.layerElement.appendChild(groupPath);\r\n        this.elem.layerElement.removeAttribute('mask');\r\n        groupPath.setAttribute('stroke','#fff');\r\n    }\r\n    this.initialized = true;\r\n    this.pathMasker = groupPath;\r\n};\r\n\r\nSVGStrokeEffect.prototype.renderFrame = function(forceRender){\r\n    if(!this.initialized){\r\n        this.initialize();\r\n    }\r\n    var i, len = this.paths.length;\r\n    var mask, path;\r\n    for(i=0;i<len;i+=1){\r\n        if(this.paths[i].m === -1) {\r\n            continue;\r\n        }\r\n        mask = this.elem.maskManager.viewData[this.paths[i].m];\r\n        path = this.paths[i].p;\r\n        if(forceRender || this.filterManager._mdf || mask.prop._mdf){\r\n            path.setAttribute('d',mask.lastPath);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[9].p._mdf || this.filterManager.effectElements[4].p._mdf || this.filterManager.effectElements[7].p._mdf || this.filterManager.effectElements[8].p._mdf || mask.prop._mdf){\r\n            var dasharrayValue;\r\n            if(this.filterManager.effectElements[7].p.v !== 0 || this.filterManager.effectElements[8].p.v !== 100){\r\n                var s = Math.min(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var e = Math.max(this.filterManager.effectElements[7].p.v,this.filterManager.effectElements[8].p.v)/100;\r\n                var l = path.getTotalLength();\r\n                dasharrayValue = '0 0 0 ' + l*s + ' ';\r\n                var lineLength = l*(e-s);\r\n                var segment = 1+this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n                var units = Math.floor(lineLength/segment);\r\n                var j;\r\n                for(j=0;j<units;j+=1){\r\n                    dasharrayValue += '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100 + ' ';\r\n                }\r\n                dasharrayValue += '0 ' + l*10 + ' 0 0';\r\n            } else {\r\n                dasharrayValue = '1 ' + this.filterManager.effectElements[4].p.v*2*this.filterManager.effectElements[9].p.v/100;\r\n            }\r\n            path.setAttribute('stroke-dasharray',dasharrayValue);\r\n        }\r\n    }\r\n    if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n        this.pathMasker.setAttribute('stroke-width',this.filterManager.effectElements[4].p.v*2);\r\n    }\r\n    \r\n    if(forceRender || this.filterManager.effectElements[6].p._mdf){\r\n        this.pathMasker.setAttribute('opacity',this.filterManager.effectElements[6].p.v);\r\n    }\r\n    if(this.filterManager.effectElements[10].p.v === 1 || this.filterManager.effectElements[10].p.v === 2){\r\n        if(forceRender || this.filterManager.effectElements[3].p._mdf){\r\n            var color = this.filterManager.effectElements[3].p.v;\r\n            this.pathMasker.setAttribute('stroke','rgb('+bm_floor(color[0]*255)+','+bm_floor(color[1]*255)+','+bm_floor(color[2]*255)+')');\r\n        }\r\n    }\r\n};\r\nfunction SVGTritoneFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var feColorMatrix = createNS('feColorMatrix');\r\n    feColorMatrix.setAttribute('type','matrix');\r\n    feColorMatrix.setAttribute('color-interpolation-filters','linearRGB');\r\n    feColorMatrix.setAttribute('values','0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0');\r\n    feColorMatrix.setAttribute('result','f1');\r\n    filter.appendChild(feColorMatrix);\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n    filter.appendChild(feComponentTransfer);\r\n    this.matrixFilter = feComponentTransfer;\r\n    var feFuncR = createNS('feFuncR');\r\n    feFuncR.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncR);\r\n    this.feFuncR = feFuncR;\r\n    var feFuncG = createNS('feFuncG');\r\n    feFuncG.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncG);\r\n    this.feFuncG = feFuncG;\r\n    var feFuncB = createNS('feFuncB');\r\n    feFuncB.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFuncB);\r\n    this.feFuncB = feFuncB;\r\n}\r\n\r\nSVGTritoneFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var color1 = this.filterManager.effectElements[0].p.v;\r\n        var color2 = this.filterManager.effectElements[1].p.v;\r\n        var color3 = this.filterManager.effectElements[2].p.v;\r\n        var tableR = color3[0] + ' ' + color2[0] + ' ' + color1[0];\r\n        var tableG = color3[1] + ' ' + color2[1] + ' ' + color1[1];\r\n        var tableB = color3[2] + ' ' + color2[2] + ' ' + color1[2];\r\n        this.feFuncR.setAttribute('tableValues', tableR);\r\n        this.feFuncG.setAttribute('tableValues', tableG);\r\n        this.feFuncB.setAttribute('tableValues', tableB);\r\n        //var opacity = this.filterManager.effectElements[2].p.v/100;\r\n        //this.matrixFilter.setAttribute('values',(colorWhite[0]- colorBlack[0])+' 0 0 0 '+ colorBlack[0] +' '+ (colorWhite[1]- colorBlack[1]) +' 0 0 0 '+ colorBlack[1] +' '+ (colorWhite[2]- colorBlack[2]) +' 0 0 0 '+ colorBlack[2] +' 0 0 0 ' + opacity + ' 0');\r\n    }\r\n};\r\nfunction SVGProLevelsFilter(filter, filterManager){\r\n    this.filterManager = filterManager;\r\n    var effectElements = this.filterManager.effectElements;\r\n    var feComponentTransfer = createNS('feComponentTransfer');\r\n    var feFuncR, feFuncG, feFuncB;\r\n    \r\n    if(effectElements[10].p.k || effectElements[10].p.v !== 0 || effectElements[11].p.k || effectElements[11].p.v !== 1 || effectElements[12].p.k || effectElements[12].p.v !== 1 || effectElements[13].p.k || effectElements[13].p.v !== 0 || effectElements[14].p.k || effectElements[14].p.v !== 1){\r\n        this.feFuncR = this.createFeFunc('feFuncR', feComponentTransfer);\r\n    }\r\n    if(effectElements[17].p.k || effectElements[17].p.v !== 0 || effectElements[18].p.k || effectElements[18].p.v !== 1 || effectElements[19].p.k || effectElements[19].p.v !== 1 || effectElements[20].p.k || effectElements[20].p.v !== 0 || effectElements[21].p.k || effectElements[21].p.v !== 1){\r\n        this.feFuncG = this.createFeFunc('feFuncG', feComponentTransfer);\r\n    }\r\n    if(effectElements[24].p.k || effectElements[24].p.v !== 0 || effectElements[25].p.k || effectElements[25].p.v !== 1 || effectElements[26].p.k || effectElements[26].p.v !== 1 || effectElements[27].p.k || effectElements[27].p.v !== 0 || effectElements[28].p.k || effectElements[28].p.v !== 1){\r\n        this.feFuncB = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n    if(effectElements[31].p.k || effectElements[31].p.v !== 0 || effectElements[32].p.k || effectElements[32].p.v !== 1 || effectElements[33].p.k || effectElements[33].p.v !== 1 || effectElements[34].p.k || effectElements[34].p.v !== 0 || effectElements[35].p.k || effectElements[35].p.v !== 1){\r\n        this.feFuncA = this.createFeFunc('feFuncA', feComponentTransfer);\r\n    }\r\n    \r\n    if(this.feFuncR || this.feFuncG || this.feFuncB || this.feFuncA){\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        feComponentTransfer = createNS('feComponentTransfer');\r\n    }\r\n\r\n    if(effectElements[3].p.k || effectElements[3].p.v !== 0 || effectElements[4].p.k || effectElements[4].p.v !== 1 || effectElements[5].p.k || effectElements[5].p.v !== 1 || effectElements[6].p.k || effectElements[6].p.v !== 0 || effectElements[7].p.k || effectElements[7].p.v !== 1){\r\n\r\n        feComponentTransfer.setAttribute('color-interpolation-filters','sRGB');\r\n        filter.appendChild(feComponentTransfer);\r\n        this.feFuncRComposed = this.createFeFunc('feFuncR', feComponentTransfer);\r\n        this.feFuncGComposed = this.createFeFunc('feFuncG', feComponentTransfer);\r\n        this.feFuncBComposed = this.createFeFunc('feFuncB', feComponentTransfer);\r\n    }\r\n}\r\n\r\nSVGProLevelsFilter.prototype.createFeFunc = function(type, feComponentTransfer) {\r\n    var feFunc = createNS(type);\r\n    feFunc.setAttribute('type','table');\r\n    feComponentTransfer.appendChild(feFunc);\r\n    return feFunc;\r\n};\r\n\r\nSVGProLevelsFilter.prototype.getTableValue = function(inputBlack, inputWhite, gamma, outputBlack, outputWhite) {\r\n    var cnt = 0;\r\n    var segments = 256;\r\n    var perc;\r\n    var min = Math.min(inputBlack, inputWhite);\r\n    var max = Math.max(inputBlack, inputWhite);\r\n    var table = Array.call(null,{length:segments});\r\n    var colorValue;\r\n    var pos = 0;\r\n    var outputDelta = outputWhite - outputBlack; \r\n    var inputDelta = inputWhite - inputBlack; \r\n    while(cnt <= 256) {\r\n        perc = cnt/256;\r\n        if(perc <= min){\r\n            colorValue = inputDelta < 0 ? outputWhite : outputBlack;\r\n        } else if(perc >= max){\r\n            colorValue = inputDelta < 0 ? outputBlack : outputWhite;\r\n        } else {\r\n            colorValue = (outputBlack + outputDelta * Math.pow((perc - inputBlack) / inputDelta, 1 / gamma));\r\n        }\r\n        table[pos++] = colorValue;\r\n        cnt += 256/(segments-1);\r\n    }\r\n    return table.join(' ');\r\n};\r\n\r\nSVGProLevelsFilter.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        var val, cnt, perc, bezier;\r\n        var effectElements = this.filterManager.effectElements;\r\n        if(this.feFuncRComposed && (forceRender || effectElements[3].p._mdf || effectElements[4].p._mdf || effectElements[5].p._mdf || effectElements[6].p._mdf || effectElements[7].p._mdf)){\r\n            val = this.getTableValue(effectElements[3].p.v,effectElements[4].p.v,effectElements[5].p.v,effectElements[6].p.v,effectElements[7].p.v);\r\n            this.feFuncRComposed.setAttribute('tableValues',val);\r\n            this.feFuncGComposed.setAttribute('tableValues',val);\r\n            this.feFuncBComposed.setAttribute('tableValues',val);\r\n        }\r\n\r\n\r\n        if(this.feFuncR && (forceRender || effectElements[10].p._mdf || effectElements[11].p._mdf || effectElements[12].p._mdf || effectElements[13].p._mdf || effectElements[14].p._mdf)){\r\n            val = this.getTableValue(effectElements[10].p.v,effectElements[11].p.v,effectElements[12].p.v,effectElements[13].p.v,effectElements[14].p.v);\r\n            this.feFuncR.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncG && (forceRender || effectElements[17].p._mdf || effectElements[18].p._mdf || effectElements[19].p._mdf || effectElements[20].p._mdf || effectElements[21].p._mdf)){\r\n            val = this.getTableValue(effectElements[17].p.v,effectElements[18].p.v,effectElements[19].p.v,effectElements[20].p.v,effectElements[21].p.v);\r\n            this.feFuncG.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncB && (forceRender || effectElements[24].p._mdf || effectElements[25].p._mdf || effectElements[26].p._mdf || effectElements[27].p._mdf || effectElements[28].p._mdf)){\r\n            val = this.getTableValue(effectElements[24].p.v,effectElements[25].p.v,effectElements[26].p.v,effectElements[27].p.v,effectElements[28].p.v);\r\n            this.feFuncB.setAttribute('tableValues',val);\r\n        }\r\n\r\n        if(this.feFuncA && (forceRender || effectElements[31].p._mdf || effectElements[32].p._mdf || effectElements[33].p._mdf || effectElements[34].p._mdf || effectElements[35].p._mdf)){\r\n            val = this.getTableValue(effectElements[31].p.v,effectElements[32].p.v,effectElements[33].p.v,effectElements[34].p.v,effectElements[35].p.v);\r\n            this.feFuncA.setAttribute('tableValues',val);\r\n        }\r\n        \r\n    }\r\n};\r\nfunction SVGDropShadowEffect(filter, filterManager){\r\n    filter.setAttribute('x','-100%');\r\n    filter.setAttribute('y','-100%');\r\n    filter.setAttribute('width','400%');\r\n    filter.setAttribute('height','400%');\r\n    this.filterManager = filterManager;\r\n\r\n    var feGaussianBlur = createNS('feGaussianBlur');\r\n    feGaussianBlur.setAttribute('in','SourceAlpha');\r\n    feGaussianBlur.setAttribute('result','drop_shadow_1');\r\n    feGaussianBlur.setAttribute('stdDeviation','0');\r\n    this.feGaussianBlur = feGaussianBlur;\r\n    filter.appendChild(feGaussianBlur);\r\n\r\n    var feOffset = createNS('feOffset');\r\n    feOffset.setAttribute('dx','25');\r\n    feOffset.setAttribute('dy','0');\r\n    feOffset.setAttribute('in','drop_shadow_1');\r\n    feOffset.setAttribute('result','drop_shadow_2');\r\n    this.feOffset = feOffset;\r\n    filter.appendChild(feOffset);\r\n    var feFlood = createNS('feFlood');\r\n    feFlood.setAttribute('flood-color','#00ff00');\r\n    feFlood.setAttribute('flood-opacity','1');\r\n    feFlood.setAttribute('result','drop_shadow_3');\r\n    this.feFlood = feFlood;\r\n    filter.appendChild(feFlood);\r\n\r\n    var feComposite = createNS('feComposite');\r\n    feComposite.setAttribute('in','drop_shadow_3');\r\n    feComposite.setAttribute('in2','drop_shadow_2');\r\n    feComposite.setAttribute('operator','in');\r\n    feComposite.setAttribute('result','drop_shadow_4');\r\n    filter.appendChild(feComposite);\r\n\r\n\r\n    var feMerge = createNS('feMerge');\r\n    filter.appendChild(feMerge);\r\n    var feMergeNode;\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMerge.appendChild(feMergeNode);\r\n    feMergeNode = createNS('feMergeNode');\r\n    feMergeNode.setAttribute('in','SourceGraphic');\r\n    this.feMergeNode = feMergeNode;\r\n    this.feMerge = feMerge;\r\n    this.originalNodeAdded = false;\r\n    feMerge.appendChild(feMergeNode);\r\n}\r\n\r\nSVGDropShadowEffect.prototype.renderFrame = function(forceRender){\r\n    if(forceRender || this.filterManager._mdf){\r\n        if(forceRender || this.filterManager.effectElements[4].p._mdf){\r\n            this.feGaussianBlur.setAttribute('stdDeviation', this.filterManager.effectElements[4].p.v / 4);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[0].p._mdf){\r\n            var col = this.filterManager.effectElements[0].p.v;\r\n            this.feFlood.setAttribute('flood-color',rgbToHex(Math.round(col[0]*255),Math.round(col[1]*255),Math.round(col[2]*255)));\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[1].p._mdf){\r\n            this.feFlood.setAttribute('flood-opacity',this.filterManager.effectElements[1].p.v/255);\r\n        }\r\n        if(forceRender || this.filterManager.effectElements[2].p._mdf || this.filterManager.effectElements[3].p._mdf){\r\n            var distance = this.filterManager.effectElements[3].p.v;\r\n            var angle = (this.filterManager.effectElements[2].p.v - 90) * degToRads;\r\n            var x = distance * Math.cos(angle);\r\n            var y = distance * Math.sin(angle);\r\n            this.feOffset.setAttribute('dx', x);\r\n            this.feOffset.setAttribute('dy', y);\r\n        }\r\n        /*if(forceRender || this.filterManager.effectElements[5].p._mdf){\r\n            if(this.filterManager.effectElements[5].p.v === 1 && this.originalNodeAdded) {\r\n                this.feMerge.removeChild(this.feMergeNode);\r\n                this.originalNodeAdded = false;\r\n            } else if(this.filterManager.effectElements[5].p.v === 0 && !this.originalNodeAdded) {\r\n                this.feMerge.appendChild(this.feMergeNode);\r\n                this.originalNodeAdded = true;\r\n            }\r\n        }*/\r\n    }\r\n};\r\nvar _svgMatteSymbols = [];\r\n\r\nfunction SVGMatte3Effect(filterElem, filterManager, elem){\r\n    this.initialized = false;\r\n    this.filterManager = filterManager;\r\n    this.filterElem = filterElem;\r\n    this.elem = elem;\r\n    elem.matteElement = createNS('g');\r\n    elem.matteElement.appendChild(elem.layerElement);\r\n    elem.matteElement.appendChild(elem.transformedElement);\r\n    elem.baseElement = elem.matteElement;\r\n}\r\n\r\nSVGMatte3Effect.prototype.findSymbol = function(mask) {\r\n    var i = 0, len = _svgMatteSymbols.length;\r\n    while(i < len) {\r\n        if(_svgMatteSymbols[i] === mask) {\r\n            return _svgMatteSymbols[i];\r\n        }\r\n        i += 1;\r\n    }\r\n    return null;\r\n};\r\n\r\nSVGMatte3Effect.prototype.replaceInParent = function(mask, symbolId) {\r\n    var parentNode = mask.layerElement.parentNode;\r\n    if(!parentNode) {\r\n        return;\r\n    }\r\n    var children = parentNode.children;\r\n    var i = 0, len = children.length;\r\n    while (i < len) {\r\n        if (children[i] === mask.layerElement) {\r\n            break;\r\n        }\r\n        i += 1;\r\n    }\r\n    var nextChild;\r\n    if (i <= len - 2) {\r\n        nextChild = children[i + 1];\r\n    }\r\n    var useElem = createNS('use');\r\n    useElem.setAttribute('href', '#' + symbolId);\r\n    if(nextChild) {\r\n        parentNode.insertBefore(useElem, nextChild);\r\n    } else {\r\n        parentNode.appendChild(useElem);\r\n    }\r\n};\r\n\r\nSVGMatte3Effect.prototype.setElementAsMask = function(elem, mask) {\r\n    if(!this.findSymbol(mask)) {\r\n        var symbolId = createElementID();\r\n        var masker = createNS('mask');\r\n        masker.setAttribute('id', mask.layerId);\r\n        masker.setAttribute('mask-type', 'alpha');\r\n        _svgMatteSymbols.push(mask);\r\n        var defs = elem.globalData.defs;\r\n        defs.appendChild(masker);\r\n        var symbol = createNS('symbol');\r\n        symbol.setAttribute('id', symbolId);\r\n        this.replaceInParent(mask, symbolId);\r\n        symbol.appendChild(mask.layerElement);\r\n        defs.appendChild(symbol);\r\n        var useElem = createNS('use');\r\n        useElem.setAttribute('href', '#' + symbolId);\r\n        masker.appendChild(useElem);\r\n        mask.data.hd = false;\r\n        mask.show();\r\n    }\r\n    elem.setMatte(mask.layerId);\r\n};\r\n\r\nSVGMatte3Effect.prototype.initialize = function() {\r\n    var ind = this.filterManager.effectElements[0].p.v;\r\n    var elements = this.elem.comp.elements;\r\n    var i = 0, len = elements.length;\r\n    while (i < len) {\r\n    \tif (elements[i] && elements[i].data.ind === ind) {\r\n    \t\tthis.setElementAsMask(this.elem, elements[i]);\r\n    \t}\r\n    \ti += 1;\r\n    }\r\n    this.initialized = true;\r\n};\r\n\r\nSVGMatte3Effect.prototype.renderFrame = function() {\r\n\tif(!this.initialized) {\r\n\t\tthis.initialize();\r\n\t}\r\n};\r\nfunction SVGEffects(elem){\r\n    var i, len = elem.data.ef ? elem.data.ef.length : 0;\r\n    var filId = createElementID();\r\n    var fil = filtersFactory.createFilter(filId);\r\n    var count = 0;\r\n    this.filters = [];\r\n    var filterManager;\r\n    for(i=0;i<len;i+=1){\r\n        filterManager = null;\r\n        if(elem.data.ef[i].ty === 20){\r\n            count += 1;\r\n            filterManager = new SVGTintFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 21){\r\n            count += 1;\r\n            filterManager = new SVGFillFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 22){\r\n            filterManager = new SVGStrokeEffect(elem, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 23){\r\n            count += 1;\r\n            filterManager = new SVGTritoneFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 24){\r\n            count += 1;\r\n            filterManager = new SVGProLevelsFilter(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 25){\r\n            count += 1;\r\n            filterManager = new SVGDropShadowEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }else if(elem.data.ef[i].ty === 28){\r\n            //count += 1;\r\n            filterManager = new SVGMatte3Effect(fil, elem.effectsManager.effectElements[i], elem);\r\n        }else if(elem.data.ef[i].ty === 29){\r\n            count += 1;\r\n            filterManager = new SVGGaussianBlurEffect(fil, elem.effectsManager.effectElements[i]);\r\n        }\r\n        if(filterManager) {\r\n            this.filters.push(filterManager);\r\n        }\r\n    }\r\n    if(count){\r\n        elem.globalData.defs.appendChild(fil);\r\n        elem.layerElement.setAttribute('filter','url(' + locationHref + '#'+filId+')');\r\n    }\r\n    if (this.filters.length) {\r\n        elem.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nSVGEffects.prototype.renderFrame = function(_isFirstFrame){\r\n    var i, len = this.filters.length;\r\n    for(i=0;i<len;i+=1){\r\n        this.filters[i].renderFrame(_isFirstFrame);\r\n    }\r\n};\r\nfunction CVContextData() {\r\n\tthis.saved = [];\r\n    this.cArrPos = 0;\r\n    this.cTr = new Matrix();\r\n    this.cO = 1;\r\n    var i, len = 15;\r\n    this.savedOp = createTypedArray('float32', len);\r\n    for(i=0;i<len;i+=1){\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = len;\r\n}\r\n\r\nCVContextData.prototype.duplicate = function() {\r\n\tvar newLength = this._length * 2;\r\n\tvar currentSavedOp = this.savedOp;\r\n    this.savedOp = createTypedArray('float32', newLength);\r\n    this.savedOp.set(currentSavedOp);\r\n    var i = 0;\r\n    for(i = this._length; i < newLength; i += 1) {\r\n        this.saved[i] = createTypedArray('float32', 16);\r\n    }\r\n    this._length = newLength;\r\n};\r\n\r\nCVContextData.prototype.reset = function() {\r\n\tthis.cArrPos = 0;\r\n\tthis.cTr.reset();\r\n    this.cO = 1;\r\n};\r\nfunction CVBaseElement(){\r\n}\r\n\r\nCVBaseElement.prototype = {\r\n    createElements: function(){},\r\n    initRendererElement: function(){},\r\n    createContainerElements: function(){\r\n        this.canvasContext = this.globalData.canvasContext;\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n    },\r\n    createContent: function(){},\r\n    setBlendMode: function(){\r\n        var globalData = this.globalData;\r\n        if(globalData.blendMode !== this.data.bm) {\r\n            globalData.blendMode = this.data.bm;\r\n            var blendModeValue = getBlendMode(this.data.bm);\r\n            globalData.canvasContext.globalCompositeOperation = blendModeValue;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new CVMaskElement(this.data, this);\r\n    },\r\n    hideElement: function(){\r\n        if (!this.hidden && (!this.isInRange || this.isTransparent)) {\r\n            this.hidden = true;\r\n        }\r\n    },\r\n    showElement: function(){\r\n        if (this.isInRange && !this.isTransparent){\r\n            this.hidden = false;\r\n            this._isFirstFrame = true;\r\n            this.maskManager._isFirstFrame = true;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        if (this.hidden || this.data.hd) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.setBlendMode();\r\n        var forceRealStack = this.data.ty === 0;\r\n        this.globalData.renderer.save(forceRealStack);\r\n        this.globalData.renderer.ctxTransform(this.finalTransform.mat.props);\r\n        this.globalData.renderer.ctxOpacity(this.finalTransform.mProp.o.v);\r\n        this.renderInnerContent();\r\n        this.globalData.renderer.restore(forceRealStack);\r\n        if(this.maskManager.hasMasks) {\r\n            this.globalData.renderer.restore(true);\r\n        }\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.canvasContext = null;\r\n        this.data = null;\r\n        this.globalData = null;\r\n        this.maskManager.destroy();\r\n    },\r\n    mHelper: new Matrix()\r\n};\r\nCVBaseElement.prototype.hide = CVBaseElement.prototype.hideElement;\r\nCVBaseElement.prototype.show = CVBaseElement.prototype.showElement;\r\n\r\nfunction CVImageElement(data, globalData, comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.img = globalData.imageLoader.getImage(this.assetData);\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVImageElement);\r\n\r\nCVImageElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVImageElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVImageElement.prototype.createContent = function(){\r\n\r\n    if (this.img.width && (this.assetData.w !== this.img.width || this.assetData.h !== this.img.height)) {\r\n        var canvas = createTag('canvas');\r\n        canvas.width = this.assetData.w;\r\n        canvas.height = this.assetData.h;\r\n        var ctx = canvas.getContext('2d');\r\n\r\n        var imgW = this.img.width;\r\n        var imgH = this.img.height;\r\n        var imgRel = imgW / imgH;\r\n        var canvasRel = this.assetData.w/this.assetData.h;\r\n        var widthCrop, heightCrop;\r\n        var par = this.assetData.pr || this.globalData.renderConfig.imagePreserveAspectRatio;\r\n        if((imgRel > canvasRel && par === 'xMidYMid slice') || (imgRel < canvasRel && par !== 'xMidYMid slice')) {\r\n            heightCrop = imgH;\r\n            widthCrop = heightCrop*canvasRel;\r\n        } else {\r\n            widthCrop = imgW;\r\n            heightCrop = widthCrop/canvasRel;\r\n        }\r\n        ctx.drawImage(this.img,(imgW-widthCrop)/2,(imgH-heightCrop)/2,widthCrop,heightCrop,0,0,this.assetData.w,this.assetData.h);\r\n        this.img = canvas;\r\n    }\r\n\r\n};\r\n\r\nCVImageElement.prototype.renderInnerContent = function(parentMatrix){\r\n    this.canvasContext.drawImage(this.img, 0, 0);\r\n};\r\n\r\nCVImageElement.prototype.destroy = function(){\r\n    this.img = null;\r\n};\r\nfunction CVCompElement(data, globalData, comp) {\r\n    this.completeLayers = false;\r\n    this.layers = data.layers;\r\n    this.pendingElements = [];\r\n    this.elements = createSizedArray(this.layers.length);\r\n    this.initElement(data, globalData, comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate, this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([CanvasRenderer, ICompElement, CVBaseElement], CVCompElement);\r\n\r\nCVCompElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.beginPath();\r\n    ctx.moveTo(0, 0);\r\n    ctx.lineTo(this.data.w, 0);\r\n    ctx.lineTo(this.data.w, this.data.h);\r\n    ctx.lineTo(0, this.data.h);\r\n    ctx.lineTo(0, 0);\r\n    ctx.clip();\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.completeLayers || this.elements[i]){\r\n            this.elements[i].renderFrame();\r\n        }\r\n    }\r\n};\r\n\r\nCVCompElement.prototype.destroy = function(){\r\n    var i,len = this.layers.length;\r\n    for( i = len - 1; i >= 0; i -= 1 ){\r\n        if(this.elements[i]) {\r\n            this.elements[i].destroy();\r\n        }\r\n    }\r\n    this.layers = null;\r\n    this.elements = null;\r\n};\r\n\r\nfunction CVMaskElement(data,element){\r\n    this.data = data;\r\n    this.element = element;\r\n    this.masksProperties = this.data.masksProperties || [];\r\n    this.viewData = createSizedArray(this.masksProperties.length);\r\n    var i, len = this.masksProperties.length, hasMasks = false;\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            hasMasks = true;\r\n        }\r\n        this.viewData[i] = ShapePropertyFactory.getShapeProp(this.element,this.masksProperties[i],3);\r\n    }\r\n    this.hasMasks = hasMasks;\r\n    if(hasMasks) {\r\n        this.element.addRenderableComponent(this);\r\n    }\r\n}\r\n\r\nCVMaskElement.prototype.renderFrame = function () {\r\n    if(!this.hasMasks){\r\n        return;\r\n    }\r\n    var transform = this.element.finalTransform.mat;\r\n    var ctx = this.element.canvasContext;\r\n    var i, len = this.masksProperties.length;\r\n    var pt,pts,data;\r\n    ctx.beginPath();\r\n    for (i = 0; i < len; i++) {\r\n        if(this.masksProperties[i].mode !== 'n'){\r\n            if (this.masksProperties[i].inv) {\r\n                ctx.moveTo(0, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, 0);\r\n                ctx.lineTo(this.element.globalData.compSize.w, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, this.element.globalData.compSize.h);\r\n                ctx.lineTo(0, 0);\r\n            }\r\n            data = this.viewData[i].v;\r\n            pt = transform.applyToPointArray(data.v[0][0],data.v[0][1],0);\r\n            ctx.moveTo(pt[0], pt[1]);\r\n            var j, jLen = data._length;\r\n            for (j = 1; j < jLen; j++) {\r\n                pts = transform.applyToTriplePoints(data.o[j - 1], data.i[j], data.v[j]);\r\n                ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n            }\r\n            pts = transform.applyToTriplePoints(data.o[j - 1], data.i[0], data.v[0]);\r\n            ctx.bezierCurveTo(pts[0], pts[1], pts[2], pts[3], pts[4], pts[5]);\r\n        }\r\n    }\r\n    this.element.globalData.renderer.save(true);\r\n    ctx.clip();\r\n};\r\n\r\nCVMaskElement.prototype.getMaskProperty = MaskElement.prototype.getMaskProperty;\r\n\r\nCVMaskElement.prototype.destroy = function(){\r\n    this.element = null;\r\n};\r\nfunction CVShapeElement(data, globalData, comp) {\r\n    this.shapes = [];\r\n    this.shapesData = data.shapes;\r\n    this.stylesList = [];\r\n    this.itemsData = [];\r\n    this.prevViewData = [];\r\n    this.shapeModifiers = [];\r\n    this.processedElements = [];\r\n    this.transformsManager = new ShapeTransformManager();\r\n    this.initElement(data, globalData, comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,IShapeElement,HierarchyElement,FrameElement,RenderableElement], CVShapeElement);\r\n\r\nCVShapeElement.prototype.initElement = RenderableDOMElement.prototype.initElement;\r\n\r\nCVShapeElement.prototype.transformHelper = {opacity:1,_opMdf:false};\r\n\r\nCVShapeElement.prototype.dashResetter = [];\r\n\r\nCVShapeElement.prototype.createContent = function(){\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n};\r\n\r\nCVShapeElement.prototype.createStyleElement = function(data, transforms) {\r\n    var styleElem = {\r\n        data: data,\r\n        type: data.ty,\r\n        preTransforms: this.transformsManager.addTransformSequence(transforms),\r\n        transforms: [],\r\n        elements: [],\r\n        closed: data.hd === true\r\n    };\r\n    var elementData = {};\r\n    if(data.ty == 'fl' || data.ty == 'st'){\r\n        elementData.c = PropertyFactory.getProp(this,data.c,1,255,this);\r\n        if(!elementData.c.k){\r\n            styleElem.co = 'rgb('+bm_floor(elementData.c.v[0])+','+bm_floor(elementData.c.v[1])+','+bm_floor(elementData.c.v[2])+')';\r\n        }\r\n    } else if (data.ty === 'gf' || data.ty === 'gs') {\r\n        elementData.s = PropertyFactory.getProp(this,data.s,1,null,this);\r\n        elementData.e = PropertyFactory.getProp(this,data.e,1,null,this);\r\n        elementData.h = PropertyFactory.getProp(this,data.h||{k:0},0,0.01,this);\r\n        elementData.a = PropertyFactory.getProp(this,data.a||{k:0},0,degToRads,this);\r\n        elementData.g = new GradientProperty(this,data.g,this);\r\n    }\r\n    elementData.o = PropertyFactory.getProp(this,data.o,0,0.01,this);\r\n    if(data.ty == 'st' || data.ty == 'gs') {\r\n        styleElem.lc = this.lcEnum[data.lc] || 'round';\r\n        styleElem.lj = this.ljEnum[data.lj] || 'round';\r\n        if(data.lj == 1) {\r\n            styleElem.ml = data.ml;\r\n        }\r\n        elementData.w = PropertyFactory.getProp(this,data.w,0,null,this);\r\n        if(!elementData.w.k){\r\n            styleElem.wi = elementData.w.v;\r\n        }\r\n        if(data.d){\r\n            var d = new DashProperty(this,data.d,'canvas', this);\r\n            elementData.d = d;\r\n            if(!elementData.d.k){\r\n                styleElem.da = elementData.d.dashArray;\r\n                styleElem.do = elementData.d.dashoffset[0];\r\n            }\r\n        }\r\n    } else {\r\n        styleElem.r = data.r === 2 ? 'evenodd' : 'nonzero';\r\n    }\r\n    this.stylesList.push(styleElem);\r\n    elementData.style = styleElem;\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createGroupElement = function(data) {\r\n    var elementData = {\r\n        it: [],\r\n        prevViewData: []\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createTransformElement = function(data) {\r\n    var elementData = {\r\n        transform : {\r\n            opacity: 1,\r\n            _opMdf:false,\r\n            key: this.transformsManager.getNewKey(),\r\n            op: PropertyFactory.getProp(this,data.o,0,0.01,this),\r\n            mProps: TransformPropertyFactory.getTransformProperty(this,data,this)\r\n        }\r\n    };\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.createShapeElement = function(data) {\r\n    var elementData = new CVShapeData(this, data, this.stylesList, this.transformsManager);\r\n    \r\n    this.shapes.push(elementData);\r\n    this.addShapeToModifiers(elementData);\r\n    return elementData;\r\n};\r\n\r\nCVShapeElement.prototype.reloadShapes = function() {\r\n    this._isFirstFrame = true;\r\n    var i, len = this.itemsData.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.prevViewData[i] = this.itemsData[i];\r\n    }\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData, true, []);\r\n    len = this.dynamicProperties.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        this.dynamicProperties[i].getValue();\r\n    }\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n};\r\n\r\nCVShapeElement.prototype.addTransformToStyleList = function(transform) {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.push(transform);\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.removeTransformFromStyleList = function() {\r\n    var i, len = this.stylesList.length;\r\n    for (i = 0; i < len; i += 1) {\r\n        if(!this.stylesList[i].closed) {\r\n            this.stylesList[i].transforms.pop();\r\n        }\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.closeStyles = function(styles) {\r\n    var i, len = styles.length, j, jLen;\r\n    for (i = 0; i < len; i += 1) {\r\n        styles[i].closed = true;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.searchShapes = function(arr,itemsData, prevViewData, shouldRender, transforms){\r\n    var i, len = arr.length - 1;\r\n    var j, jLen;\r\n    var ownStyles = [], ownModifiers = [], processedPos, modifier, currentTransform;\r\n    var ownTransforms = [].concat(transforms);\r\n    for(i=len;i>=0;i-=1){\r\n        processedPos = this.searchProcessedElement(arr[i]);\r\n        if(!processedPos){\r\n            arr[i]._shouldRender = shouldRender;\r\n        } else {\r\n            itemsData[i] = prevViewData[processedPos - 1];\r\n        }\r\n        if(arr[i].ty == 'fl' || arr[i].ty == 'st'|| arr[i].ty == 'gf'|| arr[i].ty == 'gs'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createStyleElement(arr[i], ownTransforms);\r\n            } else {\r\n                itemsData[i].style.closed = false;\r\n            }\r\n            \r\n            ownStyles.push(itemsData[i].style);\r\n        }else if(arr[i].ty == 'gr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createGroupElement(arr[i]);\r\n            } else {\r\n                jLen = itemsData[i].it.length;\r\n                for(j=0;j<jLen;j+=1){\r\n                    itemsData[i].prevViewData[j] = itemsData[i].it[j];\r\n                }\r\n            }\r\n            this.searchShapes(arr[i].it,itemsData[i].it,itemsData[i].prevViewData, shouldRender, ownTransforms);\r\n        }else if(arr[i].ty == 'tr'){\r\n            if(!processedPos){\r\n                currentTransform = this.createTransformElement(arr[i]);\r\n                itemsData[i] = currentTransform;\r\n            }\r\n            ownTransforms.push(itemsData[i]);\r\n            this.addTransformToStyleList(itemsData[i]);\r\n        }else if(arr[i].ty == 'sh' || arr[i].ty == 'rc' || arr[i].ty == 'el' || arr[i].ty == 'sr'){\r\n            if(!processedPos){\r\n                itemsData[i] = this.createShapeElement(arr[i]);\r\n            }\r\n            \r\n        }else if(arr[i].ty == 'tm' || arr[i].ty == 'rd'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                modifier.init(this,arr[i]);\r\n                itemsData[i] = modifier;\r\n                this.shapeModifiers.push(modifier);\r\n            } else {\r\n                modifier = itemsData[i];\r\n                modifier.closed = false;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        } else if(arr[i].ty == 'rp'){\r\n            if(!processedPos){\r\n                modifier = ShapeModifiers.getModifier(arr[i].ty);\r\n                itemsData[i] = modifier;\r\n                modifier.init(this,arr,i,itemsData);\r\n                this.shapeModifiers.push(modifier);\r\n                shouldRender = false;\r\n            }else{\r\n                modifier = itemsData[i];\r\n                modifier.closed = true;\r\n            }\r\n            ownModifiers.push(modifier);\r\n        }\r\n        this.addProcessedElement(arr[i], i + 1);\r\n    }\r\n    this.removeTransformFromStyleList();\r\n    this.closeStyles(ownStyles);\r\n    len = ownModifiers.length;\r\n    for(i=0;i<len;i+=1){\r\n        ownModifiers[i].closed = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderInnerContent = function() {\r\n    this.transformHelper.opacity = 1;\r\n    this.transformHelper._opMdf = false;\r\n    this.renderModifiers();\r\n    this.transformsManager.processSequences(this._isFirstFrame);\r\n    this.renderShape(this.transformHelper,this.shapesData,this.itemsData,true);\r\n};\r\n\r\nCVShapeElement.prototype.renderShapeTransform = function(parentTransform, groupTransform) {\r\n    var props, groupMatrix;\r\n    if(parentTransform._opMdf || groupTransform.op._mdf || this._isFirstFrame) {\r\n        groupTransform.opacity = parentTransform.opacity;\r\n        groupTransform.opacity *= groupTransform.op.v;\r\n        groupTransform._opMdf = true;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.drawLayer = function() {\r\n    var i, len = this.stylesList.length;\r\n    var j, jLen, k, kLen,elems,nodes, renderer = this.globalData.renderer, ctx = this.globalData.canvasContext, type, currentStyle;\r\n    for(i=0;i<len;i+=1){\r\n        currentStyle = this.stylesList[i];\r\n        type = currentStyle.type;\r\n\r\n        //Skipping style when\r\n        //Stroke width equals 0\r\n        //style should not be rendered (extra unused repeaters)\r\n        //current opacity equals 0\r\n        //global opacity equals 0\r\n        if(((type === 'st' || type === 'gs') && currentStyle.wi === 0) || !currentStyle.data._shouldRender || currentStyle.coOp === 0 || this.globalData.currentGlobalAlpha === 0){\r\n            continue;\r\n        }\r\n        renderer.save();\r\n        elems = currentStyle.elements;\r\n        if(type === 'st' || type === 'gs'){\r\n            ctx.strokeStyle = type === 'st' ? currentStyle.co : currentStyle.grd;\r\n            ctx.lineWidth = currentStyle.wi;\r\n            ctx.lineCap = currentStyle.lc;\r\n            ctx.lineJoin = currentStyle.lj;\r\n            ctx.miterLimit = currentStyle.ml || 0;\r\n        } else {\r\n            ctx.fillStyle = type === 'fl' ? currentStyle.co : currentStyle.grd;\r\n        }\r\n        renderer.ctxOpacity(currentStyle.coOp);\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.beginPath();\r\n        }\r\n        renderer.ctxTransform(currentStyle.preTransforms.finalTransform.props);\r\n        jLen = elems.length;\r\n        for(j=0;j<jLen;j+=1){\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.beginPath();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(currentStyle.da);\r\n                    ctx.lineDashOffset = currentStyle.do;\r\n                }\r\n            }\r\n            nodes = elems[j].trNodes;\r\n            kLen = nodes.length;\r\n\r\n            for(k=0;k<kLen;k+=1){\r\n                if(nodes[k].t == 'm'){\r\n                    ctx.moveTo(nodes[k].p[0],nodes[k].p[1]);\r\n                }else if(nodes[k].t == 'c'){\r\n                    ctx.bezierCurveTo(nodes[k].pts[0],nodes[k].pts[1],nodes[k].pts[2],nodes[k].pts[3],nodes[k].pts[4],nodes[k].pts[5]);\r\n                }else{\r\n                    ctx.closePath();\r\n                }\r\n            }\r\n            if(type === 'st' || type === 'gs'){\r\n                ctx.stroke();\r\n                if(currentStyle.da){\r\n                    ctx.setLineDash(this.dashResetter);\r\n                }\r\n            }\r\n        }\r\n        if(type !== 'st' && type !== 'gs'){\r\n            ctx.fill(currentStyle.r);\r\n        }\r\n        renderer.restore();\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderShape = function(parentTransform,items,data,isMain){\r\n    var i, len = items.length - 1;\r\n    var groupTransform;\r\n    groupTransform = parentTransform;\r\n    for(i=len;i>=0;i-=1){\r\n        if(items[i].ty == 'tr'){\r\n            groupTransform = data[i].transform;\r\n            this.renderShapeTransform(parentTransform, groupTransform);\r\n        }else if(items[i].ty == 'sh' || items[i].ty == 'el' || items[i].ty == 'rc' || items[i].ty == 'sr'){\r\n            this.renderPath(items[i],data[i]);\r\n        }else if(items[i].ty == 'fl'){\r\n            this.renderFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'st'){\r\n            this.renderStroke(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gf' || items[i].ty == 'gs'){\r\n            this.renderGradientFill(items[i],data[i],groupTransform);\r\n        }else if(items[i].ty == 'gr'){\r\n            this.renderShape(groupTransform,items[i].it,data[i].it);\r\n        }else if(items[i].ty == 'tm'){\r\n            //\r\n        }\r\n    }\r\n    if(isMain){\r\n        this.drawLayer();\r\n    }\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStyledShape = function(styledShape, shape){\r\n    if(this._isFirstFrame || shape._mdf || styledShape.transforms._mdf) {\r\n        var shapeNodes = styledShape.trNodes;\r\n        var paths = shape.paths;\r\n        var i, len, j, jLen = paths._length;\r\n        shapeNodes.length = 0;\r\n        var groupTransformMat = styledShape.transforms.finalTransform;\r\n        for (j = 0; j < jLen; j += 1) {\r\n            var pathNodes = paths.shapes[j];\r\n            if(pathNodes && pathNodes.v){\r\n                len = pathNodes._length;\r\n                for (i = 1; i < len; i += 1) {\r\n                    if (i === 1) {\r\n                        shapeNodes.push({\r\n                            t: 'm',\r\n                            p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                        });\r\n                    }\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[i], pathNodes.v[i])\r\n                    });\r\n                }\r\n                if (len === 1) {\r\n                    shapeNodes.push({\r\n                        t: 'm',\r\n                        p: groupTransformMat.applyToPointArray(pathNodes.v[0][0], pathNodes.v[0][1], 0)\r\n                    });\r\n                }\r\n                if (pathNodes.c && len) {\r\n                    shapeNodes.push({\r\n                        t: 'c',\r\n                        pts: groupTransformMat.applyToTriplePoints(pathNodes.o[i - 1], pathNodes.i[0], pathNodes.v[0])\r\n                    });\r\n                    shapeNodes.push({\r\n                        t: 'z'\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        styledShape.trNodes = shapeNodes;\r\n    }\r\n}\r\n\r\nCVShapeElement.prototype.renderPath = function(pathData,itemData){\r\n    if(pathData.hd !== true && pathData._shouldRender) {\r\n        var i, len = itemData.styledShapes.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.renderStyledShape(itemData.styledShapes[i], itemData.sh);\r\n        }\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n\r\n    if (itemData.c._mdf || this._isFirstFrame) {\r\n        styleElem.co = 'rgb(' \r\n        + bm_floor(itemData.c.v[0]) + ',' \r\n        + bm_floor(itemData.c.v[1]) + ',' \r\n        + bm_floor(itemData.c.v[2]) + ')';\r\n    }\r\n    if (itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame) {\r\n        styleElem.coOp = itemData.o.v * groupTransform.opacity;\r\n    }\r\n};\r\n\r\nCVShapeElement.prototype.renderGradientFill = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    if(!styleElem.grd || itemData.g._mdf || itemData.s._mdf || itemData.e._mdf || (styleData.t !== 1 && (itemData.h._mdf || itemData.a._mdf))) {\r\n        var ctx = this.globalData.canvasContext;\r\n        var grd;\r\n        var pt1 = itemData.s.v, pt2 = itemData.e.v;\r\n        if (styleData.t === 1) {\r\n            grd = ctx.createLinearGradient(pt1[0], pt1[1], pt2[0], pt2[1]);\r\n        } else {\r\n            var rad = Math.sqrt(Math.pow(pt1[0] - pt2[0], 2) + Math.pow(pt1[1] - pt2[1], 2));\r\n            var ang = Math.atan2(pt2[1] - pt1[1], pt2[0] - pt1[0]);\r\n\r\n            var percent = itemData.h.v >= 1 ? 0.99 : itemData.h.v <= -1 ? -0.99: itemData.h.v;\r\n            var dist = rad * percent;\r\n            var x = Math.cos(ang + itemData.a.v) * dist + pt1[0];\r\n            var y = Math.sin(ang + itemData.a.v) * dist + pt1[1];\r\n            var grd = ctx.createRadialGradient(x, y, 0, pt1[0], pt1[1], rad);\r\n        }\r\n\r\n        var i, len = styleData.g.p;\r\n        var cValues = itemData.g.c;\r\n        var opacity = 1;\r\n\r\n        for (i = 0; i < len; i += 1){\r\n            if(itemData.g._hasOpacity && itemData.g._collapsable) {\r\n                opacity = itemData.g.o[i*2 + 1];\r\n            }\r\n            grd.addColorStop(cValues[i * 4] / 100,'rgba('+ cValues[i * 4 + 1] + ',' + cValues[i * 4 + 2] + ','+cValues[i * 4 + 3] + ',' + opacity + ')');\r\n        }\r\n        styleElem.grd = grd;\r\n    }\r\n    styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    \r\n};\r\n\r\nCVShapeElement.prototype.renderStroke = function(styleData,itemData, groupTransform){\r\n    var styleElem = itemData.style;\r\n    var d = itemData.d;\r\n    if(d && (d._mdf  || this._isFirstFrame)){\r\n        styleElem.da = d.dashArray;\r\n        styleElem.do = d.dashoffset[0];\r\n    }\r\n    if(itemData.c._mdf || this._isFirstFrame){\r\n        styleElem.co = 'rgb('+bm_floor(itemData.c.v[0])+','+bm_floor(itemData.c.v[1])+','+bm_floor(itemData.c.v[2])+')';\r\n    }\r\n    if(itemData.o._mdf || groupTransform._opMdf || this._isFirstFrame){\r\n        styleElem.coOp = itemData.o.v*groupTransform.opacity;\r\n    }\r\n    if(itemData.w._mdf || this._isFirstFrame){\r\n        styleElem.wi = itemData.w.v;\r\n    }\r\n};\r\n\r\n\r\nCVShapeElement.prototype.destroy = function(){\r\n    this.shapesData = null;\r\n    this.globalData = null;\r\n    this.canvasContext = null;\r\n    this.stylesList.length = 0;\r\n    this.itemsData.length = 0;\r\n};\r\n\r\n\r\nfunction CVSolidElement(data, globalData, comp) {\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement, TransformElement, CVBaseElement, HierarchyElement, FrameElement, RenderableElement], CVSolidElement);\r\n\r\nCVSolidElement.prototype.initElement = SVGShapeElement.prototype.initElement;\r\nCVSolidElement.prototype.prepareFrame = IImageElement.prototype.prepareFrame;\r\n\r\nCVSolidElement.prototype.renderInnerContent = function() {\r\n    var ctx = this.canvasContext;\r\n    ctx.fillStyle = this.data.sc;\r\n    ctx.fillRect(0, 0, this.data.sw, this.data.sh);\r\n    //\r\n};\r\nfunction CVTextElement(data, globalData, comp){\r\n    this.textSpans = [];\r\n    this.yOffset = 0;\r\n    this.fillColorAnim = false;\r\n    this.strokeColorAnim = false;\r\n    this.strokeWidthAnim = false;\r\n    this.stroke = false;\r\n    this.fill = false;\r\n    this.justifyOffset = 0;\r\n    this.currentRender = null;\r\n    this.renderType = 'canvas';\r\n    this.values = {\r\n        fill: 'rgba(0,0,0,0)',\r\n        stroke: 'rgba(0,0,0,0)',\r\n        sWidth: 0,\r\n        fValue: ''\r\n    };\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,CVBaseElement,HierarchyElement,FrameElement,RenderableElement,ITextElement], CVTextElement);\r\n\r\nCVTextElement.prototype.tHelper = createTag('canvas').getContext('2d');\r\n\r\nCVTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n\r\n    var hasFill = false;\r\n    if(documentData.fc) {\r\n        hasFill = true;\r\n        this.values.fill = this.buildColor(documentData.fc);\r\n    }else{\r\n        this.values.fill = 'rgba(0,0,0,0)';\r\n    }\r\n    this.fill = hasFill;\r\n    var hasStroke = false;\r\n    if(documentData.sc){\r\n        hasStroke = true;\r\n        this.values.stroke = this.buildColor(documentData.sc);\r\n        this.values.sWidth = documentData.sw;\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    var i, len;\r\n    var letters = documentData.l;\r\n    var matrixHelper = this.mHelper;\r\n    this.stroke = hasStroke;\r\n    this.values.fValue = documentData.finalSize + 'px '+ this.globalData.fontManager.getFontByName(documentData.f).fFamily;\r\n    len = documentData.finalText.length;\r\n    //this.tHelper.font = this.values.fValue;\r\n    var charData, shapeData, k, kLen, shapes, j, jLen, pathNodes, commands, pathArr, singleShape = this.data.singleShape;\r\n    var trackingOffset = documentData.tr/1000*documentData.finalSize;\r\n    var xPos = 0, yPos = 0, firstLine = true;\r\n    var cnt = 0;\r\n    for (i = 0; i < len; i += 1) {\r\n        charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n        shapeData = charData && charData.data || {};\r\n        matrixHelper.reset();\r\n        if(singleShape && letters[i].n) {\r\n            xPos = -trackingOffset;\r\n            yPos += documentData.yOffset;\r\n            yPos += firstLine ? 1 : 0;\r\n            firstLine = false;\r\n        }\r\n\r\n        shapes = shapeData.shapes ? shapeData.shapes[0].it : [];\r\n        jLen = shapes.length;\r\n        matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n        if(singleShape){\r\n            this.applyTextPropertiesToMatrix(documentData, matrixHelper, letters[i].line, xPos, yPos);\r\n        }\r\n        commands = createSizedArray(jLen);\r\n        for(j=0;j<jLen;j+=1){\r\n            kLen = shapes[j].ks.k.i.length;\r\n            pathNodes = shapes[j].ks.k;\r\n            pathArr = [];\r\n            for(k=1;k<kLen;k+=1){\r\n                if(k==1){\r\n                    pathArr.push(matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n                }\r\n                pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToY(pathNodes.i[k][0],pathNodes.i[k][1],0),matrixHelper.applyToX(pathNodes.v[k][0],pathNodes.v[k][1],0),matrixHelper.applyToY(pathNodes.v[k][0],pathNodes.v[k][1],0));\r\n            }\r\n            pathArr.push(matrixHelper.applyToX(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToY(pathNodes.o[k-1][0],pathNodes.o[k-1][1],0),matrixHelper.applyToX(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToY(pathNodes.i[0][0],pathNodes.i[0][1],0),matrixHelper.applyToX(pathNodes.v[0][0],pathNodes.v[0][1],0),matrixHelper.applyToY(pathNodes.v[0][0],pathNodes.v[0][1],0));\r\n            commands[j] = pathArr;\r\n        }\r\n        if(singleShape){\r\n            xPos += letters[i].l;\r\n            xPos += trackingOffset;\r\n        }\r\n        if(this.textSpans[cnt]){\r\n            this.textSpans[cnt].elem = commands;\r\n        } else {\r\n            this.textSpans[cnt] = {elem: commands};\r\n        }\r\n        cnt +=1;\r\n    }\r\n};\r\n\r\nCVTextElement.prototype.renderInnerContent = function(){\r\n    var ctx = this.canvasContext;\r\n    var finalMat = this.finalTransform.mat.props;\r\n    ctx.font = this.values.fValue;\r\n    ctx.lineCap = 'butt';\r\n    ctx.lineJoin = 'miter';\r\n    ctx.miterLimit = 4;\r\n\r\n    if(!this.data.singleShape){\r\n        this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    }\r\n\r\n    var  i,len, j, jLen, k, kLen;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter;\r\n    var lastFill = null, lastStroke = null, lastStrokeW = null, commands, pathArr;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            continue;\r\n        }\r\n        renderedLetter = renderedLetters[i];\r\n        if(renderedLetter){\r\n            this.globalData.renderer.save();\r\n            this.globalData.renderer.ctxTransform(renderedLetter.p);\r\n            this.globalData.renderer.ctxOpacity(renderedLetter.o);\r\n        }\r\n        if(this.fill){\r\n            if(renderedLetter && renderedLetter.fc){\r\n                if(lastFill !== renderedLetter.fc){\r\n                    lastFill = renderedLetter.fc;\r\n                    ctx.fillStyle = renderedLetter.fc;\r\n                }\r\n            }else if(lastFill !== this.values.fill){\r\n                lastFill = this.values.fill;\r\n                ctx.fillStyle = this.values.fill;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.fill();\r\n            ///ctx.fillText(this.textSpans[i].val,0,0);\r\n        }\r\n        if(this.stroke){\r\n            if(renderedLetter && renderedLetter.sw){\r\n                if(lastStrokeW !== renderedLetter.sw){\r\n                    lastStrokeW = renderedLetter.sw;\r\n                    ctx.lineWidth = renderedLetter.sw;\r\n                }\r\n            }else if(lastStrokeW !== this.values.sWidth){\r\n                lastStrokeW = this.values.sWidth;\r\n                ctx.lineWidth = this.values.sWidth;\r\n            }\r\n            if(renderedLetter && renderedLetter.sc){\r\n                if(lastStroke !== renderedLetter.sc){\r\n                    lastStroke = renderedLetter.sc;\r\n                    ctx.strokeStyle = renderedLetter.sc;\r\n                }\r\n            }else if(lastStroke !== this.values.stroke){\r\n                lastStroke = this.values.stroke;\r\n                ctx.strokeStyle = this.values.stroke;\r\n            }\r\n            commands = this.textSpans[i].elem;\r\n            jLen = commands.length;\r\n            this.globalData.canvasContext.beginPath();\r\n            for(j=0;j<jLen;j+=1) {\r\n                pathArr = commands[j];\r\n                kLen = pathArr.length;\r\n                this.globalData.canvasContext.moveTo(pathArr[0], pathArr[1]);\r\n                for (k = 2; k < kLen; k += 6) {\r\n                    this.globalData.canvasContext.bezierCurveTo(pathArr[k], pathArr[k + 1], pathArr[k + 2], pathArr[k + 3], pathArr[k + 4], pathArr[k + 5]);\r\n                }\r\n            }\r\n            this.globalData.canvasContext.closePath();\r\n            this.globalData.canvasContext.stroke();\r\n            ///ctx.strokeText(letters[i].val,0,0);\r\n        }\r\n        if(renderedLetter) {\r\n            this.globalData.renderer.restore();\r\n        }\r\n    }\r\n};\r\nfunction CVEffects() {\r\n\r\n}\r\nCVEffects.prototype.renderFrame = function(){};\r\nfunction HBaseElement(data,globalData,comp){}\r\nHBaseElement.prototype = {\r\n    checkBlendMode: function(){},\r\n    initRendererElement: function(){\r\n        this.baseElement = createTag(this.data.tg || 'div');\r\n        if(this.data.hasMask) {\r\n            this.svgElement = createNS('svg');\r\n            this.layerElement = createNS('g');\r\n            this.maskedElement = this.layerElement;\r\n            this.svgElement.appendChild(this.layerElement);\r\n            this.baseElement.appendChild(this.svgElement);\r\n        } else {\r\n            this.layerElement = this.baseElement;\r\n        }\r\n        styleDiv(this.baseElement);\r\n    },\r\n    createContainerElements: function(){\r\n        this.renderableEffectsManager = new CVEffects(this);\r\n        this.transformedElement = this.baseElement;\r\n        this.maskedElement = this.layerElement;\r\n        if (this.data.ln) {\r\n            this.layerElement.setAttribute('id',this.data.ln);\r\n        }\r\n        if (this.data.cl) {\r\n            this.layerElement.setAttribute('class', this.data.cl);\r\n        }\r\n        if (this.data.bm !== 0) {\r\n            this.setBlendMode();\r\n        }\r\n    },\r\n    renderElement: function() {\r\n        if(this.finalTransform._matMdf){\r\n            this.transformedElement.style.transform = this.transformedElement.style.webkitTransform = this.finalTransform.mat.toCSS();\r\n        }\r\n        if(this.finalTransform._opMdf){\r\n            this.transformedElement.style.opacity = this.finalTransform.mProp.o.v;\r\n        }\r\n    },\r\n    renderFrame: function() {\r\n        //If it is exported as hidden (data.hd === true) no need to render\r\n        //If it is not visible no need to render\r\n        if (this.data.hd || this.hidden) {\r\n            return;\r\n        }\r\n        this.renderTransform();\r\n        this.renderRenderable();\r\n        this.renderElement();\r\n        this.renderInnerContent();\r\n        if (this._isFirstFrame) {\r\n            this._isFirstFrame = false;\r\n        }\r\n    },\r\n    destroy: function(){\r\n        this.layerElement = null;\r\n        this.transformedElement = null;\r\n        if(this.matteElement) {\r\n            this.matteElement = null;\r\n        }\r\n        if(this.maskManager) {\r\n            this.maskManager.destroy();\r\n            this.maskManager = null;\r\n        }\r\n    },\r\n    createRenderableComponents: function(){\r\n        this.maskManager = new MaskElement(this.data, this, this.globalData);\r\n    },\r\n    addEffects: function(){\r\n    },\r\n    setMatte: function(){}\r\n};\r\nHBaseElement.prototype.getBaseElement = SVGBaseElement.prototype.getBaseElement;\r\nHBaseElement.prototype.destroyBaseElement = HBaseElement.prototype.destroy;\r\nHBaseElement.prototype.buildElementParenting = HybridRenderer.prototype.buildElementParenting;\r\nfunction HSolidElement(data,globalData,comp){\r\n    this.initElement(data,globalData,comp);\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement], HSolidElement);\r\n\r\nHSolidElement.prototype.createContent = function(){\r\n    var rect;\r\n    if(this.data.hasMask){\r\n        rect = createNS('rect');\r\n        rect.setAttribute('width',this.data.sw);\r\n        rect.setAttribute('height',this.data.sh);\r\n        rect.setAttribute('fill',this.data.sc);\r\n        this.svgElement.setAttribute('width',this.data.sw);\r\n        this.svgElement.setAttribute('height',this.data.sh);\r\n    } else {\r\n        rect = createTag('div');\r\n        rect.style.width = this.data.sw + 'px';\r\n        rect.style.height = this.data.sh + 'px';\r\n        rect.style.backgroundColor = this.data.sc;\r\n    }\r\n    this.layerElement.appendChild(rect);\r\n};\r\n\r\nfunction HCompElement(data,globalData,comp){\r\n    this.layers = data.layers;\r\n    this.supports3d = !data.hasMask;\r\n    this.completeLayers = false;\r\n    this.pendingElements = [];\r\n    this.elements = this.layers ? createSizedArray(this.layers.length) : [];\r\n    this.initElement(data,globalData,comp);\r\n    this.tm = data.tm ? PropertyFactory.getProp(this,data.tm,0,globalData.frameRate,this) : {_placeholder:true};\r\n}\r\n\r\nextendPrototype([HybridRenderer, ICompElement, HBaseElement], HCompElement);\r\nHCompElement.prototype._createBaseContainerElements = HCompElement.prototype.createContainerElements;\r\n\r\nHCompElement.prototype.createContainerElements = function(){\r\n    this._createBaseContainerElements();\r\n    //divElement.style.clip = 'rect(0px, '+this.data.w+'px, '+this.data.h+'px, 0px)';\r\n    if(this.data.hasMask){\r\n        this.svgElement.setAttribute('width',this.data.w);\r\n        this.svgElement.setAttribute('height',this.data.h);\r\n        this.transformedElement = this.baseElement;\r\n    } else {\r\n        this.transformedElement = this.layerElement;\r\n    }\r\n};\r\n\r\nHCompElement.prototype.addTo3dContainer = function(elem,pos) {\r\n    var j = 0;\r\n    var nextElement;\r\n    while(j<pos){\r\n        if(this.elements[j] && this.elements[j].getBaseElement){\r\n            nextElement = this.elements[j].getBaseElement();\r\n        }\r\n        j += 1;\r\n    }\r\n    if(nextElement){\r\n        this.layerElement.insertBefore(elem, nextElement);\r\n    } else {\r\n        this.layerElement.appendChild(elem);\r\n    }\r\n}\r\n\r\nfunction HShapeElement(data,globalData,comp){\r\n    //List of drawable elements\r\n    this.shapes = [];\r\n    // Full shape data\r\n    this.shapesData = data.shapes;\r\n    //List of styles that will be applied to shapes\r\n    this.stylesList = [];\r\n    //List of modifiers that will be applied to shapes\r\n    this.shapeModifiers = [];\r\n    //List of items in shape tree\r\n    this.itemsData = [];\r\n    //List of items in previous shape tree\r\n    this.processedElements = [];\r\n    // List of animated components\r\n    this.animatedContents = [];\r\n    this.shapesContainer = createNS('g');\r\n    this.initElement(data,globalData,comp);\r\n    //Moving any property that doesn't get too much access after initialization because of v8 way of handling more than 10 properties.\r\n    // List of elements that have been created\r\n    this.prevViewData = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n}\r\nextendPrototype([BaseElement,TransformElement,HSolidElement,SVGShapeElement,HBaseElement,HierarchyElement,FrameElement,RenderableElement], HShapeElement);\r\nHShapeElement.prototype._renderShapeFrame = HShapeElement.prototype.renderInnerContent;\r\n\r\nHShapeElement.prototype.createContent = function(){\r\n    var cont;\r\n    this.baseElement.style.fontSize = 0;\r\n    if (this.data.hasMask) {\r\n        this.layerElement.appendChild(this.shapesContainer);\r\n        cont = this.svgElement;\r\n    } else {\r\n        cont = createNS('svg');\r\n        var size = this.comp.data ? this.comp.data : this.globalData.compSize;\r\n        cont.setAttribute('width',size.w);\r\n        cont.setAttribute('height',size.h);\r\n        cont.appendChild(this.shapesContainer);\r\n        this.layerElement.appendChild(cont);\r\n    }\r\n\r\n    this.searchShapes(this.shapesData,this.itemsData,this.prevViewData,this.shapesContainer,0, [], true);\r\n    this.filterUniqueShapes();\r\n    this.shapeCont = cont;\r\n};\r\n\r\nHShapeElement.prototype.getTransformedPoint = function(transformers, point) {\r\n    var i, len = transformers.length;\r\n    for(i = 0; i < len; i += 1) {\r\n        point = transformers[i].mProps.v.applyToPointArray(point[0], point[1], 0);\r\n    }\r\n    return point;\r\n}\r\n\r\nHShapeElement.prototype.calculateShapeBoundingBox = function(item, boundingBox) {\r\n    var shape = item.sh.v;\r\n    var transformers = item.transformers;\r\n    var i, len = shape._length, vPoint, oPoint, nextIPoint, nextVPoint, bounds;\r\n    if (len <= 1) {\r\n        return;\r\n    }\r\n    for (i = 0; i < len - 1; i += 1) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[i + 1]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[i + 1]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n    if(shape.c) {\r\n        vPoint = this.getTransformedPoint(transformers, shape.v[i]);\r\n        oPoint = this.getTransformedPoint(transformers, shape.o[i]);\r\n        nextIPoint = this.getTransformedPoint(transformers, shape.i[0]);\r\n        nextVPoint = this.getTransformedPoint(transformers, shape.v[0]);\r\n        this.checkBounds(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox);\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.checkBounds = function(vPoint, oPoint, nextIPoint, nextVPoint, boundingBox) {\r\n    this.getBoundsOfCurve(vPoint, oPoint, nextIPoint, nextVPoint);\r\n    var bounds = this.shapeBoundingBox;\r\n    boundingBox.x = bm_min(bounds.left, boundingBox.x);\r\n    boundingBox.xMax = bm_max(bounds.right, boundingBox.xMax);\r\n    boundingBox.y = bm_min(bounds.top, boundingBox.y);\r\n    boundingBox.yMax = bm_max(bounds.bottom, boundingBox.yMax);\r\n}\r\n\r\nHShapeElement.prototype.shapeBoundingBox = {\r\n    left:0,\r\n    right:0,\r\n    top:0,\r\n    bottom:0,\r\n}\r\n\r\nHShapeElement.prototype.tempBoundingBox = {\r\n    x:0,\r\n    xMax:0,\r\n    y:0,\r\n    yMax:0,\r\n    width:0,\r\n    height:0\r\n}\r\n\r\nHShapeElement.prototype.getBoundsOfCurve = function(p0, p1, p2, p3) {\r\n\r\n    var bounds = [[p0[0],p3[0]], [p0[1],p3[1]]];\r\n\r\n    for (var a, b, c, t, b2ac, t1, t2, i = 0; i < 2; ++i) {\r\n\r\n      b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\r\n      a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\r\n      c = 3 * p1[i] - 3 * p0[i];\r\n\r\n      b = b | 0;\r\n      a = a | 0;\r\n      c = c | 0;\r\n\r\n      if (a === 0) {\r\n\r\n        if (b === 0) {\r\n          continue;\r\n        }\r\n\r\n        t = -c / b;\r\n\r\n        if (0 < t && t < 1) {\r\n          bounds[i].push(this.calculateF(t,p0,p1,p2,p3,i));\r\n        }\r\n        continue;\r\n      }\r\n\r\n      b2ac = b * b - 4 * c * a;\r\n\r\n      if (b2ac < 0) {\r\n        continue;\r\n      }\r\n\r\n      t1 = (-b + bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t1 && t1 < 1) bounds[i].push(this.calculateF(t1,p0,p1,p2,p3,i));\r\n\r\n      t2 = (-b - bm_sqrt(b2ac))/(2 * a);\r\n      if (0 < t2 && t2 < 1) bounds[i].push(this.calculateF(t2,p0,p1,p2,p3,i));\r\n\r\n    }\r\n\r\n    this.shapeBoundingBox.left = bm_min.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.top = bm_min.apply(null, bounds[1]);\r\n    this.shapeBoundingBox.right = bm_max.apply(null, bounds[0]);\r\n    this.shapeBoundingBox.bottom = bm_max.apply(null, bounds[1]);\r\n  };\r\n\r\n  HShapeElement.prototype.calculateF = function(t, p0, p1, p2, p3, i) {\r\n    return bm_pow(1-t, 3) * p0[i]\r\n        + 3 * bm_pow(1-t, 2) * t * p1[i]\r\n        + 3 * (1-t) * bm_pow(t, 2) * p2[i]\r\n        + bm_pow(t, 3) * p3[i];\r\n  }\r\n\r\nHShapeElement.prototype.calculateBoundingBox = function(itemsData, boundingBox) {\r\n    var i, len = itemsData.length, path;\r\n    for(i = 0; i < len; i += 1) {\r\n        if(itemsData[i] && itemsData[i].sh) {\r\n            this.calculateShapeBoundingBox(itemsData[i], boundingBox)\r\n        } else if(itemsData[i] && itemsData[i].it) {\r\n            this.calculateBoundingBox(itemsData[i].it, boundingBox)\r\n        }\r\n    }\r\n}\r\n\r\nHShapeElement.prototype.currentBoxContains = function(box) {\r\n    return this.currentBBox.x <= box.x \r\n    && this.currentBBox.y <= box.y \r\n    && this.currentBBox.width + this.currentBBox.x >= box.x + box.width\r\n    && this.currentBBox.height + this.currentBBox.y >= box.y + box.height\r\n}\r\n\r\nHShapeElement.prototype.renderInnerContent = function() {\r\n    this._renderShapeFrame();\r\n\r\n    if(!this.hidden && (this._isFirstFrame || this._mdf)) {\r\n        var tempBoundingBox = this.tempBoundingBox;\r\n        var max = 999999;\r\n        tempBoundingBox.x = max;\r\n        tempBoundingBox.xMax = -max;\r\n        tempBoundingBox.y = max;\r\n        tempBoundingBox.yMax = -max;\r\n        this.calculateBoundingBox(this.itemsData, tempBoundingBox);\r\n        tempBoundingBox.width = tempBoundingBox.xMax < tempBoundingBox.x ? 0 : tempBoundingBox.xMax - tempBoundingBox.x;\r\n        tempBoundingBox.height = tempBoundingBox.yMax < tempBoundingBox.y ? 0 : tempBoundingBox.yMax - tempBoundingBox.y;\r\n        //var tempBoundingBox = this.shapeCont.getBBox();\r\n        if(this.currentBoxContains(tempBoundingBox)) {\r\n            return;\r\n        }\r\n        var changed = false;\r\n        if(this.currentBBox.w !== tempBoundingBox.width){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.shapeCont.setAttribute('width',tempBoundingBox.width);\r\n            changed = true;\r\n        }\r\n        if(this.currentBBox.h !== tempBoundingBox.height){\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.shapeCont.setAttribute('height',tempBoundingBox.height);\r\n            changed = true;\r\n        }\r\n        if(changed  || this.currentBBox.x !== tempBoundingBox.x  || this.currentBBox.y !== tempBoundingBox.y){\r\n            this.currentBBox.w = tempBoundingBox.width;\r\n            this.currentBBox.h = tempBoundingBox.height;\r\n            this.currentBBox.x = tempBoundingBox.x;\r\n            this.currentBBox.y = tempBoundingBox.y;\r\n\r\n            this.shapeCont.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.shapeCont.style.transform = this.shapeCont.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n\r\n};\r\nfunction HTextElement(data,globalData,comp){\r\n    this.textSpans = [];\r\n    this.textPaths = [];\r\n    this.currentBBox = {\r\n        x:999999,\r\n        y: -999999,\r\n        h: 0,\r\n        w: 0\r\n    };\r\n    this.renderType = 'svg';\r\n    this.isMasked = false;\r\n    this.initElement(data,globalData,comp);\r\n\r\n}\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HierarchyElement,FrameElement,RenderableDOMElement,ITextElement], HTextElement);\r\n\r\nHTextElement.prototype.createContent = function(){\r\n    this.isMasked = this.checkMasks();\r\n    if(this.isMasked){\r\n        this.renderType = 'svg';\r\n        this.compW = this.comp.data.w;\r\n        this.compH = this.comp.data.h;\r\n        this.svgElement.setAttribute('width',this.compW);\r\n        this.svgElement.setAttribute('height',this.compH);\r\n        var g = createNS('g');\r\n        this.maskedElement.appendChild(g);\r\n        this.innerElem = g;\r\n    } else {\r\n        this.renderType = 'html';\r\n        this.innerElem = this.layerElement;\r\n    }\r\n\r\n    this.checkParenting();\r\n\r\n};\r\n\r\nHTextElement.prototype.buildNewText = function(){\r\n    var documentData = this.textProperty.currentData;\r\n    this.renderedLetters = createSizedArray(documentData.l ? documentData.l.length : 0);\r\n    var innerElemStyle = this.innerElem.style;\r\n    innerElemStyle.color = innerElemStyle.fill = documentData.fc ? this.buildColor(documentData.fc) : 'rgba(0,0,0,0)';\r\n    if(documentData.sc){\r\n        innerElemStyle.stroke = this.buildColor(documentData.sc);\r\n        innerElemStyle.strokeWidth = documentData.sw+'px';\r\n    }\r\n    var fontData = this.globalData.fontManager.getFontByName(documentData.f);\r\n    if(!this.globalData.fontManager.chars){\r\n        innerElemStyle.fontSize = documentData.finalSize+'px';\r\n        innerElemStyle.lineHeight = documentData.finalSize+'px';\r\n        if(fontData.fClass){\r\n            this.innerElem.className = fontData.fClass;\r\n        } else {\r\n            innerElemStyle.fontFamily = fontData.fFamily;\r\n            var fWeight = documentData.fWeight, fStyle = documentData.fStyle;\r\n            innerElemStyle.fontStyle = fStyle;\r\n            innerElemStyle.fontWeight = fWeight;\r\n        }\r\n    }\r\n    var i, len;\r\n\r\n    var letters = documentData.l;\r\n    len = letters.length;\r\n    var tSpan,tParent,tCont;\r\n    var matrixHelper = this.mHelper;\r\n    var shapes, shapeStr = '';\r\n    var cnt = 0;\r\n    for (i = 0;i < len ;i += 1) {\r\n        if(this.globalData.fontManager.chars){\r\n            if(!this.textPaths[cnt]){\r\n                tSpan = createNS('path');\r\n                tSpan.setAttribute('stroke-linecap', 'butt');\r\n                tSpan.setAttribute('stroke-linejoin','round');\r\n                tSpan.setAttribute('stroke-miterlimit','4');\r\n            } else {\r\n                tSpan = this.textPaths[cnt];\r\n            }\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tCont = tParent.children[0];\r\n                } else {\r\n\r\n                    tParent = createTag('div');\r\n                    tParent.style.lineHeight = 0;\r\n                    tCont = createNS('svg');\r\n                    tCont.appendChild(tSpan);\r\n                    styleDiv(tParent);\r\n                }\r\n            }\r\n        }else{\r\n            if(!this.isMasked){\r\n                if(this.textSpans[cnt]){\r\n                    tParent = this.textSpans[cnt];\r\n                    tSpan = this.textPaths[cnt];\r\n                } else {\r\n                    tParent = createTag('span');\r\n                    styleDiv(tParent);\r\n                    tSpan = createTag('span');\r\n                    styleDiv(tSpan);\r\n                    tParent.appendChild(tSpan);\r\n                }\r\n            } else {\r\n                tSpan = this.textPaths[cnt] ? this.textPaths[cnt] : createNS('text');\r\n            }\r\n        }\r\n        //tSpan.setAttribute('visibility', 'hidden');\r\n        if(this.globalData.fontManager.chars){\r\n            var charData = this.globalData.fontManager.getCharData(documentData.finalText[i], fontData.fStyle, this.globalData.fontManager.getFontByName(documentData.f).fFamily);\r\n            var shapeData;\r\n            if(charData){\r\n                shapeData = charData.data;\r\n            } else {\r\n                shapeData = null;\r\n            }\r\n            matrixHelper.reset();\r\n            if(shapeData && shapeData.shapes){\r\n                shapes = shapeData.shapes[0].it;\r\n                matrixHelper.scale(documentData.finalSize/100,documentData.finalSize/100);\r\n                shapeStr = this.createPathShape(matrixHelper,shapes);\r\n                tSpan.setAttribute('d',shapeStr);\r\n            }\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                if(shapeData && shapeData.shapes){\r\n\r\n                    //document.body.appendChild is needed to get exact measure of shape\r\n                    document.body.appendChild(tCont);\r\n                    var boundingBox = tCont.getBBox();\r\n                    tCont.setAttribute('width',boundingBox.width + 2);\r\n                    tCont.setAttribute('height',boundingBox.height + 2);\r\n                    tCont.setAttribute('viewBox',(boundingBox.x-1)+' '+ (boundingBox.y-1)+' '+ (boundingBox.width+2)+' '+ (boundingBox.height+2));\r\n                    tCont.style.transform = tCont.style.webkitTransform = 'translate(' + (boundingBox.x-1) + 'px,' + (boundingBox.y-1) + 'px)';\r\n\r\n                    letters[i].yOffset = boundingBox.y-1;\r\n\r\n                } else{\r\n                    tCont.setAttribute('width',1);\r\n                    tCont.setAttribute('height',1);\r\n                }\r\n                    tParent.appendChild(tCont);\r\n            }else{\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }else{\r\n            tSpan.textContent = letters[i].val;\r\n            tSpan.setAttributeNS(\"http://www.w3.org/XML/1998/namespace\", \"xml:space\",\"preserve\");\r\n            if(!this.isMasked){\r\n                this.innerElem.appendChild(tParent);\r\n                //\r\n                tSpan.style.transform = tSpan.style.webkitTransform = 'translate3d(0,'+ -documentData.finalSize/1.2+'px,0)';\r\n            } else {\r\n                this.innerElem.appendChild(tSpan);\r\n            }\r\n        }\r\n        //\r\n        if(!this.isMasked){\r\n            this.textSpans[cnt] = tParent;\r\n        }else{\r\n            this.textSpans[cnt] = tSpan;\r\n        }\r\n        this.textSpans[cnt].style.display = 'block';\r\n        this.textPaths[cnt] = tSpan;\r\n        cnt += 1;\r\n    }\r\n    while(cnt < this.textSpans.length){\r\n        this.textSpans[cnt].style.display = 'none';\r\n        cnt += 1;\r\n    }\r\n};\r\n\r\nHTextElement.prototype.renderInnerContent = function() {\r\n\r\n    if(this.data.singleShape){\r\n        if(!this._isFirstFrame && !this.lettersChangedFlag){\r\n            return;\r\n        } else {\r\n            // Todo Benchmark if using this is better than getBBox\r\n             if(this.isMasked && this.finalTransform._matMdf){\r\n                 this.svgElement.setAttribute('viewBox',-this.finalTransform.mProp.p.v[0]+' '+ -this.finalTransform.mProp.p.v[1]+' '+this.compW+' '+this.compH);\r\n                this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + -this.finalTransform.mProp.p.v[0] + 'px,' + -this.finalTransform.mProp.p.v[1] + 'px)';\r\n             }\r\n        }\r\n    }\r\n\r\n    this.textAnimator.getMeasures(this.textProperty.currentData, this.lettersChangedFlag);\r\n    if(!this.lettersChangedFlag && !this.textAnimator.lettersChangedFlag){\r\n        return;\r\n    }\r\n    var  i,len, count = 0;\r\n    var renderedLetters = this.textAnimator.renderedLetters;\r\n\r\n    var letters = this.textProperty.currentData.l;\r\n\r\n    len = letters.length;\r\n    var renderedLetter, textSpan, textPath;\r\n    for(i=0;i<len;i+=1){\r\n        if(letters[i].n){\r\n            count += 1;\r\n            continue;\r\n        }\r\n        textSpan = this.textSpans[i];\r\n        textPath = this.textPaths[i];\r\n        renderedLetter = renderedLetters[count];\r\n        count += 1;\r\n        if(renderedLetter._mdf.m) {\r\n            if(!this.isMasked){\r\n                textSpan.style.transform = textSpan.style.webkitTransform = renderedLetter.m;\r\n            }else{\r\n                textSpan.setAttribute('transform',renderedLetter.m);\r\n            }\r\n        }\r\n        ////textSpan.setAttribute('opacity',renderedLetter.o);\r\n        textSpan.style.opacity = renderedLetter.o;\r\n        if(renderedLetter.sw && renderedLetter._mdf.sw){\r\n            textPath.setAttribute('stroke-width',renderedLetter.sw);\r\n        }\r\n        if(renderedLetter.sc && renderedLetter._mdf.sc){\r\n            textPath.setAttribute('stroke',renderedLetter.sc);\r\n        }\r\n        if(renderedLetter.fc && renderedLetter._mdf.fc){\r\n            textPath.setAttribute('fill',renderedLetter.fc);\r\n            textPath.style.color = renderedLetter.fc;\r\n        }\r\n    }\r\n\r\n    if(this.innerElem.getBBox && !this.hidden && (this._isFirstFrame || this._mdf)){\r\n        var boundingBox = this.innerElem.getBBox();\r\n\r\n        if(this.currentBBox.w !== boundingBox.width){\r\n            this.currentBBox.w = boundingBox.width;\r\n            this.svgElement.setAttribute('width',boundingBox.width);\r\n        }\r\n        if(this.currentBBox.h !== boundingBox.height){\r\n            this.currentBBox.h = boundingBox.height;\r\n            this.svgElement.setAttribute('height',boundingBox.height);\r\n        }\r\n\r\n        var margin = 1;\r\n        if(this.currentBBox.w !== (boundingBox.width + margin*2) || this.currentBBox.h !== (boundingBox.height + margin*2)  || this.currentBBox.x !== (boundingBox.x - margin)  || this.currentBBox.y !== (boundingBox.y - margin)){\r\n            this.currentBBox.w = boundingBox.width + margin*2;\r\n            this.currentBBox.h = boundingBox.height + margin*2;\r\n            this.currentBBox.x = boundingBox.x - margin;\r\n            this.currentBBox.y = boundingBox.y - margin;\r\n\r\n            this.svgElement.setAttribute('viewBox',this.currentBBox.x+' '+this.currentBBox.y+' '+this.currentBBox.w+' '+this.currentBBox.h);\r\n            this.svgElement.style.transform = this.svgElement.style.webkitTransform = 'translate(' + this.currentBBox.x + 'px,' + this.currentBBox.y + 'px)';\r\n        }\r\n    }\r\n};\r\nfunction HImageElement(data,globalData,comp){\r\n    this.assetData = globalData.getAssetData(data.refId);\r\n    this.initElement(data,globalData,comp);\r\n}\r\n\r\nextendPrototype([BaseElement,TransformElement,HBaseElement,HSolidElement,HierarchyElement,FrameElement,RenderableElement], HImageElement);\r\n\r\n\r\nHImageElement.prototype.createContent = function(){\r\n    var assetPath = this.globalData.getAssetsPath(this.assetData);\r\n    var img = new Image();\r\n\r\n    if(this.data.hasMask){\r\n        this.imageElem = createNS('image');\r\n        this.imageElem.setAttribute('width',this.assetData.w+\"px\");\r\n        this.imageElem.setAttribute('height',this.assetData.h+\"px\");\r\n        this.imageElem.setAttributeNS('http://www.w3.org/1999/xlink','href',assetPath);\r\n        this.layerElement.appendChild(this.imageElem);\r\n        this.baseElement.setAttribute('width',this.assetData.w);\r\n        this.baseElement.setAttribute('height',this.assetData.h);\r\n    } else {\r\n        this.layerElement.appendChild(img);\r\n    }\r\n    img.src = assetPath;\r\n    if(this.data.ln){\r\n        this.baseElement.setAttribute('id',this.data.ln);\r\n    }\r\n};\r\nfunction HCameraElement(data,globalData,comp){\r\n    this.initFrame();\r\n    this.initBaseData(data,globalData,comp);\r\n    this.initHierarchy();\r\n    var getProp = PropertyFactory.getProp;\r\n    this.pe = getProp(this,data.pe,0,0,this);\r\n    if(data.ks.p.s){\r\n        this.px = getProp(this,data.ks.p.x,1,0,this);\r\n        this.py = getProp(this,data.ks.p.y,1,0,this);\r\n        this.pz = getProp(this,data.ks.p.z,1,0,this);\r\n    }else{\r\n        this.p = getProp(this,data.ks.p,1,0,this);\r\n    }\r\n    if(data.ks.a){\r\n        this.a = getProp(this,data.ks.a,1,0,this);\r\n    }\r\n    if(data.ks.or.k.length && data.ks.or.k[0].to){\r\n        var i,len = data.ks.or.k.length;\r\n        for(i=0;i<len;i+=1){\r\n            data.ks.or.k[i].to = null;\r\n            data.ks.or.k[i].ti = null;\r\n        }\r\n    }\r\n    this.or = getProp(this,data.ks.or,1,degToRads,this);\r\n    this.or.sh = true;\r\n    this.rx = getProp(this,data.ks.rx,0,degToRads,this);\r\n    this.ry = getProp(this,data.ks.ry,0,degToRads,this);\r\n    this.rz = getProp(this,data.ks.rz,0,degToRads,this);\r\n    this.mat = new Matrix();\r\n    this._prevMat = new Matrix();\r\n    this._isFirstFrame = true;\r\n    \r\n    // TODO: find a better way to make the HCamera element to be compatible with the LayerInterface and TransformInterface.\r\n    this.finalTransform = {\r\n        mProp: this\r\n    };\r\n}\r\nextendPrototype([BaseElement, FrameElement, HierarchyElement], HCameraElement);\r\n\r\nHCameraElement.prototype.setup = function() {\r\n    var i, len = this.comp.threeDElements.length, comp;\r\n    for(i=0;i<len;i+=1){\r\n        //[perspectiveElem,container]\r\n        comp = this.comp.threeDElements[i];\r\n        if(comp.type === '3d') {\r\n            comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n            comp.container.style.transformOrigin = comp.container.style.mozTransformOrigin = comp.container.style.webkitTransformOrigin = \"0px 0px 0px\";\r\n            comp.perspectiveElem.style.transform = comp.perspectiveElem.style.webkitTransform = 'matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)';\r\n        }\r\n    }\r\n};\r\n\r\nHCameraElement.prototype.createElements = function(){\r\n};\r\n\r\nHCameraElement.prototype.hide = function(){\r\n};\r\n\r\nHCameraElement.prototype.renderFrame = function(){\r\n    var _mdf = this._isFirstFrame;\r\n    var i, len;\r\n    if(this.hierarchy){\r\n        len = this.hierarchy.length;\r\n        for(i=0;i<len;i+=1){\r\n            _mdf = this.hierarchy[i].finalTransform.mProp._mdf || _mdf;\r\n        }\r\n    }\r\n    if(_mdf || this.pe._mdf || (this.p && this.p._mdf) || (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) || this.rx._mdf || this.ry._mdf || this.rz._mdf || this.or._mdf || (this.a && this.a._mdf)) {\r\n        this.mat.reset();\r\n\r\n        if(this.hierarchy){\r\n            var mat;\r\n            len = this.hierarchy.length - 1;\r\n            for (i = len; i >= 0; i -= 1) {\r\n                var mTransf = this.hierarchy[i].finalTransform.mProp;\r\n                this.mat.translate(-mTransf.p.v[0],-mTransf.p.v[1],mTransf.p.v[2]);\r\n                this.mat.rotateX(-mTransf.or.v[0]).rotateY(-mTransf.or.v[1]).rotateZ(mTransf.or.v[2]);\r\n                this.mat.rotateX(-mTransf.rx.v).rotateY(-mTransf.ry.v).rotateZ(mTransf.rz.v);\r\n                this.mat.scale(1/mTransf.s.v[0],1/mTransf.s.v[1],1/mTransf.s.v[2]);\r\n                this.mat.translate(mTransf.a.v[0],mTransf.a.v[1],mTransf.a.v[2]);\r\n            }\r\n        }\r\n        if (this.p) {\r\n            this.mat.translate(-this.p.v[0],-this.p.v[1],this.p.v[2]);\r\n        } else {\r\n            this.mat.translate(-this.px.v,-this.py.v,this.pz.v);\r\n        }\r\n        if (this.a) {\r\n            var diffVector\r\n            if (this.p) {\r\n                diffVector = [this.p.v[0] - this.a.v[0], this.p.v[1] - this.a.v[1], this.p.v[2] - this.a.v[2]];\r\n            } else {\r\n                diffVector = [this.px.v - this.a.v[0], this.py.v - this.a.v[1], this.pz.v - this.a.v[2]];\r\n            }\r\n            var mag = Math.sqrt(Math.pow(diffVector[0],2)+Math.pow(diffVector[1],2)+Math.pow(diffVector[2],2));\r\n            //var lookDir = getNormalizedPoint(getDiffVector(this.a.v,this.p.v));\r\n            var lookDir = [diffVector[0]/mag,diffVector[1]/mag,diffVector[2]/mag];\r\n            var lookLengthOnXZ = Math.sqrt( lookDir[2]*lookDir[2] + lookDir[0]*lookDir[0] );\r\n            var m_rotationX = (Math.atan2( lookDir[1], lookLengthOnXZ ));\r\n            var m_rotationY = (Math.atan2( lookDir[0], -lookDir[2]));\r\n            this.mat.rotateY(m_rotationY).rotateX(-m_rotationX);\r\n\r\n        }\r\n        this.mat.rotateX(-this.rx.v).rotateY(-this.ry.v).rotateZ(this.rz.v);\r\n        this.mat.rotateX(-this.or.v[0]).rotateY(-this.or.v[1]).rotateZ(this.or.v[2]);\r\n        this.mat.translate(this.globalData.compSize.w/2,this.globalData.compSize.h/2,0);\r\n        this.mat.translate(0,0,this.pe.v);\r\n\r\n\r\n        \r\n\r\n        var hasMatrixChanged = !this._prevMat.equals(this.mat);\r\n        if((hasMatrixChanged || this.pe._mdf) && this.comp.threeDElements) {\r\n            len = this.comp.threeDElements.length;\r\n            var comp;\r\n            for(i=0;i<len;i+=1){\r\n                comp = this.comp.threeDElements[i];\r\n                if(comp.type === '3d') {\r\n                    if(hasMatrixChanged) {\r\n                        comp.container.style.transform = comp.container.style.webkitTransform = this.mat.toCSS();\r\n                    }\r\n                    if(this.pe._mdf) {\r\n                        comp.perspectiveElem.style.perspective = comp.perspectiveElem.style.webkitPerspective = this.pe.v+'px';\r\n                    }\r\n                }\r\n            }\r\n            this.mat.clone(this._prevMat);\r\n        }\r\n    }\r\n    this._isFirstFrame = false;\r\n};\r\n\r\nHCameraElement.prototype.prepareFrame = function(num) {\r\n    this.prepareProperties(num, true);\r\n};\r\n\r\nHCameraElement.prototype.destroy = function(){\r\n};\r\nHCameraElement.prototype.getBaseElement = function(){return null;};\r\nfunction HEffects() {\r\n}\r\nHEffects.prototype.renderFrame = function(){};\r\nvar animationManager = (function(){\r\n    var moduleOb = {};\r\n    var registeredAnimations = [];\r\n    var initTime = 0;\r\n    var len = 0;\r\n    var playingAnimationsNum = 0;\r\n    var _stopped = true;\r\n    var _isFrozen = false;\r\n\r\n    function removeElement(ev){\r\n        var i = 0;\r\n        var animItem = ev.target;\r\n        while(i<len) {\r\n            if (registeredAnimations[i].animation === animItem) {\r\n                registeredAnimations.splice(i, 1);\r\n                i -= 1;\r\n                len -= 1;\r\n                if(!animItem.isPaused){\r\n                    subtractPlayingCount();\r\n                }\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n\r\n    function registerAnimation(element, animationData){\r\n        if(!element){\r\n            return null;\r\n        }\r\n        var i=0;\r\n        while(i<len){\r\n            if(registeredAnimations[i].elem == element && registeredAnimations[i].elem !== null ){\r\n                return registeredAnimations[i].animation;\r\n            }\r\n            i+=1;\r\n        }\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, element);\r\n        animItem.setData(element, animationData);\r\n        return animItem;\r\n    }\r\n\r\n    function getRegisteredAnimations() {\r\n        var i, len = registeredAnimations.length;\r\n        var animations = [];\r\n        for(i = 0; i < len; i += 1) {\r\n            animations.push(registeredAnimations[i].animation);\r\n        }\r\n        return animations;\r\n    }\r\n\r\n    function addPlayingCount(){\r\n        playingAnimationsNum += 1;\r\n        activate();\r\n    }\r\n\r\n    function subtractPlayingCount(){\r\n        playingAnimationsNum -= 1;\r\n    }\r\n\r\n    function setupAnimation(animItem, element){\r\n        animItem.addEventListener('destroy',removeElement);\r\n        animItem.addEventListener('_active',addPlayingCount);\r\n        animItem.addEventListener('_idle',subtractPlayingCount);\r\n        registeredAnimations.push({elem: element,animation:animItem});\r\n        len += 1;\r\n    }\r\n\r\n    function loadAnimation(params){\r\n        var animItem = new AnimationItem();\r\n        setupAnimation(animItem, null);\r\n        animItem.setParams(params);\r\n        return animItem;\r\n    }\r\n\r\n\r\n    function setSpeed(val,animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setSpeed(val, animation);\r\n        }\r\n    }\r\n\r\n    function setDirection(val, animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.setDirection(val, animation);\r\n        }\r\n    }\r\n\r\n    function play(animation){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.play(animation);\r\n        }\r\n    }\r\n    function resume(nowTime) {\r\n        var elapsedTime = nowTime - initTime;\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.advanceTime(elapsedTime);\r\n        }\r\n        initTime = nowTime;\r\n        if(playingAnimationsNum && !_isFrozen) {\r\n            window.requestAnimationFrame(resume);\r\n        } else {\r\n            _stopped = true;\r\n        }\r\n    }\r\n\r\n    function first(nowTime){\r\n        initTime = nowTime;\r\n        window.requestAnimationFrame(resume);\r\n    }\r\n\r\n    function pause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.pause(animation);\r\n        }\r\n    }\r\n\r\n    function goToAndStop(value,isFrame,animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.goToAndStop(value,isFrame,animation);\r\n        }\r\n    }\r\n\r\n    function stop(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.stop(animation);\r\n        }\r\n    }\r\n\r\n    function togglePause(animation) {\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.togglePause(animation);\r\n        }\r\n    }\r\n\r\n    function destroy(animation) {\r\n        var i;\r\n        for(i=(len-1);i>=0;i-=1){\r\n            registeredAnimations[i].animation.destroy(animation);\r\n        }\r\n    }\r\n\r\n    function searchAnimations(animationData, standalone, renderer){\r\n        var animElements = [].concat([].slice.call(document.getElementsByClassName('lottie')),\r\n                  [].slice.call(document.getElementsByClassName('bodymovin')));\r\n        var i, len = animElements.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(renderer){\r\n                animElements[i].setAttribute('data-bm-type',renderer);\r\n            }\r\n            registerAnimation(animElements[i], animationData);\r\n        }\r\n        if(standalone && len === 0){\r\n            if(!renderer){\r\n                renderer = 'svg';\r\n            }\r\n            var body = document.getElementsByTagName('body')[0];\r\n            body.innerHTML = '';\r\n            var div = createTag('div');\r\n            div.style.width = '100%';\r\n            div.style.height = '100%';\r\n            div.setAttribute('data-bm-type',renderer);\r\n            body.appendChild(div);\r\n            registerAnimation(div, animationData);\r\n        }\r\n    }\r\n\r\n    function resize(){\r\n        var i;\r\n        for(i=0;i<len;i+=1){\r\n            registeredAnimations[i].animation.resize();\r\n        }\r\n    }\r\n\r\n    function activate(){\r\n        if(!_isFrozen && playingAnimationsNum){\r\n            if(_stopped) {\r\n                window.requestAnimationFrame(first);\r\n                _stopped = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    function freeze() {\r\n        _isFrozen = true;\r\n    }\r\n\r\n    function unfreeze() {\r\n        _isFrozen = false;\r\n        activate();\r\n    }\r\n\r\n    moduleOb.registerAnimation = registerAnimation;\r\n    moduleOb.loadAnimation = loadAnimation;\r\n    moduleOb.setSpeed = setSpeed;\r\n    moduleOb.setDirection = setDirection;\r\n    moduleOb.play = play;\r\n    moduleOb.pause = pause;\r\n    moduleOb.stop = stop;\r\n    moduleOb.togglePause = togglePause;\r\n    moduleOb.searchAnimations = searchAnimations;\r\n    moduleOb.resize = resize;\r\n    //moduleOb.start = start;\r\n    moduleOb.goToAndStop = goToAndStop;\r\n    moduleOb.destroy = destroy;\r\n    moduleOb.freeze = freeze;\r\n    moduleOb.unfreeze = unfreeze;\r\n    moduleOb.getRegisteredAnimations = getRegisteredAnimations;\r\n    return moduleOb;\r\n}());\r\n\r\nvar AnimationItem = function () {\r\n    this._cbs = [];\r\n    this.name = '';\r\n    this.path = '';\r\n    this.isLoaded = false;\r\n    this.currentFrame = 0;\r\n    this.currentRawFrame = 0;\r\n    this.totalFrames = 0;\r\n    this.frameRate = 0;\r\n    this.frameMult = 0;\r\n    this.playSpeed = 1;\r\n    this.playDirection = 1;\r\n    this.playCount = 0;\r\n    this.animationData = {};\r\n    this.assets = [];\r\n    this.isPaused = true;\r\n    this.autoplay = false;\r\n    this.loop = true;\r\n    this.renderer = null;\r\n    this.animationID = createElementID();\r\n    this.assetsPath = '';\r\n    this.timeCompleted = 0;\r\n    this.segmentPos = 0;\r\n    this.subframeEnabled = subframeEnabled;\r\n    this.segments = [];\r\n    this._idle = true;\r\n    this._completedLoop = false;\r\n    this.projectInterface = ProjectInterface();\r\n    this.imagePreloader = new ImagePreloader();\r\n};\r\n\r\nextendPrototype([BaseEvent], AnimationItem);\r\n\r\nAnimationItem.prototype.setParams = function(params) {\r\n    if(params.context){\r\n        this.context = params.context;\r\n    }\r\n    if(params.wrapper || params.container){\r\n        this.wrapper = params.wrapper || params.container;\r\n    }\r\n    var animType = params.animType ? params.animType : params.renderer ? params.renderer : 'svg';\r\n    switch(animType){\r\n        case 'canvas':\r\n            this.renderer = new CanvasRenderer(this, params.rendererSettings);\r\n            break;\r\n        case 'svg':\r\n            this.renderer = new SVGRenderer(this, params.rendererSettings);\r\n            break;\r\n        default:\r\n            this.renderer = new HybridRenderer(this, params.rendererSettings);\r\n            break;\r\n    }\r\n    this.renderer.setProjectInterface(this.projectInterface);\r\n    this.animType = animType;\r\n\r\n    if(params.loop === '' || params.loop === null){\r\n    }else if(params.loop === false){\r\n        this.loop = false;\r\n    }else if(params.loop === true){\r\n        this.loop = true;\r\n    }else{\r\n        this.loop = parseInt(params.loop);\r\n    }\r\n    this.autoplay = 'autoplay' in params ? params.autoplay : true;\r\n    this.name = params.name ? params.name :  '';\r\n    this.autoloadSegments = params.hasOwnProperty('autoloadSegments') ? params.autoloadSegments :  true;\r\n    this.assetsPath = params.assetsPath;\r\n    if (params.animationData) {\r\n        this.configAnimation(params.animationData);\r\n    } else if(params.path){\r\n\r\n        if( params.path.lastIndexOf('\\\\') !== -1){\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('\\\\')+1);\r\n        } else {\r\n            this.path = params.path.substr(0,params.path.lastIndexOf('/')+1);\r\n        }\r\n        this.fileName = params.path.substr(params.path.lastIndexOf('/')+1);\r\n        this.fileName = this.fileName.substr(0,this.fileName.lastIndexOf('.json'));\r\n\r\n        assetLoader.load(params.path, this.configAnimation.bind(this), function() {\r\n            this.trigger('data_failed');\r\n        }.bind(this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.setData = function (wrapper, animationData) {\r\n    var params = {\r\n        wrapper: wrapper,\r\n        animationData: animationData ? (typeof animationData  === \"object\") ? animationData : JSON.parse(animationData) : null\r\n    };\r\n    var wrapperAttributes = wrapper.attributes;\r\n\r\n    params.path = wrapperAttributes.getNamedItem('data-animation-path') ? wrapperAttributes.getNamedItem('data-animation-path').value : wrapperAttributes.getNamedItem('data-bm-path') ? wrapperAttributes.getNamedItem('data-bm-path').value :  wrapperAttributes.getNamedItem('bm-path') ? wrapperAttributes.getNamedItem('bm-path').value : '';\r\n    params.animType = wrapperAttributes.getNamedItem('data-anim-type') ? wrapperAttributes.getNamedItem('data-anim-type').value : wrapperAttributes.getNamedItem('data-bm-type') ? wrapperAttributes.getNamedItem('data-bm-type').value : wrapperAttributes.getNamedItem('bm-type') ? wrapperAttributes.getNamedItem('bm-type').value :  wrapperAttributes.getNamedItem('data-bm-renderer') ? wrapperAttributes.getNamedItem('data-bm-renderer').value : wrapperAttributes.getNamedItem('bm-renderer') ? wrapperAttributes.getNamedItem('bm-renderer').value : 'canvas';\r\n\r\n    var loop = wrapperAttributes.getNamedItem('data-anim-loop') ? wrapperAttributes.getNamedItem('data-anim-loop').value :  wrapperAttributes.getNamedItem('data-bm-loop') ? wrapperAttributes.getNamedItem('data-bm-loop').value :  wrapperAttributes.getNamedItem('bm-loop') ? wrapperAttributes.getNamedItem('bm-loop').value : '';\r\n    if(loop === ''){\r\n    }else if(loop === 'false'){\r\n        params.loop = false;\r\n    }else if(loop === 'true'){\r\n        params.loop = true;\r\n    }else{\r\n        params.loop = parseInt(loop);\r\n    }\r\n    var autoplay = wrapperAttributes.getNamedItem('data-anim-autoplay') ? wrapperAttributes.getNamedItem('data-anim-autoplay').value :  wrapperAttributes.getNamedItem('data-bm-autoplay') ? wrapperAttributes.getNamedItem('data-bm-autoplay').value :  wrapperAttributes.getNamedItem('bm-autoplay') ? wrapperAttributes.getNamedItem('bm-autoplay').value : true;\r\n    params.autoplay = autoplay !== \"false\";\r\n\r\n    params.name = wrapperAttributes.getNamedItem('data-name') ? wrapperAttributes.getNamedItem('data-name').value :  wrapperAttributes.getNamedItem('data-bm-name') ? wrapperAttributes.getNamedItem('data-bm-name').value : wrapperAttributes.getNamedItem('bm-name') ? wrapperAttributes.getNamedItem('bm-name').value :  '';\r\n    var prerender = wrapperAttributes.getNamedItem('data-anim-prerender') ? wrapperAttributes.getNamedItem('data-anim-prerender').value :  wrapperAttributes.getNamedItem('data-bm-prerender') ? wrapperAttributes.getNamedItem('data-bm-prerender').value :  wrapperAttributes.getNamedItem('bm-prerender') ? wrapperAttributes.getNamedItem('bm-prerender').value : '';\r\n\r\n    if(prerender === 'false'){\r\n        params.prerender = false;\r\n    }\r\n    this.setParams(params);\r\n};\r\n\r\nAnimationItem.prototype.includeLayers = function(data) {\r\n    if(data.op > this.animationData.op){\r\n        this.animationData.op = data.op;\r\n        this.totalFrames = Math.floor(data.op - this.animationData.ip);\r\n    }\r\n    var layers = this.animationData.layers;\r\n    var i, len = layers.length;\r\n    var newLayers = data.layers;\r\n    var j, jLen = newLayers.length;\r\n    for(j=0;j<jLen;j+=1){\r\n        i = 0;\r\n        while(i<len){\r\n            if(layers[i].id == newLayers[j].id){\r\n                layers[i] = newLayers[j];\r\n                break;\r\n            }\r\n            i += 1;\r\n        }\r\n    }\r\n    if(data.chars || data.fonts){\r\n        this.renderer.globalData.fontManager.addChars(data.chars);\r\n        this.renderer.globalData.fontManager.addFonts(data.fonts, this.renderer.globalData.defs);\r\n    }\r\n    if(data.assets){\r\n        len = data.assets.length;\r\n        for(i = 0; i < len; i += 1){\r\n            this.animationData.assets.push(data.assets[i]);\r\n        }\r\n    }\r\n    this.animationData.__complete = false;\r\n    dataManager.completeData(this.animationData,this.renderer.globalData.fontManager);\r\n    this.renderer.includeLayers(data.layers);\r\n    if(expressionsPlugin){\r\n        expressionsPlugin.initExpressions(this);\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.loadNextSegment = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments || segments.length === 0 || !this.autoloadSegments){\r\n        this.trigger('data_ready');\r\n        this.timeCompleted = this.totalFrames;\r\n        return;\r\n    }\r\n    var segment = segments.shift();\r\n    this.timeCompleted = segment.time * this.frameRate;\r\n    var segmentPath = this.path+this.fileName+'_' + this.segmentPos + '.json';\r\n    this.segmentPos += 1;\r\n    assetLoader.load(segmentPath, this.includeLayers.bind(this), function() {\r\n        this.trigger('data_failed');\r\n    }.bind(this));\r\n};\r\n\r\nAnimationItem.prototype.loadSegments = function() {\r\n    var segments = this.animationData.segments;\r\n    if(!segments) {\r\n        this.timeCompleted = this.totalFrames;\r\n    }\r\n    this.loadNextSegment();\r\n};\r\n\r\nAnimationItem.prototype.imagesLoaded = function() {\r\n    this.trigger('loaded_images');\r\n    this.checkLoaded()\r\n}\r\n\r\nAnimationItem.prototype.preloadImages = function() {\r\n    this.imagePreloader.setAssetsPath(this.assetsPath);\r\n    this.imagePreloader.setPath(this.path);\r\n    this.imagePreloader.loadAssets(this.animationData.assets, this.imagesLoaded.bind(this));\r\n}\r\n\r\nAnimationItem.prototype.configAnimation = function (animData) {\r\n    if(!this.renderer){\r\n        return;\r\n    }\r\n    try {\r\n        this.animationData = animData;\r\n        this.totalFrames = Math.floor(this.animationData.op - this.animationData.ip);\r\n        this.renderer.configAnimation(animData);\r\n        if(!animData.assets){\r\n            animData.assets = [];\r\n        }\r\n\r\n        this.assets = this.animationData.assets;\r\n        this.frameRate = this.animationData.fr;\r\n        this.firstFrame = Math.round(this.animationData.ip);\r\n        this.frameMult = this.animationData.fr / 1000;\r\n        this.renderer.searchExtraCompositions(animData.assets);\r\n        this.trigger('config_ready');\r\n        this.preloadImages();\r\n        this.loadSegments();\r\n        this.updaFrameModifier();\r\n        this.waitForFontsLoaded();\r\n    } catch(error) {\r\n        this.triggerConfigError(error);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.waitForFontsLoaded = function(){\r\n    if(!this.renderer) {\r\n        return;\r\n    }\r\n    if(this.renderer.globalData.fontManager.loaded()){\r\n        this.checkLoaded();\r\n    }else{\r\n        setTimeout(this.waitForFontsLoaded.bind(this),20);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.checkLoaded = function () {\r\n    if (!this.isLoaded && this.renderer.globalData.fontManager.loaded() && (this.imagePreloader.loaded() || this.renderer.rendererType !== 'canvas')) {\r\n        this.isLoaded = true;\r\n        dataManager.completeData(this.animationData, this.renderer.globalData.fontManager);\r\n        if(expressionsPlugin){\r\n            expressionsPlugin.initExpressions(this);\r\n        }\r\n        this.renderer.initItems();\r\n        setTimeout(function() {\r\n            this.trigger('DOMLoaded');\r\n        }.bind(this), 0);\r\n        this.gotoFrame();\r\n        if(this.autoplay){\r\n            this.play();\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resize = function () {\r\n    this.renderer.updateContainerSize();\r\n};\r\n\r\nAnimationItem.prototype.setSubframe = function(flag){\r\n    this.subframeEnabled = flag ? true : false;\r\n};\r\n\r\nAnimationItem.prototype.gotoFrame = function () {\r\n    this.currentFrame = this.subframeEnabled ? this.currentRawFrame : ~~this.currentRawFrame;\r\n\r\n    if(this.timeCompleted !== this.totalFrames && this.currentFrame > this.timeCompleted){\r\n        this.currentFrame = this.timeCompleted;\r\n    }\r\n    this.trigger('enterFrame');\r\n    this.renderFrame();\r\n};\r\n\r\nAnimationItem.prototype.renderFrame = function () {\r\n    if(this.isLoaded === false){\r\n        return;\r\n    }\r\n    try {\r\n        this.renderer.renderFrame(this.currentFrame + this.firstFrame);\r\n    } catch(error) {\r\n        this.triggerRenderFrameError(error);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.play = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.isPaused = false;\r\n        if(this._idle){\r\n            this._idle = false;\r\n            this.trigger('_active');\r\n        }\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.pause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === false){\r\n        this.isPaused = true;\r\n        this._idle = true;\r\n        this.trigger('_idle');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.togglePause = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(this.isPaused === true){\r\n        this.play();\r\n    }else{\r\n        this.pause();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.stop = function (name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    this.pause();\r\n    this.playCount = 0;\r\n    this._completedLoop = false;\r\n    this.setCurrentRawFrameValue(0);\r\n};\r\n\r\nAnimationItem.prototype.goToAndStop = function (value, isFrame, name) {\r\n    if(name && this.name != name){\r\n        return;\r\n    }\r\n    if(isFrame){\r\n        this.setCurrentRawFrameValue(value);\r\n    }else{\r\n        this.setCurrentRawFrameValue(value * this.frameModifier);\r\n    }\r\n    this.pause();\r\n};\r\n\r\nAnimationItem.prototype.goToAndPlay = function (value, isFrame, name) {\r\n    this.goToAndStop(value, isFrame, name);\r\n    this.play();\r\n};\r\n\r\nAnimationItem.prototype.advanceTime = function (value) {\r\n    if (this.isPaused === true || this.isLoaded === false) {\r\n        return;\r\n    }\r\n    var nextValue = this.currentRawFrame + value * this.frameModifier;\r\n    var _isComplete = false;\r\n    // Checking if nextValue > totalFrames - 1 for addressing non looping and looping animations.\r\n    // If animation won't loop, it should stop at totalFrames - 1. If it will loop it should complete the last frame and then loop.\r\n    if (nextValue >= this.totalFrames - 1 && this.frameModifier > 0) {\r\n        if (!this.loop || this.playCount === this.loop) {\r\n            if (!this.checkSegments(nextValue >  this.totalFrames ? nextValue % this.totalFrames : 0)) {\r\n                _isComplete = true;\r\n                nextValue = this.totalFrames - 1;\r\n            }\r\n        } else if (nextValue >= this.totalFrames) {\r\n            this.playCount += 1;\r\n            if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n                this.setCurrentRawFrameValue(nextValue % this.totalFrames);\r\n                this._completedLoop = true;\r\n                this.trigger('loopComplete');\r\n            }\r\n        } else {\r\n            this.setCurrentRawFrameValue(nextValue);\r\n        }\r\n    } else if(nextValue < 0) {\r\n        if (!this.checkSegments(nextValue % this.totalFrames)) {\r\n            if (this.loop && !(this.playCount-- <= 0 && this.loop !== true)) {\r\n                this.setCurrentRawFrameValue(this.totalFrames + (nextValue % this.totalFrames));\r\n                if(!this._completedLoop) {\r\n                    this._completedLoop = true;\r\n                } else {\r\n                    this.trigger('loopComplete');\r\n                }\r\n            } else {\r\n                _isComplete = true;\r\n                nextValue = 0;\r\n            }\r\n        }\r\n    } else {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n    }\r\n    if (_isComplete) {\r\n        this.setCurrentRawFrameValue(nextValue);\r\n        this.pause();\r\n        this.trigger('complete');\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.adjustSegment = function(arr, offset){\r\n    this.playCount = 0;\r\n    if(arr[1] < arr[0]){\r\n        if(this.frameModifier > 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(-1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[0] - arr[1];\r\n        this.firstFrame = arr[1];\r\n        this.setCurrentRawFrameValue(this.totalFrames - 0.001 - offset);\r\n    } else if(arr[1] > arr[0]){\r\n        if(this.frameModifier < 0){\r\n            if(this.playSpeed < 0){\r\n                this.setSpeed(-this.playSpeed);\r\n            } else {\r\n                this.setDirection(1);\r\n            }\r\n        }\r\n        this.timeCompleted = this.totalFrames = arr[1] - arr[0];\r\n        this.firstFrame = arr[0];\r\n        this.setCurrentRawFrameValue(0.001 + offset);\r\n    }\r\n    this.trigger('segmentStart');\r\n};\r\nAnimationItem.prototype.setSegment = function (init,end) {\r\n    var pendingFrame = -1;\r\n    if(this.isPaused) {\r\n        if (this.currentRawFrame + this.firstFrame < init) {\r\n            pendingFrame = init;\r\n        } else if (this.currentRawFrame + this.firstFrame > end) {\r\n            pendingFrame = end - init;\r\n        }\r\n    }\r\n\r\n    this.firstFrame = init;\r\n    this.timeCompleted = this.totalFrames = end - init;\r\n    if(pendingFrame !== -1) {\r\n        this.goToAndStop(pendingFrame,true);\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.playSegments = function (arr, forceFlag) {\r\n    if (forceFlag) {\r\n        this.segments.length = 0;\r\n    }\r\n    if (typeof arr[0] === 'object') {\r\n        var i, len = arr.length;\r\n        for (i = 0; i < len; i += 1) {\r\n            this.segments.push(arr[i]);\r\n        }\r\n    } else {\r\n        this.segments.push(arr);\r\n    }\r\n    if (this.segments.length && forceFlag) {\r\n        this.adjustSegment(this.segments.shift(), 0);\r\n    }\r\n    if (this.isPaused) {\r\n        this.play();\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.resetSegments = function (forceFlag) {\r\n    this.segments.length = 0;\r\n    this.segments.push([this.animationData.ip,this.animationData.op]);\r\n    //this.segments.push([this.animationData.ip*this.frameRate,Math.floor(this.animationData.op - this.animationData.ip+this.animationData.ip*this.frameRate)]);\r\n    if (forceFlag) {\r\n        this.checkSegments(0);\r\n    }\r\n};\r\nAnimationItem.prototype.checkSegments = function(offset) {\r\n    if (this.segments.length) {\r\n        this.adjustSegment(this.segments.shift(), offset);\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nAnimationItem.prototype.destroy = function (name) {\r\n    if ((name && this.name != name) || !this.renderer) {\r\n        return;\r\n    }\r\n    this.renderer.destroy();\r\n    this.imagePreloader.destroy();\r\n    this.trigger('destroy');\r\n    this._cbs = null;\r\n    this.onEnterFrame = this.onLoopComplete = this.onComplete = this.onSegmentStart = this.onDestroy = null;\r\n    this.renderer = null;\r\n};\r\n\r\nAnimationItem.prototype.setCurrentRawFrameValue = function(value){\r\n    this.currentRawFrame = value;\r\n    this.gotoFrame();\r\n};\r\n\r\nAnimationItem.prototype.setSpeed = function (val) {\r\n    this.playSpeed = val;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.setDirection = function (val) {\r\n    this.playDirection = val < 0 ? -1 : 1;\r\n    this.updaFrameModifier();\r\n};\r\n\r\nAnimationItem.prototype.updaFrameModifier = function () {\r\n    this.frameModifier = this.frameMult * this.playSpeed * this.playDirection;\r\n};\r\n\r\nAnimationItem.prototype.getPath = function () {\r\n    return this.path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetsPath = function (assetData) {\r\n    var path = '';\r\n    if(assetData.e) {\r\n        path = assetData.p;\r\n    } else if(this.assetsPath){\r\n        var imagePath = assetData.p;\r\n        if(imagePath.indexOf('images/') !== -1){\r\n            imagePath = imagePath.split('/')[1];\r\n        }\r\n        path = this.assetsPath + imagePath;\r\n    } else {\r\n        path = this.path;\r\n        path += assetData.u ? assetData.u : '';\r\n        path += assetData.p;\r\n    }\r\n    return path;\r\n};\r\n\r\nAnimationItem.prototype.getAssetData = function (id) {\r\n    var i = 0, len = this.assets.length;\r\n    while (i < len) {\r\n        if(id == this.assets[i].id){\r\n            return this.assets[i];\r\n        }\r\n        i += 1;\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.hide = function () {\r\n    this.renderer.hide();\r\n};\r\n\r\nAnimationItem.prototype.show = function () {\r\n    this.renderer.show();\r\n};\r\n\r\nAnimationItem.prototype.getDuration = function (isFrame) {\r\n    return isFrame ? this.totalFrames : this.totalFrames / this.frameRate;\r\n};\r\n\r\nAnimationItem.prototype.trigger = function(name){\r\n    if(this._cbs && this._cbs[name]){\r\n        switch(name){\r\n            case 'enterFrame':\r\n                this.triggerEvent(name,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameModifier));\r\n                break;\r\n            case 'loopComplete':\r\n                this.triggerEvent(name,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n                break;\r\n            case 'complete':\r\n                this.triggerEvent(name,new BMCompleteEvent(name,this.frameMult));\r\n                break;\r\n            case 'segmentStart':\r\n                this.triggerEvent(name,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n                break;\r\n            case 'destroy':\r\n                this.triggerEvent(name,new BMDestroyEvent(name,this));\r\n                break;\r\n            default:\r\n                this.triggerEvent(name);\r\n        }\r\n    }\r\n    if(name === 'enterFrame' && this.onEnterFrame){\r\n        this.onEnterFrame.call(this,new BMEnterFrameEvent(name,this.currentFrame,this.totalFrames,this.frameMult));\r\n    }\r\n    if(name === 'loopComplete' && this.onLoopComplete){\r\n        this.onLoopComplete.call(this,new BMCompleteLoopEvent(name,this.loop,this.playCount,this.frameMult));\r\n    }\r\n    if(name === 'complete' && this.onComplete){\r\n        this.onComplete.call(this,new BMCompleteEvent(name,this.frameMult));\r\n    }\r\n    if(name === 'segmentStart' && this.onSegmentStart){\r\n        this.onSegmentStart.call(this,new BMSegmentStartEvent(name,this.firstFrame,this.totalFrames));\r\n    }\r\n    if(name === 'destroy' && this.onDestroy){\r\n        this.onDestroy.call(this,new BMDestroyEvent(name,this));\r\n    }\r\n};\r\n\r\nAnimationItem.prototype.triggerRenderFrameError = function(nativeError) {\r\n\r\n    var error = new BMRenderFrameErrorEvent(nativeError, this.currentFrame);\r\n    this.triggerEvent('error', error);\r\n\r\n    if (this.onError) {\r\n        this.onError.call(this, error);\r\n    }\r\n}\r\n\r\nAnimationItem.prototype.triggerConfigError = function(nativeError) {\r\n\r\n    var error = new BMConfigErrorEvent(nativeError, this.currentFrame);\r\n    this.triggerEvent('error', error);\r\n\r\n    if (this.onError) {\r\n        this.onError.call(this, error);\r\n    }\r\n}\r\nvar Expressions = (function(){\r\n    var ob = {};\r\n    ob.initExpressions = initExpressions;\r\n\r\n\r\n    function initExpressions(animation){\r\n\r\n    \tvar stackCount = 0;\r\n    \tvar registers = [];\r\n\r\n    \tfunction pushExpression() {\r\n\t\t\tstackCount += 1;\r\n    \t}\r\n\r\n    \tfunction popExpression() {\r\n\t\t\tstackCount -= 1;\r\n\t\t\tif (stackCount === 0) {\r\n\t\t\t\treleaseInstances();\r\n\t\t\t}\r\n    \t}\r\n\r\n    \tfunction registerExpressionProperty(expression) {\r\n    \t\tif (registers.indexOf(expression) === -1) {\r\n\t\t\t\tregisters.push(expression)\r\n    \t\t}\r\n    \t}\r\n\r\n    \tfunction releaseInstances() {\r\n    \t\tvar i, len = registers.length;\r\n    \t\tfor (i = 0; i < len; i += 1) {\r\n\t\t\t\tregisters[i].release();\r\n    \t\t}\r\n    \t\tregisters.length = 0;\r\n    \t}\r\n\r\n        animation.renderer.compInterface = CompExpressionInterface(animation.renderer);\r\n        animation.renderer.globalData.projectInterface.registerComposition(animation.renderer);\r\n        animation.renderer.globalData.pushExpression = pushExpression;\r\n        animation.renderer.globalData.popExpression = popExpression;\r\n        animation.renderer.globalData.registerExpressionProperty = registerExpressionProperty;\r\n    }\r\n   return ob;\r\n}());\r\n\r\nexpressionsPlugin = Expressions;\r\n\r\nvar ExpressionManager = (function(){\r\n    'use strict';\r\n    var ob = {};\r\n    var Math = BMMath;\r\n    var window = null;\r\n    var document = null;\r\n\r\n    function $bm_isInstanceOfArray(arr) {\r\n        return arr.constructor === Array || arr.constructor === Float32Array;\r\n    }\r\n\r\n    function isNumerable(tOfV, v) {\r\n        return tOfV === 'number' || tOfV === 'boolean' || tOfV === 'string' || v instanceof Number;\r\n    }\r\n\r\n    function $bm_neg(a){\r\n        var tOfA = typeof a;\r\n        if(tOfA === 'number' || tOfA === 'boolean'  || a instanceof Number ){\r\n            return -a;\r\n        }\r\n        if($bm_isInstanceOfArray(a)){\r\n            var i, lenA = a.length;\r\n            var retArr = [];\r\n            for(i=0;i<lenA;i+=1){\r\n                retArr[i] = -a[i];\r\n            }\r\n            return retArr;\r\n        }\r\n        if (a.propType) {\r\n            return a.v;\r\n        }\r\n    }\r\n\r\n    var easeInBez = BezierFactory.getBezierEasing(0.333,0,.833,.833, 'easeIn').get;\r\n    var easeOutBez = BezierFactory.getBezierEasing(0.167,0.167,.667,1, 'easeOut').get;\r\n    var easeInOutBez = BezierFactory.getBezierEasing(.33,0,.667,1, 'easeInOut').get;\r\n\r\n    function sum(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(tOfA === 'string' || tOfB === 'string'){\r\n            return a + b;\r\n        }\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a + b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] + b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a + b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            \r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] + b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n    var add = sum;\r\n\r\n    function sub(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            if(tOfA === 'string') {\r\n                a = parseInt(a);\r\n            }\r\n            if(tOfB === 'string') {\r\n                b = parseInt(b);\r\n            }\r\n            return a - b;\r\n        }\r\n        if( $bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            a = a.slice(0);\r\n            a[0] = a[0] - b;\r\n            return a;\r\n        }\r\n        if(isNumerable(tOfA, a) &&  $bm_isInstanceOfArray(b)){\r\n            b = b.slice(0);\r\n            b[0] = a - b[0];\r\n            return b;\r\n        }\r\n        if($bm_isInstanceOfArray(a) && $bm_isInstanceOfArray(b)){\r\n            var i = 0, lenA = a.length, lenB = b.length;\r\n            var retArr = [];\r\n            while(i<lenA || i < lenB){\r\n                if((typeof a[i] === 'number' || a[i] instanceof Number) && (typeof b[i] === 'number' || b[i] instanceof Number)){\r\n                    retArr[i] = a[i] - b[i];\r\n                }else{\r\n                    retArr[i] = b[i] === undefined ? a[i] : a[i] || b[i];\r\n                }\r\n                i += 1;\r\n            }\r\n            return retArr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function mul(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a * b;\r\n        }\r\n\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] * b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a * b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    function div(a,b) {\r\n        var tOfA = typeof a;\r\n        var tOfB = typeof b;\r\n        var arr;\r\n        if(isNumerable(tOfA, a) && isNumerable(tOfB, b)) {\r\n            return a / b;\r\n        }\r\n        var i, len;\r\n        if($bm_isInstanceOfArray(a) && isNumerable(tOfB, b)){\r\n            len = a.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a[i] / b;\r\n            }\r\n            return arr;\r\n        }\r\n        if(isNumerable(tOfA, a) && $bm_isInstanceOfArray(b)){\r\n            len = b.length;\r\n            arr = createTypedArray('float32', len);\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = a / b[i];\r\n            }\r\n            return arr;\r\n        }\r\n        return 0;\r\n    }\r\n    function mod(a,b) {\r\n        if(typeof a === 'string') {\r\n            a = parseInt(a);\r\n        }\r\n        if(typeof b === 'string') {\r\n            b = parseInt(b);\r\n        }\r\n        return a % b;\r\n    }\r\n    var $bm_sum = sum;\r\n    var $bm_sub = sub;\r\n    var $bm_mul = mul;\r\n    var $bm_div = div;\r\n    var $bm_mod = mod;\r\n\r\n    function clamp(num, min, max) {\r\n        if(min > max){\r\n            var mm = max;\r\n            max = min;\r\n            min = mm;\r\n        }\r\n        return Math.min(Math.max(num, min), max);\r\n    }\r\n\r\n    function radiansToDegrees(val) {\r\n        return val/degToRads;\r\n    }\r\n    var radians_to_degrees = radiansToDegrees;\r\n\r\n    function degreesToRadians(val) {\r\n        return val*degToRads;\r\n    }\r\n    var degrees_to_radians = radiansToDegrees;\r\n\r\n    var helperLengthArray = [0,0,0,0,0,0];\r\n\r\n    function length(arr1, arr2) {\r\n        if (typeof arr1 === 'number' || arr1 instanceof Number) {\r\n            arr2 = arr2 || 0;\r\n            return Math.abs(arr1 - arr2);\r\n        }\r\n        if(!arr2) {\r\n            arr2 = helperLengthArray;\r\n        }\r\n        var i, len = Math.min(arr1.length, arr2.length);\r\n        var addedLength = 0;\r\n        for (i = 0; i < len; i += 1) {\r\n            addedLength += Math.pow(arr2[i] - arr1[i], 2);\r\n        }\r\n        return Math.sqrt(addedLength);\r\n    }\r\n\r\n    function normalize(vec) {\r\n        return div(vec, length(vec));\r\n    }\r\n\r\n    function rgbToHsl(val) {\r\n        var r = val[0]; var g = val[1]; var b = val[2];\r\n        var max = Math.max(r, g, b), min = Math.min(r, g, b);\r\n        var h, s, l = (max + min) / 2;\r\n\r\n        if(max == min){\r\n            h = s = 0; // achromatic\r\n        }else{\r\n            var d = max - min;\r\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\r\n            switch(max){\r\n                case r: h = (g - b) / d + (g < b ? 6 : 0); break;\r\n                case g: h = (b - r) / d + 2; break;\r\n                case b: h = (r - g) / d + 4; break;\r\n            }\r\n            h /= 6;\r\n        }\r\n\r\n        return [h, s, l,val[3]];\r\n    }\r\n\r\n    function hue2rgb(p, q, t){\r\n        if(t < 0) t += 1;\r\n        if(t > 1) t -= 1;\r\n        if(t < 1/6) return p + (q - p) * 6 * t;\r\n        if(t < 1/2) return q;\r\n        if(t < 2/3) return p + (q - p) * (2/3 - t) * 6;\r\n        return p;\r\n    }\r\n\r\n    function hslToRgb(val){\r\n        var h = val[0];\r\n        var s = val[1];\r\n        var l = val[2];\r\n\r\n        var r, g, b;\r\n\r\n        if(s === 0){\r\n            r = g = b = l; // achromatic\r\n        }else{\r\n\r\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n            var p = 2 * l - q;\r\n            r = hue2rgb(p, q, h + 1/3);\r\n            g = hue2rgb(p, q, h);\r\n            b = hue2rgb(p, q, h - 1/3);\r\n        }\r\n\r\n        return [r, g , b, val[3]];\r\n    }\r\n\r\n    function linear(t, tMin, tMax, value1, value2){\r\n        if(value1 === undefined || value2 === undefined){\r\n            value1 = tMin;\r\n            value2 = tMax;\r\n            tMin = 0;\r\n            tMax = 1;\r\n        }\r\n        if(tMax < tMin) {\r\n            var _tMin = tMax;\r\n            tMax = tMin;\r\n            tMin = _tMin;\r\n        }\r\n        if(t <= tMin) {\r\n            return value1;\r\n        }else if(t >= tMax){\r\n            return value2;\r\n        }\r\n        var perc = tMax === tMin ? 0 : (t-tMin)/(tMax-tMin);\r\n        if(!value1.length){\r\n            return value1 + (value2-value1)*perc;\r\n        }\r\n        var i, len = value1.length;\r\n        var arr = createTypedArray('float32', len);\r\n        for(i=0;i<len;i+=1){\r\n            arr[i] = value1[i] + (value2[i]-value1[i])*perc;\r\n        }\r\n        return arr;\r\n    }\r\n    function random(min,max){\r\n        if(max === undefined){\r\n            if(min === undefined){\r\n                min = 0;\r\n                max = 1;\r\n            } else {\r\n                max = min;\r\n                min = undefined;\r\n            }\r\n        }\r\n        if(max.length){\r\n            var i, len = max.length;\r\n            if(!min){\r\n                min = createTypedArray('float32', len);\r\n            }\r\n            var arr = createTypedArray('float32', len);\r\n            var rnd = BMMath.random();\r\n            for(i=0;i<len;i+=1){\r\n                arr[i] = min[i] + rnd*(max[i]-min[i]);\r\n            }\r\n            return arr;\r\n        }\r\n        if(min === undefined){\r\n            min = 0;\r\n        }\r\n        var rndm = BMMath.random();\r\n        return min + rndm*(max-min);\r\n    }\r\n\r\n    function createPath(points, inTangents, outTangents, closed) {\r\n        var i, len = points.length;\r\n        var path = shape_pool.newElement();\r\n        path.setPathData(!!closed, len);\r\n        var arrPlaceholder = [0,0], inVertexPoint, outVertexPoint;\r\n        for(i = 0; i < len; i += 1) {\r\n            inVertexPoint = (inTangents && inTangents[i]) ? inTangents[i] : arrPlaceholder;\r\n            outVertexPoint = (outTangents && outTangents[i]) ? outTangents[i] : arrPlaceholder;\r\n            path.setTripleAt(points[i][0],points[i][1],outVertexPoint[0] + points[i][0],outVertexPoint[1] + points[i][1],inVertexPoint[0] + points[i][0],inVertexPoint[1] + points[i][1],i,true);\r\n        }\r\n        return path;\r\n    }\r\n\r\n    function initiateExpression(elem,data,property){\r\n        var val = data.x;\r\n        var needsVelocity = /velocity(?![\\w\\d])/.test(val);\r\n        var _needsRandom = val.indexOf('random') !== -1;\r\n        var elemType = elem.data.ty;\r\n        var transform,$bm_transform,content,effect;\r\n        var thisProperty = property;\r\n        thisProperty.valueAtTime = thisProperty.getValueAtTime;\r\n        Object.defineProperty(thisProperty, 'value', {\r\n            get: function() {\r\n                return thisProperty.v\r\n            }\r\n        })\r\n        elem.comp.frameDuration = 1/elem.comp.globalData.frameRate;\r\n        elem.comp.displayStartTime = 0;\r\n        var inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        var outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        var width = elem.data.sw ? elem.data.sw : 0;\r\n        var height = elem.data.sh ? elem.data.sh : 0;\r\n        var name = elem.data.nm;\r\n        var loopIn, loop_in, loopOut, loop_out, smooth;\r\n        var toWorld,fromWorld,fromComp,toComp,fromCompToSurface, position, rotation, anchorPoint, scale, thisLayer, thisComp,mask,valueAtTime,velocityAtTime;\r\n        var __expression_functions = [];\r\n        if(data.xf) {\r\n            var i, len = data.xf.length;\r\n            for(i = 0; i < len; i += 1) {\r\n                __expression_functions[i] = eval('(function(){ return ' + data.xf[i] + '}())');\r\n            }\r\n        }\r\n\r\n        var scoped_bm_rt;\r\n        var expression_function = eval('[function _expression_function(){' + val+';scoped_bm_rt=$bm_rt}' + ']')[0];\r\n        var numKeys = property.kf ? data.k.length : 0;\r\n\r\n        var active = !this.data || this.data.hd !== true;\r\n\r\n        var wiggle = function wiggle(freq,amp){\r\n            var i,j, len = this.pv.length ? this.pv.length : 1;\r\n            var addedAmps = createTypedArray('float32', len);\r\n            freq = 5;\r\n            var iterations = Math.floor(time*freq);\r\n            i = 0;\r\n            j = 0;\r\n            while(i<iterations){\r\n                //var rnd = BMMath.random();\r\n                for(j=0;j<len;j+=1){\r\n                    addedAmps[j] += -amp + amp*2*BMMath.random();\r\n                    //addedAmps[j] += -amp + amp*2*rnd;\r\n                }\r\n                i += 1;\r\n            }\r\n            //var rnd2 = BMMath.random();\r\n            var periods = time*freq;\r\n            var perc = periods - Math.floor(periods);\r\n            var arr = createTypedArray('float32', len);\r\n            if(len>1){\r\n                for(j=0;j<len;j+=1){\r\n                    arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*BMMath.random())*perc;\r\n                    //arr[j] = this.pv[j] + addedAmps[j] + (-amp + amp*2*rnd)*perc;\r\n                    //arr[i] = this.pv[i] + addedAmp + amp1*perc + amp2*(1-perc);\r\n                }\r\n                return arr;\r\n            } else {\r\n                return this.pv + addedAmps[0] + (-amp + amp*2*BMMath.random())*perc;\r\n            }\r\n        }.bind(this);\r\n\r\n        if(thisProperty.loopIn) {\r\n            loopIn = thisProperty.loopIn.bind(thisProperty);\r\n            loop_in = loopIn;\r\n        }\r\n\r\n        if(thisProperty.loopOut) {\r\n            loopOut = thisProperty.loopOut.bind(thisProperty);\r\n            loop_out = loopOut;\r\n        }\r\n\r\n        if(thisProperty.smooth) {\r\n            smooth = thisProperty.smooth.bind(thisProperty);\r\n        }\r\n\r\n        function loopInDuration(type,duration){\r\n            return loopIn(type,duration,true);\r\n        }\r\n\r\n        function loopOutDuration(type,duration){\r\n            return loopOut(type,duration,true);\r\n        }\r\n\r\n        if(this.getValueAtTime) {\r\n            valueAtTime = this.getValueAtTime.bind(this);\r\n        }\r\n\r\n        if(this.getVelocityAtTime) {\r\n            velocityAtTime = this.getVelocityAtTime.bind(this);\r\n        }\r\n\r\n        var comp = elem.comp.globalData.projectInterface.bind(elem.comp.globalData.projectInterface);\r\n\r\n        function lookAt(elem1,elem2){\r\n            var fVec = [elem2[0]-elem1[0],elem2[1]-elem1[1],elem2[2]-elem1[2]];\r\n            var pitch = Math.atan2(fVec[0],Math.sqrt(fVec[1]*fVec[1]+fVec[2]*fVec[2]))/degToRads;\r\n            var yaw = -Math.atan2(fVec[1],fVec[2])/degToRads;\r\n            return [yaw,pitch,0];\r\n        }\r\n\r\n        function easeOut(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function easeIn(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function ease(t, tMin, tMax, val1, val2){\r\n            return applyEase(easeInOutBez, t, tMin, tMax, val1, val2);\r\n        }\r\n\r\n        function applyEase(fn, t, tMin, tMax, val1, val2) {\r\n            if(val1 === undefined){\r\n                val1 = tMin;\r\n                val2 = tMax;\r\n            } else {\r\n                t = (t - tMin) / (tMax - tMin);\r\n            }\r\n            t = t > 1 ? 1 : t < 0 ? 0 : t;\r\n            var mult = fn(t);\r\n            if($bm_isInstanceOfArray(val1)) {\r\n                var i, len = val1.length;\r\n                var arr = createTypedArray('float32', len);\r\n                for (i = 0; i < len; i += 1) {\r\n                    arr[i] = (val2[i] - val1[i]) * mult + val1[i];\r\n                }\r\n                return arr;\r\n            } else {\r\n                return (val2 - val1) * mult + val1;\r\n            }\r\n        }\r\n\r\n        function nearestKey(time){\r\n            var i, len = data.k.length,index,keyTime;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                index = 0;\r\n                keyTime = 0;\r\n            } else {\r\n                index = -1;\r\n                time *= elem.comp.globalData.frameRate;\r\n                if (time < data.k[0].t) {\r\n                    index = 1;\r\n                    keyTime = data.k[0].t;\r\n                } else {\r\n                    for(i=0;i<len-1;i+=1){\r\n                        if(time === data.k[i].t){\r\n                            index = i + 1;\r\n                            keyTime = data.k[i].t;\r\n                            break;\r\n                        }else if(time>data.k[i].t && time<data.k[i+1].t){\r\n                            if(time-data.k[i].t > data.k[i+1].t - time){\r\n                                index = i + 2;\r\n                                keyTime = data.k[i+1].t;\r\n                            } else {\r\n                                index = i + 1;\r\n                                keyTime = data.k[i].t;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if(index === -1){\r\n                        index = i + 1;\r\n                        keyTime = data.k[i].t;\r\n                    }\r\n                }\r\n                \r\n            }\r\n            var ob = {};\r\n            ob.index = index;\r\n            ob.time = keyTime/elem.comp.globalData.frameRate;\r\n            return ob;\r\n        }\r\n\r\n        function key(ind){\r\n            var ob, i, len;\r\n            if(!data.k.length || typeof(data.k[0]) === 'number'){\r\n                throw new Error('The property has no keyframe at index ' + ind);\r\n            }\r\n            ind -= 1;\r\n            ob = {\r\n                time: data.k[ind].t/elem.comp.globalData.frameRate,\r\n                value: []\r\n            };\r\n            var arr = data.k[ind].hasOwnProperty('s') ? data.k[ind].s : data.k[ind - 1].e;\r\n\r\n            len = arr.length;\r\n            for(i=0;i<len;i+=1){\r\n                ob[i] = arr[i];\r\n                ob.value[i] = arr[i]\r\n            }\r\n            return ob;\r\n        }\r\n\r\n        function framesToTime(frames, fps) { \r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return frames / fps;\r\n        }\r\n\r\n        function timeToFrames(t, fps) {\r\n            if (!t && t !== 0) {\r\n                t = time;\r\n            }\r\n            if (!fps) {\r\n                fps = elem.comp.globalData.frameRate;\r\n            }\r\n            return t * fps;\r\n        }\r\n\r\n        function seedRandom(seed){\r\n            BMMath.seedrandom(randSeed + seed);\r\n        }\r\n\r\n        function sourceRectAtTime() {\r\n            return elem.sourceRectAtTime();\r\n        }\r\n\r\n        function substring(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substring(init)\r\n                }\r\n                return value.substring(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function substr(init, end) {\r\n            if(typeof value === 'string') {\r\n                if(end === undefined) {\r\n                return value.substr(init)\r\n                }\r\n                return value.substr(init, end)\r\n            }\r\n            return '';\r\n        }\r\n\r\n        function posterizeTime(framesPerSecond) {\r\n            time = framesPerSecond === 0 ? 0 : Math.floor(time * framesPerSecond) / framesPerSecond\r\n            value = valueAtTime(time)\r\n        }\r\n\r\n        var time, velocity, value, text, textIndex, textTotal, selectorValue;\r\n        var index = elem.data.ind;\r\n        var hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n        var parent;\r\n        var randSeed = Math.floor(Math.random()*1000000);\r\n        var globalData = elem.globalData;\r\n        function executeExpression(_value) {\r\n            // globalData.pushExpression();\r\n            value = _value;\r\n            if (_needsRandom) {\r\n                seedRandom(randSeed);\r\n            }\r\n            if (this.frameExpressionId === elem.globalData.frameId && this.propType !== 'textSelector') {\r\n                return value;\r\n            }\r\n            if(this.propType === 'textSelector'){\r\n                textIndex = this.textIndex;\r\n                textTotal = this.textTotal;\r\n                selectorValue = this.selectorValue;\r\n            }\r\n            if (!thisLayer) {\r\n                text = elem.layerInterface.text;\r\n                thisLayer = elem.layerInterface;\r\n                thisComp = elem.comp.compInterface;\r\n                toWorld = thisLayer.toWorld.bind(thisLayer);\r\n                fromWorld = thisLayer.fromWorld.bind(thisLayer);\r\n                fromComp = thisLayer.fromComp.bind(thisLayer);\r\n                toComp = thisLayer.toComp.bind(thisLayer);\r\n                mask = thisLayer.mask ? thisLayer.mask.bind(thisLayer) : null;\r\n                fromCompToSurface = fromComp;\r\n            }\r\n            if (!transform) {\r\n                transform = elem.layerInterface(\"ADBE Transform Group\");\r\n                $bm_transform = transform;\r\n                if(transform) {\r\n                    anchorPoint = transform.anchorPoint;\r\n                    /*position = transform.position;\r\n                    rotation = transform.rotation;\r\n                    scale = transform.scale;*/\r\n                }\r\n            }\r\n            \r\n            if (elemType === 4 && !content) {\r\n                content = thisLayer(\"ADBE Root Vectors Group\");\r\n            }\r\n            if (!effect) {\r\n                effect = thisLayer(4);\r\n            }\r\n            hasParent = !!(elem.hierarchy && elem.hierarchy.length);\r\n            if (hasParent && !parent) {\r\n                parent = elem.hierarchy[0].layerInterface;\r\n            }\r\n            time = this.comp.renderedFrame/this.comp.globalData.frameRate;\r\n            if (needsVelocity) {\r\n                velocity = velocityAtTime(time);\r\n            }\r\n            expression_function();\r\n            this.frameExpressionId = elem.globalData.frameId;\r\n\r\n\r\n            //TODO: Check if it's possible to return on ShapeInterface the .v value\r\n            if (scoped_bm_rt.propType === \"shape\") {\r\n                scoped_bm_rt = scoped_bm_rt.v;\r\n            }\r\n            // globalData.popExpression();\r\n            return scoped_bm_rt;\r\n        }\r\n        return executeExpression;\r\n    }\r\n\r\n    ob.initiateExpression = initiateExpression;\r\n    return ob;\r\n}());\r\nvar expressionHelpers = (function(){\r\n\r\n    function searchExpressions(elem,data,prop){\r\n        if(data.x){\r\n            prop.k = true;\r\n            prop.x = true;\r\n            prop.initiateExpression = ExpressionManager.initiateExpression;\r\n            prop.effectsSequence.push(prop.initiateExpression(elem,data,prop).bind(prop));\r\n        }\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getSpeedAtTime(frameNum) {\r\n        var delta = -0.01;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var speed = 0;\r\n        if(v1.length){\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                speed += Math.pow(v2[i] - v1[i], 2);\r\n            }\r\n            speed = Math.sqrt(speed) * 100;\r\n        } else {\r\n            speed = 0;\r\n        }\r\n        return speed;\r\n    }\r\n\r\n    function getVelocityAtTime(frameNum) {\r\n        if(this.vel !== undefined){\r\n            return this.vel;\r\n        }\r\n        var delta = -0.001;\r\n        //frameNum += this.elem.data.st;\r\n        var v1 = this.getValueAtTime(frameNum);\r\n        var v2 = this.getValueAtTime(frameNum + delta);\r\n        var velocity;\r\n        if(v1.length){\r\n            velocity = createTypedArray('float32', v1.length);\r\n            var i;\r\n            for(i=0;i<v1.length;i+=1){\r\n                //removing frameRate\r\n                //if needed, don't add it here\r\n                //velocity[i] = this.elem.globalData.frameRate*((v2[i] - v1[i])/delta);\r\n                velocity[i] = (v2[i] - v1[i])/delta;\r\n            }\r\n        } else {\r\n            velocity = (v2 - v1)/delta;\r\n        }\r\n        return velocity;\r\n    }\r\n\r\n    function getStaticValueAtTime() {\r\n        return this.pv;\r\n    }\r\n\r\n    function setGroupProperty(propertyGroup){\r\n        this.propertyGroup = propertyGroup;\r\n    }\r\n\r\n\treturn {\r\n\t\tsearchExpressions: searchExpressions,\r\n\t\tgetSpeedAtTime: getSpeedAtTime,\r\n\t\tgetVelocityAtTime: getVelocityAtTime,\r\n\t\tgetValueAtTime: getValueAtTime,\r\n\t\tgetStaticValueAtTime: getStaticValueAtTime,\r\n\t\tsetGroupProperty: setGroupProperty,\r\n\t}\r\n}());\r\n(function addPropertyDecorator() {\r\n\r\n    function loopOut(type,duration,durationFlag){\r\n        if(!this.k || !this.keyframes){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var lastKeyFrame = keyframes[keyframes.length - 1].t;\r\n        if(currentFrame<=lastKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, firstKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                firstKeyFrame = keyframes[keyframes.length - 1 - duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,lastKeyFrame - this.elem.data.ip);\r\n                } else {\r\n                    cycleDuration = Math.abs(lastKeyFrame - elem.comp.globalData.frameRate*duration);\r\n                }\r\n                firstKeyFrame = lastKeyFrame - cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(iterations % 2 !== 0){\r\n                    return this.getValueAtTime(((cycleDuration - (currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime(((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((currentFrame - firstKeyFrame)/cycleDuration);\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = (endV[i]-initV[i])*repeats + current[i];\r\n                    }\r\n                    return ret;\r\n                }\r\n                return (endV-initV)*repeats + current;\r\n            } else if(type === 'continue'){\r\n                var lastValue = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextLastValue = this.getValueAtTime((lastKeyFrame - 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(lastValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = lastValue[i] + (lastValue[i]-nextLastValue[i])*((currentFrame - lastKeyFrame)/ this.comp.globalData.frameRate)/0.0005;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return lastValue + (lastValue-nextLastValue)*(((currentFrame - lastKeyFrame))/0.001);\r\n            }\r\n            return this.getValueAtTime((((currentFrame - firstKeyFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function loopIn(type,duration, durationFlag) {\r\n        if(!this.k){\r\n            return this.pv;\r\n        }\r\n        type = type ? type.toLowerCase() : '';\r\n        var currentFrame = this.comp.renderedFrame;\r\n        var keyframes = this.keyframes;\r\n        var firstKeyFrame = keyframes[0].t;\r\n        if(currentFrame>=firstKeyFrame){\r\n            return this.pv;\r\n        }else{\r\n            var cycleDuration, lastKeyFrame;\r\n            if(!durationFlag){\r\n                if(!duration || duration > keyframes.length - 1){\r\n                    duration = keyframes.length - 1;\r\n                }\r\n                lastKeyFrame = keyframes[duration].t;\r\n                cycleDuration = lastKeyFrame - firstKeyFrame;\r\n            } else {\r\n                if(!duration){\r\n                    cycleDuration = Math.max(0,this.elem.data.op - firstKeyFrame);\r\n                } else {\r\n                    cycleDuration = Math.abs(elem.comp.globalData.frameRate*duration);\r\n                }\r\n                lastKeyFrame = firstKeyFrame + cycleDuration;\r\n            }\r\n            var i, len, ret;\r\n            if(type === 'pingpong') {\r\n                var iterations = Math.floor((firstKeyFrame - currentFrame)/cycleDuration);\r\n                if(iterations % 2 === 0){\r\n                    return this.getValueAtTime((((firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n                }\r\n            } else if(type === 'offset'){\r\n                var initV = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var endV = this.getValueAtTime(lastKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var current = this.getValueAtTime((cycleDuration - (firstKeyFrame - currentFrame)%cycleDuration +  firstKeyFrame) / this.comp.globalData.frameRate, 0);\r\n                var repeats = Math.floor((firstKeyFrame - currentFrame)/cycleDuration)+1;\r\n                if(this.pv.length){\r\n                    ret = new Array(initV.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = current[i]-(endV[i]-initV[i])*repeats;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return current-(endV-initV)*repeats;\r\n            } else if(type === 'continue'){\r\n                var firstValue = this.getValueAtTime(firstKeyFrame / this.comp.globalData.frameRate, 0);\r\n                var nextFirstValue = this.getValueAtTime((firstKeyFrame + 0.001) / this.comp.globalData.frameRate, 0);\r\n                if(this.pv.length){\r\n                    ret = new Array(firstValue.length);\r\n                    len = ret.length;\r\n                    for(i=0;i<len;i+=1){\r\n                        ret[i] = firstValue[i] + (firstValue[i]-nextFirstValue[i])*(firstKeyFrame - currentFrame)/0.001;\r\n                    }\r\n                    return ret;\r\n                }\r\n                return firstValue + (firstValue-nextFirstValue)*(firstKeyFrame - currentFrame)/0.001;\r\n            }\r\n            return this.getValueAtTime(((cycleDuration - (firstKeyFrame - currentFrame) % cycleDuration +  firstKeyFrame)) / this.comp.globalData.frameRate, 0);\r\n        }\r\n    }\r\n\r\n    function smooth(width, samples) {\r\n        if (!this.k){\r\n            return this.pv;\r\n        }\r\n        width = (width || 0.4) * 0.5;\r\n        samples = Math.floor(samples || 5);\r\n        if (samples <= 1) {\r\n            return this.pv;\r\n        }\r\n        var currentTime = this.comp.renderedFrame / this.comp.globalData.frameRate;\r\n        var initFrame = currentTime - width;\r\n        var endFrame = currentTime + width;\r\n        var sampleFrequency = samples > 1 ? (endFrame - initFrame) / (samples - 1) : 1;\r\n        var i = 0, j = 0;\r\n        var value;\r\n        if (this.pv.length) {\r\n            value = createTypedArray('float32', this.pv.length);\r\n        } else {\r\n            value = 0;\r\n        }\r\n        var sampleValue;\r\n        while (i < samples) {\r\n            sampleValue = this.getValueAtTime(initFrame + i * sampleFrequency);\r\n            if(this.pv.length) {\r\n                for (j = 0; j < this.pv.length; j += 1) {\r\n                    value[j] += sampleValue[j];\r\n                }\r\n            } else {\r\n                value += sampleValue;\r\n            }\r\n            i += 1;\r\n        }\r\n        if(this.pv.length) {\r\n            for (j = 0; j < this.pv.length; j += 1) {\r\n                value[j] /= samples;\r\n            }\r\n        } else {\r\n            value /= samples;\r\n        }\r\n        return value;\r\n    }\r\n\r\n    function getValueAtTime(frameNum) {\r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastFrame) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastFrame < frameNum ? this._cachingAtTime.lastIndex : 0;\r\n            this._cachingAtTime.value = this.interpolateValue(frameNum, this._cachingAtTime);\r\n            this._cachingAtTime.lastFrame = frameNum;\r\n        }\r\n        return this._cachingAtTime.value;\r\n\r\n    }\r\n\r\n    function getTransformValueAtTime(time) {\r\n        console.warn('Transform at time not supported');\r\n    }\r\n\r\n    function getTransformStaticValueAtTime(time) {\r\n\r\n    }\r\n\r\n    var getTransformProperty = TransformPropertyFactory.getTransformProperty;\r\n    TransformPropertyFactory.getTransformProperty = function(elem, data, container) {\r\n        var prop = getTransformProperty(elem, data, container);\r\n        if(prop.dynamicProperties.length) {\r\n            prop.getValueAtTime = getTransformValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = getTransformStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        return prop;\r\n    };\r\n\r\n    var propertyGetProp = PropertyFactory.getProp;\r\n    PropertyFactory.getProp = function(elem,data,type, mult, container){\r\n        var prop = propertyGetProp(elem,data,type, mult, container);\r\n        //prop.getVelocityAtTime = getVelocityAtTime;\r\n        //prop.loopOut = loopOut;\r\n        //prop.loopIn = loopIn;\r\n        if(prop.kf){\r\n            prop.getValueAtTime = expressionHelpers.getValueAtTime.bind(prop);\r\n        } else {\r\n            prop.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(prop);\r\n        }\r\n        prop.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        prop.loopOut = loopOut;\r\n        prop.loopIn = loopIn;\r\n        prop.smooth = smooth;\r\n        prop.getVelocityAtTime = expressionHelpers.getVelocityAtTime.bind(prop);\r\n        prop.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(prop);\r\n        prop.numKeys = data.a === 1 ? data.k.length : 0;\r\n        prop.propertyIndex = data.ix;\r\n        var value = 0;\r\n        if(type !== 0) {\r\n            value = createTypedArray('float32', data.a === 1 ?  data.k[0].s.length : data.k.length);\r\n        }\r\n        prop._cachingAtTime = {\r\n            lastFrame: initialDefaultFrame,\r\n            lastIndex: 0,\r\n            value: value\r\n        };\r\n        expressionHelpers.searchExpressions(elem,data,prop);\r\n        if(prop.k){\r\n            container.addDynamicProperty(prop);\r\n        }\r\n\r\n        return prop;\r\n    };\r\n\r\n    function getShapeValueAtTime(frameNum) {\r\n        //For now this caching object is created only when needed instead of creating it when the shape is initialized.\r\n        if (!this._cachingAtTime) {\r\n            this._cachingAtTime = {\r\n                shapeValue: shape_pool.clone(this.pv),\r\n                lastIndex: 0,\r\n                lastTime: initialDefaultFrame\r\n            };\r\n        }\r\n        \r\n        frameNum *= this.elem.globalData.frameRate;\r\n        frameNum -= this.offsetTime;\r\n        if(frameNum !== this._cachingAtTime.lastTime) {\r\n            this._cachingAtTime.lastIndex = this._cachingAtTime.lastTime < frameNum ? this._caching.lastIndex : 0;\r\n            this._cachingAtTime.lastTime = frameNum;\r\n            this.interpolateShape(frameNum, this._cachingAtTime.shapeValue, this._cachingAtTime);\r\n        }\r\n        return this._cachingAtTime.shapeValue;\r\n    }\r\n\r\n    var ShapePropertyConstructorFunction = ShapePropertyFactory.getConstructorFunction();\r\n    var KeyframedShapePropertyConstructorFunction = ShapePropertyFactory.getKeyframedConstructorFunction();\r\n\r\n    function ShapeExpressions(){}\r\n    ShapeExpressions.prototype = {\r\n        vertices: function(prop, time){\r\n            if (this.k) {\r\n                this.getValue();\r\n            }\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            var i, len = shapePath._length;\r\n            var vertices = shapePath[prop];\r\n            var points = shapePath.v;\r\n            var arr = createSizedArray(len);\r\n            for(i = 0; i < len; i += 1) {\r\n                if(prop === 'i' || prop === 'o') {\r\n                    arr[i] = [vertices[i][0] - points[i][0], vertices[i][1] - points[i][1]];\r\n                } else {\r\n                    arr[i] = [vertices[i][0], vertices[i][1]];\r\n                }\r\n                \r\n            }\r\n            return arr;\r\n        },\r\n        points: function(time){\r\n            return this.vertices('v', time);\r\n        },\r\n        inTangents: function(time){\r\n            return this.vertices('i', time);\r\n        },\r\n        outTangents: function(time){\r\n            return this.vertices('o', time);\r\n        },\r\n        isClosed: function(){\r\n            return this.v.c;\r\n        },\r\n        pointOnPath: function(perc, time){\r\n            var shapePath = this.v;\r\n            if(time !== undefined) {\r\n                shapePath = this.getValueAtTime(time, 0);\r\n            }\r\n            if(!this._segmentsLength) {\r\n                this._segmentsLength = bez.getSegmentsLength(shapePath);\r\n            }\r\n\r\n            var segmentsLength = this._segmentsLength;\r\n            var lengths = segmentsLength.lengths;\r\n            var lengthPos = segmentsLength.totalLength * perc;\r\n            var i = 0, len = lengths.length;\r\n            var j = 0, jLen;\r\n            var accumulatedLength = 0, pt;\r\n            while(i < len) {\r\n                if(accumulatedLength + lengths[i].addedLength > lengthPos) {\r\n                    var initIndex = i;\r\n                    var endIndex = (shapePath.c && i === len - 1) ? 0 : i + 1;\r\n                    var segmentPerc = (lengthPos - accumulatedLength)/lengths[i].addedLength;\r\n                    pt = bez.getPointInSegment(shapePath.v[initIndex], shapePath.v[endIndex], shapePath.o[initIndex], shapePath.i[endIndex], segmentPerc, lengths[i]);\r\n                    break;\r\n                } else {\r\n                    accumulatedLength += lengths[i].addedLength;\r\n                }\r\n                i += 1;\r\n            }\r\n            if(!pt){\r\n                pt = shapePath.c ? [shapePath.v[0][0],shapePath.v[0][1]]:[shapePath.v[shapePath._length-1][0],shapePath.v[shapePath._length-1][1]];\r\n            }\r\n            return pt;\r\n        },\r\n        vectorOnPath: function(perc, time, vectorType){\r\n            //perc doesn't use triple equality because it can be a Number object as well as a primitive.\r\n            perc = perc == 1 ? this.v.c ? 0 : 0.999 : perc;\r\n            var pt1 = this.pointOnPath(perc, time);\r\n            var pt2 = this.pointOnPath(perc + 0.001, time);\r\n            var xLength = pt2[0] - pt1[0];\r\n            var yLength = pt2[1] - pt1[1];\r\n            var magnitude = Math.sqrt(Math.pow(xLength,2) + Math.pow(yLength,2));\r\n            if (magnitude === 0) {\r\n                return [0,0];\r\n            }\r\n            var unitVector = vectorType === 'tangent' ? [xLength/magnitude, yLength/magnitude] : [-yLength/magnitude, xLength/magnitude];\r\n            return unitVector;\r\n        },\r\n        tangentOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'tangent');\r\n        },\r\n        normalOnPath: function(perc, time){\r\n            return this.vectorOnPath(perc, time, 'normal');\r\n        },\r\n        setGroupProperty: expressionHelpers.setGroupProperty,\r\n        getValueAtTime: expressionHelpers.getStaticValueAtTime\r\n    };\r\n    extendPrototype([ShapeExpressions], ShapePropertyConstructorFunction);\r\n    extendPrototype([ShapeExpressions], KeyframedShapePropertyConstructorFunction);\r\n    KeyframedShapePropertyConstructorFunction.prototype.getValueAtTime = getShapeValueAtTime;\r\n    KeyframedShapePropertyConstructorFunction.prototype.initiateExpression = ExpressionManager.initiateExpression;\r\n\r\n    var propertyGetShapeProp = ShapePropertyFactory.getShapeProp;\r\n    ShapePropertyFactory.getShapeProp = function(elem,data,type, arr, trims){\r\n        var prop = propertyGetShapeProp(elem,data,type, arr, trims);\r\n        prop.propertyIndex = data.ix;\r\n        prop.lock = false;\r\n        if(type === 3){\r\n            expressionHelpers.searchExpressions(elem,data.pt,prop);\r\n        } else if(type === 4){\r\n            expressionHelpers.searchExpressions(elem,data.ks,prop);\r\n        }\r\n        if(prop.k){\r\n            elem.addDynamicProperty(prop);\r\n        }\r\n        return prop;\r\n    };\r\n}());\r\n(function addDecorator() {\r\n\r\n    function searchExpressions(){\r\n        if(this.data.d.x){\r\n            this.calculateExpression = ExpressionManager.initiateExpression.bind(this)(this.elem,this.data.d,this);\r\n            this.addEffect(this.getExpressionValue.bind(this));\r\n            return true;\r\n        }\r\n    }\r\n\r\n    TextProperty.prototype.getExpressionValue = function(currentValue, text) {\r\n        var newValue = this.calculateExpression(text);\r\n        if(currentValue.t !== newValue) {\r\n            var newData = {};\r\n            this.copyData(newData, currentValue);\r\n            newData.t = newValue.toString();\r\n            newData.__complete = false;\r\n            return newData;\r\n        }\r\n        return currentValue;\r\n    }\r\n\r\n    TextProperty.prototype.searchProperty = function(){\r\n\r\n        var isKeyframed = this.searchKeyframes();\r\n        var hasExpressions = this.searchExpressions();\r\n        this.kf = isKeyframed || hasExpressions;\r\n        return this.kf;\r\n    };\r\n\r\n    TextProperty.prototype.searchExpressions = searchExpressions;\r\n    \r\n}());\r\nvar ShapeExpressionInterface = (function(){\r\n\r\n    function iterateElements(shapes,view, propertyGroup){\r\n        var arr = [];\r\n        var i, len = shapes ? shapes.length : 0;\r\n        for(i=0;i<len;i+=1){\r\n            if(shapes[i].ty == 'gr'){\r\n                arr.push(groupInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'fl'){\r\n                arr.push(fillInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'st'){\r\n                arr.push(strokeInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tm'){\r\n                arr.push(trimInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'tr'){\r\n                //arr.push(transformInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'el'){\r\n                arr.push(ellipseInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }else if(shapes[i].ty == 'sr'){\r\n                arr.push(starInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'sh'){\r\n                arr.push(pathInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rc'){\r\n                arr.push(rectInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rd'){\r\n                arr.push(roundedInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            } else if(shapes[i].ty == 'rp'){\r\n                arr.push(repeaterInterfaceFactory(shapes[i],view[i],propertyGroup));\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    function contentsInterfaceFactory(shape,view, propertyGroup){\r\n       var interfaces;\r\n       var interfaceFunction = function _interfaceFunction(value){\r\n           var i = 0, len = interfaces.length;\r\n            while(i<len){\r\n                if(interfaces[i]._name === value || interfaces[i].mn === value || interfaces[i].propertyIndex === value || interfaces[i].ix === value || interfaces[i].ind === value){\r\n                   return interfaces[i];\r\n                }\r\n                i+=1;\r\n            }\r\n            if(typeof value === 'number'){\r\n               return interfaces[value-1];\r\n            }\r\n       };\r\n       interfaceFunction.propertyGroup = function(val){\r\n           if(val === 1){\r\n               return interfaceFunction;\r\n           } else{\r\n               return propertyGroup(val-1);\r\n           }\r\n       };\r\n       interfaces = iterateElements(shape.it, view.it, interfaceFunction.propertyGroup);\r\n       interfaceFunction.numProperties = interfaces.length;\r\n       interfaceFunction.propertyIndex = shape.cix;\r\n       interfaceFunction._name = shape.nm;\r\n\r\n       return interfaceFunction;\r\n   }\r\n\r\n    function groupInterfaceFactory(shape,view, propertyGroup){\r\n        var interfaceFunction = function _interfaceFunction(value){\r\n            switch(value){\r\n                case 'ADBE Vectors Group':\r\n                case 'Contents':\r\n                case 2:\r\n                    return interfaceFunction.content;\r\n                //Not necessary for now. Keeping them here in case a new case appears\r\n                //case 'ADBE Vector Transform Group':\r\n                //case 3:\r\n                default:\r\n                    return interfaceFunction.transform;\r\n            }\r\n        };\r\n        interfaceFunction.propertyGroup = function(val){\r\n            if(val === 1){\r\n                return interfaceFunction;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        };\r\n        var content = contentsInterfaceFactory(shape,view,interfaceFunction.propertyGroup);\r\n        var transformInterface = transformInterfaceFactory(shape.it[shape.it.length - 1],view.it[view.it.length - 1],interfaceFunction.propertyGroup);\r\n        interfaceFunction.content = content;\r\n        interfaceFunction.transform = transformInterface;\r\n        Object.defineProperty(interfaceFunction, '_name', {\r\n            get: function(){\r\n                return shape.nm;\r\n            }\r\n        });\r\n        //interfaceFunction.content = interfaceFunction;\r\n        interfaceFunction.numProperties = shape.np;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.nm = shape.nm;\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function fillInterfaceFactory(shape,view,propertyGroup){\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(propertyGroup);\r\n        view.o.setGroupProperty(propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function strokeInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val === 1){\r\n                return ob;\r\n            } else{\r\n                return propertyGroup(val-1);\r\n            }\r\n        }\r\n        function _dashPropertyGroup(val){\r\n            if(val === 1){\r\n                return dashOb;\r\n            } else{\r\n                return _propertyGroup(val-1);\r\n            }\r\n        }\r\n        function addPropertyToDashOb(i) {\r\n            Object.defineProperty(dashOb, shape.d[i].nm, {\r\n                get: ExpressionPropertyInterface(view.d.dataProps[i].p)\r\n            });\r\n        }\r\n        var i, len = shape.d ? shape.d.length : 0;\r\n        var dashOb = {};\r\n        for (i = 0; i < len; i += 1) {\r\n            addPropertyToDashOb(i);\r\n            view.d.dataProps[i].p.setGroupProperty(_dashPropertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Color' || val === 'color'){\r\n                return interfaceFunction.color;\r\n            } else if(val === 'Opacity' || val === 'opacity'){\r\n                return interfaceFunction.opacity;\r\n            } else if(val === 'Stroke Width' || val === 'stroke width'){\r\n                return interfaceFunction.strokeWidth;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'color': {\r\n                get: ExpressionPropertyInterface(view.c)\r\n            },\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            'strokeWidth': {\r\n                get: ExpressionPropertyInterface(view.w)\r\n            },\r\n            'dash': {\r\n                get: function() {\r\n                    return dashOb;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'mn': { value: shape.mn }\r\n        });\r\n\r\n        view.c.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n        view.w.setGroupProperty(_propertyGroup);\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function trimInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n\r\n        view.s.setGroupProperty(_propertyGroup);\r\n        view.e.setGroupProperty(_propertyGroup);\r\n        view.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === shape.e.ix || val === 'End' || val === 'end'){\r\n                return interfaceFunction.end;\r\n            }\r\n            if(val === shape.s.ix){\r\n                return interfaceFunction.start;\r\n            }\r\n            if(val === shape.o.ix){\r\n                return interfaceFunction.offset;\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'start': {\r\n                get: ExpressionPropertyInterface(view.s)\r\n            },\r\n            'end': {\r\n                get: ExpressionPropertyInterface(view.e)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(view.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function transformInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        view.transform.mProps.o.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.p.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.a.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.s.setGroupProperty(_propertyGroup);\r\n        view.transform.mProps.r.setGroupProperty(_propertyGroup);\r\n        if(view.transform.mProps.sk){\r\n            view.transform.mProps.sk.setGroupProperty(_propertyGroup);\r\n            view.transform.mProps.sa.setGroupProperty(_propertyGroup);\r\n        }\r\n        view.transform.op.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.a.ix === value || value === 'Anchor Point'){\r\n                return interfaceFunction.anchorPoint;\r\n            }\r\n            if(shape.o.ix === value || value === 'Opacity'){\r\n                return interfaceFunction.opacity;\r\n            }\r\n            if(shape.p.ix === value || value === 'Position'){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value || value === 'Rotation' || value === 'ADBE Vector Rotation'){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.s.ix === value || value === 'Scale'){\r\n                return interfaceFunction.scale;\r\n            }\r\n            if(shape.sk && shape.sk.ix === value || value === 'Skew'){\r\n                return interfaceFunction.skew;\r\n            }\r\n            if(shape.sa && shape.sa.ix === value || value === 'Skew Axis'){\r\n                return interfaceFunction.skewAxis;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'opacity': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.o)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.p)\r\n            },\r\n            'anchorPoint': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.a)\r\n            },\r\n            'scale': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.s)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.r)\r\n            },\r\n            'skew': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sk)\r\n            },\r\n            'skewAxis': {\r\n                get: ExpressionPropertyInterface(view.transform.mProps.sa)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.ty = 'tr';\r\n        interfaceFunction.mn = shape.mn;\r\n        interfaceFunction.propertyGroup = propertyGroup;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function ellipseInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.s.ix === value){\r\n                return interfaceFunction.size;\r\n            }\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function starInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.or.setGroupProperty(_propertyGroup);\r\n        prop.os.setGroupProperty(_propertyGroup);\r\n        prop.pt.setGroupProperty(_propertyGroup);\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n        if(shape.ir){\r\n            prop.ir.setGroupProperty(_propertyGroup);\r\n            prop.is.setGroupProperty(_propertyGroup);\r\n        }\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.rotation;\r\n            }\r\n            if(shape.pt.ix === value){\r\n                return interfaceFunction.points;\r\n            }\r\n            if(shape.or.ix === value || 'ADBE Vector Star Outer Radius' === value){\r\n                return interfaceFunction.outerRadius;\r\n            }\r\n            if(shape.os.ix === value){\r\n                return interfaceFunction.outerRoundness;\r\n            }\r\n            if(shape.ir && (shape.ir.ix === value || 'ADBE Vector Star Inner Radius' === value)){\r\n                return interfaceFunction.innerRadius;\r\n            }\r\n            if(shape.is && shape.is.ix === value){\r\n                return interfaceFunction.innerRoundness;\r\n            }\r\n\r\n        }\r\n\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'rotation': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'points': {\r\n                get: ExpressionPropertyInterface(prop.pt)\r\n            },\r\n            'outerRadius': {\r\n                get: ExpressionPropertyInterface(prop.or)\r\n            },\r\n            'outerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.os)\r\n            },\r\n            'innerRadius': {\r\n                get: ExpressionPropertyInterface(prop.ir)\r\n            },\r\n            'innerRoundness': {\r\n                get: ExpressionPropertyInterface(prop.is)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function rectInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view.sh.ty === 'tm' ? view.sh.prop : view.sh;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.p.setGroupProperty(_propertyGroup);\r\n        prop.s.setGroupProperty(_propertyGroup);\r\n        prop.r.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.p.ix === value){\r\n                return interfaceFunction.position;\r\n            }\r\n            if(shape.r.ix === value){\r\n                return interfaceFunction.roundness;\r\n            }\r\n            if(shape.s.ix === value || value === 'Size' || value === 'ADBE Vector Rect Size'){\r\n                return interfaceFunction.size;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'position': {\r\n                get: ExpressionPropertyInterface(prop.p)\r\n            },\r\n            'roundness': {\r\n                get: ExpressionPropertyInterface(prop.r)\r\n            },\r\n            'size': {\r\n                get: ExpressionPropertyInterface(prop.s)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function roundedInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.rd.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.r.ix === value || 'Round Corners 1' === value){\r\n                return interfaceFunction.radius;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'radius': {\r\n                get: ExpressionPropertyInterface(prop.rd)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function repeaterInterfaceFactory(shape,view,propertyGroup){\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        var prop = view;\r\n        interfaceFunction.propertyIndex = shape.ix;\r\n        prop.c.setGroupProperty(_propertyGroup);\r\n        prop.o.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(value){\r\n            if(shape.c.ix === value || 'Copies' === value){\r\n                return interfaceFunction.copies;\r\n            } else if(shape.o.ix === value || 'Offset' === value){\r\n                return interfaceFunction.offset;\r\n            }\r\n\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'copies': {\r\n                get: ExpressionPropertyInterface(prop.c)\r\n            },\r\n            'offset': {\r\n                get: ExpressionPropertyInterface(prop.o)\r\n            },\r\n            '_name': { value: shape.nm }\r\n        });\r\n        interfaceFunction.mn = shape.mn;\r\n        return interfaceFunction;\r\n    }\r\n\r\n    function pathInterfaceFactory(shape,view,propertyGroup){\r\n        var prop = view.sh;\r\n        function _propertyGroup(val){\r\n            if(val == 1){\r\n                return interfaceFunction;\r\n            } else {\r\n                return propertyGroup(--val);\r\n            }\r\n        }\r\n        prop.setGroupProperty(_propertyGroup);\r\n\r\n        function interfaceFunction(val){\r\n            if(val === 'Shape' || val === 'shape' || val === 'Path' || val === 'path' || val === 'ADBE Vector Shape' || val === 2){\r\n                return interfaceFunction.path;\r\n            }\r\n        }\r\n        Object.defineProperties(interfaceFunction, {\r\n            'path': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            'shape': {\r\n                get: function(){\r\n                    if(prop.k){\r\n                        prop.getValue();\r\n                    }\r\n                    return prop;\r\n                }\r\n            },\r\n            '_name': { value: shape.nm },\r\n            'ix': { value: shape.ix },\r\n            'propertyIndex': { value: shape.ix },\r\n            'mn': { value: shape.mn }\r\n        });\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return function(shapes,view,propertyGroup) {\r\n        var interfaces;\r\n        function _interfaceFunction(value){\r\n            if(typeof value === 'number'){\r\n                return interfaces[value-1];\r\n            } else {\r\n                var i = 0, len = interfaces.length;\r\n                while(i<len){\r\n                    if(interfaces[i]._name === value){\r\n                        return interfaces[i];\r\n                    }\r\n                    i+=1;\r\n                }\r\n            }\r\n        }\r\n        _interfaceFunction.propertyGroup = propertyGroup;\r\n        interfaces = iterateElements(shapes, view, _interfaceFunction);\r\n        _interfaceFunction.numProperties = interfaces.length;\r\n        return _interfaceFunction;\r\n    };\r\n}());\r\n\r\nvar TextExpressionInterface = (function(){\r\n\treturn function(elem){\r\n        var _prevValue, _sourceText;\r\n        function _thisLayerFunction(){\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"sourceText\", {\r\n            get: function(){\r\n                elem.textProperty.getValue()\r\n                var stringValue = elem.textProperty.currentData.t;\r\n                if(stringValue !== _prevValue) {\r\n                    elem.textProperty.currentData.t = _prevValue;\r\n                    _sourceText = new String(stringValue);\r\n                    //If stringValue is an empty string, eval returns undefined, so it has to be returned as a String primitive\r\n                    _sourceText.value = stringValue ? stringValue : new String(stringValue);\r\n                }\r\n                return _sourceText;\r\n            }\r\n        });\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar LayerExpressionInterface = (function (){\r\n    function toWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n        }\r\n        return toWorldMat.applyToPointArray(arr[0],arr[1],arr[2]||0);\r\n    }\r\n    function fromWorld(arr, time){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        var transformMat;\r\n        if(time) {\r\n            //Todo implement value at time on transform properties\r\n            //transformMat = this._elem.finalTransform.mProp.getValueAtTime(time);\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        } else {\r\n            transformMat = this._elem.finalTransform.mProp;\r\n        }\r\n        transformMat.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n    function fromComp(arr){\r\n        var toWorldMat = new Matrix();\r\n        toWorldMat.reset();\r\n        this._elem.finalTransform.mProp.applyToMatrix(toWorldMat);\r\n        if(this._elem.hierarchy && this._elem.hierarchy.length){\r\n            var i, len = this._elem.hierarchy.length;\r\n            for(i=0;i<len;i+=1){\r\n                this._elem.hierarchy[i].finalTransform.mProp.applyToMatrix(toWorldMat);\r\n            }\r\n            return toWorldMat.inversePoint(arr);\r\n        }\r\n        return toWorldMat.inversePoint(arr);\r\n    }\r\n\r\n    function sampleImage() {\r\n        return [1,1,1,1];\r\n    }\r\n\r\n\r\n    return function(elem){\r\n\r\n        var transformInterface;\r\n\r\n        function _registerMaskInterface(maskManager){\r\n            _thisLayerFunction.mask = new MaskManagerInterface(maskManager, elem);\r\n        }\r\n        function _registerEffectsInterface(effects){\r\n            _thisLayerFunction.effect = effects;\r\n        }\r\n\r\n        function _thisLayerFunction(name){\r\n            switch(name){\r\n                case \"ADBE Root Vectors Group\":\r\n                case \"Contents\":\r\n                case 2:\r\n                    return _thisLayerFunction.shapeInterface;\r\n                case 1:\r\n                case 6:\r\n                case \"Transform\":\r\n                case \"transform\":\r\n                case \"ADBE Transform Group\":\r\n                    return transformInterface;\r\n                case 4:\r\n                case \"ADBE Effect Parade\":\r\n                case \"effects\":\r\n                case \"Effects\":\r\n                    return _thisLayerFunction.effect;\r\n            }\r\n        }\r\n        _thisLayerFunction.toWorld = toWorld;\r\n        _thisLayerFunction.fromWorld = fromWorld;\r\n        _thisLayerFunction.toComp = toWorld;\r\n        _thisLayerFunction.fromComp = fromComp;\r\n        _thisLayerFunction.sampleImage = sampleImage;\r\n        _thisLayerFunction.sourceRectAtTime = elem.sourceRectAtTime.bind(elem);\r\n        _thisLayerFunction._elem = elem;\r\n        transformInterface = TransformExpressionInterface(elem.finalTransform.mProp);\r\n        var anchorPointDescriptor = getDescriptor(transformInterface, 'anchorPoint');\r\n        Object.defineProperties(_thisLayerFunction,{\r\n            hasParent: {\r\n                get: function(){\r\n                    return elem.hierarchy.length;\r\n                }\r\n            },\r\n            parent: {\r\n                get: function(){\r\n                    return elem.hierarchy[0].layerInterface;\r\n                }\r\n            },\r\n            rotation: getDescriptor(transformInterface, 'rotation'),\r\n            scale: getDescriptor(transformInterface, 'scale'),\r\n            position: getDescriptor(transformInterface, 'position'),\r\n            opacity: getDescriptor(transformInterface, 'opacity'),\r\n            anchorPoint: anchorPointDescriptor,\r\n            anchor_point: anchorPointDescriptor,\r\n            transform: {\r\n                get: function () {\r\n                    return transformInterface;\r\n                }\r\n            },\r\n            active: {\r\n                get: function(){\r\n                    return elem.isInRange;\r\n                }\r\n            }\r\n        });\r\n\r\n        _thisLayerFunction.startTime = elem.data.st;\r\n        _thisLayerFunction.index = elem.data.ind;\r\n        _thisLayerFunction.source = elem.data.refId;\r\n        _thisLayerFunction.height = elem.data.ty === 0 ? elem.data.h : 100;\r\n        _thisLayerFunction.width = elem.data.ty === 0 ? elem.data.w : 100;\r\n        _thisLayerFunction.inPoint = elem.data.ip/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction.outPoint = elem.data.op/elem.comp.globalData.frameRate;\r\n        _thisLayerFunction._name = elem.data.nm;\r\n\r\n        _thisLayerFunction.registerMaskInterface = _registerMaskInterface;\r\n        _thisLayerFunction.registerEffectsInterface = _registerEffectsInterface;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\n\r\nvar CompExpressionInterface = (function () {\r\n    return function(comp) {\r\n        function _thisLayerFunction(name) {\r\n            var i = 0, len = comp.layers.length;\r\n            while ( i < len) {\r\n                if (comp.layers[i].nm === name || comp.layers[i].ind === name) {\r\n                    return comp.elements[i].layerInterface;\r\n                }\r\n                i += 1;\r\n            }\r\n            return null;\r\n            //return {active:false};\r\n        }\r\n        Object.defineProperty(_thisLayerFunction, \"_name\", { value: comp.data.nm });\r\n        _thisLayerFunction.layer = _thisLayerFunction;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.height = comp.data.h || comp.globalData.compSize.h;\r\n        _thisLayerFunction.width = comp.data.w || comp.globalData.compSize.w;\r\n        _thisLayerFunction.pixelAspect = 1;\r\n        _thisLayerFunction.frameDuration = 1 / comp.globalData.frameRate;\r\n        _thisLayerFunction.displayStartTime = 0;\r\n        _thisLayerFunction.numLayers = comp.layers.length;\r\n        return _thisLayerFunction;\r\n    };\r\n}());\r\nvar TransformExpressionInterface = (function (){\r\n    return function(transform){\r\n        function _thisFunction(name){\r\n            switch(name){\r\n                case \"scale\":\r\n                case \"Scale\":\r\n                case \"ADBE Scale\":\r\n                case 6:\r\n                    return _thisFunction.scale;\r\n                case \"rotation\":\r\n                case \"Rotation\":\r\n                case \"ADBE Rotation\":\r\n                case \"ADBE Rotate Z\":\r\n                case 10:\r\n                    return _thisFunction.rotation;\r\n                case \"ADBE Rotate X\":\r\n                    return _thisFunction.xRotation;\r\n                case \"ADBE Rotate Y\":\r\n                    return _thisFunction.yRotation;\r\n                case \"position\":\r\n                case \"Position\":\r\n                case \"ADBE Position\":\r\n                case 2:\r\n                    return _thisFunction.position;\r\n                case 'ADBE Position_0':\r\n                    return _thisFunction.xPosition;\r\n                case 'ADBE Position_1':\r\n                    return _thisFunction.yPosition;\r\n                case 'ADBE Position_2':\r\n                    return _thisFunction.zPosition;\r\n                case \"anchorPoint\":\r\n                case \"AnchorPoint\":\r\n                case \"Anchor Point\":\r\n                case \"ADBE AnchorPoint\":\r\n                case 1:\r\n                    return _thisFunction.anchorPoint;\r\n                case \"opacity\":\r\n                case \"Opacity\":\r\n                case 11:\r\n                    return _thisFunction.opacity;\r\n            }\r\n        }\r\n\r\n        Object.defineProperty(_thisFunction, \"rotation\", {\r\n            get: ExpressionPropertyInterface(transform.r || transform.rz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rz || transform.r)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xRotation\", {\r\n            get: ExpressionPropertyInterface(transform.rx)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yRotation\", {\r\n            get: ExpressionPropertyInterface(transform.ry)\r\n        });\r\n        Object.defineProperty(_thisFunction, \"scale\", {\r\n            get: ExpressionPropertyInterface(transform.s)\r\n        });\r\n\r\n        if(transform.p) {\r\n            var _transformFactory = ExpressionPropertyInterface(transform.p);\r\n        }\r\n        Object.defineProperty(_thisFunction, \"position\", {\r\n            get: function () {\r\n                if(transform.p) {\r\n                    return _transformFactory();\r\n                } else {\r\n                    return [transform.px.v, transform.py.v, transform.pz ? transform.pz.v : 0];\r\n                }\r\n            }\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"xPosition\", {\r\n            get: ExpressionPropertyInterface(transform.px)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"yPosition\", {\r\n            get: ExpressionPropertyInterface(transform.py)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"zPosition\", {\r\n            get: ExpressionPropertyInterface(transform.pz)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"anchorPoint\", {\r\n            get: ExpressionPropertyInterface(transform.a)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"opacity\", {\r\n            get: ExpressionPropertyInterface(transform.o)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skew\", {\r\n            get: ExpressionPropertyInterface(transform.sk)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"skewAxis\", {\r\n            get: ExpressionPropertyInterface(transform.sa)\r\n        });\r\n\r\n        Object.defineProperty(_thisFunction, \"orientation\", {\r\n            get: ExpressionPropertyInterface(transform.or)\r\n        });\r\n\r\n        return _thisFunction;\r\n    };\r\n}());\r\nvar ProjectInterface = (function (){\r\n\r\n    function registerComposition(comp){\r\n        this.compositions.push(comp);\r\n    }\r\n\r\n    return function(){\r\n        function _thisProjectFunction(name){\r\n            var i = 0, len = this.compositions.length;\r\n            while(i<len){\r\n                if(this.compositions[i].data && this.compositions[i].data.nm === name){\r\n                    if(this.compositions[i].prepareFrame && this.compositions[i].data.xt) {\r\n                        this.compositions[i].prepareFrame(this.currentFrame);\r\n                    }\r\n                    return this.compositions[i].compInterface;\r\n                }\r\n                i+=1;\r\n            }\r\n        }\r\n\r\n        _thisProjectFunction.compositions = [];\r\n        _thisProjectFunction.currentFrame = 0;\r\n\r\n        _thisProjectFunction.registerComposition = registerComposition;\r\n\r\n\r\n\r\n        return _thisProjectFunction;\r\n    };\r\n}());\r\nvar EffectsExpressionInterface = (function (){\r\n    var ob = {\r\n        createEffectsInterface: createEffectsInterface\r\n    };\r\n\r\n    function createEffectsInterface(elem, propertyGroup){\r\n        if(elem.effectsManager){\r\n\r\n            var effectElements = [];\r\n            var effectsData = elem.data.ef;\r\n            var i, len = elem.effectsManager.effectElements.length;\r\n            for(i=0;i<len;i+=1){\r\n                effectElements.push(createGroupInterface(effectsData[i],elem.effectsManager.effectElements[i],propertyGroup,elem));\r\n            }\r\n\r\n            return function(name){\r\n                var effects = elem.data.ef || [], i = 0, len = effects.length;\r\n                while(i<len) {\r\n                    if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                        return effectElements[i];\r\n                    }\r\n                    i += 1;\r\n                }\r\n            };\r\n        }\r\n    }\r\n\r\n    function createGroupInterface(data,elements, propertyGroup, elem){\r\n        var effectElements = [];\r\n        var i, len = data.ef.length;\r\n        for(i=0;i<len;i+=1){\r\n            if(data.ef[i].ty === 5){\r\n                effectElements.push(createGroupInterface(data.ef[i],elements.effectElements[i],elements.effectElements[i].propertyGroup, elem));\r\n            } else {\r\n                effectElements.push(createValueInterface(elements.effectElements[i],data.ef[i].ty, elem, _propertyGroup));\r\n            }\r\n        }\r\n\r\n        function _propertyGroup(val) {\r\n            if(val === 1){\r\n               return groupInterface;\r\n            } else{\r\n               return propertyGroup(val-1);\r\n            }\r\n        }\r\n\r\n        var groupInterface = function(name){\r\n            var effects = data.ef, i = 0, len = effects.length;\r\n            while(i<len) {\r\n                if(name === effects[i].nm || name === effects[i].mn || name === effects[i].ix){\r\n                    if(effects[i].ty === 5){\r\n                        return effectElements[i];\r\n                    } else {\r\n                        return effectElements[i]();\r\n                    }\r\n                }\r\n                i += 1;\r\n            }\r\n            return effectElements[0]();\r\n        };\r\n\r\n        groupInterface.propertyGroup = _propertyGroup;\r\n\r\n        if(data.mn === 'ADBE Color Control'){\r\n            Object.defineProperty(groupInterface, 'color', {\r\n                get: function(){\r\n                    return effectElements[0]();\r\n                }\r\n            });\r\n        }\r\n        Object.defineProperty(groupInterface, 'numProperties', {\r\n            get: function(){\r\n                return data.np;\r\n            }\r\n        });\r\n        groupInterface.active = groupInterface.enabled = data.en !== 0;\r\n        return groupInterface;\r\n    }\r\n\r\n    function createValueInterface(element, type, elem, propertyGroup){\r\n        var expressionProperty = ExpressionPropertyInterface(element.p);\r\n        function interfaceFunction(){\r\n            if(type === 10){\r\n                return elem.comp.compInterface(element.p.v);\r\n            }\r\n            return expressionProperty();\r\n        }\r\n\r\n        if(element.p.setGroupProperty) {\r\n            element.p.setGroupProperty(propertyGroup);\r\n        }\r\n\r\n        return interfaceFunction;\r\n    }\r\n\r\n    return ob;\r\n\r\n}());\r\nvar MaskManagerInterface = (function(){\r\n\r\n\tfunction MaskInterface(mask, data){\r\n\t\tthis._mask = mask;\r\n\t\tthis._data = data;\r\n\t}\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskPath', {\r\n        get: function(){\r\n            if(this._mask.prop.k){\r\n                this._mask.prop.getValue();\r\n            }\r\n            return this._mask.prop;\r\n        }\r\n    });\r\n\tObject.defineProperty(MaskInterface.prototype, 'maskOpacity', {\r\n        get: function(){\r\n            if(this._mask.op.k){\r\n                this._mask.op.getValue();\r\n            }\r\n            return this._mask.op.v * 100;\r\n        }\r\n    });\r\n\r\n\tvar MaskManager = function(maskManager, elem){\r\n\t\tvar _maskManager = maskManager;\r\n\t\tvar _elem = elem;\r\n\t\tvar _masksInterfaces = createSizedArray(maskManager.viewData.length);\r\n\t\tvar i, len = maskManager.viewData.length;\r\n\t\tfor(i = 0; i < len; i += 1) {\r\n\t\t\t_masksInterfaces[i] = new MaskInterface(maskManager.viewData[i], maskManager.masksProperties[i]);\r\n\t\t}\r\n\r\n\t\tvar maskFunction = function(name){\r\n\t\t\ti = 0;\r\n\t\t    while(i<len){\r\n\t\t        if(maskManager.masksProperties[i].nm === name){\r\n\t\t            return _masksInterfaces[i];\r\n\t\t        }\r\n\t\t        i += 1;\r\n\t\t    }\r\n\t\t};\r\n\t\treturn maskFunction;\r\n\t};\r\n\treturn MaskManager;\r\n}());\r\n\r\nvar ExpressionPropertyInterface = (function() {\r\n\r\n    var defaultUnidimensionalValue = {pv:0, v:0, mult: 1}\r\n    var defaultMultidimensionalValue = {pv:[0,0,0], v:[0,0,0], mult: 1}\r\n\r\n    function completeProperty(expressionValue, property, type) {\r\n        Object.defineProperty(expressionValue, 'velocity', {\r\n            get: function(){\r\n                return property.getVelocityAtTime(property.comp.currentFrame);\r\n            }\r\n        });\r\n        expressionValue.numKeys = property.keyframes ? property.keyframes.length : 0;\r\n        expressionValue.key = function(pos) {\r\n            if (!expressionValue.numKeys) {\r\n                return 0;\r\n            } else {\r\n                var value = '';\r\n                if ('s' in property.keyframes[pos-1]) {\r\n                    value = property.keyframes[pos-1].s;\r\n                } else if ('e' in property.keyframes[pos-2]) {\r\n                    value = property.keyframes[pos-2].e;\r\n                } else {\r\n                    value = property.keyframes[pos-2].s;\r\n                }\r\n                var valueProp = type === 'unidimensional' ? new Number(value) : Object.assign({}, value);\r\n                valueProp.time = property.keyframes[pos-1].t / property.elem.comp.globalData.frameRate;\r\n                return valueProp;\r\n            }\r\n        };\r\n        expressionValue.valueAtTime = property.getValueAtTime;\r\n        expressionValue.speedAtTime = property.getSpeedAtTime;\r\n        expressionValue.velocityAtTime = property.getVelocityAtTime;\r\n        expressionValue.propertyGroup = property.propertyGroup;\r\n    }\r\n\r\n    function UnidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultUnidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var val = property.pv * mult;\r\n        var expressionValue = new Number(val);\r\n        expressionValue.value = val;\r\n        completeProperty(expressionValue, property, 'unidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            val = property.v * mult;\r\n            if(expressionValue.value !== val) {\r\n                expressionValue = new Number(val);\r\n                expressionValue.value = val;\r\n                completeProperty(expressionValue, property, 'unidimensional');\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    function MultidimensionalPropertyInterface(property) {\r\n        if(!property || !('pv' in property)) {\r\n            property = defaultMultidimensionalValue;\r\n        }\r\n        var mult = 1 / property.mult;\r\n        var len = property.pv.length;\r\n        var expressionValue = createTypedArray('float32', len);\r\n        var arrValue = createTypedArray('float32', len);\r\n        expressionValue.value = arrValue;\r\n        completeProperty(expressionValue, property, 'multidimensional');\r\n\r\n        return function() {\r\n            if (property.k) {\r\n                property.getValue();\r\n            }\r\n            for (var i = 0; i < len; i += 1) {\r\n                expressionValue[i] = arrValue[i] = property.v[i] * mult;\r\n            }\r\n            return expressionValue;\r\n        }\r\n    }\r\n\r\n    //TODO: try to avoid using this getter\r\n    function defaultGetter() {\r\n        return defaultUnidimensionalValue;\r\n    }\r\n    \r\n    return function(property) {\r\n        if(!property) {\r\n            return defaultGetter;\r\n        } else if (property.propType === 'unidimensional') {\r\n            return UnidimensionalPropertyInterface(property);\r\n        } else {\r\n            return MultidimensionalPropertyInterface(property);\r\n        }\r\n    }\r\n}());\r\n\r\n(function(){\r\n\r\n    var TextExpressionSelectorProp = (function(){\r\n\r\n        function getValueProxy(index,total){\r\n            this.textIndex = index+1;\r\n            this.textTotal = total;\r\n            this.v = this.getValue() * this.mult;\r\n            return this.v;\r\n        }\r\n\r\n        return function TextExpressionSelectorProp(elem,data){\r\n            this.pv = 1;\r\n            this.comp = elem.comp;\r\n            this.elem = elem;\r\n            this.mult = 0.01;\r\n            this.propType = 'textSelector';\r\n            this.textTotal = data.totalChars;\r\n            this.selectorValue = 100;\r\n            this.lastValue = [1,1,1];\r\n            this.k = true;\r\n            this.x = true;\r\n            this.getValue = ExpressionManager.initiateExpression.bind(this)(elem,data,this);\r\n            this.getMult = getValueProxy;\r\n            this.getVelocityAtTime = expressionHelpers.getVelocityAtTime;\r\n            if(this.kf){\r\n                this.getValueAtTime = expressionHelpers.getValueAtTime.bind(this);\r\n            } else {\r\n                this.getValueAtTime = expressionHelpers.getStaticValueAtTime.bind(this);\r\n            }\r\n            this.setGroupProperty = expressionHelpers.setGroupProperty;\r\n        };\r\n    }());\r\n\r\n\tvar propertyGetTextProp = TextSelectorProp.getTextSelectorProp;\r\n\tTextSelectorProp.getTextSelectorProp = function(elem, data,arr){\r\n\t    if(data.t === 1){\r\n\t        return new TextExpressionSelectorProp(elem, data,arr);\r\n\t    } else {\r\n\t        return propertyGetTextProp(elem,data,arr);\r\n\t    }\r\n\t};\r\n}());\r\nfunction SliderEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction AngleEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction ColorEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction PointEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,1,0,container);\r\n}\r\nfunction LayerIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction MaskIndexEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction CheckboxEffect(data,elem, container){\r\n    this.p = PropertyFactory.getProp(elem,data.v,0,0,container);\r\n}\r\nfunction NoValueEffect(){\r\n    this.p = {};\r\n}\r\nfunction EffectsManager(){}\r\nfunction EffectsManager(data,element){\r\n    var effects = data.ef || [];\r\n    this.effectElements = [];\r\n    var i,len = effects.length;\r\n    var effectItem;\r\n    for(i=0;i<len;i++) {\r\n        effectItem = new GroupEffect(effects[i],element);\r\n        this.effectElements.push(effectItem);\r\n    }\r\n}\r\n\r\nfunction GroupEffect(data,element){\r\n    this.init(data,element);\r\n}\r\n\r\nextendPrototype([DynamicPropertyContainer], GroupEffect);\r\n\r\nGroupEffect.prototype.getValue = GroupEffect.prototype.iterateDynamicProperties;\r\n\r\nGroupEffect.prototype.init = function(data,element){\r\n    this.data = data;\r\n    this.effectElements = [];\r\n    this.initDynamicPropertyContainer(element);\r\n    var i, len = this.data.ef.length;\r\n    var eff, effects = this.data.ef;\r\n    for(i=0;i<len;i+=1){\r\n        eff = null;\r\n        switch(effects[i].ty){\r\n            case 0:\r\n                eff = new SliderEffect(effects[i],element,this);\r\n                break;\r\n            case 1:\r\n                eff = new AngleEffect(effects[i],element,this);\r\n                break;\r\n            case 2:\r\n                eff = new ColorEffect(effects[i],element,this);\r\n                break;\r\n            case 3:\r\n                eff = new PointEffect(effects[i],element,this);\r\n                break;\r\n            case 4:\r\n            case 7:\r\n                eff = new CheckboxEffect(effects[i],element,this);\r\n                break;\r\n            case 10:\r\n                eff = new LayerIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 11:\r\n                eff = new MaskIndexEffect(effects[i],element,this);\r\n                break;\r\n            case 5:\r\n                eff = new EffectsManager(effects[i],element,this);\r\n                break;\r\n            //case 6:\r\n            default:\r\n                eff = new NoValueEffect(effects[i],element,this);\r\n                break;\r\n        }\r\n        if(eff) {\r\n            this.effectElements.push(eff);\r\n        }\r\n    }\r\n};\r\n\r\nvar lottie = {};\r\n\r\nvar _isFrozen = false;\r\n\r\nfunction setLocationHref (href) {\r\n    locationHref = href;\r\n}\r\n\r\nfunction searchAnimations() {\r\n    if (standalone === true) {\r\n        animationManager.searchAnimations(animationData, standalone, renderer);\r\n    } else {\r\n        animationManager.searchAnimations();\r\n    }\r\n}\r\n\r\nfunction setSubframeRendering(flag) {\r\n    subframeEnabled = flag;\r\n}\r\n\r\nfunction loadAnimation(params) {\r\n    if (standalone === true) {\r\n        params.animationData = JSON.parse(animationData);\r\n    }\r\n    return animationManager.loadAnimation(params);\r\n}\r\n\r\nfunction setQuality(value) {\r\n    if (typeof value === 'string') {\r\n        switch (value) {\r\n            case 'high':\r\n                defaultCurveSegments = 200;\r\n                break;\r\n            case 'medium':\r\n                defaultCurveSegments = 50;\r\n                break;\r\n            case 'low':\r\n                defaultCurveSegments = 10;\r\n                break;\r\n        }\r\n    } else if (!isNaN(value) && value > 1) {\r\n        defaultCurveSegments = value;\r\n    }\r\n    if (defaultCurveSegments >= 50) {\r\n        roundValues(false);\r\n    } else {\r\n        roundValues(true);\r\n    }\r\n}\r\n\r\nfunction inBrowser() {\r\n    return typeof navigator !== 'undefined';\r\n}\r\n\r\nfunction installPlugin(type, plugin) {\r\n    if (type === 'expressions') {\r\n        expressionsPlugin = plugin;\r\n    }\r\n}\r\n\r\nfunction getFactory(name) {\r\n    switch (name) {\r\n        case \"propertyFactory\":\r\n            return PropertyFactory;\r\n        case \"shapePropertyFactory\":\r\n            return ShapePropertyFactory;\r\n        case \"matrix\":\r\n            return Matrix;\r\n    }\r\n}\r\n\r\nlottie.play = animationManager.play;\r\nlottie.pause = animationManager.pause;\r\nlottie.setLocationHref = setLocationHref;\r\nlottie.togglePause = animationManager.togglePause;\r\nlottie.setSpeed = animationManager.setSpeed;\r\nlottie.setDirection = animationManager.setDirection;\r\nlottie.stop = animationManager.stop;\r\nlottie.searchAnimations = searchAnimations;\r\nlottie.registerAnimation = animationManager.registerAnimation;\r\nlottie.loadAnimation = loadAnimation;\r\nlottie.setSubframeRendering = setSubframeRendering;\r\nlottie.resize = animationManager.resize;\r\n//lottie.start = start;\r\nlottie.goToAndStop = animationManager.goToAndStop;\r\nlottie.destroy = animationManager.destroy;\r\nlottie.setQuality = setQuality;\r\nlottie.inBrowser = inBrowser;\r\nlottie.installPlugin = installPlugin;\r\nlottie.freeze = animationManager.freeze;\r\nlottie.unfreeze = animationManager.unfreeze;\r\nlottie.getRegisteredAnimations = animationManager.getRegisteredAnimations;\r\nlottie.__getFactory = getFactory;\r\nlottie.version = '5.6.2';\r\n\r\nfunction checkReady() {\r\n    if (document.readyState === \"complete\") {\r\n        clearInterval(readyStateCheckInterval);\r\n        searchAnimations();\r\n    }\r\n}\r\n\r\nfunction getQueryVariable(variable) {\r\n    var vars = queryString.split('&');\r\n    for (var i = 0; i < vars.length; i++) {\r\n        var pair = vars[i].split('=');\r\n        if (decodeURIComponent(pair[0]) == variable) {\r\n            return decodeURIComponent(pair[1]);\r\n        }\r\n    }\r\n}\r\nvar standalone = '__[STANDALONE]__';\r\nvar animationData = '__[ANIMATIONDATA]__';\r\nvar renderer = '';\r\nif (standalone) {\r\n    var scripts = document.getElementsByTagName('script');\r\n    var index = scripts.length - 1;\r\n    var myScript = scripts[index] || {\r\n        src: ''\r\n    };\r\n    var queryString = myScript.src.replace(/^[^\\?]+\\??/, '');\r\n    renderer = getQueryVariable('renderer');\r\n}\r\nvar readyStateCheckInterval = setInterval(checkReady, 100);\r\n\nreturn lottie;\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/lottie-web/build/player/lottie.js\n// module id = tgCg\n// module chunks = 5","module.exports = {\"v\":\"5.1.16\",\"fr\":30,\"ip\":0,\"op\":59,\"w\":300,\"h\":300,\"nm\":\"Circular spin\",\"ddd\":0,\"assets\":[],\"layers\":[{\"ddd\":0,\"ind\":1,\"ty\":3,\"nm\":\"NULL CONTROL\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":0,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833],\"y\":[0.833]},\"o\":{\"x\":[0.167],\"y\":[0.167]},\"n\":[\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[0],\"e\":[90]},{\"t\":60}],\"ix\":10},\"p\":{\"a\":0,\"k\":[150,150,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[60,60,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.19,0.19,0.19],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-1.181]},\"n\":[\"0p19_1_0p167_0p167\",\"0p19_1_0p167_0p167\",\"0p19_1_0p167_-1p181\"],\"t\":0,\"s\":[100,100,100],\"e\":[85,85,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,-0.181]},\"o\":{\"x\":[0.6,0.6,0.6],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p6_0\",\"0p833_0p833_0p6_0\",\"0p833_-0p181_0p6_0\"],\"t\":30,\"s\":[85,85,100],\"e\":[100,100,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":2,\"ty\":3,\"nm\":\"NULL CONTROL 2\",\"parent\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":0,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.63],\"y\":[1]},\"o\":{\"x\":[0.37],\"y\":[0]},\"n\":[\"0p63_1_0p37_0\"],\"t\":0,\"s\":[-45],\"e\":[45]},{\"t\":60}],\"ix\":10},\"p\":{\"a\":0,\"k\":[60,60,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[60,60,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.833]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,0.167]},\"n\":[\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\",\"0p833_0p833_0p167_0p167\"],\"t\":0,\"s\":[43,43,100],\"e\":[43,43,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":3,\"ty\":4,\"nm\":\"Shape Layer 2\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":0,\"ix\":10},\"p\":{\"a\":0,\"k\":[120.75,136.5,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[0,0],[0,0],[0,0]],\"o\":[[0,0],[0,0],[0,0]],\"v\":[[-17.5,16.5],[13,47],[80,-20]],\"c\":false},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Shape 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":0,\"k\":0,\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.19],\"y\":[1]},\"o\":{\"x\":[0.6],\"y\":[0]},\"n\":[\"0p19_1_0p6_0\"],\"t\":1298,\"s\":[0],\"e\":[100]},{\"t\":1328}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false}],\"ip\":1298,\"op\":11798,\"st\":1298,\"bm\":0},{\"ddd\":0,\"ind\":4,\"ty\":4,\"nm\":\"Shape Layer 1\",\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.19],\"y\":[1]},\"o\":{\"x\":[0.6],\"y\":[0]},\"n\":[\"0p19_1_0p6_0\"],\"t\":1296,\"s\":[90],\"e\":[0]},{\"t\":1326}],\"ix\":10},\"p\":{\"a\":0,\"k\":[150,150,0],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,-6,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[45.516,0],[0,-45.516],[-45.516,0],[0,45.516]],\"o\":[[-45.516,0],[0,45.516],[45.516,0],[0,-45.516]],\"v\":[[0,-82.414],[-82.414,0],[0,82.414],[82.414,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[-59.504,-26.012],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[0,-6],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false},{\"ty\":\"tm\",\"s\":{\"a\":0,\"k\":0,\"ix\":1},\"e\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.19],\"y\":[1]},\"o\":{\"x\":[0.6],\"y\":[0]},\"n\":[\"0p19_1_0p6_0\"],\"t\":1296,\"s\":[0],\"e\":[100]},{\"t\":1326}],\"ix\":2},\"o\":{\"a\":0,\"k\":0,\"ix\":3},\"m\":1,\"ix\":2,\"nm\":\"Trim Paths 1\",\"mn\":\"ADBE Vector Filter - Trim\",\"hd\":false}],\"ip\":1296,\"op\":11796,\"st\":1296,\"bm\":0},{\"ddd\":0,\"ind\":5,\"ty\":4,\"nm\":\"Shape Layer 8\",\"parent\":2,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[-28.035,110.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[-28.035,110.558,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.36,0.36,0.36],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-0.283]},\"n\":[\"0p36_1_0p167_0p167\",\"0p36_1_0p167_0p167\",\"0p36_1_0p167_-0p283\"],\"t\":0,\"s\":[118,118,100],\"e\":[236,236,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.86]},\"o\":{\"x\":[0.64,0.64,0.64],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p64_0\",\"0p833_0p833_0p64_0\",\"0p833_0p86_0p64_0\"],\"t\":30,\"s\":[236,236,100],\"e\":[118,118,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":6,\"ty\":4,\"nm\":\"Shape Layer 6\",\"parent\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":-45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[110.558,148.035,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[110.558,148.035,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":7,\"ty\":4,\"nm\":\"Shape Layer 4\",\"parent\":2,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":-45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[110.558,148.035,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[110.558,148.035,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.36,0.36,0.36],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-0.283]},\"n\":[\"0p36_1_0p167_0p167\",\"0p36_1_0p167_0p167\",\"0p36_1_0p167_-0p283\"],\"t\":0,\"s\":[118,118,100],\"e\":[236,236,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.86]},\"o\":{\"x\":[0.64,0.64,0.64],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p64_0\",\"0p833_0p833_0p64_0\",\"0p833_0p86_0p64_0\"],\"t\":30,\"s\":[236,236,100],\"e\":[118,118,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":8,\"ty\":4,\"nm\":\"Shape Layer 9\",\"parent\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[148.035,9.442,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[148.035,9.442,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.36,0.36,0.36],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-0.142]},\"n\":[\"0p36_1_0p167_0p167\",\"0p36_1_0p167_0p167\",\"0p36_1_0p167_-0p142\"],\"t\":0,\"s\":[118,118,100],\"e\":[100,100,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,1]},\"o\":{\"x\":[0.64,0.64,0.64],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p64_0\",\"0p833_0p833_0p64_0\",\"0p833_1_0p64_0\"],\"t\":30,\"s\":[100,100,100],\"e\":[118,118,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":9,\"ty\":4,\"nm\":\"Shape Layer 7\",\"parent\":2,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[148.035,9.442,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[148.035,9.442,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.36,0.36,0.36],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-0.14]},\"n\":[\"0p36_1_0p167_0p167\",\"0p36_1_0p167_0p167\",\"0p36_1_0p167_-0p14\"],\"t\":0,\"s\":[118,118,100],\"e\":[236,236,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.86]},\"o\":{\"x\":[0.64,0.64,0.64],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p64_0\",\"0p833_0p833_0p64_0\",\"0p833_0p86_0p64_0\"],\"t\":30,\"s\":[236,236,100],\"e\":[118,118,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":10,\"ty\":4,\"nm\":\"Shape Layer 5\",\"parent\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":-45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[9.442,-28.035,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[9.442,-28.035,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":11,\"ty\":4,\"nm\":\"Shape Layer 3\",\"parent\":2,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":-45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[9.442,-28.035,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[9.442,-28.035,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":1,\"k\":[{\"i\":{\"x\":[0.36,0.36,0.36],\"y\":[1,1,1]},\"o\":{\"x\":[0.167,0.167,0.167],\"y\":[0.167,0.167,-0.283]},\"n\":[\"0p36_1_0p167_0p167\",\"0p36_1_0p167_0p167\",\"0p36_1_0p167_-0p283\"],\"t\":0,\"s\":[118,118,100],\"e\":[236,236,100]},{\"i\":{\"x\":[0.833,0.833,0.833],\"y\":[0.833,0.833,0.86]},\"o\":{\"x\":[0.64,0.64,0.64],\"y\":[0,0,0]},\"n\":[\"0p833_0p833_0p64_0\",\"0p833_0p833_0p64_0\",\"0p833_0p86_0p64_0\"],\"t\":30,\"s\":[236,236,100],\"e\":[118,118,100]},{\"t\":60}],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0},{\"ddd\":0,\"ind\":12,\"ty\":4,\"nm\":\"Shape Layer 10\",\"parent\":1,\"sr\":1,\"ks\":{\"o\":{\"a\":0,\"k\":100,\"ix\":11},\"r\":{\"a\":0,\"k\":45,\"ix\":10},\"p\":{\"a\":1,\"k\":[{\"i\":{\"x\":0.36,\"y\":1},\"o\":{\"x\":0.167,\"y\":0.167},\"n\":\"0p36_1_0p167_0p167\",\"t\":0,\"s\":[60,60,0],\"e\":[-28.035,110.558,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"i\":{\"x\":0.833,\"y\":0.833},\"o\":{\"x\":0.64,\"y\":0},\"n\":\"0p833_0p833_0p64_0\",\"t\":30,\"s\":[-28.035,110.558,0],\"e\":[60,60,0],\"to\":[0,0,0],\"ti\":[0,0,0]},{\"t\":60}],\"ix\":2},\"a\":{\"a\":0,\"k\":[31.359,-99.641,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100,100],\"ix\":6}},\"ao\":0,\"shapes\":[{\"ty\":\"gr\",\"it\":[{\"ind\":0,\"ty\":\"sh\",\"ix\":1,\"ks\":{\"a\":0,\"k\":{\"i\":[[3.115,0],[0,-3.115],[-3.115,0],[0,3.115]],\"o\":[[-3.115,0],[0,3.115],[3.115,0],[0,-3.115]],\"v\":[[0,-5.641],[-5.641,0],[0,5.641],[5.641,0]],\"c\":true},\"ix\":2},\"nm\":\"Path 1\",\"mn\":\"ADBE Vector Shape - Group\",\"hd\":false},{\"ty\":\"gs\",\"o\":{\"a\":0,\"k\":100,\"ix\":9},\"w\":{\"a\":0,\"k\":5,\"ix\":10},\"g\":{\"p\":3,\"k\":{\"a\":0,\"k\":[0,0.30196078431372547,0.796078431372549,0.6313725490196078,0.5,0.023529411764705882,0.8117647058823529,0.5490196078431373,1,0,0.7529411764705882,0.5019607843137255],\"ix\":8}},\"s\":{\"a\":0,\"k\":[0,0],\"ix\":4},\"e\":{\"a\":0,\"k\":[100,0],\"ix\":5},\"t\":1,\"lc\":1,\"lj\":1,\"ml\":4,\"nm\":\"Gradient Stroke 1\",\"mn\":\"ADBE Vector Graphic - G-Stroke\",\"hd\":false},{\"ty\":\"fl\",\"c\":{\"a\":0,\"k\":[0.112940447938,0.141086638208,0.188909313725,1],\"ix\":4},\"o\":{\"a\":0,\"k\":100,\"ix\":5},\"r\":1,\"nm\":\"Fill 1\",\"mn\":\"ADBE Vector Graphic - Fill\",\"hd\":false},{\"ty\":\"tr\",\"p\":{\"a\":0,\"k\":[31.359,-99.641],\"ix\":2},\"a\":{\"a\":0,\"k\":[0,0],\"ix\":1},\"s\":{\"a\":0,\"k\":[100,100],\"ix\":3},\"r\":{\"a\":0,\"k\":0,\"ix\":6},\"o\":{\"a\":0,\"k\":100,\"ix\":7},\"sk\":{\"a\":0,\"k\":0,\"ix\":4},\"sa\":{\"a\":0,\"k\":0,\"ix\":5},\"nm\":\"Transform\"}],\"nm\":\"Ellipse 1\",\"np\":3,\"cix\":2,\"ix\":1,\"mn\":\"ADBE Vector Group\",\"hd\":false}],\"ip\":0,\"op\":10500,\"st\":0,\"bm\":0}],\"markers\":[]}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/Loader/json/circular-spin-loader.json\n// module id = w3qN\n// module chunks = 5"],"sourceRoot":""}